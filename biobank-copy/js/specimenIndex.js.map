{"version":3,"sources":["webpack:///modules/biobank/js/specimenIndex.js","webpack:///webpack/bootstrap 74e54207929018b338c6?ca40*********","webpack:///./modules/biobank/jsx/specimenIndex.js","webpack:///./jsx/Loader.js?06c1*","webpack:///./modules/biobank/jsx/specimen.js?b500","webpack:///./jsx/Modal.js?d3d7*","webpack:///./modules/biobank/jsx/globals.js?ec01","webpack:///./modules/biobank/jsx/quantityField.js?752f","webpack:///./modules/biobank/jsx/temperatureField.js?6aab","webpack:///./modules/biobank/jsx/statusField.js?e88e","webpack:///./modules/biobank/jsx/locationField.js?527d","webpack:///./modules/biobank/jsx/containerParentForm.js?0f0c*","webpack:///./modules/biobank/jsx/containerDisplay.js?4e23*","webpack:///./modules/biobank/jsx/collectionForm.js?e0f7*","webpack:///./modules/biobank/jsx/customFields.js?3a68*","webpack:///./modules/biobank/jsx/preparationForm.js?0045*","webpack:///./modules/biobank/jsx/analysisForm.js?204f","webpack:///./modules/biobank/jsx/specimenForm.js?35c0*","webpack:///./modules/biobank/jsx/barcodeForm.js?02a4*","webpack:///./modules/biobank/jsx/lifeCycle.js?5ad9","webpack:///./modules/biobank/jsx/containerCheckout.js?acdc","webpack:///./modules/biobank/jsx/container.js?dc71","webpack:///./modules/biobank/jsx/barcodePath.js?a3e4"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_specimen","_specimen2","_container","_container2","args","QueryString","get","document","currentScript","src","$","request","loris","BaseURL","submit","display","entity","React","createElement","specimenPageDataURL","barcode","optionsURL","saveContainer","saveSpecimen","saveBarcodeListURL","containerPageDataURL","biobankBarcode","className","ReactDOM","render","getElementById","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","Loader","_React$Component","this","getPrototypeOf","apply","arguments","Component","_Modal","_Modal2","_globals","_globals2","_collectionForm","_collectionForm2","_preparationForm","_preparationForm2","_analysisForm","_analysisForm2","_specimenForm","_specimenForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","_this2","specimenUnits","mapFormOptions","options","containerTypesPrimary","containerStati","candidates","sessions","addAliquotForm","title","onClick","edit","closeModal","close","show","editable","aliquotForm","data","specimen","setSpecimenData","setSpecimen","specimenTypes","specimenTypeUnits","specimenTypeAttributes","attributeOptions","attributeDatatypes","containersNonPrimary","containerDimensions","containerCoordinates","save","collectionPanel","collectionPanelForm","cancelEditCollectionButton","collection","style","cursor","collectionData","keys","map","StaticElement","label","typeId","name","text","FormElement","quantity","unitId","unit","centers","locationId","date","time","comments","preparationPanel","preparationForm","cancelEditPreparationButton","specimenProtocols","specimenProtocolAttributes","protocol","preparation","preparationData","protocolId","addPreparation","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","method","analysis","files","setFiles","analysisData","methodId","datatypeId","datatype","LinkElement","href","download","addAnalysis","globals","container","setContainer","propTypes","PropTypes","string","isRequired","RBiobankSpecimen","createFactory","window","Modal","_this","bind","throwWarning","console","log","swal","type","showCancelButton","confirmButtonText","cancelButtonText","backdropStyle","position","zIndex","top","bottom","left","right","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","height","borderTopRightRadius","color","fontSize","glyphStyle","marginLeft","bodyStyle","modal","e","stopPropagation","children","bool","func","defaultProps","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","_containerParentForm","_containerParentForm2","Globals","increaseCycle","decreaseCycle","cycle","fTCycle","specimenTypeField","containerTypeField","containerTypes","quantityField","units","fTCycleField","undefined","temperatureField","temperature","statusField","status","stati","statusId","locationField","location","originField","originId","parentSpecimenField","dateTimeCreate","parentSpecimenId","parentSpecimenContainer","parentSpecimenFieldValue","loadSpecimen","parentContainerBarcodeValue","parentContainerId","loadContainer","parentContainerField","coordinate","containerParentForm","candidateSessionField","candidateId","candidate","PSCID","sessionId","session","Visit_label","fieldList","QuantityField","flexGrow","TextboxElement","inputClass","onUserInput","SelectElement","ButtonElement","columnSize","object","TemperatureField","StatusField","LocationField","labelClass","centerIds","_containerDisplay","_containerDisplay2","ContainerParentForm","containerDisplay","containerBarcodesNonPrimary","required","dimensionId","dimensions","coordinatesTotal","dimension","coordinates","select","selectedCoordinate","updateButton","onSubmit","ContainerDisplay","redirectURL","drag","drop","tooltip","load","types","primary","preventDefault","JSON","stringify","dataTransfer","setData","parse","getData","newCoordinate","parseInt","saveChildContainer","column","row","y","x","nodeWidth","nodeStyle","width","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","push","data-html","data-toggle","data-placement","data-original-title","rowHeight","rowStyle","_customFields","_customFields2","SpecimenCollectionForm","setCollection","addData","specimenTypeFields","specimenTypeFieldsObject","fields","specimenFields","DateElement","minYear","maxYear","TimeElement","TextareaElement","ref","CustomFields","attributeFields","attribute","DataElement","FileElement","SpecimenPreparationForm","setPreparation","submitButton","specimenProtocolFields","specimenProtocolFieldsObject","SpecimenAnalysisForm","setAnalysis","File","specimenMethodFields","specimenMethodFieldsObject","fileUpload","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","state","formErrors","centerId","barcodeList","1","count","collapsed","copyMultiplier","toggleCollapse","addBarcode","setCopyMultiplier","copyBarcode","removeBarcode","saveBarcodeList","setState","availableId","find","freezeThaw","CandID","ID","then","refreshParent","onChange","Function","sessionCenters","nextKey","multiplier","_this3","barcodeListArray","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","barcodeKey","capacities","_iterator","Symbol","iterator","next","done","err","return","globalFields","remainingQuantityFields","emptyOption","candidateSessions","placeHolder","disabled","SpecimenBarcodeForm","copy","addBarcodeButton","addBarcodeText","copyBarcodeButton","copyBarcodeText","min","max","removeBarcodeButton","parentTypeId","paddingLeft","marginTop","data-target","setContainerData","LifeCycle","css","border","box-shadow","collectionNode","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","line","nodes","lineWidth","lineStyle","ContainerCheckout","checkoutContainer","checkoutButton","_Loader","_barcodePath","_barcodePath2","BiobankContainer","childContainers","barcodePath","parentContainers","listAssigned","listUnassigned","child","RBiobankContainer","BarcodePath","path","pathLength"],"mappings":"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","file":"./modules/biobank/js/specimenIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _specimen = __webpack_require__(2);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tvar _container = __webpack_require__(19);\n\t\n\tvar _container2 = _interopRequireDefault(_container);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* global ReactDOM */\n\t\n\tvar args = QueryString.get(document.currentScript.src);\n\t\n\t$(function () {\n\t  var request = loris.BaseURL + '/biobank/ajax/requestData.php?';\n\t  var submit = loris.BaseURL + '/biobank/ajax/submitData.php?';\n\t\n\t  var display = void 0;\n\t  switch (entity) {\n\t    case 'specimen':\n\t      display = React.createElement(_specimen2.default, {\n\t        specimenPageDataURL: request + 'action=getSpecimenData&barcode=' + args.barcode,\n\t        optionsURL: request + 'action=getFormOptions',\n\t        saveContainer: submit + 'action=saveContainer',\n\t        saveSpecimen: submit + 'action=saveSpecimen',\n\t        saveBarcodeListURL: submit + 'action=saveBarcodeList'\n\t      });\n\t    case 'container':\n\t      display = React.createElement(_container2.default, {\n\t        containerPageDataURL: request + 'action=getContainerData&barcode=' + args.barcode,\n\t        optionsURL: '{$request}action=getFormOptions',\n\t        saveContainer: submit + 'action=saveContainer'\n\t      });\n\t  }\n\t\n\t  var biobankBarcode = React.createElement(\n\t    'div',\n\t    { className: 'page-specimen-form' },\n\t    React.createElement(\n\t      'div',\n\t      { className: 'row' },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'col-xs-12' },\n\t        display\n\t      )\n\t    )\n\t  );\n\t\n\t  ReactDOM.render(biobankBarcode, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains the React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"loader-container\" },\n\t        React.createElement(\"div\", { className: \"loader\" })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(3);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _globals = __webpack_require__(4);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(11);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(13);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(14);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(15);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(17);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(18);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      /**\n\t       * Specimen Form\n\t       */\n\t\n\t      /**\n\t       * Map Options for Form Select Elements\n\t       */\n\t      var specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      var addAliquotForm = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Make Aliquots'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this2.props.edit('aliquotForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            closeModal: this.props.close,\n\t            show: this.props.editable.aliquotForm\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.props.data,\n\t            specimen: this.props.specimen,\n\t            setSpecimenData: this.props.setSpecimen,\n\t            saveSpecimen: this.props.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.props.editable.collection) {\n\t        var _containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t        var specimenTypeAttributes = void 0;\n\t        //loops through data object to produce static elements\n\t        if (this.props.data.specimen.collection.data) {\n\t          var collectionData = this.props.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(collectionData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenTypeAttributes[_this2.props.data.specimen.typeId][key].name,\n\t              text: collectionData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.props.data.specimen.collection.quantity + ' ' + this.props.options.specimenUnits[this.props.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.props.editable.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.props.editable.collection ? null : function () {\n\t              _this2.props.edit('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.props.options.specimenProtocols) {\n\t        if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation Does Exist and the form is not in an edit state\n\t      if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        if (this.props.data.specimen.preparation.data) {\n\t          var preparationData = this.props.data.specimen.preparation.data;\n\t          specimenProtocolAttributes = Object.keys(preparationData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenProtocolAttributes[_this2.props.data.specimen.preparation.protocolId][key].name,\n\t              text: preparationData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('preparation');_this2.props.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.preparation ? null : function () {\n\t                _this2.props.edit('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.props.options.specimenMethods) {\n\t        if (this.props.options.specimenMethods[_id].typeId === this.props.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.props.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.props.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          files: this.props.files,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          setFiles: this.props.setFiles,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        //TODO: Make the below a separate component\n\t        if (this.props.data.specimen.analysis.data) {\n\t          var analysisData = this.props.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.keys(analysisData).map(function (key) {\n\t            if (_this2.props.options.attributeDatatypes[_this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].datatypeId].datatype === 'file') {\n\t              return React.createElement(LinkElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key],\n\t                href: loris.BaseURL + '/biobank/ajax/requestData.php?action=downloadFile&file=' + analysisData[key],\n\t                target: '_blank',\n\t                download: analysisData[key]\n\t              });\n\t            } else {\n\t              return React.createElement(StaticElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key]\n\t              });\n\t            }\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.analysis.locationId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('analysis');_this2.props.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.analysis ? null : function () {\n\t                _this2.props.edit('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.props.specimen,\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        setSpecimen: this.props.setSpecimen,\n\t        saveSpecimen: this.props.saveSpecimen,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            specimen: this.props.data.specimen,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\t\n\twindow.BiobankSpecimen = BiobankSpecimen;\n\twindow.RBiobankSpecimen = RBiobankSpecimen;\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      var _this2 = this;\n\t\n\t      if (this.props.throwWarning) {\n\t        console.log('not sure...');\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          _this2.props.closeModal();\n\t        });\n\t      } else {\n\t        this.props.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 850,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '70px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          \"div\",\n\t          { style: backdropStyle, onClick: this.closeModal },\n\t          React.createElement(\n\t            \"div\",\n\t            { style: modalStyle, onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              } },\n\t            React.createElement(\n\t              \"div\",\n\t              { style: titleStyle },\n\t              this.props.title,\n\t              React.createElement(\n\t                \"span\",\n\t                { style: glyphStyle, onClick: this.closeModal },\n\t                \"\\xD7\"\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { style: bodyStyle },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(3);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _quantityField = __webpack_require__(5);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(6);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(7);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(8);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.editable.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.edit('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                specimen: this.props.specimen,\n\t                units: units,\n\t                close: this.props.close,\n\t                setSpecimen: this.props.setSpecimen,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if ((this.props.data.specimen || {}).fTCycle !== undefined) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.editable.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  _this2.props.edit('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              container: this.props.container,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.editable.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              container: this.props.container,\n\t              stati: stati,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.editable.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              container: this.props.container,\n\t              centers: this.props.options.centers,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var barcode = this.props.data.parentSpecimenContainer.barcode;\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { onClick: function onClick() {\n\t              return _this2.props.loadSpecimen(barcode);\n\t            } },\n\t          barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var _barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode;\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                return _this2.props.loadContainer(_barcode);\n\t              } },\n\t            _barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerParentForm');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t          ),\n\t          React.createElement(\n\t            _Modal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              closeModal: this.props.close,\n\t              show: this.props.editable.containerParentForm\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            inputClass: 'col-xs-11',\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.quantity\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'unit',\n\t            inputClass: 'col-xs-11',\n\t            options: this.props.units,\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveSpecimen,\n\t            columnSize: 'col-xs-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimen: React.PropTypes.func,\n\t  close: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.centers,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: this.props.close\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    return _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.props.setContainer,\n\t        required: true,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainer: this.props.setContainer\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var load = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\t\n\t        load(this.props.children[this.props.coordinates[coordinate]].barcode);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      this.props.saveChildContainer(container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // This is eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = null;\n\t\n\t            if (!this.props.select) {\n\t              // This double if statement doesn't sound great\n\t              if (this.props.coordinates) {\n\t                if (this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node occupied';\n\t                  dataHtml = 'true';\n\t                  dataToggle = 'tooltip';\n\t                  dataPlacement = 'top';\n\t                  tooltipTitle = '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                  draggable = 'true';\n\t                  onDragStart = this.drag;\n\t                  onDragOver = null;\n\t                  onDrop = null;\n\t                  onClick = this.redirectURL;\n\t                }\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this2.props.setContainer('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this2.props.setContainer('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  // TODO: --- This is currently not working ---\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            {\n\t              className: 'row',\n\t              style: rowStyle\n\t            },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'display' },\n\t        display\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(12);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.setCollection = _this.setCollection.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollection',\n\t    value: function setCollection(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollection('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = React.createElement(_customFields2.default, {\n\t              fields: specimenTypeFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.collection.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollection,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimen: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Custom Attribute Fields\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\tvar CustomFields = function (_React$Component) {\n\t  _inherits(CustomFields, _React$Component);\n\t\n\t  function CustomFields() {\n\t    _classCallCheck(this, CustomFields);\n\t\n\t    return _possibleConstructorReturn(this, (CustomFields.__proto__ || Object.getPrototypeOf(CustomFields)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CustomFields, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var fields = this.props.fields;\n\t      var attributeFields = Object.keys(fields).map(function (attribute) {\n\t\n\t        var datatype = _this2.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n\t        if (datatype === 'text' || datatype === 'number') {\n\t          if (fields[attribute]['refTableId'] === null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t\n\t          if (fields[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fields[attribute]['refTableId']],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === 'datetime') {\n\t          return React.createElement(DataElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.object[attribute]\n\t          });\n\t        }\n\t\n\t        // Do not present the possibility of uploading if file is already set\n\t        // File must instead be deleted or overwritten.\n\t        if (datatype === 'file' && !(_this2.props.data || {})[attribute]) {\n\t          return React.createElement(FileElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.files[_this2.props.object[attribute]]\n\t          });\n\t        }\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        attributeFields\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CustomFields;\n\t}(React.Component);\n\t\n\tCustomFields.propTypes = {\n\t  fields: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  object: React.PropTypes.object.isRequired,\n\t  setData: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = CustomFields;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(12);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = React.createElement(_customFields2.default, {\n\t              fields: specimenProtocolFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.preparation.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(12);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      if (value instanceof File) {\n\t        data[name] = value.name;\n\t        this.props.setFiles(name, value);\n\t      } else {\n\t        data[name] = value;\n\t        this.setAnalysis('data', data);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.analysis) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = React.createElement(_customFields2.default, {\n\t              fields: specimenMethodFieldsObject,\n\t              files: this.props.files,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.analysis.data,\n\t              data: (((this.props.data || {}).specimen || {}).analysis || {}).data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          fileUpload: true,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(16);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      candidateId: null,\n\t      sessionId: null,\n\t      centerId: null,\n\t      barcodeList: { 1: { specimen: { collection: {} }, container: {} } },\n\t      count: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.addBarcode = _this.addBarcode.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyBarcode = _this.copyBarcode.bind(_this);\n\t    _this.removeBarcode = _this.removeBarcode.bind(_this);\n\t    _this.saveBarcodeList = _this.saveBarcodeList.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveBarcodeList',\n\t    value: function saveBarcodeList() {\n\t      var _this2 = this;\n\t\n\t      var barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var barcode in barcodeList) {\n\t        //set container values\n\t        var container = barcodeList[barcode].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.locationId = this.state.centerId;\n\t        container.originId = this.state.centerId;\n\t\n\t        //set specimen values\n\t        var specimen = barcodeList[barcode].specimen;\n\t        specimen.candidateId = this.state.candidateId;\n\t        specimen.sessionId = this.state.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.locationId = this.state.centerId;\n\t        if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n\t          specimen.fTCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: these will eventually be higher level states.\n\t        if (this.props.data) {\n\t          specimen.candidateId = this.props.data.candidate.CandID;\n\t          specimen.sessionId = this.props.data.session.ID;\n\t          specimen.parentSpecimenId = this.props.data.specimen.id;\n\t          specimen.collection.locationId = this.props.data.container.locationId;\n\t          container.locationId = this.props.data.container.locationId;\n\t          container.originId = this.props.data.container.locationId;\n\t        }\n\t\n\t        barcodeList[barcode].container = container;\n\t        barcodeList[barcode].specimen = specimen;\n\t      }\n\t\n\t      this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(function () {\n\t        _this2.props.refreshParent();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var centerId = this.state.centerId;\n\t      var candidateId = this.state.candidateId;\n\t      var sessionId = this.state.sessionId;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      if (name === 'candidateId') {\n\t        candidateId = value;\n\t      } else if (name === 'sessionId') {\n\t        sessionId = value;\n\t        centerId = this.props.sessionCenters[sessionId].centerId;\n\t      } else {\n\t        //this is eliminate values if specimen type is changed\n\t        if (name === 'typeId') {\n\t          barcodeList[key].specimen = { collection: {} };\n\t        }\n\t        barcodeList[key].specimen[name] = value;\n\t      }\n\t\n\t      this.setState({ barcodeList: barcodeList, centerId: centerId, candidateId: candidateId, sessionId: sessionId });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var barcodeList = this.state.barcodeList;\n\t      barcodeList[key].container[name] = value;\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'addBarcode',\n\t    value: function addBarcode() {\n\t      var barcodeList = this.state.barcodeList;\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t\n\t      barcodeList[count + 1] = { specimen: {}, container: { collection: {} } };\n\t      collapsed[count + 1] = true;\n\t      count = count + 1;\n\t\n\t      this.setState({ barcodeList: barcodeList, collapsed: collapsed, count: count });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyBarcode',\n\t    value: function copyBarcode(key) {\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t      var nextKey = count + 1;\n\t      var barcodeList = this.state.barcodeList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key]));\n\t        delete barcodeList[nextKey].container.barcode;\n\t        collapsed[nextKey] = true;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList,\n\t        count: nextKey,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeBarcode',\n\t    value: function removeBarcode(key) {\n\t      var barcodeList = this.state.barcodeList;\n\t      delete barcodeList[key];\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(_barcodeForm2.default, {\n\t            data: _this3.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this3.state.collapsed[key],\n\t            toggleCollapse: _this3.toggleCollapse,\n\t            mapFormOptions: _this3.props.mapFormOptions,\n\t            container: _this3.state.barcodeList[key].container || null,\n\t            specimen: _this3.state.barcodeList[key].specimen || null,\n\t            removeBarcode: barcodeListArray.length !== 1 ? function () {\n\t              return _this3.removeBarcode(key);\n\t            } : null,\n\t            addBarcode: i == barcodeListArray.length ? _this3.addBarcode : null,\n\t            setCopyMultiplier: _this3.setCopyMultiplier,\n\t            copyMultiplier: _this3.state.copyMultiplier,\n\t            copyBarcode: i == barcodeListArray.length && _this3.state.barcodeList[key] ? _this3.copyBarcode : null,\n\t            setContainer: _this3.setContainer,\n\t            setSpecimen: _this3.setSpecimen,\n\t            onChange: _this3.props.onChange,\n\t            specimenTypes: _this3.props.specimenTypes,\n\t            containerTypesPrimary: _this3.props.containerTypesPrimary,\n\t            containersNonPrimary: _this3.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this3.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this3.props.attributeDatatypes,\n\t            attributeOptions: _this3.props.attributeOptions,\n\t            capacities: _this3.props.capacities,\n\t            containerDimensions: _this3.props.containerDimensions,\n\t            containerCoordinates: _this3.props.containerCoordinates,\n\t            specimenTypeUnits: _this3.props.specimenTypeUnits,\n\t            units: _this3.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimenData,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.state.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.candidateId,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.sessionId,\n\t            disabled: this.state.candidateId ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: function onSubmit() {\n\t            _this3.saveBarcodeList();\n\t            _this3.props.saveSpecimen instanceof Function && _this3.props.saveSpecimen();\n\t          },\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(11);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimen(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyBarcode(this.props.copyMultiplier);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var addBarcodeButton = void 0;\n\t      var addBarcodeText = void 0;\n\t      var copyBarcodeButton = void 0;\n\t      var copyBarcodeText = void 0;\n\t      if (this.props.addBarcode) {\n\t        addBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcode\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcode) {\n\t        copyBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeButton = void 0;\n\t      if (this.props.removeBarcode) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcode,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeBarcodeButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                setSpecimenData: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainerData: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeButton,\n\t              addBarcodeText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeButton,\n\t              copyBarcodeText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\t//TODO: revise this component once Shipments are enabled.\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle() {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    return _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // Create Collection Node\n\t      var collectionNode = void 0;\n\t      if ((this.props.specimen || {}).collection || this.props.container) {\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Preparation Node\n\t      var preparationNode = void 0;\n\t      if ((this.props.specimen || {}).preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Analysis Node\n\t      var analysisNode = void 0;\n\t      if ((this.props.specimen || {}).analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'A'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Lines\n\t      var line = void 0;\n\t      var nodes = 0;\n\t      for (var i in this.props.specimen) {\n\t        if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n\t          nodes++;\n\t        }\n\t      }\n\t      var lineWidth = nodes > 1 ? 60 / (nodes - 1) : 0;\n\t      var lineStyle = { width: lineWidth + '%' };\n\t      line = React.createElement('div', { className: 'lifecycle-line', style: lineStyle });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode ? line : null,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainer('parentContainerId', null);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(4);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _lifeCycle = __webpack_require__(17);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _barcodePath = __webpack_require__(20);\n\t\n\tvar _barcodePath2 = _interopRequireDefault(_barcodePath);\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tvar _containerCheckout = __webpack_require__(18);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankContainer */\n\t\n\t/**\n\t * Biobank Container\n\t *\n\t * Fetches data corresponding to a given Container from Loris backend and\n\t * displays a page allowing viewing of meta information of the container\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainer = function (_React$Component) {\n\t  _inherits(BiobankContainer, _React$Component);\n\t\n\t  function BiobankContainer() {\n\t    _classCallCheck(this, BiobankContainer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainer.__proto__ || Object.getPrototypeOf(BiobankContainer)).call(this));\n\t\n\t    _this.drag = _this.drag.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainer, [{\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      var barcodePath = React.createElement(_barcodePath2.default, {\n\t        container: this.props.data.container,\n\t        parentContainers: this.props.data.parentContainers,\n\t        loadContainer: this.props.loadContainer\n\t      });\n\t\n\t      var display = void 0;\n\t      if (this.props.data.container.dimensionId) {\n\t        display = React.createElement(_containerDisplay2.default, {\n\t          children: this.props.data.childContainers,\n\t          types: this.props.options.containerTypes,\n\t          dimensions: this.props.options.containerDimensions[this.props.data.container.dimensionId],\n\t          coordinates: this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null,\n\t          containerTypes: this.props.options.containerTypes,\n\t          containerStati: this.props.options.containerStati,\n\t          loadSpecimen: this.props.loadSpecimen,\n\t          loadContainer: this.props.loadContainer,\n\t          saveChildContainer: this.props.saveChildContainer\n\t        });\n\t      }\n\t\n\t      var listAssigned = [];\n\t      var listUnassigned = [];\n\t      if (this.props.data.childContainers) {\n\t        (function () {\n\t          var children = _this2.props.data.childContainers;\n\t\n\t          var _loop = function _loop(child) {\n\t            var load = void 0;\n\t            if (_this2.props.options.containerTypes[children[child].typeId].primary) {\n\t              load = _this2.props.loadSpecimen;\n\t              //url = loris.BaseURL+\"/biobank/specimen/?barcode=\"+children[child].barcode;\n\t            } else {\n\t              load = _this2.props.loadContainer;\n\t              //url = loris.BaseURL+\"/biobank/container/?barcode=\"+children[child].barcode;\n\t            }\n\t\n\t            if (children[child].coordinate) {\n\t              listAssigned.push(React.createElement(\n\t                'div',\n\t                null,\n\t                React.createElement(\n\t                  'a',\n\t                  { onClick: function onClick() {\n\t                      return load(children[child].barcode);\n\t                    } },\n\t                  children[child].barcode\n\t                ),\n\t                'at ',\n\t                children[child].coordinate\n\t              ));\n\t            } else {\n\t              listUnassigned.push(React.createElement(\n\t                'a',\n\t                {\n\t                  onClick: function onClick() {\n\t                    return load(children[child].barcode);\n\t                  },\n\t                  id: children[child].id,\n\t                  draggable: true,\n\t                  onDragStart: _this2.drag\n\t                },\n\t                children[child].barcode\n\t              ));\n\t            }\n\t          };\n\t\n\t          for (var child in children) {\n\t            _loop(child);\n\t          }\n\t        })();\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'container-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(_containerCheckout2.default, {\n\t            container: this.props.container,\n\t            setContainer: this.props.setContainer,\n\t            saveContainer: this.props.saveContainer\n\t          }),\n\t          React.createElement(_lifeCycle2.default, {\n\t            container: this.props.data.container,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'display-container' },\n\t            display,\n\t            barcodePath\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-list' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length !== 0 ? 'Assigned Containers' : null\n\t            ),\n\t            listAssigned,\n\t            listAssigned.length !== 0 ? React.createElement('br', null) : null,\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listUnassigned.length !== 0 ? 'Unassigned Containers' : null\n\t            ),\n\t            listUnassigned\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainer;\n\t}(React.Component);\n\t\n\tBiobankContainer.propTypes = {\n\t  containerPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankContainer = React.createFactory(BiobankContainer);\n\t\n\twindow.BiobankContainer = BiobankContainer;\n\twindow.RBiobankContainer = RBiobankContainer;\n\t\n\texports.default = BiobankContainer;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Path\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar BarcodePath = function (_React$Component) {\n\t  _inherits(BarcodePath, _React$Component);\n\t\n\t  function BarcodePath() {\n\t    _classCallCheck(this, BarcodePath);\n\t\n\t    return _possibleConstructorReturn(this, (BarcodePath.__proto__ || Object.getPrototypeOf(BarcodePath)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BarcodePath, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var path = [];\n\t      var pathLength = this.props.parentContainers.length - 1;\n\t      var containerURL = loris.BaseURL + '/biobank/container/?barcode=';\n\t\n\t      var _loop = function _loop(i) {\n\t        path.push(React.createElement(\n\t          'span',\n\t          { className: 'barcodePath' },\n\t          '/',\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                return _this2.props.loadContainer(_this2.props.parentContainers[i].barcode);\n\t              } },\n\t            _this2.props.parentContainers[i].barcode\n\t          )\n\t        ));\n\t      };\n\t\n\t      for (var i = pathLength; i >= 0; i--) {\n\t        _loop(i);\n\t      }\n\t      path.push(React.createElement(\n\t        'span',\n\t        { className: 'barcodePath' },\n\t        '/',\n\t        React.createElement(\n\t          'a',\n\t          { onClick: function onClick() {\n\t              return _this2.props.loadContainer(_this2.props.container.barcode);\n\t            } },\n\t          this.props.container.barcode\n\t        )\n\t      ));\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        path\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodePath;\n\t}(React.Component);\n\t\n\tBarcodePath.propTypes = {};\n\t\n\texports.default = BarcodePath;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/specimenIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 74e54207929018b338c6","/* global ReactDOM */\n\nimport BiobankSpecimen from './specimen';\nimport BiobankContainer from './container';\nconst args = QueryString.get(document.currentScript.src);\n\n$(function() {\n  const request = `${loris.BaseURL}/biobank/ajax/requestData.php?`;\n  const submit = `${loris.BaseURL}/biobank/ajax/submitData.php?`;\n\n  \n\n  let display;\n  switch (entity) {\n    case 'specimen': \n      display = (\n        <BiobankSpecimen\n          specimenPageDataURL={`${request}action=getSpecimenData&barcode=${args.barcode}`}\n          optionsURL={`${request}action=getFormOptions`}\n          saveContainer={`${submit}action=saveContainer`}\n          saveSpecimen={`${submit}action=saveSpecimen`}\n          saveBarcodeListURL={`${submit}action=saveBarcodeList`}\n        />\n      );\n    case 'container':\n      display = (\n        <BiobankContainer\n          containerPageDataURL={`${request}action=getContainerData&barcode=${args.barcode}`}\n          optionsURL={`{$request}action=getFormOptions`}\n          saveContainer={`${submit}action=saveContainer`}\n        />\n      );\n  }\n\n  let biobankBarcode = (\n    <div className=\"page-specimen-form\">\n      <div className=\"row\">\n        <div className=\"col-xs-12\">\n          {display}\n        </div>\n      </div>\n    </div>\n  );\n\n  ReactDOM.render(biobankBarcode, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenIndex.js","/**\n * This file contains the React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  render() {\n    return (\n      <div className='loader-container'>\n        <div className=\"loader\"/>\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","/* exported RBiobankSpecimen */\n\nimport Modal from 'Modal';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n\n  render() {\n    /**\n     * Specimen Form\n     */\n\n    /**\n     * Map Options for Form Select Elements\n     */      \n    let specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n    let containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n    let candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n    let sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\n    let addAliquotForm = (\n      <div\n        className='action'\n        title='Make Aliquots'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('aliquotForm')}}\n        >\n          <span>+</span>  \n        </div>\n        <Modal\n          title=\"Add Aliquots\"\n          closeModal={this.props.close}\n          show={this.props.editable.aliquotForm}\n        >\n          <BiobankSpecimenForm\n            data={this.props.data}\n            specimen={this.props.specimen}\n            setSpecimenData={this.props.setSpecimen}\n            saveSpecimen={this.props.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.props.editable.collection) {\n      let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.props.options.specimenTypeUnits}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    } else {\n      let specimenTypeAttributes;\n      //loops through data object to produce static elements\n      if (this.props.data.specimen.collection.data) {\n        let collectionData = this.props.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(collectionData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenTypeAttributes[this.props.data.specimen.typeId][key].name}\n              text={collectionData[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.props.data.specimen.collection.quantity+' '+\n              this.props.options.specimenUnits[\n                this.props.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.collection.locationId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.props.editable.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.props.editable.collection ? null : () => {this.props.edit('collection')}}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.props.options.specimenProtocols) {\n      if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n        specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.props.editable.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation Does Exist and the form is not in an edit state\n    if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      if (this.props.data.specimen.preparation.data) {\n        let preparationData = this.props.data.specimen.preparation.data;\n        specimenProtocolAttributes = Object.keys(preparationData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenProtocolAttributes[this.props.data.specimen.preparation.protocolId][key].name}\n              text={preparationData[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      preparationPanel = (\n        <div\n          className='panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('preparation'); this.props.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n      preparationPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.preparation ? null : () => {this.props.edit('preparation')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.props.options.specimenMethods) {\n      if (this.props.options.specimenMethods[id].typeId === this.props.data.specimen.typeId) {\n        specimenMethods[id] = this.props.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.props.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.props.editable.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          files={this.props.files}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          setFiles={this.props.setFiles}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      //TODO: Make the below a separate component\n      if (this.props.data.specimen.analysis.data) {\n      let analysisData = this.props.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.keys(analysisData).map((key) => {\n          if (this.props.options.attributeDatatypes[\n            this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].datatypeId\n          ].datatype === 'file') {\n            return (\n              <LinkElement\n               label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n               text={analysisData[key]}\n               href={loris.BaseURL+'/biobank/ajax/requestData.php?action=downloadFile&file='+analysisData[key]}\n               target={'_blank'}\n               download={analysisData[key]}\n              />\n            );\n          } else {\n            return ( \n              <StaticElement\n                label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n                text={analysisData[key]}\n              />\n            );\n          }\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.analysis.locationId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('analysis'); this.props.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n      analysisPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.analysis ? null : () => {this.props.edit('analysis')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.props.specimen}\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        setSpecimen={this.props.setSpecimen}\n        saveSpecimen={this.props.saveSpecimen}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.props.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.props.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            specimen={this.props.data.specimen}\n            centers={this.props.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n      </div>\n    ); \n  }\n}\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\nwindow.BiobankSpecimen = BiobankSpecimen;\nwindow.RBiobankSpecimen = RBiobankSpecimen;\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    if (this.props.throwWarning) {                                              \n      console.log('not sure...');\n      swal({                                                                    \n        title: \"Are You Sure?\",                                                 \n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",                                                        \n        showCancelButton: true,                                                 \n        confirmButtonText: 'Proceed',                                           \n        cancelButtonText: 'Cancel',                                             \n      },                                                                        \n      () => {                                                              \n        this.props.closeModal();                                                        \n      });                                                            \n    } else {                                                                    \n      this.props.closeModal();\n    }                                                                           \n  }   \n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 850,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '70px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.closeModal}>\n          <div style={modalStyle} onClick={e => {e.stopPropagation()}}>\n            <div style={titleStyle}>\n              {this.props.title}\n              <span style={glyphStyle} onClick={this.closeModal}>\n                ×\n              </span>\n            </div>\n            <div style={bodyStyle}>\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nModal.defaultProps = {\n  throwWarning: true,\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","import Modal from 'Modal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.editable.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.edit('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                specimen={this.props.specimen}\n                units={units}\n                close={this.props.close}\n                setSpecimen={this.props.setSpecimen}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if ((this.props.data.specimen||{}).fTCycle !== undefined) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.editable.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => {this.props.edit('temperature')}}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              container={this.props.container}                                  \n              close={this.props.close}                     \n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.editable.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              container={this.props.container}                                  \n              stati={stati}\n              close={this.props.close}\n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.editable.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              container={this.props.container}\n              centers={this.props.options.centers}\n              close={this.props.close}                        \n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let barcode = this.props.data.parentSpecimenContainer.barcode;\n      let parentSpecimenFieldValue = (\n        <a onClick={()=>this.props.loadSpecimen(barcode)}>\n          {barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a onClick={()=>this.props.loadContainer(barcode)}>                                                             \n            {barcode}\n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <span                                                               \n            className='action-button update'                                  \n            onClick={() => {this.props.edit('containerParentForm')}}\n          >                                                                   \n            <span className='glyphicon glyphicon-chevron-right'/>             \n          </span>                                                             \n          <Modal                                                              \n            title='Update Parent Container'                                       \n            closeModal={this.props.close}\n            show={this.props.editable.containerParentForm}\n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainer={this.props.setContainer}                            \n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </Modal>                                                            \n        </div>                                                                \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow: 2}}>\n          <TextboxElement\n            name='quantity'\n            inputClass='col-xs-11'\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.quantity}\n          />\n        </div>\n        <div style={{flexGrow: 2}}>\n          <SelectElement\n            name='unit'\n            inputClass='col-xs-11'\n            options={this.props.units}\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveSpecimen}\n            columnSize= 'col-xs-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <a onClick={this.props.close} style={{cursor: 'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimen: React.PropTypes.func,\n  close: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <TextboxElement\n              name='temperature'\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.temperature}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.statusId}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow:1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='locationId'\n              options={this.props.centers}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.locationId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={this.props.close}\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n\n  render() {\n    let containerDisplay;\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.props.setContainer}\n        required={true}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions = {\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates = {\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes = {this.props.containerTypes}\n            containerStati = {this.props.containerStati} \n            select = {true}\n            selectedCoordinate = {this.props.container.coordinate}\n            setContainer = {this.props.setContainer}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let load = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\n      load(this.props.children[this.props.coordinates[coordinate]].barcode);\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    this.props.saveChildContainer(container);\n  }\n\n  render() {\n  // This is eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  var coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = null;\n\n        if (!this.props.select) {\n          // This double if statement doesn't sound great\n          if (this.props.coordinates) {\n            if (this.props.coordinates[coordinate]) {\n              nodeClass = 'node occupied';\n              dataHtml = 'true';\n              dataToggle = 'tooltip';\n              dataPlacement = 'top';\n              tooltipTitle = \n            '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n              draggable = 'true';\n              onDragStart = this.drag;\n              onDragOver = null;\n              onDrop = null;\n              onClick = this.redirectURL;\n            }\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n\t\t\t  onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            // TODO: --- This is currently not working ---\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div\n          className='row'\n          style={rowStyle} \n        >\n          {column}\n        </div>\n      )\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div className='display'>\n        {display}\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","import CustomFields from './customFields'\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.setCollection = this.setCollection.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollection(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimen('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimen('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollection('data', data);\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = (\n            <CustomFields\n              fields={specimenTypeFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.collection.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollection}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimen: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Custom Attribute Fields\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\nclass CustomFields extends React.Component {\n  render() {\n    let fields = this.props.fields;\n    let attributeFields = Object.keys(fields).map(attribute => {\n\n      let datatype = this.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n      if (datatype === 'text' || datatype === 'number') {\n        if (fields[attribute]['refTableId'] === null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n\n        if (fields[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              options={this.props.attributeOptions[fields[attribute]['refTableId']]}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === 'datetime') {\n        return (\n          <DataElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.object[attribute]}\n          />\n        );\n      }\n\n      // Do not present the possibility of uploading if file is already set\n      // File must instead be deleted or overwritten.\n      if (datatype === 'file' && !(this.props.data||{})[attribute]) {\n        return (\n          <FileElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.files[this.props.object[attribute]]}\n          />\n        );\n      }\n    });\n\n    return (\n      <div>\n        {attributeFields}\n      </div>\n    );\n  }\n}\n\nCustomFields.propTypes = {\n  fields: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  object: React.PropTypes.object.isRequired,\n  setData: React.PropTypes.func.isRequired,\n}\n\nexport default CustomFields;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/customFields.js","import CustomFields from './customFields';\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = (\n            <CustomFields\n              fields={specimenProtocolFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.preparation.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","import CustomFields from './customFields';\n\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    if (value instanceof File) {\n      data[name] = value.name;\n      this.props.setFiles(name, value);\n    } else {\n      data[name] = value;\n      this.setAnalysis('data', data);\n    }\n  }\n\n  render() {\n    let submitButton;\n    if (this.props.data.specimen.analysis) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = (\n            <CustomFields\n              fields={specimenMethodFieldsObject}\n              files={this.props.files}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.analysis.data}\n              data={(((this.props.data||{}).specimen||{}).analysis||{}).data}\n              setData={this.setData}\n            />\n          );  \n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        fileUpload={true}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      formErrors: {},\n      candidateId: null,\n      sessionId: null,\n      centerId: null,\n      barcodeList: {1: {specimen: {collection: {}}, container: {}}},\n      count: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.addBarcode = this.addBarcode.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyBarcode = this.copyBarcode.bind(this);\n    this.removeBarcode = this.removeBarcode.bind(this);\n    this.saveBarcodeList = this.saveBarcodeList.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveBarcodeList() {\n    let barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let barcode in barcodeList) {\n      //set container values\n      let container = barcodeList[barcode].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.locationId = this.state.centerId;\n      container.originId = this.state.centerId;\n\n      //set specimen values\n      let specimen = barcodeList[barcode].specimen;\n      specimen.candidateId = this.state.candidateId;\n      specimen.sessionId = this.state.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.locationId = this.state.centerId;\n      if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n        specimen.fTCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: these will eventually be higher level states.\n      if (this.props.data) {\n        specimen.candidateId = this.props.data.candidate.CandID;\n        specimen.sessionId = this.props.data.session.ID;\n        specimen.parentSpecimenId = this.props.data.specimen.id;\n        specimen.collection.locationId = this.props.data.container.locationId;\n        container.locationId = this.props.data.container.locationId;\n        container.originId = this.props.data.container.locationId;\n      }\n    \n      barcodeList[barcode].container = container;\n      barcodeList[barcode].specimen = specimen;\n    }\n\n    this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(\n      () => {this.props.refreshParent();}\n    );\n  }\n\n  setSpecimen(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let centerId = this.state.centerId;\n    let candidateId = this.state.candidateId;\n    let sessionId = this.state.sessionId;\n    let barcodeList = this.state.barcodeList;\n\n    if (name === 'candidateId') {\n      candidateId = value;\n    } else if (name === 'sessionId') {\n      sessionId = value;\n      centerId = this.props.sessionCenters[sessionId].centerId;\n    } else {\n      //this is eliminate values if specimen type is changed\n      if (name === 'typeId') {\n        barcodeList[key].specimen = {collection:{}};\n      }\n      barcodeList[key].specimen[name] = value;\n    }\n\n    this.setState({barcodeList, centerId, candidateId, sessionId})\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let barcodeList = this.state.barcodeList;\n    barcodeList[key].container[name] = value;\n    this.setState({barcodeList});\n  }\n\n  addBarcode() {\n    let barcodeList = this.state.barcodeList;\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n\n    barcodeList[count+1] = {specimen: {}, container: {collection:{}}}; \n    collapsed[count+1] = true;\n    count = count+1\n\n    this.setState({barcodeList, collapsed, count});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyBarcode(key) {\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n    let nextKey = count+1;\n    let barcodeList = this.state.barcodeList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key])); \n      delete barcodeList[nextKey].container.barcode;\n      collapsed[nextKey] = true;\n      nextKey++;\n    }\n\n    this.setState({\n      barcodeList: barcodeList,\n      count: nextKey,\n      collapsed: collapsed,\n    });\n  }\n\n  removeBarcode(key) {\n    let barcodeList = this.state.barcodeList;\n    delete barcodeList[key];\n    this.setState({barcodeList: barcodeList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          container={this.state.barcodeList[key].container || null}\n          specimen={this.state.barcodeList[key].specimen || null}\n          removeBarcode={barcodeListArray.length !== 1 ?\n            () => this.removeBarcode(key) : null}\n          addBarcode={i == barcodeListArray.length ? this.addBarcode : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyBarcode={i == barcodeListArray.length && this.state.barcodeList[key] ? \n            this.copyBarcode : null}\n          setContainer={this.setContainer}\n          setSpecimen={this.setSpecimen}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimenData}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimenData}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.state.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.candidateId}\n            placeHolder='Search for a PSCID'\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.sessionId}\n            disabled={this.state.candidateId ? false : true}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={() => {\n          this.saveBarcodeList();\n          this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()}}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimen(name, value, this.props.barcodeKey);\n  }\n\n  copy() {\n    this.props.copyBarcode(this.props.copyMultiplier);\n  }\n\n  render() {\n    let addBarcodeButton;\n    let addBarcodeText;\n    let copyBarcodeButton;\n    let copyBarcodeText;\n    if (this.props.addBarcode) {\n      addBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcode}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcode) {\n      copyBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeButton;\n    if (this.props.removeBarcode) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcode}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => this.props.toggleCollapse(this.props.barcodeKey)}\n            />\n            {removeBarcodeButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                setSpecimenData={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainerData={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeButton}\n              {addBarcodeText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeButton}\n              {copyBarcodeText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\n//TODO: revise this component once Shipments are enabled.\nclass LifeCycle extends React.Component {\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n      });\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n    // Create Collection Node\n    let collectionNode;\n    if ((this.props.specimen||{}).collection || this.props.container) {\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    // Create Preparation Node\n    let preparationNode;\n    if ((this.props.specimen||{}).preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    // Create Analysis Node\n    let analysisNode;\n    if ((this.props.specimen||{}).analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'>\n             <div className='letter'>A</div>\n           </div>\n        </div>\n      );\n    }\n\n    // Create Lines\n    let line;\n    let nodes = 0;\n    for (let i in this.props.specimen) {\n      if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n        nodes++;\n      }\n    }\n    let lineWidth = nodes > 1 ? 60/(nodes-1) : 0;\n    let lineStyle = {width: lineWidth+'%'}\n    line = (<div className='lifecycle-line' style={lineStyle}/>);\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode ? line : null}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainer('parentContainerId', null);\n    this.props.setContainer('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankContainer */\n\nimport Loader from 'Loader';\nimport Globals from './globals';\nimport LifeCycle from './lifeCycle.js';\nimport BarcodePath from './barcodePath.js';\nimport ContainerDisplay from './containerDisplay.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Container\n *\n * Fetches data corresponding to a given Container from Loris backend and\n * displays a page allowing viewing of meta information of the container\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.drag = this.drag.bind(this);\n  }\n\n  drag(e) {\n    let container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n    e.dataTransfer.setData(\"text/plain\", container);\n  }\n\n  render() {\n    let globals = ( \n      <Globals\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );  \n\n    let barcodePath = (\n      <BarcodePath\n        container={this.props.data.container}\n        parentContainers={this.props.data.parentContainers}\n        loadContainer={this.props.loadContainer}\n      />\n    );\n\n    let display;\n    if (this.props.data.container.dimensionId) {  \n      display = (\n        <ContainerDisplay \n          children={this.props.data.childContainers}\n          types={this.props.options.containerTypes}\n          dimensions={this.props.options.containerDimensions[this.props.data.container.dimensionId]}\n          coordinates={this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null}\n          containerTypes={this.props.options.containerTypes}\n          containerStati={this.props.options.containerStati}\n          loadSpecimen={this.props.loadSpecimen}\n          loadContainer={this.props.loadContainer}\n          saveChildContainer={this.props.saveChildContainer}\n        />\n      );\n    }\n\n    let listAssigned = [];\n    let listUnassigned = [];\n    if (this.props.data.childContainers) {\n      let children = this.props.data.childContainers;\n      for (let child in children) {\n        let load;\n        if (this.props.options.containerTypes[children[child].typeId].primary) {\n          load = this.props.loadSpecimen;\n          //url = loris.BaseURL+\"/biobank/specimen/?barcode=\"+children[child].barcode;\n        } else {\n          load = this.props.loadContainer;\n          //url = loris.BaseURL+\"/biobank/container/?barcode=\"+children[child].barcode;\n        }\n\n        if (children[child].coordinate) {\n          listAssigned.push(\n            <div>\n              <a onClick={()=>load(children[child].barcode)}>\n                {children[child].barcode}\n              </a>\n              at {children[child].coordinate}\n            </div>\n          );    \n        } else {\n          listUnassigned.push(\n            <a \n              onClick={()=>load(children[child].barcode)}\n              id={children[child].id} \n              draggable={true}\n              onDragStart={this.drag}\n            >\n              {children[child].barcode}\n            </a>\n          );\n        }\n      }     \n    }\n\n    return (\n      <div id='container-page'> \n        <div className=\"container-header\"> \n          <div className='container-title'> \n            <div className='barcode'> \n              Barcode \n              <div className='value'> \n                <strong>{this.props.data.container.barcode}</strong> \n              </div> \n            </div> \n          </div> \n          <ContainerCheckout \n            container={this.props.container}\n            setContainer={this.props.setContainer}\n            saveContainer={this.props.saveContainer}\n          />\n          <LifeCycle\n            container={this.props.data.container}\n            centers={this.props.options.centers}\n          />\n        </div> \n        <div className='summary'> \n          {globals} \n          <div className='display-container'>\n            {display} \n            {barcodePath}\n          </div>\n          <div className='container-list'>\n            <div className='title'>\n              {listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null}\n            </div>\n            <div className='title'>\n              {listAssigned.length !== 0 ? 'Assigned Containers' : null}\n            </div>\n              {listAssigned}\n              {listAssigned.length !==0 ? <br/> : null}\n            <div className='title'>\n              {listUnassigned.length !== 0 ? 'Unassigned Containers' : null}\n            </div>\n            {listUnassigned}\n          </div>\n        </div> \n      </div> \n    ); \n  }\n}\n\nBiobankContainer.propTypes = {\n  containerPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankContainer = React.createFactory(BiobankContainer);\n\nwindow.BiobankContainer = BiobankContainer;\nwindow.RBiobankContainer = RBiobankContainer;\n\nexport default BiobankContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/container.js","/**\n * Container Path\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass BarcodePath extends React.Component {\n\n  render() {\n\n    let path = [];\n    let pathLength = this.props.parentContainers.length - 1;\n    let containerURL = loris.BaseURL+'/biobank/container/?barcode=';\n    for (let i=pathLength; i>=0; i--) {\n      path.push(\n        <span className='barcodePath'> \n          {'/'}\n          <a onClick={()=>this.props.loadContainer(this.props.parentContainers[i].barcode)}>\n            {this.props.parentContainers[i].barcode}\n          </a>\n        </span>\n      );\n    }\n    path.push(\n      <span className='barcodePath'> \n        {'/'}\n        <a onClick={()=>this.props.loadContainer(this.props.container.barcode)}>\n          {this.props.container.barcode}\n        </a>\n      </span>\n    );\n\n    return (\n      <div>\n        {path}\n      </div>\n    );\n  }\n}\n\nBarcodePath.propTypes = {\n}\n\nexport default BarcodePath;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodePath.js"],"sourceRoot":""}