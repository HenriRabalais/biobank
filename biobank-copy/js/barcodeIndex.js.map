{"version":3,"sources":["webpack:///modules/biobank/js/barcodeIndex.js","webpack:///webpack/bootstrap c0bdb5cd5719d1c9ad4f?c113*******","webpack:///./modules/biobank/jsx/barcodeIndex.js","webpack:///./jsx/Loader.js","webpack:///./modules/biobank/jsx/specimen.js","webpack:///./jsx/Modal.js","webpack:///./modules/biobank/jsx/globals.js","webpack:///./modules/biobank/jsx/quantityField.js","webpack:///./modules/biobank/jsx/temperatureField.js","webpack:///./modules/biobank/jsx/statusField.js","webpack:///./modules/biobank/jsx/locationField.js","webpack:///./modules/biobank/jsx/containerParentForm.js","webpack:///./modules/biobank/jsx/containerDisplay.js","webpack:///./modules/biobank/jsx/collectionForm.js","webpack:///./modules/biobank/jsx/customFields.js","webpack:///./modules/biobank/jsx/preparationForm.js","webpack:///./modules/biobank/jsx/analysisForm.js","webpack:///./modules/biobank/jsx/specimenForm.js","webpack:///./modules/biobank/jsx/barcodeForm.js","webpack:///./modules/biobank/jsx/lifeCycle.js","webpack:///./modules/biobank/jsx/containerCheckout.js","webpack:///./modules/biobank/jsx/container.js","webpack:///./modules/biobank/jsx/barcodePath.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_Loader","_Loader2","_filter","e","Error","code","_filter2","_specimen","_specimen2","_container","_container2","BarcodeIndex","_React$Component","this","_this","getPrototypeOf","state","specimenFilter","containerFilter","data","specimen","container","primary","options","files","isLoaded","editable","specimenForm","containerForm","aliquotForm","containerParentForm","temperature","quantity","status","location","collection","preparation","analysis","fetch","bind","loadFilters","loadOptions","loadContainer","loadSpecimen","updateSpecimenFilter","updateContainerFilter","clone","mapFormOptions","edit","close","setSpecimen","revertSpecimen","setContainer","revertContainer","setFiles","addPreparation","addAnalysis","saveSpecimen","saveContainer","saveChildContainer","save","setState","_this2","specimenFilterDataURL","then","containerFilterDataURL","setSTate","_this3","optionsURL","resolve","barcode","_this4","Promise","containerDataURL","_this5","specimenDataURL","url","$","ajax","dataType","success","error","errorCode","errorMsg","console","object","JSON","parse","stringify","attribute","stateKey","name","locationId","_this6","saveSpecimenURL","_this7","saveContainerURL","_this8","containerCoordinates","coordinate","childContainers","Unassigned","indexOf","message","_this9","dataObject","FormData","file","dataOject","append","type","cache","contentType","processData","swal","textStatus","errorThrown","responseJSON","undefined","React","createElement","className","display","containerTypes","typeId","Component","request","loris","BaseURL","submit","barcodeIndex","containerFilterDataULR","saveBarcodeListURL","ReactDOM","render","document","getElementById","Loader","apply","arguments","style","width","size","height","propTypes","PropTypes","int","defaultProps","_Modal","_Modal2","_globals","_globals2","_collectionForm","_collectionForm2","_preparationForm","_preparationForm2","_analysisForm","_analysisForm2","_specimenForm","_specimenForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","specimenUnits","containerTypesPrimary","containerStati","candidates","sessions","addAliquotForm","title","onClick","closeModal","show","setSpecimenData","specimenTypes","specimenTypeUnits","specimenTypeAttributes","attributeOptions","attributeDatatypes","containersNonPrimary","containerDimensions","collectionPanel","collectionPanelForm","cancelEditCollectionButton","cursor","log","collectionData","keys","map","StaticElement","label","text","FormElement","unitId","unit","centers","date","time","comments","preparationPanel","preparationForm","cancelEditPreparationButton","specimenProtocols","specimenProtocolAttributes","protocol","preparationData","protocolId","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","method","analysisData","methodId","datatypeId","datatype","LinkElement","href","download","globals","specimenPageDataURL","string","isRequired","RBiobankSpecimen","createFactory","window","Modal","throwWarning","showCancelButton","confirmButtonText","cancelButtonText","backdropStyle","position","zIndex","top","bottom","left","right","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","borderTopRightRadius","color","fontSize","glyphStyle","marginLeft","bodyStyle","modal","stopPropagation","children","bool","func","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","_containerParentForm","_containerParentForm2","Globals","increaseCycle","decreaseCycle","cycle","fTCycle","specimenTypeField","containerTypeField","quantityField","units","fTCycleField","temperatureField","statusField","stati","statusId","locationField","originField","originId","parentSpecimenField","dateTimeCreate","parentSpecimenId","parentSpecimenContainer","parentSpecimenFieldValue","parentContainerBarcodeValue","parentContainerId","parentContainerField","candidateSessionField","candidateId","candidate","PSCID","sessionId","session","Visit_label","fieldList","QuantityField","flexGrow","TextboxElement","inputClass","onUserInput","SelectElement","ButtonElement","columnSize","TemperatureField","StatusField","LocationField","labelClass","centerIds","_containerDisplay","_containerDisplay2","ContainerParentForm","containerDisplay","containerBarcodesNonPrimary","required","dimensionId","dimensions","coordinatesTotal","dimension","coordinates","select","selectedCoordinate","updateButton","onSubmit","ContainerDisplay","redirectURL","drag","drop","tooltip","load","types","preventDefault","dataTransfer","setData","getData","newCoordinate","parseInt","column","row","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","push","data-html","data-toggle","data-placement","data-original-title","rowHeight","rowStyle","_customFields","_customFields2","SpecimenCollectionForm","setCollection","addData","specimenTypeFields","specimenTypeFieldsObject","fields","specimenFields","DateElement","minYear","maxYear","TimeElement","TextareaElement","ref","CustomFields","attributeFields","DataElement","FileElement","SpecimenPreparationForm","setPreparation","submitButton","specimenProtocolFields","specimenProtocolFieldsObject","SpecimenAnalysisForm","setAnalysis","File","specimenMethodFields","specimenMethodFieldsObject","fileUpload","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","formErrors","centerId","barcodeList","1","count","collapsed","copyMultiplier","toggleCollapse","addBarcode","setCopyMultiplier","copyBarcode","removeBarcode","saveBarcodeList","availableId","find","freezeThaw","CandID","ID","refreshParent","onChange","Function","sessionCenters","nextKey","multiplier","barcodeListArray","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","barcodeKey","capacities","_iterator","Symbol","iterator","next","done","err","return","globalFields","remainingQuantityFields","emptyOption","candidateSessions","placeHolder","disabled","SpecimenBarcodeForm","copy","addBarcodeButton","addBarcodeText","copyBarcodeButton","copyBarcodeText","min","max","removeBarcodeButton","parentTypeId","paddingLeft","marginTop","data-target","setContainerData","LifeCycle","css","border","box-shadow","collectionNode","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","line","nodes","lineWidth","lineStyle","ContainerCheckout","checkoutContainer","checkoutButton","_barcodePath","_barcodePath2","BiobankContainer","barcodePath","parentContainers","listAssigned","listUnassigned","child","containerPageDataURL","RBiobankContainer","BarcodePath","path","pathLength"],"mappings":"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","file":"./modules/biobank/js/barcodeIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _filter = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./filter\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\t\n\tvar _filter2 = _interopRequireDefault(_filter);\n\t\n\tvar _specimen = __webpack_require__(2);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tvar _container = __webpack_require__(19);\n\t\n\tvar _container2 = _interopRequireDefault(_container);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global ReactDOM */\n\t\n\tvar BarcodeIndex = function (_React$Component) {\n\t  _inherits(BarcodeIndex, _React$Component);\n\t\n\t  function BarcodeIndex() {\n\t    _classCallCheck(this, BarcodeIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BarcodeIndex.__proto__ || Object.getPrototypeOf(BarcodeIndex)).call(this));\n\t\n\t    _this.state = {\n\t      specimenFilter: {},\n\t      containerFilter: {},\n\t      data: {},\n\t      specimen: {},\n\t      container: {},\n\t      primary: null,\n\t      options: {},\n\t      files: {},\n\t      isLoaded: false,\n\t      editable: {\n\t        specimenForm: false,\n\t        containerForm: false,\n\t        aliquotForm: false,\n\t        containerParentForm: false,\n\t        temperature: false,\n\t        quantity: false,\n\t        status: false,\n\t        location: false,\n\t        collection: false,\n\t        preparation: false,\n\t        analysis: false\n\t      }\n\t    };\n\t\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.loadFilters = _this.loadFilters.bind(_this);\n\t    _this.loadOptions = _this.loadOptions.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.loadSpecimen = _this.loadSpecimen.bind(_this);\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.updateSpecimenFilter = _this.updateSpecimenFilter.bind(_this);\n\t    _this.updateContainerFilter = _this.updateContainerFilter.bind(_this);\n\t    _this.clone = _this.clone.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.edit = _this.edit.bind(_this);\n\t    _this.close = _this.close.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.revertSpecimen = _this.revertSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.revertContainer = _this.revertContainer.bind(_this);\n\t    _this.setFiles = _this.setFiles.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.addAnalysis = _this.addAnalysis.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveChildContainer = _this.saveChildContainer.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BarcodeIndex, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      //TODO: when there is a single controller this will eventually be replaced\n\t      //let url = window.location.href;\n\t      //let name = 'barcode'.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t      //let regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t      //  results = regex.exec(url);\n\t      //let barcode = decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t\n\t      this.loadFilters();\n\t      this.loadOptions();\n\t      this.setState({ isLoaded: true });\n\t    }\n\t  }, {\n\t    key: 'loadFilters',\n\t    value: function loadFilters() {\n\t      var _this2 = this;\n\t\n\t      this.fetch(this.props.specimenFilterDataURL).then(function (data) {\n\t        var specimenFilter = data;\n\t        _this2.setState({ specimenFilter: specimenFilter });\n\t      });;\n\t      this.fetch(this.props.containerFilterDataURL).then(function (data) {\n\t        var containerFilter = data;\n\t        _this2.setSTate({ containerFilter: containerFilter });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadOptions',\n\t    value: function loadOptions() {\n\t      var _this3 = this;\n\t\n\t      this.fetch(this.props.optionsURL).then(function (data) {\n\t        var options = data;\n\t        _this3.setState({ options: options }, resolve());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(barcode) {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this4.fetch(_this4.props.containerDataURL + barcode).then(function (data) {\n\t          var container = _this4.clone(data.container);\n\t          _this4.setState({ data: data, container: container }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimen',\n\t    value: function loadSpecimen(barcode) {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this5.fetch(_this5.props.specimenDataURL + barcode).then(function (data) {\n\t          var specimen = _this5.clone(data.specimen);\n\t          var container = _this5.clone(data.container);\n\t          _this5.setState({ data: data, specimen: specimen, container: container }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetch',\n\t    value: function fetch(url) {\n\t      return new Promise(function (resolve) {\n\t        $.ajax(url, {\n\t          dataType: 'json',\n\t          success: function success(data) {\n\t            resolve(data);\n\t          },\n\t          error: function error(_error, errorCode, errorMsg) {\n\t            console.error(_error, errorCode, errorMsg);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateSpecimenFilter',\n\t    value: function updateSpecimenFilter(specimenFilter) {\n\t      this.setState({ specimenFilter: specimenFilter });\n\t    }\n\t  }, {\n\t    key: 'updateContainerFilter',\n\t    value: function updateContainerFilter(containerFilter) {\n\t      this.setState({ containerFilter: containerFilter });\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone(object) {\n\t      return JSON.parse(JSON.stringify(object));\n\t    }\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(object, attribute) {\n\t      var data = {};\n\t      for (var id in object) {\n\t        data[id] = object[id][attribute];\n\t      }\n\t\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'edit',\n\t    value: function edit(stateKey) {\n\t      this.close();\n\t      var editable = this.state.editable;\n\t      editable[stateKey] = true;\n\t      this.setState({ editable: editable });\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var editable = this.state.editable;\n\t      for (var key in editable) {\n\t        editable[key] = false;\n\t      }\n\t      this.state.data.specimen && this.revertSpecimen();\n\t      this.revertContainer();\n\t      this.setState({ editable: editable });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimen',\n\t    value: function revertSpecimen() {\n\t      var specimen = this.state.specimen;\n\t      specimen = this.clone(this.state.data.specimen);\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.state.container;\n\t      value ? container[name] = value : delete container[name];\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainer',\n\t    value: function revertContainer() {\n\t      var container = this.state.container;\n\t      container = this.clone(this.state.data.container);\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setFiles',\n\t    value: function setFiles(name, value) {\n\t      var files = this.state.files;\n\t      files[value.name] = value;\n\t      this.setState({ files: files });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addAnalysis',\n\t    value: function addAnalysis() {\n\t      var specimen = this.state.specimen;\n\t      specimen.analysis = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this6 = this;\n\t\n\t      var specimen = this.state.specimen;\n\t      this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(function () {\n\t        var data = _this6.state.data;\n\t        data.specimen = _this6.clone(_this6.state.specimen);\n\t        _this6.setState({ data: data });\n\t        _this6.close();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this7 = this;\n\t\n\t      var container = this.state.container;\n\t      this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(function () {\n\t        var data = _this7.state.data;\n\t        data.container = _this7.clone(_this7.state.container);\n\t        _this7.setState({ data: data });\n\t        _this7.close();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveChildContainer',\n\t    value: function saveChildContainer(container) {\n\t      var _this8 = this;\n\t\n\t      this.save(container, this.props.saveContainer).then(function () {\n\t        var options = _this8.state.options;\n\t        var data = _this8.state.data;\n\t        options.containerCoordinates[data.container.id][container.coordinate] = container.id;\n\t        if (data.childContainers[container.id].coordinate) {\n\t          delete options.containerCoordinates[data.container.id][data.childContainers[container.id].coordinate];\n\t        } else {\n\t          delete options.containerCoordinates[data.container.id].Unassigned.indexOf[data.container.id];\n\t        }\n\t\n\t        data.childContainers[container.id] = _this8.clone(container);\n\t        _this8.setState({ options: options, data: data });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(data, url, message) {\n\t      var _this9 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var dataObject = new FormData();\n\t        for (var file in _this9.state.files) {\n\t          dataOject.append(_this9.state.files[file].name, _this9.state.files[file]);\n\t        }\n\t        dataObject.append('data', JSON.stringify(data));\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: dataObject,\n\t          cache: false,\n\t          contentType: false,\n\t          processData: false,\n\t          success: function success() {\n\t            resolve();\n\t            message && swal(message, '', 'success');\n\t          },\n\t          error: function error(_error2, textStatus, errorThrown) {\n\t            var message = (_error2.responseJSON || {}).message || 'Submission error!';\n\t            swal(message, '', 'error');\n\t            console.error(_error2, textStatus, errorThrown);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(_Loader2.default, null);\n\t      }\n\t\n\t      var display = void 0;\n\t      var primary = this.state.options.containerTypes[this.state.data.container.typeId].primary;\n\t      switch (primary) {\n\t        case 0:\n\t          display = React.createElement(_container2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t        case 1:\n\t          display = React.createElement(_specimen2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            specimen: this.state.specimen,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setSpecimen: this.setSpecimen,\n\t            revertSpecimen: this.revertSpecimen,\n\t            saveSpecimen: this.saveSpecimen,\n\t            addPreparation: this.addPreparation,\n\t            addAnalysis: this.addAnalysis,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t        default:\n\t          display = React.createElement(_filter2.default, {\n\t            specimenFilter: this.state.specimenFilter,\n\t            containerFilter: this.state.containerFilter,\n\t            options: this.state.options,\n\t            editable: this.state.editable,\n\t            updateSpecimenFilter: this.updateSpecimenFilter,\n\t            updateContainerFilter: this.updateContainerFilter,\n\t            mapFormOptions: this.mapFormOptions,\n\t            edit: this.edit,\n\t            close: this.close,\n\t            save: this.save\n\t          });\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'barcode-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            display\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodeIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t  var request = loris.BaseURL + '/biobank/ajax/requestData.php?';\n\t  var submit = loris.BaseURL + '/biobank/ajax/submitData.php?';\n\t  var barcodeIndex = React.createElement(\n\t    'div',\n\t    { className: 'page=biobank' },\n\t    React.createElement(BarcodeIndex, {\n\t      specimenFilterDataURL: loris.BaseURL + '/biobank/?format=json',\n\t      containerFilterDataULR: request + 'action=getContainerFilterData',\n\t      specimenDataURL: request + 'action=getSpecimenData&barcode=',\n\t      containerDataURL: request + 'action=getContainerData&barcode=',\n\t      optionsURL: request + 'action=getFormOptions',\n\t      saveContainerURL: submit + 'action=saveContainer',\n\t      saveSpecimenURL: submit + 'action=saveSpecimen',\n\t      saveBarcodeListURL: submit + 'action=saveBarcodeList'\n\t    })\n\t  );\n\t  ReactDOM.render(barcodeIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains the React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\"div\", {\n\t        className: \"loader\",\n\t        style: { width: this.props.size, height: this.props.size }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\tLoader.propTypes = { size: React.PropTypes.int };\n\tLoader.defaultProps = { size: 120 };\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(3);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _globals = __webpack_require__(4);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(11);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(13);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(14);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(15);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(17);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(18);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Map Options for Form Select Elements\n\t      var specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      var addAliquotForm = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Make Aliquots'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this2.props.edit('aliquotForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            closeModal: this.props.close,\n\t            show: this.props.editable.aliquotForm\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.props.data,\n\t            specimen: this.props.specimen,\n\t            setSpecimenData: this.props.setSpecimen,\n\t            saveSpecimen: this.props.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.props.editable.collection) {\n\t        var _containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t        console.log('not sure');\n\t        var specimenTypeAttributes = void 0;\n\t        console.log('not sure 2');\n\t        //loops through data object to produce static elements\n\t        console.log(this.props.data);\n\t        if (this.props.data.specimen.collection.data) {\n\t          var collectionData = this.props.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(collectionData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenTypeAttributes[_this2.props.data.specimen.typeId][key].name,\n\t              text: collectionData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.props.data.specimen.collection.quantity + ' ' + this.props.options.specimenUnits[this.props.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.props.editable.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.props.editable.collection ? null : function () {\n\t              _this2.props.edit('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.props.options.specimenProtocols) {\n\t        if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation Does Exist and the form is not in an edit state\n\t      if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        if (this.props.data.specimen.preparation.data) {\n\t          var preparationData = this.props.data.specimen.preparation.data;\n\t          specimenProtocolAttributes = Object.keys(preparationData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenProtocolAttributes[_this2.props.data.specimen.preparation.protocolId][key].name,\n\t              text: preparationData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('preparation');_this2.props.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.preparation ? null : function () {\n\t                _this2.props.edit('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.props.options.specimenMethods) {\n\t        if (this.props.options.specimenMethods[_id].typeId === this.props.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.props.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.props.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          files: this.props.files,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          setFiles: this.props.setFiles,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        //TODO: Make the below a separate component\n\t        if (this.props.data.specimen.analysis.data) {\n\t          var analysisData = this.props.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.keys(analysisData).map(function (key) {\n\t            if (_this2.props.options.attributeDatatypes[_this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].datatypeId].datatype === 'file') {\n\t              return React.createElement(LinkElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key],\n\t                href: loris.BaseURL + '/biobank/ajax/requestData.php?action=downloadFile&file=' + analysisData[key],\n\t                target: '_blank',\n\t                download: analysisData[key]\n\t              });\n\t            } else {\n\t              return React.createElement(StaticElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key]\n\t              });\n\t            }\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.analysis.locationId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('analysis');_this2.props.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.analysis ? null : function () {\n\t                _this2.props.edit('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.props.specimen,\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        setSpecimen: this.props.setSpecimen,\n\t        saveSpecimen: this.props.saveSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            specimen: this.props.data.specimen,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\t\n\twindow.BiobankSpecimen = BiobankSpecimen;\n\twindow.RBiobankSpecimen = RBiobankSpecimen;\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      var _this2 = this;\n\t\n\t      if (this.props.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          _this2.props.closeModal();\n\t        });\n\t      } else {\n\t        this.props.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 850,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '70px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          \"div\",\n\t          { style: backdropStyle, onClick: this.closeModal },\n\t          React.createElement(\n\t            \"div\",\n\t            { style: modalStyle, onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              } },\n\t            React.createElement(\n\t              \"div\",\n\t              { style: titleStyle },\n\t              this.props.title,\n\t              React.createElement(\n\t                \"span\",\n\t                { style: glyphStyle, onClick: this.closeModal },\n\t                \"\\xD7\"\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { style: bodyStyle },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(3);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _quantityField = __webpack_require__(5);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(6);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(7);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(8);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.editable.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.edit('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                specimen: this.props.specimen,\n\t                units: units,\n\t                close: this.props.close,\n\t                setSpecimen: this.props.setSpecimen,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if ((this.props.data.specimen || {}).fTCycle !== undefined) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.editable.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  _this2.props.edit('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              container: this.props.container,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.editable.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              container: this.props.container,\n\t              stati: stati,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.editable.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              container: this.props.container,\n\t              centers: this.props.options.centers,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var barcode = this.props.data.parentSpecimenContainer.barcode;\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t              return _this2.props.loadSpecimen(barcode);\n\t            } },\n\t          barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var _barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode;\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t                return _this2.props.loadContainer(_barcode);\n\t              } },\n\t            _barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerParentForm');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t          ),\n\t          React.createElement(\n\t            _Modal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              closeModal: this.props.close,\n\t              show: this.props.editable.containerParentForm\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            inputClass: 'col-xs-11',\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.quantity\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'unit',\n\t            inputClass: 'col-xs-11',\n\t            options: this.props.units,\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveSpecimen,\n\t            columnSize: 'col-xs-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimen: React.PropTypes.func,\n\t  close: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.centers,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: this.props.close\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    return _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.props.setContainer,\n\t        required: true,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainer: this.props.setContainer\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var load = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\t\n\t        load(this.props.children[this.props.coordinates[coordinate]].barcode);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      this.props.saveChildContainer(container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // This is eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = null;\n\t\n\t            if (!this.props.select) {\n\t              // This double if statement doesn't sound great\n\t              if (this.props.coordinates) {\n\t                if (this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node occupied';\n\t                  dataHtml = 'true';\n\t                  dataToggle = 'tooltip';\n\t                  dataPlacement = 'top';\n\t                  tooltipTitle = '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                  draggable = 'true';\n\t                  onDragStart = this.drag;\n\t                  onDragOver = null;\n\t                  onDrop = null;\n\t                  onClick = this.redirectURL;\n\t                }\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this2.props.setContainer('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this2.props.setContainer('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  // TODO: --- This is currently not working ---\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            {\n\t              className: 'row',\n\t              style: rowStyle\n\t            },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'display' },\n\t        display\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(12);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.setCollection = _this.setCollection.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollection',\n\t    value: function setCollection(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollection('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = React.createElement(_customFields2.default, {\n\t              fields: specimenTypeFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.collection.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollection,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimen: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Custom Attribute Fields\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\tvar CustomFields = function (_React$Component) {\n\t  _inherits(CustomFields, _React$Component);\n\t\n\t  function CustomFields() {\n\t    _classCallCheck(this, CustomFields);\n\t\n\t    return _possibleConstructorReturn(this, (CustomFields.__proto__ || Object.getPrototypeOf(CustomFields)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CustomFields, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var fields = this.props.fields;\n\t      var attributeFields = Object.keys(fields).map(function (attribute) {\n\t\n\t        var datatype = _this2.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n\t        if (datatype === 'text' || datatype === 'number') {\n\t          if (fields[attribute]['refTableId'] === null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t\n\t          if (fields[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fields[attribute]['refTableId']],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === 'datetime') {\n\t          return React.createElement(DataElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.object[attribute]\n\t          });\n\t        }\n\t\n\t        // Do not present the possibility of uploading if file is already set\n\t        // File must instead be deleted or overwritten.\n\t        if (datatype === 'file' && !(_this2.props.data || {})[attribute]) {\n\t          return React.createElement(FileElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.files[_this2.props.object[attribute]]\n\t          });\n\t        }\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        attributeFields\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CustomFields;\n\t}(React.Component);\n\t\n\tCustomFields.propTypes = {\n\t  fields: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  object: React.PropTypes.object.isRequired,\n\t  setData: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = CustomFields;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(12);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = React.createElement(_customFields2.default, {\n\t              fields: specimenProtocolFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.preparation.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(12);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      if (value instanceof File) {\n\t        data[name] = value.name;\n\t        this.props.setFiles(name, value);\n\t      } else {\n\t        data[name] = value;\n\t        this.setAnalysis('data', data);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.analysis) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = React.createElement(_customFields2.default, {\n\t              fields: specimenMethodFieldsObject,\n\t              files: this.props.files,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.analysis.data,\n\t              data: (((this.props.data || {}).specimen || {}).analysis || {}).data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          fileUpload: true,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(16);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      candidateId: null,\n\t      sessionId: null,\n\t      centerId: null,\n\t      barcodeList: { 1: { specimen: { collection: {} }, container: {} } },\n\t      count: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.addBarcode = _this.addBarcode.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyBarcode = _this.copyBarcode.bind(_this);\n\t    _this.removeBarcode = _this.removeBarcode.bind(_this);\n\t    _this.saveBarcodeList = _this.saveBarcodeList.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveBarcodeList',\n\t    value: function saveBarcodeList() {\n\t      var _this2 = this;\n\t\n\t      var barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var barcode in barcodeList) {\n\t        //set container values\n\t        var container = barcodeList[barcode].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.locationId = this.state.centerId;\n\t        container.originId = this.state.centerId;\n\t\n\t        //set specimen values\n\t        var specimen = barcodeList[barcode].specimen;\n\t        specimen.candidateId = this.state.candidateId;\n\t        specimen.sessionId = this.state.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.locationId = this.state.centerId;\n\t        if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n\t          specimen.fTCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: these will eventually be higher level states.\n\t        if (this.props.data) {\n\t          specimen.candidateId = this.props.data.candidate.CandID;\n\t          specimen.sessionId = this.props.data.session.ID;\n\t          specimen.parentSpecimenId = this.props.data.specimen.id;\n\t          specimen.collection.locationId = this.props.data.container.locationId;\n\t          container.locationId = this.props.data.container.locationId;\n\t          container.originId = this.props.data.container.locationId;\n\t        }\n\t\n\t        barcodeList[barcode].container = container;\n\t        barcodeList[barcode].specimen = specimen;\n\t      }\n\t\n\t      this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(function () {\n\t        _this2.props.refreshParent();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var centerId = this.state.centerId;\n\t      var candidateId = this.state.candidateId;\n\t      var sessionId = this.state.sessionId;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      if (name === 'candidateId') {\n\t        candidateId = value;\n\t      } else if (name === 'sessionId') {\n\t        sessionId = value;\n\t        centerId = this.props.sessionCenters[sessionId].centerId;\n\t      } else {\n\t        //this is eliminate values if specimen type is changed\n\t        if (name === 'typeId') {\n\t          barcodeList[key].specimen = { collection: {} };\n\t        }\n\t        barcodeList[key].specimen[name] = value;\n\t      }\n\t\n\t      this.setState({ barcodeList: barcodeList, centerId: centerId, candidateId: candidateId, sessionId: sessionId });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var barcodeList = this.state.barcodeList;\n\t      barcodeList[key].container[name] = value;\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'addBarcode',\n\t    value: function addBarcode() {\n\t      var barcodeList = this.state.barcodeList;\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t\n\t      barcodeList[count + 1] = { specimen: {}, container: { collection: {} } };\n\t      collapsed[count + 1] = true;\n\t      count = count + 1;\n\t\n\t      this.setState({ barcodeList: barcodeList, collapsed: collapsed, count: count });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyBarcode',\n\t    value: function copyBarcode(key) {\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t      var nextKey = count + 1;\n\t      var barcodeList = this.state.barcodeList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key]));\n\t        delete barcodeList[nextKey].container.barcode;\n\t        collapsed[nextKey] = true;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList,\n\t        count: nextKey,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeBarcode',\n\t    value: function removeBarcode(key) {\n\t      var barcodeList = this.state.barcodeList;\n\t      delete barcodeList[key];\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(_barcodeForm2.default, {\n\t            data: _this3.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this3.state.collapsed[key],\n\t            toggleCollapse: _this3.toggleCollapse,\n\t            mapFormOptions: _this3.props.mapFormOptions,\n\t            container: _this3.state.barcodeList[key].container || null,\n\t            specimen: _this3.state.barcodeList[key].specimen || null,\n\t            removeBarcode: barcodeListArray.length !== 1 ? function () {\n\t              return _this3.removeBarcode(key);\n\t            } : null,\n\t            addBarcode: i == barcodeListArray.length ? _this3.addBarcode : null,\n\t            setCopyMultiplier: _this3.setCopyMultiplier,\n\t            copyMultiplier: _this3.state.copyMultiplier,\n\t            copyBarcode: i == barcodeListArray.length && _this3.state.barcodeList[key] ? _this3.copyBarcode : null,\n\t            setContainer: _this3.setContainer,\n\t            setSpecimen: _this3.setSpecimen,\n\t            onChange: _this3.props.onChange,\n\t            specimenTypes: _this3.props.specimenTypes,\n\t            containerTypesPrimary: _this3.props.containerTypesPrimary,\n\t            containersNonPrimary: _this3.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this3.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this3.props.attributeDatatypes,\n\t            attributeOptions: _this3.props.attributeOptions,\n\t            capacities: _this3.props.capacities,\n\t            containerDimensions: _this3.props.containerDimensions,\n\t            containerCoordinates: _this3.props.containerCoordinates,\n\t            specimenTypeUnits: _this3.props.specimenTypeUnits,\n\t            units: _this3.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimenData,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.state.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.candidateId,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.sessionId,\n\t            disabled: this.state.candidateId ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: function onSubmit() {\n\t            _this3.saveBarcodeList();\n\t            _this3.props.saveSpecimen instanceof Function && _this3.props.saveSpecimen();\n\t          },\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(11);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimen(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyBarcode(this.props.copyMultiplier);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var addBarcodeButton = void 0;\n\t      var addBarcodeText = void 0;\n\t      var copyBarcodeButton = void 0;\n\t      var copyBarcodeText = void 0;\n\t      if (this.props.addBarcode) {\n\t        addBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcode\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcode) {\n\t        copyBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeButton = void 0;\n\t      if (this.props.removeBarcode) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcode,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeBarcodeButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                setSpecimenData: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainerData: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeButton,\n\t              addBarcodeText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeButton,\n\t              copyBarcodeText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\t//TODO: revise this component once Shipments are enabled.\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle() {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    return _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // Create Collection Node\n\t      var collectionNode = void 0;\n\t      if ((this.props.specimen || {}).collection || this.props.container) {\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Preparation Node\n\t      var preparationNode = void 0;\n\t      if ((this.props.specimen || {}).preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Analysis Node\n\t      var analysisNode = void 0;\n\t      if ((this.props.specimen || {}).analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'A'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Lines\n\t      var line = void 0;\n\t      var nodes = 0;\n\t      for (var i in this.props.specimen) {\n\t        if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n\t          nodes++;\n\t        }\n\t      }\n\t      var lineWidth = nodes > 1 ? 60 / (nodes - 1) : 0;\n\t      var lineStyle = { width: lineWidth + '%' };\n\t      line = React.createElement('div', { className: 'lifecycle-line', style: lineStyle });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode ? line : null,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainer('parentContainerId', null);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(4);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _lifeCycle = __webpack_require__(17);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _barcodePath = __webpack_require__(20);\n\t\n\tvar _barcodePath2 = _interopRequireDefault(_barcodePath);\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tvar _containerCheckout = __webpack_require__(18);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankContainer */\n\t\n\t/**\n\t * Biobank Container\n\t *\n\t * Fetches data corresponding to a given Container from Loris backend and\n\t * displays a page allowing viewing of meta information of the container\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainer = function (_React$Component) {\n\t  _inherits(BiobankContainer, _React$Component);\n\t\n\t  function BiobankContainer() {\n\t    _classCallCheck(this, BiobankContainer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainer.__proto__ || Object.getPrototypeOf(BiobankContainer)).call(this));\n\t\n\t    _this.drag = _this.drag.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainer, [{\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      var barcodePath = React.createElement(_barcodePath2.default, {\n\t        container: this.props.data.container,\n\t        parentContainers: this.props.data.parentContainers,\n\t        loadContainer: this.props.loadContainer\n\t      });\n\t\n\t      var display = void 0;\n\t      if (this.props.data.container.dimensionId) {\n\t        display = React.createElement(_containerDisplay2.default, {\n\t          children: this.props.data.childContainers,\n\t          types: this.props.options.containerTypes,\n\t          dimensions: this.props.options.containerDimensions[this.props.data.container.dimensionId],\n\t          coordinates: this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null,\n\t          containerTypes: this.props.options.containerTypes,\n\t          containerStati: this.props.options.containerStati,\n\t          loadSpecimen: this.props.loadSpecimen,\n\t          loadContainer: this.props.loadContainer,\n\t          saveChildContainer: this.props.saveChildContainer\n\t        });\n\t      }\n\t\n\t      var listAssigned = [];\n\t      var listUnassigned = [];\n\t      if (this.props.data.childContainers) {\n\t        (function () {\n\t          var children = _this2.props.data.childContainers;\n\t\n\t          var _loop = function _loop(child) {\n\t            var load = void 0;\n\t            if (_this2.props.options.containerTypes[children[child].typeId].primary) {\n\t              load = _this2.props.loadSpecimen;\n\t              //url = loris.BaseURL+\"/biobank/specimen/?barcode=\"+children[child].barcode;\n\t            } else {\n\t              load = _this2.props.loadContainer;\n\t              //url = loris.BaseURL+\"/biobank/container/?barcode=\"+children[child].barcode;\n\t            }\n\t\n\t            if (children[child].coordinate) {\n\t              listAssigned.push(React.createElement(\n\t                'div',\n\t                null,\n\t                React.createElement(\n\t                  'a',\n\t                  { onClick: function onClick() {\n\t                      return load(children[child].barcode);\n\t                    } },\n\t                  children[child].barcode\n\t                ),\n\t                'at ',\n\t                children[child].coordinate\n\t              ));\n\t            } else {\n\t              listUnassigned.push(React.createElement(\n\t                'a',\n\t                {\n\t                  onClick: function onClick() {\n\t                    return load(children[child].barcode);\n\t                  },\n\t                  id: children[child].id,\n\t                  draggable: true,\n\t                  onDragStart: _this2.drag\n\t                },\n\t                children[child].barcode\n\t              ));\n\t            }\n\t          };\n\t\n\t          for (var child in children) {\n\t            _loop(child);\n\t          }\n\t        })();\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'container-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(_containerCheckout2.default, {\n\t            container: this.props.container,\n\t            setContainer: this.props.setContainer,\n\t            saveContainer: this.props.saveContainer\n\t          }),\n\t          React.createElement(_lifeCycle2.default, {\n\t            container: this.props.data.container,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'display-container' },\n\t            display,\n\t            barcodePath\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-list' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length !== 0 ? 'Assigned Containers' : null\n\t            ),\n\t            listAssigned,\n\t            listAssigned.length !== 0 ? React.createElement('br', null) : null,\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listUnassigned.length !== 0 ? 'Unassigned Containers' : null\n\t            ),\n\t            listUnassigned\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainer;\n\t}(React.Component);\n\t\n\tBiobankContainer.propTypes = {\n\t  containerPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankContainer = React.createFactory(BiobankContainer);\n\t\n\twindow.BiobankContainer = BiobankContainer;\n\twindow.RBiobankContainer = RBiobankContainer;\n\t\n\texports.default = BiobankContainer;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Path\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar BarcodePath = function (_React$Component) {\n\t  _inherits(BarcodePath, _React$Component);\n\t\n\t  function BarcodePath() {\n\t    _classCallCheck(this, BarcodePath);\n\t\n\t    return _possibleConstructorReturn(this, (BarcodePath.__proto__ || Object.getPrototypeOf(BarcodePath)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BarcodePath, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var path = [];\n\t      var pathLength = this.props.parentContainers.length - 1;\n\t      var containerURL = loris.BaseURL + '/biobank/container/?barcode=';\n\t\n\t      var _loop = function _loop(i) {\n\t        path.push(React.createElement(\n\t          'span',\n\t          { className: 'barcodePath' },\n\t          '/',\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                return _this2.props.loadContainer(_this2.props.parentContainers[i].barcode);\n\t              } },\n\t            _this2.props.parentContainers[i].barcode\n\t          )\n\t        ));\n\t      };\n\t\n\t      for (var i = pathLength; i >= 0; i--) {\n\t        _loop(i);\n\t      }\n\t      path.push(React.createElement(\n\t        'span',\n\t        { className: 'barcodePath' },\n\t        '/',\n\t        React.createElement(\n\t          'a',\n\t          { onClick: function onClick() {\n\t              return _this2.props.loadContainer(_this2.props.container.barcode);\n\t            } },\n\t          this.props.container.barcode\n\t        )\n\t      ));\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        path\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodePath;\n\t}(React.Component);\n\t\n\tBarcodePath.propTypes = {};\n\t\n\texports.default = BarcodePath;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/barcodeIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c0bdb5cd5719d1c9ad4f","/* global ReactDOM */\n\nimport Loader from 'Loader';\nimport BiobankFilter from './filter';\nimport BiobankSpecimen from './specimen';\nimport BiobankContainer from './container';\n\nclass BarcodeIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      specimenFilter: {},\n      containerFilter: {},\n      data: {},\n      specimen: {},\n      container: {},\n      primary: null,\n      options: {},\n      files: {},\n      isLoaded: false,\n      editable: {\n        specimenForm: false,\n        containerForm: false,\n        aliquotForm: false,\n        containerParentForm: false,\n        temperature: false,\n        quantity: false,\n        status: false,\n        location: false,\n        collection: false,\n        preparation: false,\n        analysis: false,\n      }\n    };\n\n    this.fetch                 = this.fetch.bind(this);\n    this.loadFilters           = this.loadFilters.bind(this);\n    this.loadOptions           = this.loadOptions.bind(this);\n    this.loadContainer         = this.loadContainer.bind(this);\n    this.loadSpecimen          = this.loadSpecimen.bind(this);\n    this.fetch                 = this.fetch.bind(this);\n    this.updateSpecimenFilter  = this.updateSpecimenFilter.bind(this);\n    this.updateContainerFilter = this.updateContainerFilter.bind(this);\n    this.clone                 = this.clone.bind(this);\n    this.mapFormOptions        = this.mapFormOptions.bind(this);\n    this.edit                  = this.edit.bind(this);\n    this.close                 = this.close.bind(this);\n    this.setSpecimen           = this.setSpecimen.bind(this);\n    this.revertSpecimen        = this.revertSpecimen.bind(this);\n    this.setContainer          = this.setContainer.bind(this);\n    this.revertContainer       = this.revertContainer.bind(this);\n    this.setFiles              = this.setFiles.bind(this)\n    this.addPreparation        = this.addPreparation.bind(this);\n    this.addAnalysis           = this.addAnalysis.bind(this);\n    this.saveSpecimen          = this.saveSpecimen.bind(this);\n    this.saveContainer         = this.saveContainer.bind(this);\n    this.saveChildContainer    = this.saveChildContainer.bind(this);\n    this.save                  = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    //TODO: when there is a single controller this will eventually be replaced\n    //let url = window.location.href;\n    //let name = 'barcode'.replace(/[\\[\\]]/g, \"\\\\$&\");\n    //let regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n    //  results = regex.exec(url);\n    //let barcode = decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\n    this.loadFilters();\n    this.loadOptions();\n    this.setState({isLoaded: true});\n  }\n\n  loadFilters() {\n    this.fetch(this.props.specimenFilterDataURL).then(\n      data => {\n        let specimenFilter = data;\n        this.setState({specimenFilter})\n      }\n    );;\n    this.fetch(this.props.containerFilterDataURL).then(\n      data => {\n        let containerFilter = data;\n        this.setSTate({containerFilter});\n      }\n    );\n  }\n\n  loadOptions() {\n    this.fetch(this.props.optionsURL).then(\n      data => {\n        let options = data;\n        this.setState({options}, resolve());\n      }\n    );\n  }\n\n  loadContainer(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerDataURL+barcode).then(\n        data => {\n          let container = this.clone(data.container);\n          this.setState({data, container}, resolve());\n        }\n      );\n    });\n  }\n\n  loadSpecimen(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenDataURL+barcode).then(\n        data => {\n          let specimen = this.clone(data.specimen);\n          let container = this.clone(data.container);\n          this.setState({data, specimen, container}, resolve());\n        }\n      );\n    });\n  }\n\n  fetch(url) {\n    return new Promise(resolve => {\n      $.ajax(url, {\n        dataType: 'json',\n        success: data => {\n          resolve(data);\n        },\n        error: (error, errorCode, errorMsg) => {\n          console.error(error, errorCode, errorMsg);\n        }\n      });\n    });\n  }\n\n  updateSpecimenFilter(specimenFilter) {\n    this.setState({specimenFilter});\n  }\n\n  updateContainerFilter(containerFilter) {\n    this.setState({containerFilter});\n  }\n\n  clone(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  mapFormOptions(object, attribute) {\n    let data = {};\n    for (let id in object) {\n      data[id] = object[id][attribute];\n    }\n\n    return data;\n  }\n\n  edit(stateKey) {\n    this.close();\n    let editable = this.state.editable;\n    editable[stateKey] = true;\n    this.setState({editable});\n  }\n\n  close() {\n    let editable = this.state.editable;\n    for (let key in editable) {\n      editable[key] = false;\n    }\n    this.state.data.specimen && this.revertSpecimen();\n    this.revertContainer();\n    this.setState({editable});\n\n  }\n\n  setSpecimen(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  revertSpecimen() {\n    let specimen = this.state.specimen;\n    specimen = this.clone(this.state.data.specimen);\n    this.setState({specimen});\n  }\n\n  setContainer(name, value) {\n    let container = this.state.container;\n    value ? container[name] = value : delete container[name]; \n    this.setState({container});\n  }\n\n  revertContainer() {\n    let container = this.state.container;\n    container = this.clone(this.state.data.container);\n    this.setState({container});\n  }\n\n  setFiles(name, value) {\n    let files = this.state.files;\n    files[value.name] = value;\n    this.setState({files});\n  }\n  \n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  addAnalysis() {\n    let specimen = this.state.specimen;\n    specimen.analysis = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  saveSpecimen() {\n    let specimen = this.state.specimen;\n    this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.specimen = this.clone(this.state.specimen);\n        this.setState({data});\n        this.close();\n      }\n    );\n  }\n\n  saveContainer() {\n    let container = this.state.container;\n    this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.container = this.clone(this.state.container);\n        this.setState({data});\n        this.close();\n      }\n    );\n  }\n  \n  saveChildContainer(container) {\n    this.save(container, this.props.saveContainer).then(\n      () => {\n        let options = this.state.options;\n        let data    = this.state.data;\n        options.containerCoordinates[data.container.id][container.coordinate] = container.id;\n        if (data.childContainers[container.id].coordinate) {\n          delete options.containerCoordinates[data.container.id][data.childContainers[container.id].coordinate];\n        } else {\n          delete options.containerCoordinates[data.container.id].Unassigned.indexOf[data.container.id];\n        }\n\n        data.childContainers[container.id] = this.clone(container);\n        this.setState({options, data});\n      }\n    )\n  }\n\n  save(data, url, message) {\n    return new Promise(resolve => {\n      let dataObject = new FormData();\n      for (let file in this.state.files) {\n        dataOject.append(this.state.files[file].name, this.state.files[file]);\n      }\n      dataObject.append('data', JSON.stringify(data));\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: dataObject,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: () => {\n          resolve();\n          message && swal(message, '', 'success');\n        },\n        error: (error, textStatus, errorThrown) => {\n          let message = (error.responseJSON||{}).message || 'Submission error!';\n          swal(message, '', 'error');\n          console.error(error, textStatus, errorThrown);\n        }\n      });\n    });\n  }\n\n  render() {\n    if (this.state.error !== undefined) {\n      return (\n        <div className='alert alert-danger text-center'>\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    if (!this.state.isLoaded) {\n      return (\n        <Loader/>\n      );\n    }\n\n    let display;\n    let primary = this.state.options.containerTypes[this.state.data.container.typeId].primary;\n      switch (primary) {\n        case 0:\n          display = (\n            <BiobankContainer\n              data={this.state.data}\n              options={this.state.options}\n              container={this.state.container}\n              editable={this.state.editable}\n              loadContainer={this.loadContainer}\n              loadSpecimen={this.loadSpecimen}\n              mapFormOptions={this.mapFormOptions}\n              setContainer={this.setContainer}\n              revertContainer={this.revertContainer}\n              saveContainer={this.saveContainer}\n              saveChildContainer={this.saveChildContainer}\n              edit={this.edit}\n              close={this.close}\n            />\n          );\n          break;\n        case 1: \n          display = (\n            <BiobankSpecimen\n              data={this.state.data}\n              options={this.state.options}\n              container={this.state.container}\n              specimen={this.state.specimen}\n              editable={this.state.editable}\n              loadContainer={this.loadContainer}\n              loadSpecimen={this.loadSpecimen}\n              mapFormOptions={this.mapFormOptions}\n              setContainer={this.setContainer}\n              revertContainer={this.revertContainer}\n              saveContainer={this.saveContainer}\n              setSpecimen={this.setSpecimen}\n              revertSpecimen={this.revertSpecimen}\n              saveSpecimen={this.saveSpecimen}\n              addPreparation={this.addPreparation}\n              addAnalysis={this.addAnalysis}\n              saveChildContainer={this.saveChildContainer}\n              edit={this.edit}\n              close={this.close}\n            />\n          );\n          break;\n        default:\n          display = (\n            <BiobankFilter\n              specimenFilter={this.state.specimenFilter}\n              containerFilter={this.state.containerFilter}\n              options={this.state.options}\n              editable={this.state.editable}\n              updateSpecimenFilter={this.updateSpecimenFilter}\n              updateContainerFilter={this.updateContainerFilter}\n              mapFormOptions={this.mapFormOptions}\n              edit={this.edit}\n              close={this.close}\n              save={this.save}\n            />\n          );\n      }\n\n    return (\n      <div className=\"barcode-page\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            {display}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n$(function() {\n  const request = `${loris.BaseURL}/biobank/ajax/requestData.php?`;\n  const submit = `${loris.BaseURL}/biobank/ajax/submitData.php?`;\n  const barcodeIndex = (\n    <div className='page=biobank'>\n      <BarcodeIndex\n        specimenFilterDataURL={`${loris.BaseURL}/biobank/?format=json`}\n        containerFilterDataULR={`${request}action=getContainerFilterData`}\n        specimenDataURL={`${request}action=getSpecimenData&barcode=`}\n        containerDataURL={`${request}action=getContainerData&barcode=`}\n        optionsURL={`${request}action=getFormOptions`}\n        saveContainerURL={`${submit}action=saveContainer`}\n        saveSpecimenURL={`${submit}action=saveSpecimen`}\n        saveBarcodeListURL={`${submit}action=saveBarcodeList`}\n      />\n    </div>\n  );\n  ReactDOM.render(barcodeIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeIndex.js","/**\n * This file contains the React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  render() {\n    return (\n        <div\n          className=\"loader\"\n          style={{width: this.props.size, height: this.props.size}}\n        />\n    );\n  }\n}\n\nLoader.propTypes = {size: React.PropTypes.int}\nLoader.defaultProps = {size: 120}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","/* exported RBiobankSpecimen */\n\nimport Modal from 'Modal';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n\n  render() {\n\n    //Map Options for Form Select Elements\n    let specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n    let containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n    let candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n    let sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\n    let addAliquotForm = (\n      <div\n        className='action'\n        title='Make Aliquots'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('aliquotForm')}}\n        >\n          <span>+</span>  \n        </div>\n        <Modal\n          title=\"Add Aliquots\"\n          closeModal={this.props.close}\n          show={this.props.editable.aliquotForm}\n        >\n          <BiobankSpecimenForm\n            data={this.props.data}\n            specimen={this.props.specimen}\n            setSpecimenData={this.props.setSpecimen}\n            saveSpecimen={this.props.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.props.editable.collection) {\n      let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.props.options.specimenTypeUnits}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    } else {\n    console.log('not sure');\n      let specimenTypeAttributes;\n    console.log('not sure 2');\n      //loops through data object to produce static elements\n      console.log(this.props.data);\n      if (this.props.data.specimen.collection.data) {\n        let collectionData = this.props.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(collectionData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenTypeAttributes[this.props.data.specimen.typeId][key].name}\n              text={collectionData[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.props.data.specimen.collection.quantity+' '+\n              this.props.options.specimenUnits[\n                this.props.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.collection.locationId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.props.editable.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.props.editable.collection ? null : () => {this.props.edit('collection')}}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.props.options.specimenProtocols) {\n      if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n        specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.props.editable.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation Does Exist and the form is not in an edit state\n    if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      if (this.props.data.specimen.preparation.data) {\n        let preparationData = this.props.data.specimen.preparation.data;\n        specimenProtocolAttributes = Object.keys(preparationData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenProtocolAttributes[this.props.data.specimen.preparation.protocolId][key].name}\n              text={preparationData[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      preparationPanel = (\n        <div\n          className='panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('preparation'); this.props.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n      preparationPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.preparation ? null : () => {this.props.edit('preparation')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.props.options.specimenMethods) {\n      if (this.props.options.specimenMethods[id].typeId === this.props.data.specimen.typeId) {\n        specimenMethods[id] = this.props.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.props.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.props.editable.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          files={this.props.files}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          setFiles={this.props.setFiles}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      //TODO: Make the below a separate component\n      if (this.props.data.specimen.analysis.data) {\n      let analysisData = this.props.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.keys(analysisData).map((key) => {\n          if (this.props.options.attributeDatatypes[\n            this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].datatypeId\n          ].datatype === 'file') {\n            return (\n              <LinkElement\n               label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n               text={analysisData[key]}\n               href={loris.BaseURL+'/biobank/ajax/requestData.php?action=downloadFile&file='+analysisData[key]}\n               target={'_blank'}\n               download={analysisData[key]}\n              />\n            );\n          } else {\n            return ( \n              <StaticElement\n                label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n                text={analysisData[key]}\n              />\n            );\n          }\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.analysis.locationId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('analysis'); this.props.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n      analysisPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.analysis ? null : () => {this.props.edit('analysis')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.props.specimen}\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        setSpecimen={this.props.setSpecimen}\n        saveSpecimen={this.props.saveSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.props.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.props.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            specimen={this.props.data.specimen}\n            centers={this.props.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n      </div>\n    ); \n  }\n}\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\nwindow.BiobankSpecimen = BiobankSpecimen;\nwindow.RBiobankSpecimen = RBiobankSpecimen;\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    if (this.props.throwWarning) {                                              \n      swal({                                                                    \n        title: \"Are You Sure?\",                                                 \n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",                                                        \n        showCancelButton: true,                                                 \n        confirmButtonText: 'Proceed',                                           \n        cancelButtonText: 'Cancel',                                             \n      },                                                                        \n      () => {                                                              \n        this.props.closeModal();                                                        \n      });                                                            \n    } else {                                                                    \n      this.props.closeModal();\n    }                                                                           \n  }   \n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 850,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '70px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.closeModal}>\n          <div style={modalStyle} onClick={e => {e.stopPropagation()}}>\n            <div style={titleStyle}>\n              {this.props.title}\n              <span style={glyphStyle} onClick={this.closeModal}>\n                ×\n              </span>\n            </div>\n            <div style={bodyStyle}>\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nModal.defaultProps = {\n  throwWarning: true,\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","import Modal from 'Modal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.editable.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.edit('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                specimen={this.props.specimen}\n                units={units}\n                close={this.props.close}\n                setSpecimen={this.props.setSpecimen}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if ((this.props.data.specimen||{}).fTCycle !== undefined) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.editable.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => {this.props.edit('temperature')}}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              container={this.props.container}                                  \n              close={this.props.close}                     \n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.editable.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              container={this.props.container}                                  \n              stati={stati}\n              close={this.props.close}\n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.editable.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              container={this.props.container}\n              centers={this.props.options.centers}\n              close={this.props.close}                        \n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let barcode = this.props.data.parentSpecimenContainer.barcode;\n      let parentSpecimenFieldValue = (\n        <a style={{cursor: 'pointer'}} onClick={()=>this.props.loadSpecimen(barcode)}>\n          {barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a style={{cursor:'pointer'}} onClick={()=>this.props.loadContainer(barcode)}>\n            {barcode}\n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <span                                                               \n            className='action-button update'                                  \n            onClick={() => {this.props.edit('containerParentForm')}}\n          >                                                                   \n            <span className='glyphicon glyphicon-chevron-right'/>             \n          </span>                                                             \n          <Modal                                                              \n            title='Update Parent Container'                                       \n            closeModal={this.props.close}\n            show={this.props.editable.containerParentForm}\n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainer={this.props.setContainer}                            \n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </Modal>                                                            \n        </div>                                                                \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow: 2}}>\n          <TextboxElement\n            name='quantity'\n            inputClass='col-xs-11'\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.quantity}\n          />\n        </div>\n        <div style={{flexGrow: 2}}>\n          <SelectElement\n            name='unit'\n            inputClass='col-xs-11'\n            options={this.props.units}\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveSpecimen}\n            columnSize= 'col-xs-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <a onClick={this.props.close} style={{cursor: 'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimen: React.PropTypes.func,\n  close: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <TextboxElement\n              name='temperature'\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.temperature}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.statusId}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow:1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='locationId'\n              options={this.props.centers}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.locationId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={this.props.close}\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n\n  render() {\n    let containerDisplay;\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.props.setContainer}\n        required={true}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions = {\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates = {\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes = {this.props.containerTypes}\n            containerStati = {this.props.containerStati} \n            select = {true}\n            selectedCoordinate = {this.props.container.coordinate}\n            setContainer = {this.props.setContainer}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let load = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\n      load(this.props.children[this.props.coordinates[coordinate]].barcode);\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    this.props.saveChildContainer(container);\n  }\n\n  render() {\n  // This is eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  var coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = null;\n\n        if (!this.props.select) {\n          // This double if statement doesn't sound great\n          if (this.props.coordinates) {\n            if (this.props.coordinates[coordinate]) {\n              nodeClass = 'node occupied';\n              dataHtml = 'true';\n              dataToggle = 'tooltip';\n              dataPlacement = 'top';\n              tooltipTitle = \n            '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n              draggable = 'true';\n              onDragStart = this.drag;\n              onDragOver = null;\n              onDrop = null;\n              onClick = this.redirectURL;\n            }\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n\t\t\t  onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            // TODO: --- This is currently not working ---\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div\n          className='row'\n          style={rowStyle} \n        >\n          {column}\n        </div>\n      )\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div className='display'>\n        {display}\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","import CustomFields from './customFields'\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.setCollection = this.setCollection.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollection(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimen('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimen('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollection('data', data);\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = (\n            <CustomFields\n              fields={specimenTypeFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.collection.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollection}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimen: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Custom Attribute Fields\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\nclass CustomFields extends React.Component {\n  render() {\n    let fields = this.props.fields;\n    let attributeFields = Object.keys(fields).map(attribute => {\n\n      let datatype = this.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n      if (datatype === 'text' || datatype === 'number') {\n        if (fields[attribute]['refTableId'] === null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n\n        if (fields[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              options={this.props.attributeOptions[fields[attribute]['refTableId']]}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === 'datetime') {\n        return (\n          <DataElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.object[attribute]}\n          />\n        );\n      }\n\n      // Do not present the possibility of uploading if file is already set\n      // File must instead be deleted or overwritten.\n      if (datatype === 'file' && !(this.props.data||{})[attribute]) {\n        return (\n          <FileElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.files[this.props.object[attribute]]}\n          />\n        );\n      }\n    });\n\n    return (\n      <div>\n        {attributeFields}\n      </div>\n    );\n  }\n}\n\nCustomFields.propTypes = {\n  fields: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  object: React.PropTypes.object.isRequired,\n  setData: React.PropTypes.func.isRequired,\n}\n\nexport default CustomFields;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/customFields.js","import CustomFields from './customFields';\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = (\n            <CustomFields\n              fields={specimenProtocolFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.preparation.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","import CustomFields from './customFields';\n\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    if (value instanceof File) {\n      data[name] = value.name;\n      this.props.setFiles(name, value);\n    } else {\n      data[name] = value;\n      this.setAnalysis('data', data);\n    }\n  }\n\n  render() {\n    let submitButton;\n    if (this.props.data.specimen.analysis) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = (\n            <CustomFields\n              fields={specimenMethodFieldsObject}\n              files={this.props.files}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.analysis.data}\n              data={(((this.props.data||{}).specimen||{}).analysis||{}).data}\n              setData={this.setData}\n            />\n          );  \n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        fileUpload={true}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      formErrors: {},\n      candidateId: null,\n      sessionId: null,\n      centerId: null,\n      barcodeList: {1: {specimen: {collection: {}}, container: {}}},\n      count: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.addBarcode = this.addBarcode.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyBarcode = this.copyBarcode.bind(this);\n    this.removeBarcode = this.removeBarcode.bind(this);\n    this.saveBarcodeList = this.saveBarcodeList.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveBarcodeList() {\n    let barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let barcode in barcodeList) {\n      //set container values\n      let container = barcodeList[barcode].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.locationId = this.state.centerId;\n      container.originId = this.state.centerId;\n\n      //set specimen values\n      let specimen = barcodeList[barcode].specimen;\n      specimen.candidateId = this.state.candidateId;\n      specimen.sessionId = this.state.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.locationId = this.state.centerId;\n      if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n        specimen.fTCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: these will eventually be higher level states.\n      if (this.props.data) {\n        specimen.candidateId = this.props.data.candidate.CandID;\n        specimen.sessionId = this.props.data.session.ID;\n        specimen.parentSpecimenId = this.props.data.specimen.id;\n        specimen.collection.locationId = this.props.data.container.locationId;\n        container.locationId = this.props.data.container.locationId;\n        container.originId = this.props.data.container.locationId;\n      }\n    \n      barcodeList[barcode].container = container;\n      barcodeList[barcode].specimen = specimen;\n    }\n\n    this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(\n      () => {this.props.refreshParent();}\n    );\n  }\n\n  setSpecimen(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let centerId = this.state.centerId;\n    let candidateId = this.state.candidateId;\n    let sessionId = this.state.sessionId;\n    let barcodeList = this.state.barcodeList;\n\n    if (name === 'candidateId') {\n      candidateId = value;\n    } else if (name === 'sessionId') {\n      sessionId = value;\n      centerId = this.props.sessionCenters[sessionId].centerId;\n    } else {\n      //this is eliminate values if specimen type is changed\n      if (name === 'typeId') {\n        barcodeList[key].specimen = {collection:{}};\n      }\n      barcodeList[key].specimen[name] = value;\n    }\n\n    this.setState({barcodeList, centerId, candidateId, sessionId})\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let barcodeList = this.state.barcodeList;\n    barcodeList[key].container[name] = value;\n    this.setState({barcodeList});\n  }\n\n  addBarcode() {\n    let barcodeList = this.state.barcodeList;\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n\n    barcodeList[count+1] = {specimen: {}, container: {collection:{}}}; \n    collapsed[count+1] = true;\n    count = count+1\n\n    this.setState({barcodeList, collapsed, count});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyBarcode(key) {\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n    let nextKey = count+1;\n    let barcodeList = this.state.barcodeList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key])); \n      delete barcodeList[nextKey].container.barcode;\n      collapsed[nextKey] = true;\n      nextKey++;\n    }\n\n    this.setState({\n      barcodeList: barcodeList,\n      count: nextKey,\n      collapsed: collapsed,\n    });\n  }\n\n  removeBarcode(key) {\n    let barcodeList = this.state.barcodeList;\n    delete barcodeList[key];\n    this.setState({barcodeList: barcodeList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          container={this.state.barcodeList[key].container || null}\n          specimen={this.state.barcodeList[key].specimen || null}\n          removeBarcode={barcodeListArray.length !== 1 ?\n            () => this.removeBarcode(key) : null}\n          addBarcode={i == barcodeListArray.length ? this.addBarcode : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyBarcode={i == barcodeListArray.length && this.state.barcodeList[key] ? \n            this.copyBarcode : null}\n          setContainer={this.setContainer}\n          setSpecimen={this.setSpecimen}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimenData}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimenData}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.state.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.candidateId}\n            placeHolder='Search for a PSCID'\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.sessionId}\n            disabled={this.state.candidateId ? false : true}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={() => {\n          this.saveBarcodeList();\n          this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()}}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimen(name, value, this.props.barcodeKey);\n  }\n\n  copy() {\n    this.props.copyBarcode(this.props.copyMultiplier);\n  }\n\n  render() {\n    let addBarcodeButton;\n    let addBarcodeText;\n    let copyBarcodeButton;\n    let copyBarcodeText;\n    if (this.props.addBarcode) {\n      addBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcode}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcode) {\n      copyBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeButton;\n    if (this.props.removeBarcode) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcode}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => this.props.toggleCollapse(this.props.barcodeKey)}\n            />\n            {removeBarcodeButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                setSpecimenData={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainerData={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeButton}\n              {addBarcodeText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeButton}\n              {copyBarcodeText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\n//TODO: revise this component once Shipments are enabled.\nclass LifeCycle extends React.Component {\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n      });\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n    // Create Collection Node\n    let collectionNode;\n    if ((this.props.specimen||{}).collection || this.props.container) {\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    // Create Preparation Node\n    let preparationNode;\n    if ((this.props.specimen||{}).preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    // Create Analysis Node\n    let analysisNode;\n    if ((this.props.specimen||{}).analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'>\n             <div className='letter'>A</div>\n           </div>\n        </div>\n      );\n    }\n\n    // Create Lines\n    let line;\n    let nodes = 0;\n    for (let i in this.props.specimen) {\n      if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n        nodes++;\n      }\n    }\n    let lineWidth = nodes > 1 ? 60/(nodes-1) : 0;\n    let lineStyle = {width: lineWidth+'%'}\n    line = (<div className='lifecycle-line' style={lineStyle}/>);\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode ? line : null}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainer('parentContainerId', null);\n    this.props.setContainer('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankContainer */\n\nimport Loader from 'Loader';\nimport Globals from './globals';\nimport LifeCycle from './lifeCycle.js';\nimport BarcodePath from './barcodePath.js';\nimport ContainerDisplay from './containerDisplay.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Container\n *\n * Fetches data corresponding to a given Container from Loris backend and\n * displays a page allowing viewing of meta information of the container\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.drag = this.drag.bind(this);\n  }\n\n  drag(e) {\n    let container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n    e.dataTransfer.setData(\"text/plain\", container);\n  }\n\n  render() {\n    let globals = ( \n      <Globals\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );  \n\n    let barcodePath = (\n      <BarcodePath\n        container={this.props.data.container}\n        parentContainers={this.props.data.parentContainers}\n        loadContainer={this.props.loadContainer}\n      />\n    );\n\n    let display;\n    if (this.props.data.container.dimensionId) {  \n      display = (\n        <ContainerDisplay \n          children={this.props.data.childContainers}\n          types={this.props.options.containerTypes}\n          dimensions={this.props.options.containerDimensions[this.props.data.container.dimensionId]}\n          coordinates={this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null}\n          containerTypes={this.props.options.containerTypes}\n          containerStati={this.props.options.containerStati}\n          loadSpecimen={this.props.loadSpecimen}\n          loadContainer={this.props.loadContainer}\n          saveChildContainer={this.props.saveChildContainer}\n        />\n      );\n    }\n\n    let listAssigned = [];\n    let listUnassigned = [];\n    if (this.props.data.childContainers) {\n      let children = this.props.data.childContainers;\n      for (let child in children) {\n        let load;\n        if (this.props.options.containerTypes[children[child].typeId].primary) {\n          load = this.props.loadSpecimen;\n          //url = loris.BaseURL+\"/biobank/specimen/?barcode=\"+children[child].barcode;\n        } else {\n          load = this.props.loadContainer;\n          //url = loris.BaseURL+\"/biobank/container/?barcode=\"+children[child].barcode;\n        }\n\n        if (children[child].coordinate) {\n          listAssigned.push(\n            <div>\n              <a onClick={()=>load(children[child].barcode)}>\n                {children[child].barcode}\n              </a>\n              at {children[child].coordinate}\n            </div>\n          );    \n        } else {\n          listUnassigned.push(\n            <a \n              onClick={()=>load(children[child].barcode)}\n              id={children[child].id} \n              draggable={true}\n              onDragStart={this.drag}\n            >\n              {children[child].barcode}\n            </a>\n          );\n        }\n      }     \n    }\n\n    return (\n      <div id='container-page'> \n        <div className=\"container-header\"> \n          <div className='container-title'> \n            <div className='barcode'> \n              Barcode \n              <div className='value'> \n                <strong>{this.props.data.container.barcode}</strong> \n              </div> \n            </div> \n          </div> \n          <ContainerCheckout \n            container={this.props.container}\n            setContainer={this.props.setContainer}\n            saveContainer={this.props.saveContainer}\n          />\n          <LifeCycle\n            container={this.props.data.container}\n            centers={this.props.options.centers}\n          />\n        </div> \n        <div className='summary'> \n          {globals} \n          <div className='display-container'>\n            {display} \n            {barcodePath}\n          </div>\n          <div className='container-list'>\n            <div className='title'>\n              {listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null}\n            </div>\n            <div className='title'>\n              {listAssigned.length !== 0 ? 'Assigned Containers' : null}\n            </div>\n              {listAssigned}\n              {listAssigned.length !==0 ? <br/> : null}\n            <div className='title'>\n              {listUnassigned.length !== 0 ? 'Unassigned Containers' : null}\n            </div>\n            {listUnassigned}\n          </div>\n        </div> \n      </div> \n    ); \n  }\n}\n\nBiobankContainer.propTypes = {\n  containerPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankContainer = React.createFactory(BiobankContainer);\n\nwindow.BiobankContainer = BiobankContainer;\nwindow.RBiobankContainer = RBiobankContainer;\n\nexport default BiobankContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/container.js","/**\n * Container Path\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass BarcodePath extends React.Component {\n\n  render() {\n\n    let path = [];\n    let pathLength = this.props.parentContainers.length - 1;\n    let containerURL = loris.BaseURL+'/biobank/container/?barcode=';\n    for (let i=pathLength; i>=0; i--) {\n      path.push(\n        <span className='barcodePath'> \n          {'/'}\n          <a onClick={()=>this.props.loadContainer(this.props.parentContainers[i].barcode)}>\n            {this.props.parentContainers[i].barcode}\n          </a>\n        </span>\n      );\n    }\n    path.push(\n      <span className='barcodePath'> \n        {'/'}\n        <a onClick={()=>this.props.loadContainer(this.props.container.barcode)}>\n          {this.props.container.barcode}\n        </a>\n      </span>\n    );\n\n    return (\n      <div>\n        {path}\n      </div>\n    );\n  }\n}\n\nBarcodePath.propTypes = {\n}\n\nexport default BarcodePath;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodePath.js"],"sourceRoot":""}