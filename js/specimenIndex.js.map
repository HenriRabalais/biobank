{"version":3,"sources":["webpack:///modules/biobank/js/specimenIndex.js","webpack:///webpack/bootstrap b6b4a650b31a4d88147b?f715*********","webpack:///./modules/biobank/jsx/specimenIndex.js","webpack:///./modules/biobank/jsx/specimenForm.js?35c0","webpack:///./modules/biobank/jsx/barcodeForm.js?02a4","webpack:///./modules/biobank/jsx/collectionForm.js?e0f7","webpack:///./modules/biobank/jsx/containerParentForm.js?0f0c*","webpack:///./modules/biobank/jsx/containerDisplay.js?4e23*","webpack:///./modules/biobank/jsx/preparationForm.js?0045","webpack:///./jsx/FormModal.js?4a02*","webpack:///./jsx/Modal.js?d3d7*","webpack:///./jsx/Loader.js?06c1*","webpack:///./modules/biobank/jsx/globals.js?ec01","webpack:///./modules/biobank/jsx/quantityField.js?752f","webpack:///./modules/biobank/jsx/temperatureField.js?6aab","webpack:///./modules/biobank/jsx/statusField.js?e88e","webpack:///./modules/biobank/jsx/locationField.js?527d","webpack:///./modules/biobank/jsx/lifeCycle.js?5ad9","webpack:///./modules/biobank/jsx/containerCheckout.js?acdc","webpack:///./modules/biobank/jsx/specimen.js","webpack:///./modules/biobank/jsx/analysisForm.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_specimen","_specimen2","args","QueryString","get","document","currentScript","src","$","biobankSpecimen","React","createElement","className","specimenPageDataURL","loris","BaseURL","barcode","optionsURL","saveContainer","saveSpecimen","ReactDOM","render","getElementById","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","_React$Component","this","_this","getPrototypeOf","state","formErrors","errorMessage","candidateId","sessionId","centerId","barcodeList","1","specimen","collection","container","count","collapsed","copyMultiplier","toggleCollapse","bind","setSpecimen","setContainer","addBarcode","setCopyMultiplier","copyBarcode","removeBarcode","saveBarcodeList","save","setState","_this2","JSON","parse","stringify","availableId","keys","containerStati","find","statusId","temperature","locationId","originId","quantity","unitId","specimenTypes","typeId","freezeThaw","fTCycle","data","candidate","CandID","session","ID","parentSpecimenId","console","log","then","refreshParent","onSuccess","url","_this3","Promise","resolve","ajax","type","cache","success","swal","error","err","textStatus","errorThrown","msg","responseJSON","message","name","onChange","Function","sessionCenters","e","nextKey","multiplier","_this4","barcodeListArray","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","push","barcodeKey","mapFormOptions","containerTypesPrimary","containersNonPrimary","specimenTypeAttributes","attributeDatatypes","attributeOptions","capacities","containerDimensions","containerCoordinates","specimenTypeUnits","units","_iterator","Symbol","iterator","next","done","return","globalFields","remainingQuantityFields","StaticElement","label","text","PSCID","Visit_label","TextboxElement","onUserInput","setSpecimenData","required","SelectElement","options","specimenUnits","emptyOption","sessions","candidateSessions","candidates","placeHolder","disabled","FormElement","onSubmit","ref","ButtonElement","columnSize","Component","propTypes","_collectionForm","_collectionForm2","_containerParentForm","_containerParentForm2","SpecimenBarcodeForm","copy","addBarcodeButton","addBarcodeText","copyBarcodeButton","copyBarcodeText","onClick","min","max","style","width","display","removeBarcodeButton","glyphStyle","color","marginLeft","cursor","fontSize","parentTypeId","paddingLeft","marginTop","position","right","data-toggle","data-target","setContainerData","SpecimenCollectionForm","getSpecimenTypeFields","setCollectionData","addData","setData","fieldsObject","specimenTypeFields","map","attribute","datatype","DateElement","updateButton","unit","specimenTypeFieldsObject","specimenFields","minYear","maxYear","date","TimeElement","time","TextareaElement","comments","PropTypes","func","isRequired","object","_containerDisplay","_containerDisplay2","ContainerParentForm","apply","arguments","containerDisplay","containerBarcodesNonPrimary","parentContainerField","parentContainerId","dimensionId","dimensions","coordinatesTotal","dimension","coordinates","containerTypes","select","selectedCoordinate","coordinate","ContainerDisplay","redirectURL","drag","drop","tooltip","types","children","primary","window","location","href","preventDefault","dataTransfer","getData","newCoordinate","parseInt","saveChildContainer","column","row","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","status","coordinateDisplay","data-html","data-placement","data-original-title","rowHeight","rowStyle","height","SpecimenPreparationForm","getSpecimenProtocolFields","setPreparation","preparation","specimenProtocolFields","submitButton","protocolId","specimenProtocolFieldsObject","specimenProtocolAttributes","specimenProtocols","_extends","assign","source","hasOwnProperty","_Modal","_Modal2","FormModal","show","throwWarning","openModal","closeModal","confirmClose","setWarning","Children","child","cloneElement","title","showCancelButton","confirmButtonText","cancelButtonText","renderChildren","string","buttonClass","buttonStyle","buttonContent","defaultProps","Modal","modal","backdropStyle","zIndex","top","bottom","left","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","borderTopRightRadius","bodyStyle","button","stopPropagation","boolean","Loader","_FormModal","_FormModal2","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","Globals","increaseCycle","decreaseCycle","cycle","specimenTypeField","containerTypeField","quantityField","edit","toggle","revertSpecimenData","fTCycleField","temperatureField","revertContainerData","statusField","stati","locationField","centers","originField","parentSpecimenField","dateTimeCreate","specimenURL","parentSpecimenFieldValue","parentSpecimenContainer","parentContainerBarcodeValue","containerURL","candidateSessionField","fieldList","QuantityField","labelClass","inputClass","TemperatureField","StatusField","LocationField","centerIds","LifeCycle","css","border","box-shadow","collectionNode","collectionTooltip","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","analysis","line","ContainerCheckout","checkoutContainer","checkoutButton","_Loader","_Loader2","_globals","_globals2","_preparationForm","_preparationForm2","_analysisForm","_analysisForm2","_specimenForm","_specimenForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","isLoaded","loadedData","fetchSpecimenData","fetchOptions","toggleAll","addPreparation","submit","dataType","errorCode","errorMsg","_error3","stateKey","stateValue","rawObject","targetAttribute","_this5","addAliquotForm","addAliquotButtonContent","collectionPanel","collectionPanelForm","cancelEditCollectionButton","dataObject","preparationPanel","preparationForm","cancelEditPreparationButton","protocol","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","method","analysisData","methodId","addAnalysis","globals","RBiobankSpecimen","createFactory","SpecimenAnalysisForm","getSpecimenMethodFields","setAnalysis","specimenMethodFields","specimenMethodFieldsObject"],"mappings":"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","file":"./modules/biobank/js/specimenIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _specimen = __webpack_require__(27);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar args = QueryString.get(document.currentScript.src); /* global ReactDOM */\n\t\n\t$(function () {\n\t  var biobankSpecimen = React.createElement(\n\t    \"div\",\n\t    { className: \"page-specimen-form\" },\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"row\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"col-md-9 col-lg-12\" },\n\t        React.createElement(_specimen2.default, {\n\t          specimenPageDataURL: loris.BaseURL + \"/biobank/ajax/requestData.php?action=getSpecimenData&barcode=\" + args.barcode,\n\t          optionsURL: loris.BaseURL + \"/biobank/ajax/requestData.php?action=getFormOptions\",\n\t          saveContainer: loris.BaseURL + \"/biobank/ajax/submitData.php?action=saveContainer\",\n\t          saveSpecimen: loris.BaseURL + \"/biobank/ajax/submitData.php?action=saveSpecimen\"\n\t        })\n\t      )\n\t    )\n\t  );\n\t\n\t  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(4);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      errorMessage: null,\n\t      candidateId: null,\n\t      sessionId: null,\n\t      centerId: null,\n\t      barcodeList: { 1: { specimen: { collection: {} }, container: {} } },\n\t      count: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.addBarcode = _this.addBarcode.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyBarcode = _this.copyBarcode.bind(_this);\n\t    _this.removeBarcode = _this.removeBarcode.bind(_this);\n\t    _this.saveBarcodeList = _this.saveBarcodeList.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveBarcodeList',\n\t    value: function saveBarcodeList() {\n\t      var _this2 = this;\n\t\n\t      var barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var barcode in barcodeList) {\n\t        //set container values\n\t        var container = barcodeList[barcode].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.locationId = this.state.centerId;\n\t        container.originId = this.state.centerId;\n\t\n\t        //set specimen values\n\t        var specimen = barcodeList[barcode].specimen;\n\t        specimen.candidateId = this.state.candidateId;\n\t        specimen.sessionId = this.state.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.locationId = this.state.centerId;\n\t        if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n\t          specimen.fTCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: these will eventually be higher level states.\n\t        if (this.props.data) {\n\t          specimen.candidateId = this.props.data.candidate.CandID;\n\t          specimen.sessionId = this.props.data.session.ID;\n\t          specimen.parentSpecimenId = this.props.data.specimen.id;\n\t          specimen.collection.locationId = this.props.data.container.locationId;\n\t          container.locationId = this.props.data.container.locationId;\n\t          container.originId = this.props.data.container.locationId;\n\t        }\n\t\n\t        barcodeList[barcode].container = container;\n\t        barcodeList[barcode].specimen = specimen;\n\t      }\n\t      console.log(barcodeList);\n\t\n\t      this.save(barcodeList, this.props.saveBarcodeList).then(function () {\n\t        _this2.props.refreshParent();_this2.props.onSuccess();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(data, url) {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: { data: JSON.stringify(data) },\n\t          cache: false,\n\t          success: function success() {\n\t            resolve();\n\t            swal(\"Save Successful!\", \"\", \"success\");\n\t          },\n\t          error: function error(err, textStatus, errorThrown) {\n\t            var msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\t            _this3.setState({\n\t              errorMessage: msg\n\t            });\n\t            swal(msg, \"\", \"error\");\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var centerId = this.state.centerId;\n\t      var candidateId = this.state.candidateId;\n\t      var sessionId = this.state.sessionId;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      if (name === 'candidateId') {\n\t        candidateId = value;\n\t      } else if (name === 'sessionId') {\n\t        sessionId = value;\n\t        centerId = this.props.sessionCenters[sessionId].centerId;\n\t      } else {\n\t        //this is eliminate values if specimen type is changed\n\t        if (name === 'typeId') {\n\t          barcodeList[key].specimen = { collection: {} };\n\t        }\n\t        barcodeList[key].specimen[name] = value;\n\t      }\n\t\n\t      this.setState({ barcodeList: barcodeList, centerId: centerId, candidateId: candidateId, sessionId: sessionId });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var barcodeList = this.state.barcodeList;\n\t      barcodeList[key].container[name] = value;\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'addBarcode',\n\t    value: function addBarcode() {\n\t      var barcodeList = this.state.barcodeList;\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t\n\t      barcodeList[count + 1] = { specimen: {}, container: { collection: {} } };\n\t      collapsed[count + 1] = true;\n\t      count = count + 1;\n\t\n\t      this.setState({ barcodeList: barcodeList, collapsed: collapsed, count: count });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyBarcode',\n\t    value: function copyBarcode(key) {\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t      var nextKey = count + 1;\n\t      var barcodeList = this.state.barcodeList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key]));\n\t        delete barcodeList[nextKey].container.barcode;\n\t        collapsed[nextKey] = true;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList,\n\t        count: nextKey,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeBarcode',\n\t    value: function removeBarcode(key) {\n\t      var barcodeList = this.state.barcodeList;\n\t      delete barcodeList[key];\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(_barcodeForm2.default, {\n\t            data: _this4.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this4.state.collapsed[key],\n\t            toggleCollapse: _this4.toggleCollapse,\n\t            mapFormOptions: _this4.props.mapFormOptions,\n\t            container: _this4.state.barcodeList[key].container || null,\n\t            specimen: _this4.state.barcodeList[key].specimen || null,\n\t            removeBarcode: barcodeListArray.length !== 1 ? function () {\n\t              return _this4.removeBarcode(key);\n\t            } : null,\n\t            addBarcode: i == barcodeListArray.length ? _this4.addBarcode : null,\n\t            setCopyMultiplier: _this4.setCopyMultiplier,\n\t            copyMultiplier: _this4.state.copyMultiplier,\n\t            copyBarcode: i == barcodeListArray.length && _this4.state.barcodeList[key] ? _this4.copyBarcode : null,\n\t            setContainer: _this4.setContainer,\n\t            setSpecimen: _this4.setSpecimen,\n\t            onChange: _this4.props.onChange,\n\t            specimenTypes: _this4.props.specimenTypes,\n\t            containerTypesPrimary: _this4.props.containerTypesPrimary,\n\t            containersNonPrimary: _this4.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this4.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this4.props.attributeDatatypes,\n\t            attributeOptions: _this4.props.attributeOptions,\n\t            capacities: _this4.props.capacities,\n\t            containerDimensions: _this4.props.containerDimensions,\n\t            containerCoordinates: _this4.props.containerCoordinates,\n\t            specimenTypeUnits: _this4.props.specimenTypeUnits,\n\t            units: _this4.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimenData,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.state.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.candidateId,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.sessionId,\n\t            disabled: this.state.candidateId ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: function onSubmit() {\n\t            _this4.saveBarcodeList();\n\t            _this4.props.saveSpecimen instanceof Function && _this4.props.saveSpecimen();\n\t          },\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(5);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(6);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimen(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyBarcode(this.props.copyMultiplier);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var addBarcodeButton = void 0;\n\t      var addBarcodeText = void 0;\n\t      var copyBarcodeButton = void 0;\n\t      var copyBarcodeText = void 0;\n\t      if (this.props.addBarcode) {\n\t        addBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcode\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcode) {\n\t        copyBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeButton = void 0;\n\t      if (this.props.removeBarcode) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcode,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeBarcodeButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                setSpecimenData: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainerData: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeButton,\n\t              addBarcodeText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeButton,\n\t              copyBarcodeText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.getSpecimenTypeFields = _this.getSpecimenTypeFields.bind(_this);\n\t    _this.setCollectionData = _this.setCollectionData.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollectionData',\n\t    value: function setCollectionData(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimenData('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimenData('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollectionData('data', data);\n\t    }\n\t\n\t    // This generates all the form fields for a given specimen type\n\t\n\t  }, {\n\t    key: 'getSpecimenTypeFields',\n\t    value: function getSpecimenTypeFields(fieldsObject) {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this2.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.collection.data[attribute]\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.collection.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this2.setData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this2.props.specimen.collection.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {\n\t          // There is currently no CheckboxElement or RadioElement in loris/jsx/Form.js and therefore\n\t          // this is not possible.     \n\t        }\n\t      });\n\t\n\t      return specimenTypeFields;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = this.getSpecimenTypeFields(specimenTypeFieldsObject);\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollectionData,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimenData: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(7);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    return _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.props.setContainerData,\n\t        required: true,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainerData: this.props.setContainerData\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var type = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary ? 'specimen' : 'container';\n\t        var url = loris.BaseURL + '/biobank/' + type + '/?barcode=' + this.props.children[this.props.coordinates[coordinate]].barcode;\n\t\n\t        window.location.href = url;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      this.props.saveChildContainer(container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // This is eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = null;\n\t\n\t            if (!this.props.select) {\n\t              // This double if statement doesn't sound great\n\t              if (this.props.coordinates) {\n\t                if (this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node occupied';\n\t                  dataHtml = 'true';\n\t                  dataToggle = 'tooltip';\n\t                  dataPlacement = 'top';\n\t                  tooltipTitle = '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                  draggable = 'true';\n\t                  onDragStart = this.drag;\n\t                  onDragOver = null;\n\t                  onDrop = null;\n\t                  onClick = this.redirectURL;\n\t                }\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this2.props.setContainerData('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this2.props.setContainerData('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  // TODO: --- This is currently not working ---\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            {\n\t              className: 'row',\n\t              style: rowStyle\n\t            },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'display' },\n\t        display\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 8 */,\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.getSpecimenProtocolFields = _this.getSpecimenProtocolFields.bind(_this);\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimenData('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimenData('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t\n\t    // TODO: decouple this code from the collectionForm by make it a React Component\n\t    // This generates all the form fields for a given specimen protocol\n\t\n\t  }, {\n\t    key: 'getSpecimenProtocolFields',\n\t    value: function getSpecimenProtocolFields(fieldsObject) {\n\t      var _this2 = this;\n\t\n\t      var specimenProtocolFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this2.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.preparation.data[attribute]\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.preparation.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this2.setData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this2.props.specimen.preparation.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {}\n\t      });\n\t\n\t      return specimenProtocolFields;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = this.getSpecimenProtocolFields(specimenProtocolFieldsObject);\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(14);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React components for Modal component.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\t\n\tvar FormModal = function (_React$Component) {\n\t  _inherits(FormModal, _React$Component);\n\t\n\t  function FormModal(props) {\n\t    _classCallCheck(this, FormModal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (FormModal.__proto__ || Object.getPrototypeOf(FormModal)).call(this, props));\n\t\n\t    _this.state = { show: false, throwWarning: false };\n\t\n\t    _this.openModal = _this.openModal.bind(_this);\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    _this.confirmClose = _this.confirmClose.bind(_this);\n\t    _this.setWarning = _this.setWarning.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FormModal, [{\n\t    key: \"renderChildren\",\n\t    value: function renderChildren() {\n\t      var _this2 = this;\n\t\n\t      return React.Children.map(this.props.children, function (child) {\n\t        return React.cloneElement(child, { onSuccess: _this2.closeModal, onChange: _this2.setWarning });\n\t      });\n\t    }\n\t  }, {\n\t    key: \"openModal\",\n\t    value: function openModal() {\n\t      this.setState({\n\t        show: true\n\t      });\n\t    }\n\t  }, {\n\t    key: \"setWarning\",\n\t    value: function setWarning() {\n\t      this.setState({\n\t        throwWarning: true\n\t      });\n\t    }\n\t  }, {\n\t    key: \"confirmClose\",\n\t    value: function confirmClose() {\n\t      if (this.state.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          this.closeModal();\n\t        }.bind(this));\n\t      } else {\n\t        this.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      this.setState({\n\t        show: false,\n\t        throwWarning: false\n\t      });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        _Modal2.default,\n\t        _extends({\n\t          closeModal: this.confirmClose,\n\t          openModal: this.openModal,\n\t          show: this.state.show\n\t        }, this.props),\n\t        this.renderChildren()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FormModal;\n\t}(React.Component);\n\t\n\tFormModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  buttonClass: React.PropTypes.string,\n\t  buttonStyle: React.PropTypes.object,\n\t  buttonContent: React.PropTypes.object\n\t};\n\tFormModal.defaultProps = {\n\t  buttonClass: 'btn btn-primary'\n\t};\n\t\n\texports.default = FormModal;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal(props) {\n\t    _classCallCheck(this, Modal);\n\t\n\t    return _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 1000,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '70px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var button = React.createElement(\n\t        'div',\n\t        {\n\t          className: this.props.buttonClass,\n\t          onClick: this.props.openModal\n\t        },\n\t        this.props.buttonContent\n\t      );\n\t\n\t      var modal;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          'div',\n\t          { style: backdropStyle, onClick: this.props.closeModal },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              style: modalStyle,\n\t              onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              }\n\t            },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                style: titleStyle\n\t              },\n\t              this.props.title,\n\t              React.createElement(\n\t                'span',\n\t                {\n\t                  style: glyphStyle,\n\t                  onClick: this.props.closeModal\n\t                },\n\t                '\\xD7'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                style: bodyStyle\n\t              },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { style: this.props.style },\n\t        button,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  buttonClass: React.PropTypes.string,\n\t  buttonStyle: React.PropTypes.object,\n\t  buttonContent: React.PropTypes.object,\n\t  show: React.PropTypes.boolean,\n\t  closeModal: React.PropTypes.func,\n\t  openModal: React.PropTypes.func\n\t};\n\tModal.defaultProps = {\n\t  buttonClass: 'btn btn-primary'\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader(props) {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).call(this, props));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"loader-container\" },\n\t        React.createElement(\"div\", { className: \"loader\" })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FormModal = __webpack_require__(13);\n\t\n\tvar _FormModal2 = _interopRequireDefault(_FormModal);\n\t\n\tvar _quantityField = __webpack_require__(20);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(21);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(22);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(23);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(6);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimenData('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimenData('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.edit.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.toggle('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                className: 'centered-horizontal',\n\t                specimen: this.props.specimen,\n\t                units: units,\n\t                toggle: function toggle() {\n\t                  return _this2.props.toggle('quantity');\n\t                },\n\t                setSpecimenData: this.props.setSpecimenData,\n\t                revertSpecimenData: this.props.revertSpecimenData,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if ((this.props.data.specimen || {}).fTCycle !== undefined) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.edit.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('temperature');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.edit.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              stati: stati,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('status');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.edit.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              centers: this.props.options.centers,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('location');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var specimenURL = loris.BaseURL = '/biobank/specimen/?barcode=';\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { href: specimenURL + this.props.data.parentSpecimenContainer.barcode },\n\t          this.props.data.parentSpecimenContainer.barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var containerURL = loris.BaseURL + \"/biobank/container/?barcode=\";\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              href: containerURL + this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode },\n\t            this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            _FormModal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              buttonClass: 'action-button update',\n\t              buttonContent: React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(TextboxElement, {\n\t          name: 'quantity',\n\t          labelClass: 'col-xl-0',\n\t          inputClass: 'col-lg-12',\n\t          onUserInput: this.props.setSpecimenData,\n\t          value: this.props.specimen.quantity\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          name: 'unit',\n\t          labelClass: 'col-xl-0',\n\t          inputClass: 'col-lg-12',\n\t          options: this.props.units,\n\t          onUserInput: this.props.setSpecimenData,\n\t          value: this.props.specimen.unitId\n\t        }),\n\t        React.createElement(ButtonElement, {\n\t          label: 'Update',\n\t          onUserInput: this.props.saveSpecimen,\n\t          columnSize: 'col-lg-12'\n\t        }),\n\t        React.createElement(\n\t          'a',\n\t          {\n\t            onClick: function onClick() {\n\t              _this2.props.toggle();_this2.props.revertSpecimenData();\n\t            }\n\t          },\n\t          'Cancel'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimenData: React.PropTypes.func,\n\t  revertSpecimenData: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                _this2.props.toggle();_this2.props.revertContainerData();\n\t              } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                _this2.props.revertContainerData();_this2.props.toggle();\n\t              }\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.centerIds,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                _this2.props.revertContainerData();_this2.props.toggle();\n\t              }\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle(props) {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    var _this = _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).call(this, props));\n\t\n\t    _this.state = {};\n\t\n\t    return _this;\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {}\n\t  }, {\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({ 'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #093782', 'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var collectionNode = void 0;\n\t      var collectionTooltip = void 0;\n\t      if (this.props.collection || this.props.container) {\n\t        collectionTooltip = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'h',\n\t            null,\n\t            'Collection'\n\t          ),\n\t          React.createElement(\n\t            'p',\n\t            null,\n\t            'Date:'\n\t          )\n\t        );\n\t\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      var preparationNode = void 0;\n\t      if (this.props.preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      var analysisNode = void 0;\n\t      if (this.props.analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement('div', { className: 'lifecycle-node' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-text' },\n\t            'Analysis'\n\t          )\n\t        );\n\t      }\n\t\n\t      var line = void 0;\n\t      line = React.createElement('div', { className: 'lifecycle-line' });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 25 */,\n/* 26 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainerData('parentContainerId', null);\n\t      this.props.setContainerData('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FormModal = __webpack_require__(13);\n\t\n\tvar _FormModal2 = _interopRequireDefault(_FormModal);\n\t\n\tvar _Loader = __webpack_require__(15);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(19);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(5);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(9);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(28);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(3);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(24);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(26);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).call(this));\n\t\n\t    _this.state = {\n\t      data: {},\n\t      isLoaded: false,\n\t      loadedData: 0,\n\t      edit: {\n\t        temperature: false,\n\t        quantity: false,\n\t        collection: false,\n\t        preparation: false,\n\t        analysis: false\n\t      }\n\t    };\n\t\n\t    _this.fetchSpecimenData = _this.fetchSpecimenData.bind(_this);\n\t    _this.fetchOptions = _this.fetchOptions.bind(_this);\n\t    _this.toggle = _this.toggle.bind(_this);\n\t    _this.toggleAll = _this.toggleAll.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.setContainerData = _this.setContainerData.bind(_this);\n\t    _this.revertContainerData = _this.revertContainerData.bind(_this);\n\t    _this.setSpecimenData = _this.setSpecimenData.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.revertSpecimenData = _this.revertSpecimenData.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.submit = _this.submit.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.fetchSpecimenData();\n\t      this.fetchOptions();\n\t    }\n\t  }, {\n\t    key: 'fetchSpecimenData',\n\t    value: function fetchSpecimenData() {\n\t      var self = this;\n\t      $.ajax(this.props.specimenPageDataURL, {\n\t        dataType: 'json',\n\t        success: function success(data) {\n\t          var specimen = JSON.parse(JSON.stringify(data.specimen));\n\t          var container = JSON.parse(JSON.stringify(data.container));\n\t          self.setState({\n\t            data: data,\n\t            container: container,\n\t            specimen: specimen,\n\t            isLoaded: true\n\t          });\n\t        },\n\t        error: function error(_error, errorCode, errorMsg) {\n\t          console.error(_error, errorCode, errorMsg);\n\t          self.setState({\n\t            error: 'An error occurred when loading the form!'\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetchOptions',\n\t    value: function fetchOptions() {\n\t      var self = this;\n\t      $.ajax(this.props.optionsURL, {\n\t        dataType: 'json',\n\t        success: function success(data) {\n\t          self.setState({\n\t            options: data\n\t          });\n\t        },\n\t        error: function error(_error2, errorCode, errorMsg) {\n\t          console.error(_error2, errorCode, errorMsg);\n\t          self.setState({\n\t            error: 'An error occurred when loading the form!'\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this2 = this;\n\t\n\t      var container = JSON.parse(JSON.stringify(this.state.container));\n\t      this.submit(container, this.props.saveContainer, 'Container Save Successful!').then(function () {\n\t        var data = _this2.state.data;\n\t        data.container = JSON.parse(JSON.stringify(_this2.state.container));\n\t        _this2.setState({ data: data });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this3 = this;\n\t\n\t      var specimen = JSON.parse(JSON.stringify(this.state.specimen));;\n\t      this.submit(specimen, this.props.saveSpecimen, 'Specimen Save Successful!').then(function () {\n\t        var data = _this3.state.data;\n\t        data.specimen = JSON.parse(JSON.stringify(_this3.state.specimen));\n\t        _this3.setState({ data: data });\n\t      });\n\t    }\n\t\n\t    //TODO: this should likely be placed in its own component.\n\t    //TODO: should the success messages be coming from the back end?\n\t\n\t  }, {\n\t    key: 'submit',\n\t    value: function submit(data, url, message) {\n\t      var _this4 = this;\n\t\n\t      console.log(data);\n\t      return new Promise(function (resolve) {\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: { data: JSON.stringify(data) },\n\t          cache: false,\n\t          success: function success() {\n\t            resolve();\n\t            _this4.toggleAll();\n\t            _this4.props.onSuccess instanceof Function && _this4.props.onSuccess();\n\t            swal(message, '', 'success');\n\t          },\n\t          error: function error(_error3) {\n\t            var message = _error3.responseJSON ? _error3.responseJSON.message : \"Submission error!\";\n\t            _this4.setState({\n\t              errorMessage: message\n\t            });\n\t            swal(message, '', 'error');\n\t            console.error(_error3);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle(stateKey) {\n\t      var edit = this.state.edit;\n\t      var stateValue = edit[stateKey];\n\t      edit[stateKey] = !stateValue;\n\t      this.setState({ edit: edit });\n\t    }\n\t  }, {\n\t    key: 'toggleAll',\n\t    value: function toggleAll() {\n\t      var edit = this.state.edit;\n\t      for (var key in edit) {\n\t        edit[key] = false;\n\t      }\n\t      this.setState({ edit: edit });\n\t    }\n\t\n\t    // TODO: map options for forms - this is used frequently and may need\n\t    // to be moved to a more global place\n\t\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(rawObject, targetAttribute) {\n\t      var data = {};\n\t      for (var id in rawObject) {\n\t        data[id] = rawObject[id][targetAttribute];\n\t      }\n\t\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'setContainerData',\n\t    value: function setContainerData(name, value) {\n\t      var container = this.state.container;\n\t\n\t      if (value !== null) {\n\t        container[name] = value;\n\t      } else {\n\t        delete container[name];\n\t      }\n\t\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainerData',\n\t    value: function revertContainerData() {\n\t      var container = this.state.container;\n\t      container = JSON.parse(JSON.stringify(this.state.data.container));\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenData',\n\t    value: function setSpecimenData(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addAnalysis',\n\t    value: function addAnalysis() {\n\t      var specimen = this.state.specimen;\n\t      specimen.analysis = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimenData',\n\t    value: function revertSpecimenData() {\n\t      var specimen = this.state.specimen;\n\t      specimen = JSON.parse(JSON.stringify(this.state.data.specimen));\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this5 = this;\n\t\n\t      // Data loading error\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      // Waiting for data to load\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(_Loader2.default, null);\n\t      }\n\t\n\t      /**\n\t       * Specimen Form\n\t       */\n\t      var addAliquotForm = void 0;\n\t\n\t      /**\n\t       * Map Options for Form Select Elements\n\t       */\n\t      var addAliquotButtonContent = React.createElement(\n\t        'span',\n\t        null,\n\t        '+'\n\t      );\n\t\n\t      var specimenUnits = this.mapFormOptions(this.state.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.mapFormOptions(this.state.options.containerStati, 'status');\n\t      var candidates = this.mapFormOptions(this.state.options.candidates, 'pscid');\n\t      var sessions = this.mapFormOptions(this.state.options.sessions, 'label');\n\t\n\t      addAliquotForm = React.createElement(\n\t        'div',\n\t        { title: 'Make Aliquots' },\n\t        React.createElement(\n\t          _FormModal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            buttonClass: 'action-button add',\n\t            buttonContent: addAliquotButtonContent\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.state.data,\n\t            specimen: this.state.specimen,\n\t            setSpecimenData: this.setSpecimenData,\n\t            saveSpecimen: this.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.state.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.state.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.state.options.specimenTypeAttributes,\n\t            attributeOptions: this.state.options.attributeOptions,\n\t            attributeDatatypes: this.state.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.state.options.containersNonPrimary,\n\t            containerDimensions: this.state.options.containerDimensions,\n\t            containerCoordinates: this.state.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            refreshParent: this.fetchSpecimenData,\n\t            mapFormOptions: this.mapFormOptions,\n\t            saveBarcodeList: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveBarcodeList'\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.state.edit.collection) {\n\t        var _containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.state.specimen,\n\t          data: this.state.data,\n\t          specimenTypeAttributes: this.state.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.state.options.specimenTypeUnits,\n\t          toggle: function toggle() {\n\t            return _this5.toggle('collection');\n\t          },\n\t          setSpecimenData: this.setSpecimenData,\n\t          revertSpecimenData: this.revertSpecimenData,\n\t          saveSpecimen: this.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: function onClick() {\n\t              return _this5.toggle('collection');\n\t            }\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t\n\t        var dataObject = void 0;\n\t        var specimenTypeAttributes = void 0;\n\t        //loops through data object to produce static elements\n\t        if (this.state.data.specimen.collection.data) {\n\t          dataObject = this.state.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(dataObject).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this5.state.options.specimenTypeAttributes[_this5.state.data.specimen.typeId][key].name,\n\t              text: dataObject[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.state.data.specimen.collection.quantity + ' ' + this.state.options.specimenUnits[this.state.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.centers[this.state.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.state.edit.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.state.edit.collection ? null : function () {\n\t              return _this5.toggle('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.state.options.specimenProtocols) {\n\t        if (this.state.options.specimenProtocols[id].typeId === this.state.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.state.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.state.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.state.edit.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.state.specimen,\n\t          data: this.state.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          setSpecimenData: this.setSpecimenData,\n\t          revertSpecimenData: this.revertSpecimenData,\n\t          saveSpecimen: this.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: function onClick() {\n\t              _this5.toggle('preparation');_this5.revertSpecimenData();\n\t            }\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation Does Exist and the form is not in an edit state\n\t      if (this.state.data.specimen.preparation && !this.state.edit.preparation) {\n\t        var _dataObject = this.state.data.specimen.preparation.data;\n\t\n\t        if (_dataObject) {\n\t          specimenProtocolAttributes = Object.keys(_dataObject).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this5.state.options.specimenProtocolAttributes[_this5.state.data.specimen.preparation.protocolId][key].name,\n\t              text: _dataObject[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.state.options.specimenProtocols[this.state.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.centers[this.state.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.state.data.specimen.preparation && !this.state.edit.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this5.toggle('preparation');_this5.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.state.data.specimen.preparation || this.state.edit.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.state.edit.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.state.edit.preparation ? null : function () {\n\t                return _this5.toggle('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.state.options.specimenMethods) {\n\t        if (this.state.options.specimenMethods[_id].typeId === this.state.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.state.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.state.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.state.edit.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.state.specimen,\n\t          data: this.state.data,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          setSpecimenData: this.setSpecimenData,\n\t          revertSpecimenData: this.revertSpecimenData,\n\t          saveSpecimen: this.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: function onClick() {\n\t              _this5.toggle('analysis');_this5.revertSpecimenData();\n\t            }\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.state.data.specimen.analysis && !this.state.edit.analysis) {\n\t        //TODO: This can likely go into a function since it is used elsewhere\n\t        if (this.state.data.specimen.analysis.data) {\n\t          var analysisData = this.state.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.key(analysisData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this5.state.options.specimenMethodAttributes[_this5.state.data.specimen.analysis.methodId][key].name,\n\t              text: analysisData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.state.options.specimenMethods[this.state.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.centers[this.state.data.specimen.analysis.locationId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.state.data.specimen.analysis && !this.state.edit.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this5.toggle('analysis');_this5.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.state.data.specimen.analysis || this.state.edit.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.state.edit.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.state.edit.analysis ? null : function () {\n\t                return _this5.toggle('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.state.specimen,\n\t        container: this.state.container,\n\t        data: this.state.data,\n\t        options: this.state.options,\n\t        edit: this.state.edit,\n\t        toggle: this.toggle,\n\t        mapFormOptions: this.mapFormOptions,\n\t        setSpecimenData: this.setSpecimenData,\n\t        revertSpecimenData: this.revertSpecimenData,\n\t        saveSpecimen: this.saveSpecimen,\n\t        setContainerData: this.setContainerData,\n\t        revertContainerData: this.revertContainerData,\n\t        saveContainer: this.saveContainer\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.state.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.state.container,\n\t              setContainerData: this.setContainerData,\n\t              saveContainer: this.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            collection: this.state.data.specimen.collection,\n\t            preparation: this.state.data.specimen.preparation,\n\t            analysis: this.state.data.specimen.analysis,\n\t            centers: this.state.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\t\n\twindow.BiobankSpecimen = BiobankSpecimen;\n\twindow.RBiobankSpecimen = RBiobankSpecimen;\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.getSpecimenMethodFields = _this.getSpecimenMethodFields.bind(_this);\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimenData('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimenData('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      data[name] = value;\n\t      this.setAnalysis('data', data);\n\t    }\n\t\n\t    // TODO: decouple this code from the collectionForm by make it a React Component\n\t    // This generates all the form fields for a given specimen method\n\t\n\t  }, {\n\t    key: 'getSpecimenMethodFields',\n\t    value: function getSpecimenMethodFields(fieldsObject) {\n\t      var _this2 = this;\n\t\n\t      var specimenMethodFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this2.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.analysis.data[attribute]\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.analysis.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this2.setData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this2.props.specimen.analysis.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {}\n\t      });\n\t\n\t      return specimenMethodFields;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.analysis) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = this.getSpecimenMethodFields(specimenMethodFieldsObject);\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/specimenIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b6b4a650b31a4d88147b","/* global ReactDOM */\n\nimport BiobankSpecimen from './specimen';\nconst args = QueryString.get(document.currentScript.src);\n\n$(function() {\n  const biobankSpecimen = (\n    <div className=\"page-specimen-form\">\n      <div className=\"row\">\n        <div className=\"col-md-9 col-lg-12\">\n          <BiobankSpecimen\n            specimenPageDataURL={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getSpecimenData&barcode=${args.barcode}`}\n            optionsURL={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getFormOptions`}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n            saveSpecimen={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveSpecimen`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenIndex.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      formErrors: {},\n      errorMessage: null,\n      candidateId: null,\n      sessionId: null,\n      centerId: null,\n      barcodeList: {1: {specimen: {collection: {}}, container: {}}},\n      count: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.addBarcode = this.addBarcode.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyBarcode = this.copyBarcode.bind(this);\n    this.removeBarcode = this.removeBarcode.bind(this);\n    this.saveBarcodeList = this.saveBarcodeList.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveBarcodeList() {\n    let barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let barcode in barcodeList) {\n      //set container values\n      let container = barcodeList[barcode].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.locationId = this.state.centerId;\n      container.originId = this.state.centerId;\n\n      //set specimen values\n      let specimen = barcodeList[barcode].specimen;\n      specimen.candidateId = this.state.candidateId;\n      specimen.sessionId = this.state.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.locationId = this.state.centerId;\n      if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n        specimen.fTCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: these will eventually be higher level states.\n      if (this.props.data) {\n        specimen.candidateId = this.props.data.candidate.CandID;\n        specimen.sessionId = this.props.data.session.ID;\n        specimen.parentSpecimenId = this.props.data.specimen.id;\n        specimen.collection.locationId = this.props.data.container.locationId;\n        container.locationId = this.props.data.container.locationId;\n        container.originId = this.props.data.container.locationId;\n      }\n    \n      barcodeList[barcode].container = container;\n      barcodeList[barcode].specimen = specimen;\n    }\n    console.log(barcodeList);\n\n    this.save(barcodeList, this.props.saveBarcodeList).then(\n      () => {this.props.refreshParent(); this.props.onSuccess();}\n    );\n  }\n\n  save(data, url) {\n    return new Promise(resolve => {\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: {data: JSON.stringify(data)},\n        cache: false,\n        success: () => {\n          resolve();\n          swal(\"Save Successful!\", \"\", \"success\");\n        },\n        error: (err, textStatus, errorThrown) => {\n          let msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n          this.setState({\n            errorMessage: msg,\n          });\n          swal(msg, \"\", \"error\");\n        }\n      });\n    });\n  }\n\n  setSpecimen(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let centerId = this.state.centerId;\n    let candidateId = this.state.candidateId;\n    let sessionId = this.state.sessionId;\n    let barcodeList = this.state.barcodeList;\n\n    if (name === 'candidateId') {\n      candidateId = value;\n    } else if (name === 'sessionId') {\n      sessionId = value;\n      centerId = this.props.sessionCenters[sessionId].centerId;\n    } else {\n      //this is eliminate values if specimen type is changed\n      if (name === 'typeId') {\n        barcodeList[key].specimen = {collection:{}};\n      }\n      barcodeList[key].specimen[name] = value;\n    }\n\n    this.setState({barcodeList, centerId, candidateId, sessionId})\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let barcodeList = this.state.barcodeList;\n    barcodeList[key].container[name] = value;\n    this.setState({barcodeList});\n  }\n\n  addBarcode() {\n    let barcodeList = this.state.barcodeList;\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n\n    barcodeList[count+1] = {specimen: {}, container: {collection:{}}}; \n    collapsed[count+1] = true;\n    count = count+1\n\n    this.setState({barcodeList, collapsed, count});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyBarcode(key) {\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n    let nextKey = count+1;\n    let barcodeList = this.state.barcodeList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key])); \n      delete barcodeList[nextKey].container.barcode;\n      collapsed[nextKey] = true;\n      nextKey++;\n    }\n\n    this.setState({\n      barcodeList: barcodeList,\n      count: nextKey,\n      collapsed: collapsed,\n    });\n  }\n\n  removeBarcode(key) {\n    let barcodeList = this.state.barcodeList;\n    delete barcodeList[key];\n    this.setState({barcodeList: barcodeList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          container={this.state.barcodeList[key].container || null}\n          specimen={this.state.barcodeList[key].specimen || null}\n          removeBarcode={barcodeListArray.length !== 1 ?\n            () => this.removeBarcode(key) : null}\n          addBarcode={i == barcodeListArray.length ? this.addBarcode : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyBarcode={i == barcodeListArray.length && this.state.barcodeList[key] ? \n            this.copyBarcode : null}\n          setContainer={this.setContainer}\n          setSpecimen={this.setSpecimen}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimenData}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimenData}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.state.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.candidateId}\n            placeHolder='Search for a PSCID'\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.sessionId}\n            disabled={this.state.candidateId ? false : true}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={() => {\n          this.saveBarcodeList();\n          this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()}}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimen(name, value, this.props.barcodeKey);\n  }\n\n  copy() {\n    this.props.copyBarcode(this.props.copyMultiplier);\n  }\n\n  render() {\n    let addBarcodeButton;\n    let addBarcodeText;\n    let copyBarcodeButton;\n    let copyBarcodeText;\n    if (this.props.addBarcode) {\n      addBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcode}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcode) {\n      copyBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeButton;\n    if (this.props.removeBarcode) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcode}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => this.props.toggleCollapse(this.props.barcodeKey)}\n            />\n            {removeBarcodeButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                setSpecimenData={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainerData={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeButton}\n              {addBarcodeText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeButton}\n              {copyBarcodeText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.getSpecimenTypeFields = this.getSpecimenTypeFields.bind(this);\n    this.setCollectionData = this.setCollectionData.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollectionData(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimenData('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimenData('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollectionData('data', data);\n  }\n\n  // This generates all the form fields for a given specimen type\n  getSpecimenTypeFields(fieldsObject) {\n    let specimenTypeFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"text\" || datatype === \"number\") {\n\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.collection.data[attribute]}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.collection.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.props.specimen.collection.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n        // There is currently no CheckboxElement or RadioElement in loris/jsx/Form.js and therefore\n        // this is not possible.     \n      }\n    })\n\n    return specimenTypeFields;\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = this.getSpecimenTypeFields(specimenTypeFieldsObject);\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollectionData}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimenData: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n\n  render() {\n    let containerDisplay;\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.props.setContainerData}\n        required={true}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions = {\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates = {\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes = {this.props.containerTypes}\n            containerStati = {this.props.containerStati} \n            select = {true}\n            selectedCoordinate = {this.props.container.coordinate}\n            setContainerData = {this.props.setContainerData}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainerData: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let type = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary ? 'specimen' : 'container';\n      let url = loris.BaseURL+'/biobank/'+type+'/?barcode='+\n        this.props.children[this.props.coordinates[coordinate]].barcode;\n\n      window.location.href = url;\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    this.props.saveChildContainer(container);\n  }\n\n  render() {\n  // This is eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  var coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = null;\n\n        if (!this.props.select) {\n          // This double if statement doesn't sound great\n          if (this.props.coordinates) {\n            if (this.props.coordinates[coordinate]) {\n              nodeClass = 'node occupied';\n              dataHtml = 'true';\n              dataToggle = 'tooltip';\n              dataPlacement = 'top';\n              tooltipTitle = \n            '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n              draggable = 'true';\n              onDragStart = this.drag;\n              onDragOver = null;\n              onDrop = null;\n              onClick = this.redirectURL;\n            }\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainerData('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n\t\t\t  onClick = (e) => this.props.setContainerData('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            // TODO: --- This is currently not working ---\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div\n          className='row'\n          style={rowStyle} \n        >\n          {column}\n        </div>\n      )\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div className='display'>\n        {display}\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.getSpecimenProtocolFields = this.getSpecimenProtocolFields.bind(this);\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimenData('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimenData('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  // TODO: decouple this code from the collectionForm by make it a React Component\n  // This generates all the form fields for a given specimen protocol\n  getSpecimenProtocolFields(fieldsObject) {\n    let specimenProtocolFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\n      if (datatype === \"text\" || datatype === \"number\") {\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.preparation.data[attribute]}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.preparation.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.props.specimen.preparation.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n      }\n    });\n\n    return specimenProtocolFields;\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = this.getSpecimenProtocolFields(specimenProtocolFieldsObject);\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\nimport Modal from './Modal';\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\n\nclass FormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { show: false, throwWarning: false }\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.confirmClose = this.confirmClose.bind(this);\n    this.setWarning = this.setWarning.bind(this);\n  }\n\n  renderChildren() {\n    return React.Children.map(this.props.children, child => {\n      return React.cloneElement(child, { onSuccess: this.closeModal, onChange: this.setWarning });\n    });\n  }\n\n  openModal() {\n    this.setState({\n      show: true\n    });\n  } \n\n  setWarning() {\n    this.setState({\n      throwWarning: true\n    });\n  }\n\n  confirmClose() {\n    if (this.state.throwWarning) {\n      swal({\n        title: \"Are You Sure?\",\n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Proceed',\n        cancelButtonText: 'Cancel',\n      },\n      function() {\n        this.closeModal();\n      }.bind(this));\n    } else {\n      this.closeModal();\n    }\n  }\n\n  closeModal() {\n    this.setState({\n      show: false,\n      throwWarning: false\n    });\n  }\n\n  render() {\n    return (\n      <Modal \n        closeModal={this.confirmClose} \n        openModal={this.openModal} \n        show={this.state.show}\n        {...this.props} \n      >\n        {this.renderChildren()}\n      </Modal>\n    );\n  }\n}\n\nFormModal.propTypes = {\n  title: React.PropTypes.string,\n  buttonClass: React.PropTypes.string,\n  buttonStyle: React.PropTypes.object,\n  buttonContent: React.PropTypes.object,\n};\nFormModal.defaultProps = {\n  buttonClass: 'btn btn-primary'\n};\n\nexport default FormModal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FormModal.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 1000,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '70px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    var button = (\n      <div\n        className={this.props.buttonClass}\n        onClick={this.props.openModal}\n      >\n        {this.props.buttonContent}\n      </div>\n    );\n\n    var modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.props.closeModal}>\n          <div\n            style={modalStyle}\n            onClick={e => {\n              e.stopPropagation();\n            }}\n          >\n            <div\n              style={titleStyle}\n            >\n              {this.props.title}\n              <span \n                style={glyphStyle}\n                onClick={this.props.closeModal}\n              >\n                ×\n              </span>\n            </div>\n            <div\n              style={bodyStyle}\n            >\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div style={this.props.style}>\n        {button}\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  buttonClass: React.PropTypes.string,\n  buttonStyle: React.PropTypes.object,\n  buttonContent: React.PropTypes.object,\n  show: React.PropTypes.boolean,\n  closeModal: React.PropTypes.func,\n  openModal: React.PropTypes.func\n};\nModal.defaultProps = {\n  buttonClass: 'btn btn-primary'\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","/**\n * This file contains React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n      <div className='loader-container'>\n        <div className=\"loader\"/>\n      </div>\n\n\n    );\n  }\n}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","import FormModal from 'FormModal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimenData('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimenData('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.edit.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.toggle('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                className='centered-horizontal'\n                specimen={this.props.specimen}\n                units={units}\n                toggle={() => this.props.toggle('quantity')}\n                setSpecimenData={this.props.setSpecimenData}\n                revertSpecimenData={this.props.revertSpecimenData}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if ((this.props.data.specimen||{}).fTCycle !== undefined) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.edit.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('temperature')}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              className='centered-horizontal'                                   \n              container={this.props.container}                                  \n              toggle={() => this.props.toggle('temperature')}                     \n              setContainerData={this.props.setContainerData}\n              revertContainerData={this.props.revertContainerData}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.edit.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              className='centered-horizontal'                                   \n              container={this.props.container}                                  \n              stati={stati}\n              toggle={() => this.props.toggle('status')}                          \n              setContainerData={this.props.setContainerData}                          \n              revertContainerData={this.props.revertContainerData}                    \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.edit.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              className='centered-horizontal'                                   \n              container={this.props.container}\n              centers={this.props.options.centers}\n              toggle={() => this.props.toggle('location')}                        \n              setContainerData={this.props.setContainerData}                          \n              revertContainerData={this.props.revertContainerData}                    \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let specimenURL = loris.BaseURL='/biobank/specimen/?barcode=';\n      let parentSpecimenFieldValue = (\n        <a href={specimenURL+this.props.data.parentSpecimenContainer.barcode}>\n          {this.props.data.parentSpecimenContainer.barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let containerURL = loris.BaseURL+\"/biobank/container/?barcode=\";            \n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a                                                                      \n          href={containerURL+this.props.options.containersNonPrimary[             \n            this.props.data.container.parentContainerId                           \n          ].barcode}>                                                             \n            {this.props.options.containersNonPrimary[                             \n              this.props.data.container.parentContainerId                         \n            ].barcode}                                                            \n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <FormModal                                                              \n            title='Update Parent Container'                                       \n            buttonClass='action-button update'                                    \n            buttonContent={<span className='glyphicon glyphicon-chevron-right'/>} \n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainerData={this.props.setContainerData}                            \n              revertContainerData={this.props.revertContainerData}\n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </FormModal>                                                            \n        </div>                                                                    \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <TextboxElement\n          name='quantity'\n          labelClass='col-xl-0'\n          inputClass='col-lg-12'\n          onUserInput={this.props.setSpecimenData}\n          value={this.props.specimen.quantity}\n        />\n        <SelectElement\n          name='unit'\n          labelClass='col-xl-0'\n          inputClass='col-lg-12'\n          options={this.props.units}\n          onUserInput={this.props.setSpecimenData}\n          value={this.props.specimen.unitId}\n        />\n        <ButtonElement\n          label=\"Update\"\n          onUserInput={this.props.saveSpecimen}\n          columnSize= 'col-lg-12'\n        />\n        <a\n          onClick={()=>{this.props.toggle(); this.props.revertSpecimenData()}}\n        >\n          Cancel\n        </a>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimenData: React.PropTypes.func,\n  revertSpecimenData: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <TextboxElement\n              name='temperature'\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.temperature}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a onClick={()=>{this.props.toggle(); this.props.revertContainerData()}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.statusId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={() => \n              {this.props.revertContainerData(); this.props.toggle();}\n            }\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='locationId'\n              options={this.props.centerIds}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.locationId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={() => \n              {this.props.revertContainerData(); this.props.toggle();}\n            }\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass LifeCycle extends React.Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n    \n    };\n   \n  }\n\n  componentDidMount() {\n  }\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css(\n        {'border': '2px solid #093782',\n         'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'});\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #093782', 'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'});\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n\n    let collectionNode;\n    let collectionTooltip;\n    if (this.props.collection || this.props.container) {\n      collectionTooltip = (\n        <div>\n          <h>Collection</h>\n          <p>Date:</p> \n        </div>\n      );\n\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    let preparationNode;\n    if (this.props.preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    let analysisNode;\n    if (this.props.analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'/>\n           <div className='lifecycle-text'>Analysis</div>\n        </div>\n      );\n    }\n\n    let line;\n    line = (\n        <div className='lifecycle-line'/>\n    );\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainerData('parentContainerId', null);\n    this.props.setContainerData('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainerData: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankSpecimen */\n\nimport FormModal from 'FormModal';\nimport Loader from 'Loader';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: {},\n      isLoaded: false,\n      loadedData: 0,\n      edit: {\n        temperature: false,\n        quantity: false,\n        collection: false,\n        preparation: false,\n        analysis: false,\n      }\n    };\n\n    this.fetchSpecimenData = this.fetchSpecimenData.bind(this);\n    this.fetchOptions = this.fetchOptions.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleAll = this.toggleAll.bind(this);\n    this.mapFormOptions = this.mapFormOptions.bind(this);\n    this.setContainerData = this.setContainerData.bind(this);\n    this.revertContainerData = this.revertContainerData.bind(this);\n    this.setSpecimenData = this.setSpecimenData.bind(this);\n    this.addPreparation = this.addPreparation.bind(this);\n    this.revertSpecimenData = this.revertSpecimenData.bind(this);\n    this.saveContainer = this.saveContainer.bind(this);\n    this.saveSpecimen = this.saveSpecimen.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchSpecimenData();\n    this.fetchOptions();\n  }\n\n  fetchSpecimenData() {\n    let self = this;\n    $.ajax(this.props.specimenPageDataURL, {\n      dataType: 'json',\n      success: function(data) {\n        let specimen = JSON.parse(JSON.stringify(data.specimen));\n        let container = JSON.parse(JSON.stringify(data.container));\n        self.setState({\n          data: data,\n          container: container,\n          specimen: specimen,\n          isLoaded: true,\n        });\n      },\n      error: function(error, errorCode, errorMsg) {\n        console.error(error, errorCode, errorMsg);\n        self.setState({\n          error: 'An error occurred when loading the form!'\n        });\n      }\n    });\n  }\n\n  fetchOptions() {\n    let self = this;\n    $.ajax(this.props.optionsURL, {\n      dataType: 'json',\n      success: function(data) {\n        self.setState({\n          options: data,\n        });\n      },\n      error: function(error, errorCode, errorMsg) {\n        console.error(error, errorCode, errorMsg);\n        self.setState({\n          error: 'An error occurred when loading the form!'\n        });\n      }\n    });\n  }\n\n  saveContainer() {\n    let container = JSON.parse(JSON.stringify(this.state.container));\n    this.submit(container, this.props.saveContainer, 'Container Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.container = JSON.parse(JSON.stringify(this.state.container));\n        this.setState({data});\n      }\n    );\n  }\n\n  saveSpecimen() {\n    let specimen = JSON.parse(JSON.stringify(this.state.specimen));;\n    this.submit(specimen, this.props.saveSpecimen, 'Specimen Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.specimen = JSON.parse(JSON.stringify(this.state.specimen));\n        this.setState({data});\n      }\n    );\n  }\n\n  //TODO: this should likely be placed in its own component.\n  //TODO: should the success messages be coming from the back end?\n  submit(data, url, message) {\n    console.log(data);\n    return new Promise(resolve => {\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: {data: JSON.stringify(data)},\n        cache: false,\n        success: () => {\n          resolve();\n          this.toggleAll();\n          this.props.onSuccess instanceof Function && this.props.onSuccess();\n          swal(message, '', 'success');\n        },\n        error: error => {\n          let message = error.responseJSON ? error.responseJSON.message : \"Submission error!\";\n          this.setState({\n            errorMessage: message\n          });\n          swal(message, '', 'error');\n          console.error(error);\n        }\n      });\n    })\n  }\n\n  toggle(stateKey) {\n    let edit = this.state.edit;\n    let stateValue = edit[stateKey];\n    edit[stateKey] = !stateValue;\n    this.setState({edit});\n  }\n\n  toggleAll() {\n    let edit = this.state.edit;\n    for (let key in edit) {\n      edit[key] = false;\n    }\n    this.setState({edit});\n  }\n\n  // TODO: map options for forms - this is used frequently and may need\n  // to be moved to a more global place\n  mapFormOptions(rawObject, targetAttribute) {\n    let data = {};\n    for (let id in rawObject) {\n      data[id] = rawObject[id][targetAttribute];\n    }\n\n    return data;\n  }\n\n  setContainerData(name, value) {\n    let container = this.state.container;\n\n    if (value !== null) {\n      container[name] = value;\n    } else {\n      delete container[name];\n    }\n\n    this.setState({container});\n  }\n\n  revertContainerData() {\n    let container = this.state.container;\n    container = JSON.parse(JSON.stringify(this.state.data.container));\n    this.setState({container});\n  }\n\n  setSpecimenData(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  addAnalysis() {\n    let specimen = this.state.specimen;\n    specimen.analysis = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  revertSpecimenData() {\n    let specimen = this.state.specimen;\n    specimen = JSON.parse(JSON.stringify(this.state.data.specimen));\n    this.setState({specimen});\n  }\n\n  render() {\n    // Data loading error\n    if (this.state.error !== undefined) {\n      return (\n        <div className=\"alert alert-danger text-center\">\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    // Waiting for data to load\n    if (!this.state.isLoaded) {\n      return (\n        <Loader/>\n      );\n    }\n\n    /**\n     * Specimen Form\n     */\n    let addAliquotForm;\n\n    /**\n     * Map Options for Form Select Elements\n     */      \n    let addAliquotButtonContent = (\n      <span>+</span>  \n    );\n\n    let specimenUnits = this.mapFormOptions(this.state.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n    let containerStati = this.mapFormOptions(this.state.options.containerStati, 'status');\n    let candidates = this.mapFormOptions(this.state.options.candidates, 'pscid');\n    let sessions = this.mapFormOptions(this.state.options.sessions, 'label');\n\n    addAliquotForm = (\n      <div title='Make Aliquots'>\n        <FormModal\n          title=\"Add Aliquots\"\n          buttonClass='action-button add'\n          buttonContent={addAliquotButtonContent}\n        >\n          <BiobankSpecimenForm\n            data={this.state.data}\n            specimen={this.state.specimen}\n            setSpecimenData={this.setSpecimenData}\n            saveSpecimen={this.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.state.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.state.options.specimenTypeUnits}\n            specimenTypeAttributes={this.state.options.specimenTypeAttributes}\n            attributeOptions={this.state.options.attributeOptions}\n            attributeDatatypes={this.state.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.state.options.containersNonPrimary}\n            containerDimensions={this.state.options.containerDimensions}\n            containerCoordinates={this.state.options.containerCoordinates}\n            containerStati={containerStati}\n            refreshParent={this.fetchSpecimenData}\n            mapFormOptions={this.mapFormOptions}\n            saveBarcodeList={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveBarcodeList`}\n          />\n        </FormModal>\n      </div>\n    );\n    \n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.state.edit.collection) {\n      let containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.state.specimen}\n          data={this.state.data}\n          specimenTypeAttributes={this.state.options.specimenTypeAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.state.options.specimenTypeUnits}\n          toggle={() => this.toggle('collection')}\n          setSpecimenData={this.setSpecimenData}\n          revertSpecimenData={this.revertSpecimenData}\n          saveSpecimen={this.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={() => this.toggle('collection')}\n        >\n          Cancel\n        </a>\n      );\n\n    } else {\n\n      let dataObject;\n      let specimenTypeAttributes;\n      //loops through data object to produce static elements\n      if (this.state.data.specimen.collection.data) {\n        dataObject = this.state.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(dataObject).map((key) => {\n          return (\n            <StaticElement\n              label={this.state.options.specimenTypeAttributes[this.state.data.specimen.typeId][key].name}\n              text={dataObject[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.state.data.specimen.collection.quantity+' '+\n              this.state.options.specimenUnits[\n                this.state.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.centers[this.state.data.specimen.collection.locationId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.state.edit.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.state.edit.collection ? null : () => this.toggle('collection')}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.state.options.specimenProtocols) {\n      if (this.state.options.specimenProtocols[id].typeId === this.state.data.specimen.typeId) {\n        specimenProtocols[id] = this.state.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.state.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.state.edit.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.state.specimen}\n          data={this.state.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          setSpecimenData={this.setSpecimenData}\n          revertSpecimenData={this.revertSpecimenData}\n          saveSpecimen={this.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={() => {this.toggle('preparation'); this.revertSpecimenData()}}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation Does Exist and the form is not in an edit state\n    if (this.state.data.specimen.preparation && !this.state.edit.preparation) {\n      let dataObject = this.state.data.specimen.preparation.data;\n      \n      if (dataObject) {\n        specimenProtocolAttributes = Object.keys(dataObject).map((key) => {\n          return (\n            <StaticElement\n              label={this.state.options.specimenProtocolAttributes[this.state.data.specimen.preparation.protocolId][key].name}\n              text={dataObject[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.state.options.specimenProtocols[this.state.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.centers[this.state.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.state.data.specimen.preparation && !this.state.edit.preparation) {\n      preparationPanel = (\n        <div\n          className='panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.toggle('preparation'); this.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.state.data.specimen.preparation || this.state.edit.preparation) {\n      preparationPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.state.edit.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.state.edit.preparation ? null : () => this.toggle('preparation')}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.state.options.specimenMethods) {\n      if (this.state.options.specimenMethods[id].typeId === this.state.data.specimen.typeId) {\n        specimenMethods[id] = this.state.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.state.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.state.edit.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.state.specimen}\n          data={this.state.data}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          setSpecimenData={this.setSpecimenData}\n          revertSpecimenData={this.revertSpecimenData}\n          saveSpecimen={this.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={()=>{this.toggle('analysis'); this.revertSpecimenData()}}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.state.data.specimen.analysis && !this.state.edit.analysis) {\n      //TODO: This can likely go into a function since it is used elsewhere\n      if (this.state.data.specimen.analysis.data) {\n      let analysisData = this.state.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.key(analysisData).map((key) => {\n          return ( \n            <StaticElement\n              label={this.state.options.specimenMethodAttributes[this.state.data.specimen.analysis.methodId][key].name}\n              text={analysisData[key]}\n            />\n          );\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.state.options.specimenMethods[this.state.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.centers[this.state.data.specimen.analysis.locationId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.state.data.specimen.analysis && !this.state.edit.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.toggle('analysis'); this.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.state.data.specimen.analysis || this.state.edit.analysis) {\n      analysisPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.state.edit.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.state.edit.analysis ? null : () => this.toggle('analysis')}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.state.specimen}\n        container={this.state.container}\n        data={this.state.data}\n        options={this.state.options}\n        edit={this.state.edit}\n        toggle={this.toggle}\n        mapFormOptions={this.mapFormOptions}\n        setSpecimenData={this.setSpecimenData}\n        revertSpecimenData={this.revertSpecimenData}\n        saveSpecimen={this.saveSpecimen}\n        setContainerData={this.setContainerData}\n        revertContainerData={this.revertContainerData}\n        saveContainer={this.saveContainer}\n      />\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.state.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.state.container}\n              setContainerData={this.setContainerData}\n              saveContainer={this.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            collection={this.state.data.specimen.collection}\n            preparation={this.state.data.specimen.preparation}\n            analysis={this.state.data.specimen.analysis}\n            centers={this.state.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n      </div>\n    ); \n  }\n\n}\n\n  \n\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\nwindow.BiobankSpecimen = BiobankSpecimen;\nwindow.RBiobankSpecimen = RBiobankSpecimen;\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.getSpecimenMethodFields = this.getSpecimenMethodFields.bind(this);\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimenData('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimenData('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    data[name] = value;\n    this.setAnalysis('data', data);\n  }\n\n  // TODO: decouple this code from the collectionForm by make it a React Component\n  // This generates all the form fields for a given specimen method\n  getSpecimenMethodFields(fieldsObject) {\n    let specimenMethodFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\n      if (datatype === \"text\" || datatype === \"number\") {\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.analysis.data[attribute]}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.analysis.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.props.specimen.analysis.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n      }\n    });\n\n    return specimenMethodFields;\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.analysis) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = this.getSpecimenMethodFields(specimenMethodFieldsObject);\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js"],"sourceRoot":""}