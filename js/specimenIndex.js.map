{"version":3,"sources":["webpack:///modules/biobank/js/specimenIndex.js","webpack:///webpack/bootstrap b0b68922fb406dfde504?3b7e*********","webpack:///./modules/biobank/jsx/specimenIndex.js","webpack:///./modules/biobank/jsx/specimenForm.js?35c0","webpack:///./modules/biobank/jsx/barcodeForm.js?02a4","webpack:///./modules/biobank/jsx/collectionForm.js?e0f7","webpack:///./modules/biobank/jsx/preparationForm.js?0045","webpack:///./jsx/FormModal.js?4a02*","webpack:///./jsx/Modal.js?d3d7*","webpack:///./jsx/Loader.js?06c1*","webpack:///./modules/biobank/jsx/globals.js?ec01","webpack:///./modules/biobank/jsx/quantityField.js?752f","webpack:///./modules/biobank/jsx/temperatureField.js?6aab","webpack:///./modules/biobank/jsx/statusField.js?e88e","webpack:///./modules/biobank/jsx/locationField.js?527d","webpack:///./modules/biobank/jsx/containerParentForm.js?0f0c","webpack:///./modules/biobank/jsx/containerDisplay.js?4e23","webpack:///./modules/biobank/jsx/lifeCycle.js?5ad9","webpack:///./modules/biobank/jsx/containerCheckout.js?acdc","webpack:///./modules/biobank/jsx/specimen.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_specimen","_specimen2","args","QueryString","get","document","currentScript","src","$","biobankSpecimen","React","createElement","className","specimenPageDataURL","loris","BaseURL","barcode","optionsURL","saveContainer","saveSpecimen","ReactDOM","render","getElementById","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","_React$Component","this","_this","getPrototypeOf","state","formData","errorMessage","formErrors","barcodeFormList","1","specimen","container","countBarcodeForms","handleSubmit","bind","validateForm","setFormData","setParentFormData","specimenSubmit","addBarcodeForm","setBarcodeFormData","parentSpecimenIds","candidateId","sessionId","unitId","setState","_this2","barcodeListArray","keys","barcodeForms","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","push","barcodeKey","removeBarcodeForm","copyBarcodeForm","onChange","specimenTypes","containerTypesPrimary","containersNonPrimary","specimenTypeAttributes","attributeDatatypes","attributeOptions","capacities","containerDimensions","containerCoordinates","specimenTypeUnits","units","_iterator","Symbol","iterator","next","done","err","return","globalFields","remainingQuantityFields","StaticElement","label","text","parentSpecimenBarcodes","pscid","visit","TextboxElement","name","onUserInput","required","quantity","SelectElement","options","specimenUnits","emptyOption","SearchableDropdown","pSCIDs","ref","placeHolder","visits","visitLabel","disabled","FormElement","onSubmit","ButtonElement","columnSize","formElement","_this3","test","isNaN","currentContainerType","specimenTypeFieldsObject","currentSpecimenType","map","attribute","datatype","e","preventDefault","formRefs","refs","isValidForm","JSON","stringify","formObj","FormData","append","ajax","type","url","action","data","cache","contentType","processData","xhr","window","XMLHttpRequest","success","refreshParent","swal","onSuccess","error","console","msg","responseJSON","message","requiredFields","field","hasError","forceUpdate","Function","sessionData","barcodeFormData","count","multiplier","nextKey","parse","Component","propTypes","DataURL","PropTypes","string","isRequired","refreshTable","func","_collectionForm","_collectionForm2","SpecimenBarcodeForm","collapsed","copyMultiplier","setChildFormData","toggleCollapse","setCopyMultiplier","copy","addBarcodeFormButton","addBarcodeFormText","copyBarcodeFormButton","copyBarcodeFormText","onClick","min","max","style","width","display","removeBarcodeFormButton","glyphStyle","color","marginLeft","cursor","fontSize","paddingLeft","marginTop","position","right","data-toggle","data-target","specimenType","containerType","stati","ContainerParentForm","setContainerParentFormData","collectionFormData","object","SpecimenCollectionForm","getSpecimenTypeFields","updateButton","specimenTypeFields","typeId","unit","specimenFields","setSpecimenData","collection","DateElement","minYear","maxYear","date","TimeElement","time","TextareaElement","comments","fieldsObject","SpecimenPreparationForm","currentProtocol","preparation","protocolId","setSpecimenProtocolFieldFormData","getSpecimenProtocolFields","handleSave","savePreparation","specimenId","locationId","specimenProtocolFieldsObject","specimenProtocolAttributes","submitButton","locationField","sites","specimenProtocolFields","currentSpecimenProtocol","preparationFields","specimenProtocols","insertAction","updateAction","log","_extends","assign","arguments","source","hasOwnProperty","_Modal","_Modal2","FormModal","show","throwWarning","openModal","closeModal","confirmClose","setWarning","Children","children","child","cloneElement","title","showCancelButton","confirmButtonText","cancelButtonText","renderChildren","buttonClass","buttonStyle","buttonContent","defaultProps","Modal","modal","backdropStyle","zIndex","top","bottom","left","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","height","borderTopRightRadius","bodyStyle","button","stopPropagation","boolean","Loader","_FormModal","_FormModal2","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","_containerParentForm","_containerParentForm2","Globals","apply","specimenTypeField","containerTypeField","containerTypes","quantityField","edit","mapFormOptions","toggle","revertSpecimenData","temperatureField","temperature","setContainerData","revertContainerData","statusField","status","containerStati","statusId","location","originField","originId","parentSpecimenField","dateTimeCreate","parentSpecimenId","specimenURL","parentSpecimenFieldValue","href","parentSpecimen","parentContainerBarcodeValue","parentContainerId","containerURL","parentContainerField","coordinate","candidateSessionField","candidate","PSCID","session","Visit_label","fieldList","QuantityField","labelClass","inputClass","TemperatureField","StatusField","LocationField","_containerDisplay","_containerDisplay2","rawObject","targetAttribute","containerDisplay","containerBarcodesNonPrimary","dimensionId","dimensions","coordinatesTotal","dimension","coordinates","select","selectedCoordinate","ContainerDisplay","redirectURL","drag","drop","tooltip","types","primary","dataTransfer","setData","getData","newCoordinate","parseInt","saveChildContainer","column","row","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","data-html","data-placement","data-original-title","rowHeight","rowStyle","LifeCycle","css","border","box-shadow","collectionNode","collectionTooltip","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","analysis","line","ContainerCheckout","checkoutContainer","checkoutButton","_Loader","_Loader2","_globals","_globals2","_preparationForm","_preparationForm2","_specimenForm","_specimenForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","isLoaded","loadedData","fetchSpecimenData","fetchOptions","toggleAll","submit","dataType","errorCode","errorMsg","containerObj","then","specimenObj","_this4","Promise","resolve","_error3","stateKey","stateValue","_this5","addAliquotForm","userHasPermission","parentTypeId","addAliquotButtonContent","collectionPanel","collectionPanelForm","cancelEditCollectionButton","dataObject","preparationPanel","preparationForm","cancelEditPreparationButton","protocol","analysisPanel","globals","RBiobankSpecimen","createFactory"],"mappings":"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","file":"./modules/biobank/js/specimenIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _specimen = __webpack_require__(27);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar args = QueryString.get(document.currentScript.src); /* global ReactDOM */\n\t\n\t$(function () {\n\t  var biobankSpecimen = React.createElement(\n\t    \"div\",\n\t    { className: \"page-specimen-form\" },\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"row\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"col-md-9 col-lg-12\" },\n\t        React.createElement(_specimen2.default, {\n\t          specimenPageDataURL: loris.BaseURL + \"/biobank/ajax/requestData.php?action=getSpecimenData&barcode=\" + args.barcode,\n\t          optionsURL: loris.BaseURL + \"/biobank/ajax/requestData.php?action=getFormOptions\",\n\t          saveContainer: loris.BaseURL + \"/biobank/ajax/submitData.php?action=saveContainer\",\n\t          saveSpecimen: loris.BaseURL + \"/biobank/ajax/submitData.php?action=saveSpecimen\"\n\t        })\n\t      )\n\t    )\n\t  );\n\t\n\t  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(4);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm(props) {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      errorMessage: null,\n\t      formErrors: {},\n\t      barcodeFormList: { 1: { specimen: {}, container: {} } },\n\t      countBarcodeForms: 1\n\t    };\n\t\n\t    _this.handleSubmit = _this.handleSubmit.bind(_this);\n\t    _this.validateForm = _this.validateForm.bind(_this);\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.setParentFormData = _this.setParentFormData.bind(_this);\n\t    _this.specimenSubmit = _this.specimenSubmit.bind(_this);\n\t    _this.addBarcodeForm = _this.addBarcodeForm.bind(_this);\n\t    _this.setBarcodeFormData = _this.setBarcodeFormData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t\n\t      // Sets formData to formData passed from parent component\n\t      // or else it is set to an empty object\n\t      // TODO: this should be moved to the constructor.\n\t      var formData = this.props.formData || this.state.formData;\n\t\n\t      //if this is a child specimen form then certain formData is set when component mount\n\t      //TODO: there is a better way of doing this.\n\t      //This solution assumes too much about the props being passed\n\t      if (this.props.parentSpecimenIds) {\n\t        formData['parentSpecimenIds'] = this.props.parentSpecimenIds;\n\t        formData['pscid'] = this.props.candidateId;\n\t        formData['visitLabel'] = this.props.sessionId;\n\t        formData['unitId'] = this.props.unitId;\n\t      }\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeFormList);\n\t      var barcodeForms = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodeForms.push(React.createElement(_barcodeForm2.default, {\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            formData: _this2.state.barcodeFormList[key] ? _this2.state.barcodeFormList[key] : null,\n\t            removeBarcodeForm: barcodeListArray.length !== 1 ? function () {\n\t              return _this2.removeBarcodeForm(key);\n\t            } : null,\n\t            addBarcodeForm: i == barcodeListArray.length ? _this2.addBarcodeForm : null,\n\t            copyBarcodeForm: i == barcodeListArray.length && _this2.state.barcodeFormList[key] ? _this2.copyBarcodeForm.bind(_this2, key) : null,\n\t            setParentFormData: _this2.setBarcodeFormData,\n\t            onChange: _this2.props.onChange,\n\t            specimenTypes: _this2.props.specimenTypes,\n\t            containerTypesPrimary: _this2.props.containerTypesPrimary,\n\t            containersNonPrimary: _this2.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this2.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this2.props.attributeDatatypes,\n\t            attributeOptions: _this2.props.attributeOptions,\n\t            capacities: _this2.props.capacities,\n\t            containerDimensions: _this2.props.containerDimensions,\n\t            containerCoordinates: _this2.props.containerCoordinates,\n\t            specimenTypeUnits: _this2.props.specimenTypeUnits,\n\t            units: _this2.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.parentSpecimenIds) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.parentSpecimenBarcodes\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.pscid\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.visit\n\t          })\n\t        );\n\t\n\t        //TODO: It may be wise to make unit static and forced, or atleast prepopulated --\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.setFormData,\n\t            required: true,\n\t            value: this.state.formData.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.setFormData,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.state.formData.unitId\n\t          })\n\t        );\n\t      } else {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'pscid',\n\t            label: 'PSCID',\n\t            options: this.props.pSCIDs,\n\t            onUserInput: this.setFormData,\n\t            ref: 'pscid',\n\t            required: true,\n\t            value: this.state.formData.pscid,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'visitLabel',\n\t            label: 'Visit Label',\n\t            options: this.state.visits,\n\t            onUserInput: this.setFormData,\n\t            ref: 'visitLabel',\n\t            required: true,\n\t            value: this.state.formData.visitLabel,\n\t            disabled: this.state.formData.pscid ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      //TODO: {barcodeForms} should eventually be moved to be after {remainingQuantityFields}\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: this.handleSubmit,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodeForms,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t\n\t    /** *******************************************************************************\n\t     *                      ******     Helper methods     *******\n\t     *********************************************************************************/\n\t\n\t    /**\n\t     * Returns a valid name for the file to be specimened\n\t     *\n\t     * @param {string} pscid - PSCID selected from the dropdown\n\t     * @param {string} visitLabel - Visit label selected from the dropdown\n\t     * @param {string} instrument - Instrument selected from the dropdown\n\t     * @return {string} - Generated valid filename for the current selection\n\t     */\n\t    //  getValidFileName(pscid, visitLabel, instrument) {\n\t    //    var fileName = pscid + \"_\" + visitLabel;\n\t    //    if (instrument) fileName += \"_\" + instrument;\n\t    //\n\t    //    return fileName;\n\t    //  }\n\t\n\t\n\t  }, {\n\t    key: 'validateForm',\n\t    value: function validateForm(formElement, value) {\n\t      var _this3 = this;\n\t\n\t      var formErrors = this.state.formErrors;\n\t\n\t      //validate barcode regex\n\t      if (formElement === \"barcode\" && value !== \"\") {\n\t        if (!/^hello/.test(this.state.formData.barcode)) {\n\t          formErrors.barcode = true;\n\t        } else {\n\t          formErrors.barcode = false;\n\t        }\n\t      }\n\t\n\t      //validate that quantity is a number and less than capacity\n\t      if (formElement === \"quantity\" && value !== \"\") {\n\t        if (isNaN(value) || value > this.props.capacities[this.state.currentContainerType]) {\n\t          formErrors.quantity = true;\n\t        } else {\n\t          formErrors.quantity = false;\n\t        }\n\t      }\n\t\n\t      //validate datatypes and regex of generated type attributes\n\t      var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n\t      var specimenTypeFields = Object.keys(specimenTypeFieldsObject).map(function (attribute) {\n\t\n\t        var datatype = _this3.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"number\") {\n\t          if (formElement === attribute) {\n\t            if (isNaN(value) && value !== \"\") {\n\t              formErrors[attribute] = true;\n\t            } else {\n\t              formErrors[attribute] = false;\n\t            }\n\t          }\n\t        }\n\t      });\n\t\n\t      this.setState({\n\t        formErrors: formErrors\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Handle form submission\n\t     * @param {object} e - Form submission event\n\t     */\n\t\n\t  }, {\n\t    key: 'handleSubmit',\n\t    value: function handleSubmit(e) {\n\t      e.preventDefault();\n\t\n\t      var formData = this.state.formData;\n\t      var barcodeFormList = this.state.barcodeFormList;\n\t      var formRefs = this.refs;\n\t      //let biobankFiles = this.state.Data.biobankFiles ? this.state.Data.biobankFiles : [];\n\t\n\t      // Validate the form\n\t      if (!this.isValidForm(formRefs, formData)) {\n\t        return;\n\t      }\n\t\n\t      this.specimenSubmit();\n\t    }\n\t\n\t    /*\n\t     * Uploads the file to the server\n\t     */\n\t\n\t  }, {\n\t    key: 'specimenSubmit',\n\t    value: function specimenSubmit() {\n\t      // Set form data and specimen the biobank file\n\t      var formData = this.state.formData;\n\t      var barcodeFormList = this.state.barcodeFormList;\n\t      formData['barcodeFormList'] = JSON.stringify(barcodeFormList);\n\t      var formObj = new FormData();\n\t      for (var _key in formData) {\n\t        if (formData[_key] !== \"\") {\n\t          formObj.append(_key, formData[_key]);\n\t        }\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: this.props.action,\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function () {\n\t\n\t          this.props.refreshParent();\n\t          swal(\"Specimen Submission Successful!\", \"\", \"success\");\n\t          this.props.onSuccess();\n\t        }.bind(this),\n\t        error: function (err) {\n\t          console.error(err);\n\t          var msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\t          this.setState({\n\t            errorMessage: msg\n\t          });\n\t          swal(msg, \"\", \"error\");\n\t        }.bind(this)\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Validate the form\n\t     *\n\t     * @param {object} formRefs - Object containing references to React form elements\n\t     * @param {object} formData - Object containing form data inputed by user\n\t     * @return {boolean} - true if all required fields are filled, false otherwise\n\t     */\n\t    //TODO: check media for the basis for validation\n\t\n\t  }, {\n\t    key: 'isValidForm',\n\t    value: function isValidForm(formRefs, formData) {\n\t      var isValidForm = true;\n\t\n\t      var requiredFields = {\n\t        pscid: null,\n\t        visitLabel: null\n\t      };\n\t\n\t      Object.keys(requiredFields).map(function (field) {\n\t        if (formData[field]) {\n\t          requiredFields[field] = formData[field];\n\t        } else if (formRefs[field]) {\n\t          formRefs[field].props.hasError = true;\n\t          isValidForm = false;\n\t        }\n\t      });\n\t      this.forceUpdate();\n\t\n\t      return isValidForm;\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      // This lets the modal window know that there is formData\n\t      // and will cause a warning to be thrown of the modal window\n\t      // is exited\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t\n\t      if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n\t        this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n\t      }\n\t\n\t      var formData = this.state.formData;\n\t      formData[formElement] = value;\n\t\n\t      this.setState({ formData: formData }, this.setParentFormData());\n\t    }\n\t  }, {\n\t    key: 'setBarcodeFormData',\n\t    value: function setBarcodeFormData(barcodeFormData, barcodeKey) {\n\t      var formData = this.state.formData;\n\t      var barcodeFormList = this.state.barcodeFormList;\n\t      barcodeFormList[barcodeKey] = barcodeFormData;\n\t      formData['barcodeFormList'] = barcodeFormList;\n\t\n\t      this.setState({ formData: formData }, this.setParentFormData());\n\t    }\n\t  }, {\n\t    key: 'addBarcodeForm',\n\t    value: function addBarcodeForm() {\n\t      var barcodeFormList = this.state.barcodeFormList;\n\t      var count = this.state.countBarcodeForms;\n\t\n\t      barcodeFormList[count + 1] = { specimen: {}, container: {} };\n\t\n\t      this.setState({\n\t        barcodeFormList: barcodeFormList,\n\t        countBarcodeForms: count + 1\n\t      });\n\t    }\n\t  }, {\n\t    key: 'copyBarcodeForm',\n\t    value: function copyBarcodeForm(key, multiplier) {\n\t      var count = this.state.countBarcodeForms;\n\t      var nextKey = count + 1;\n\t      var barcodeFormList = this.state.barcodeFormList;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        barcodeFormList[nextKey] = JSON.parse(JSON.stringify(barcodeFormList[key]));\n\t        delete barcodeFormList[nextKey].barcode;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        barcodeFormList: barcodeFormList,\n\t        countBarcodeForms: nextKey\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeBarcodeForm',\n\t    value: function removeBarcodeForm(key) {\n\t      var barcodeFormList = this.state.barcodeFormList;\n\t      delete barcodeFormList[key];\n\t\n\t      this.setState({\n\t        barcodeFormList: barcodeFormList\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setParentFormData',\n\t    value: function setParentFormData() {\n\t      if (this.props.setParentFormData) {\n\t        var formData = this.state.formData;\n\t        this.props.setParentFormData(formData);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  action: React.PropTypes.string.isRequired,\n\t  barcode: React.PropTypes.string,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(5);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm(props) {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      formErrors: {},\n\t      collapsed: true,\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.setChildFormData = _this.setChildFormData.bind(_this);\n\t    _this.setParentFormData = _this.setParentFormData.bind(_this);\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      if (this.props.formData) {\n\t        var formData = this.props.formData;\n\t\n\t        this.setState({\n\t          formData: formData\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t\n\t      this.setState({\n\t        copyMultiplier: copyMultiplier\n\t      });\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyBarcodeForm(this.state.copyMultiplier);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var addBarcodeFormButton = void 0;\n\t      var addBarcodeFormText = void 0;\n\t      var copyBarcodeFormButton = void 0;\n\t      var copyBarcodeFormText = void 0;\n\t      if (this.props.addBarcodeForm) {\n\t        addBarcodeFormButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcodeForm\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeFormText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcodeForm) {\n\t        copyBarcodeFormButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeFormText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.setCopyMultiplier,\n\t            value: this.state.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeFormButton = void 0;\n\t      if (this.props.removeBarcodeForm) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeFormButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcodeForm,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setFormData,\n\t                ref: 'barcode',\n\t                required: true,\n\t                value: this.state.formData.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.state.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.id,\n\t              onClick: this.toggleCollapse\n\t            }),\n\t            removeBarcodeFormButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.id, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'specimenType',\n\t                label: 'Specimen Type',\n\t                options: this.props.specimenTypes,\n\t                onUserInput: this.setFormData,\n\t                ref: 'specimenType',\n\t                required: true,\n\t                value: this.state.formData.specimenType\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'containerType',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setFormData,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.state.formData.containerType\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                formData: this.props.formData,\n\t                setParentFormData: this.setChildFormData,\n\t                onChange: this.props.onChange,\n\t                specimenTypes: this.props.specimenTypes,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions,\n\t                containerTypesPrimary: this.props.containerTypesPrimary,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                stati: this.props.stati\n\t              }),\n\t              React.createElement(ContainerParentForm, {\n\t                setParentFormData: this.setContainerParentFormData,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeFormButton,\n\t              addBarcodeFormText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeFormButton,\n\t              copyBarcodeFormText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t\n\t      var formData = this.state.formData;\n\t      formData[formElement] = value;\n\t\n\t      this.setState({\n\t        formData: formData\n\t      }, this.setParentFormData);\n\t    }\n\t  }, {\n\t    key: 'setChildFormData',\n\t    value: function setChildFormData(collectionFormData) {\n\t      var formData = this.state.formData;\n\t\n\t      for (var field in collectionFormData) {\n\t        formData[field] = collectionFormData[field];\n\t      }\n\t\n\t      this.setState({\n\t        formData: formData\n\t      }, this.setParentFormData);\n\t    }\n\t  }, {\n\t    key: 'setParentFormData',\n\t    value: function setParentFormData() {\n\t      this.props.setParentFormData(this.state.formData, this.props.barcodeKey);\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {\n\t  id: React.PropTypes.string,\n\t  specimenTypes: React.PropTypes.object.isRequired,\n\t  containerTypesPrimary: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  capacities: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.getSpecimenTypeFields = _this.getSpecimenTypeFields.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t\n\t      var updateButton = void 0;\n\t      if (this.props.specimen) {\n\t        updateButton = React.createElement(ButtonElement, { label: \"Update\" });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          specimenTypeFields = this.getSpecimenTypeFields(specimenTypeFieldsObject);\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          \"div\",\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: \"quantity\",\n\t            label: \"Quantity\",\n\t            onUserInput: this.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: \"unitId\",\n\t            label: \"Unit\",\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: \"date\",\n\t            label: \"Date\",\n\t            minYear: \"2000\",\n\t            maxYear: \"2018\",\n\t            onUserInput: this.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: \"time\",\n\t            label: \"Time\",\n\t            onUserInput: this.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: \"comments\",\n\t            label: \"Comments\",\n\t            onUserInput: this.setSpecimenData,\n\t            ref: \"comments\",\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: \"biobankSpecimen\",\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: \"form\"\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t\n\t    // TODO: decouple this code from the preaprationForm by making it a React Component\n\t    // This generates all the form fields for a given specimen type\n\t\n\t  }, {\n\t    key: \"getSpecimenTypeFields\",\n\t    value: function getSpecimenTypeFields(fieldsObject) {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this2.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this2.setSpecimenData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.collection.data[attribute]\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this2.setSpecimenData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.collection.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this2.setSpecimenData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this2.props.specimen.collection.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {\n\t          // There is currently no CheckboxElement or RadioElement in loris/jsx/Form.js and therefore\n\t          // this is not possible.     \n\t        }\n\t      });\n\t\n\t      return specimenTypeFields;\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 6 */,\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm(props) {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formData: { data: {} },\n\t      currentProtocol: _this.props.preparation ? _this.props.preparation.protocolId : null,\n\t      formErrors: {}\n\t    };\n\t\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.setParentFormData = _this.setParentFormData.bind(_this);\n\t    _this.setSpecimenProtocolFieldFormData = _this.setSpecimenProtocolFieldFormData.bind(_this);\n\t    _this.getSpecimenProtocolFields = _this.getSpecimenProtocolFields.bind(_this);\n\t    _this.handleSave = _this.handleSave.bind(_this);\n\t    _this.savePreparation = _this.savePreparation.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _this2 = this;\n\t\n\t      var formData = this.state.formData;\n\t\n\t      // if (this.props.specimenId) ??\n\t      formData['specimenId'] = this.props.specimenId;\n\t\n\t      //TODO: this is a shitty fix to the problem, do better.\n\t      // Actually, this may be less shitty than I thought\n\t      if (this.props.formData) {\n\t        formData = this.props.formData;\n\t\n\t        var currentProtocol = void 0;\n\t        currentProtocol = this.props.formData.protocolId || null;\n\t        this.setState({ currentProtocol: currentProtocol });\n\t      }\n\t\n\t      // This for autoloading data and will be used later\n\t      if (this.props.preparation) {\n\t        formData['protocolId'] = this.props.preparation.protocolId;\n\t        formData['locationId'] = this.props.preparation.locationId;\n\t        formData['date'] = this.props.preparation.date;\n\t        formData['time'] = this.props.preparation.time;\n\t        formData['comments'] = this.props.preparation.comments;\n\t\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.state.currentProtocol];\n\t        if (specimenProtocolFieldsObject) {\n\t          var specimenProtocolFields = Object.keys(specimenProtocolFieldsObject).map(function (attribute) {\n\t            formData.data[attribute] = _this2.props.preparation.data[attribute];\n\t          });\n\t        }\n\t      }\n\t      this.setState({\n\t        formData: formData\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton;\n\t      //TODO: fix this second check (!this.props.specimenId) -- it's not great\n\t      // All it does is signal that we are in the pool specimen form. There must be\n\t      // a better way!!\n\t      if (this.props.preparation || !this.props.specimenId) {\n\t        submitButton = null;\n\t      } else if (!this.props.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var updateButton;\n\t      var locationField;\n\t      if (this.props.preparation) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t\n\t        locationField = React.createElement(SelectElement, {\n\t          name: 'locationId',\n\t          label: 'Location',\n\t          options: this.props.sites,\n\t          onUserInput: this.setFormData,\n\t          required: true,\n\t          value: this.state.formData.locationId\n\t        });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.state.currentProtocol) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.state.currentProtocol];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          specimenProtocolFields = this.getSpecimenProtocolFields(specimenProtocolFieldsObject);\n\t        }\n\t      }\n\t\n\t      //This will be for default fields, if there are any eventually\n\t      if (this.state.currentSpecimenProtocol) {\n\t        preparationFields = React.createElement('div', null);\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.handleSave,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setFormData,\n\t          required: true,\n\t          value: this.state.formData.protocolId\n\t        }),\n\t        locationField,\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setFormData,\n\t          required: true,\n\t          value: this.state.formData.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setFormData,\n\t          required: true,\n\t          value: this.state.formData.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setFormData,\n\t          value: this.state.formData.comments\n\t        }),\n\t        submitButton,\n\t        updateButton\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t\n\t      var formData = this.state.formData;\n\t\n\t      if (formElement === \"protocolId\" && value !== \"\") {\n\t        //This is to eliminate the values for the specimen protocol fields\n\t        //TODO: This could potentially be improved later to retain the values\n\t        //for the fields that are common accross protocols\n\t        formData.data = {};\n\t        this.setState({\n\t          currentProtocol: value\n\t        });\n\t      }\n\t\n\t      formData[formElement] = value;\n\t\n\t      this.setState({ formData: formData }, this.setParentFormData);\n\t    }\n\t  }, {\n\t    key: 'setSpecimenProtocolFieldFormData',\n\t    value: function setSpecimenProtocolFieldFormData(formElement, value) {\n\t      var formData = this.state.formData;\n\t      formData.data[formElement] = value;\n\t\n\t      this.setState({ formData: formData }, this.setParentFormData);\n\t    }\n\t  }, {\n\t    key: 'setParentFormData',\n\t    value: function setParentFormData() {\n\t      if (this.props.setParentFormData) {\n\t        var formData = this.state.formData;\n\t        this.props.setParentFormData(formData);\n\t      }\n\t    }\n\t\n\t    // TODO: decouple this code from the collectionForm by make it a React Component\n\t    // This generates all the form fields for a given specimen protocol\n\t\n\t  }, {\n\t    key: 'getSpecimenProtocolFields',\n\t    value: function getSpecimenProtocolFields(fieldsObject) {\n\t      var _this3 = this;\n\t\n\t      var specimenProtocolFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this3.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this3.setSpecimenProtocolFieldFormData,\n\t              ref: attribute,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this3.state.formData.data[attribute],\n\t              errorMessage: _this3.state.formErrors[attribute] ? 'This is a ' + datatype + ' field.' : null\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this3.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this3.setSpecimenProtocolFieldFormData,\n\t              ref: attribute,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this3.state.formData.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this3.setSpecimenProtocolFieldFormData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this3.state.formData.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {}\n\t      });\n\t\n\t      return specimenProtocolFields;\n\t    }\n\t  }, {\n\t    key: 'handleSave',\n\t    value: function handleSave(e) {\n\t      //more things will go here later\n\t      if (!this.props.preparation) {\n\t        this.savePreparation(this.props.insertAction);\n\t      }\n\t      if (this.props.preparation) {\n\t        this.savePreparation(this.props.updateAction);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'savePreparation',\n\t    value: function savePreparation(action) {\n\t      var formData = this.state.formData;\n\t      formData['data'] = JSON.stringify(formData['data']);\n\t\n\t      console.log(formData);\n\t      var formObj = new FormData();\n\t      for (var key in formData) {\n\t        if (formData[key] !== \"\") {\n\t          formObj.append(key, formData[key]);\n\t        }\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: action,\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function () {\n\t          //Update Parent Specimen Page Here\n\t          //formData.data = JSON.parse(formData.data);\n\t          this.props.refreshParent();\n\t          //swal(\"Specimen Preparation Update Successful!\", \"\", \"success\");\n\t          //this.props.onSuccess();\n\t        }.bind(this),\n\t        error: function (err) {\n\t          console.error(err);\n\t          var msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\t\n\t          this.setState({\n\t            errorMessage: msg\n\t          });\n\t          swal(msg, \"\", \"error\");\n\t        }.bind(this)\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {\n\t  containerTypesPrimary: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  capacities: React.PropTypes.object.isRequired,\n\t  units: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(12);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React components for Modal component.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\t\n\tvar FormModal = function (_React$Component) {\n\t  _inherits(FormModal, _React$Component);\n\t\n\t  function FormModal(props) {\n\t    _classCallCheck(this, FormModal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (FormModal.__proto__ || Object.getPrototypeOf(FormModal)).call(this, props));\n\t\n\t    _this.state = { show: false, throwWarning: false };\n\t\n\t    _this.openModal = _this.openModal.bind(_this);\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    _this.confirmClose = _this.confirmClose.bind(_this);\n\t    _this.setWarning = _this.setWarning.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FormModal, [{\n\t    key: \"renderChildren\",\n\t    value: function renderChildren() {\n\t      var _this2 = this;\n\t\n\t      return React.Children.map(this.props.children, function (child) {\n\t        return React.cloneElement(child, { onSuccess: _this2.closeModal, onChange: _this2.setWarning });\n\t      });\n\t    }\n\t  }, {\n\t    key: \"openModal\",\n\t    value: function openModal() {\n\t      this.setState({\n\t        show: true\n\t      });\n\t    }\n\t  }, {\n\t    key: \"setWarning\",\n\t    value: function setWarning() {\n\t      this.setState({\n\t        throwWarning: true\n\t      });\n\t    }\n\t  }, {\n\t    key: \"confirmClose\",\n\t    value: function confirmClose() {\n\t      if (this.state.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          this.closeModal();\n\t        }.bind(this));\n\t      } else {\n\t        this.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      this.setState({\n\t        show: false,\n\t        throwWarning: false\n\t      });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        _Modal2.default,\n\t        _extends({\n\t          closeModal: this.confirmClose,\n\t          openModal: this.openModal,\n\t          show: this.state.show\n\t        }, this.props),\n\t        this.renderChildren()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FormModal;\n\t}(React.Component);\n\t\n\tFormModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  buttonClass: React.PropTypes.string,\n\t  buttonStyle: React.PropTypes.object,\n\t  buttonContent: React.PropTypes.object\n\t};\n\tFormModal.defaultProps = {\n\t  buttonClass: 'btn btn-primary'\n\t};\n\t\n\texports.default = FormModal;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal(props) {\n\t    _classCallCheck(this, Modal);\n\t\n\t    return _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 1000,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '70px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var button = React.createElement(\n\t        'div',\n\t        {\n\t          className: this.props.buttonClass,\n\t          onClick: this.props.openModal\n\t        },\n\t        this.props.buttonContent\n\t      );\n\t\n\t      var modal;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          'div',\n\t          { style: backdropStyle, onClick: this.props.closeModal },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              style: modalStyle,\n\t              onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              }\n\t            },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                style: titleStyle\n\t              },\n\t              this.props.title,\n\t              React.createElement(\n\t                'span',\n\t                {\n\t                  style: glyphStyle,\n\t                  onClick: this.props.closeModal\n\t                },\n\t                '\\xD7'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                style: bodyStyle\n\t              },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { style: this.props.style },\n\t        button,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  buttonClass: React.PropTypes.string,\n\t  buttonStyle: React.PropTypes.object,\n\t  buttonContent: React.PropTypes.object,\n\t  show: React.PropTypes.boolean,\n\t  closeModal: React.PropTypes.func,\n\t  openModal: React.PropTypes.func\n\t};\n\tModal.defaultProps = {\n\t  buttonClass: 'btn btn-primary'\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader(props) {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).call(this, props));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"loader-container\" },\n\t        React.createElement(\"div\", { className: \"loader\" })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FormModal = __webpack_require__(11);\n\t\n\tvar _FormModal2 = _interopRequireDefault(_FormModal);\n\t\n\tvar _quantityField = __webpack_require__(18);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(19);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(20);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(21);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(22);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    return _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.edit.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.toggle('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t          console.log(units);\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                className: 'centered-horizontal',\n\t                specimen: this.props.specimen,\n\t                units: units,\n\t                toggle: function toggle() {\n\t                  return _this2.props.toggle('quantity');\n\t                },\n\t                setSpecimenData: this.props.setSpecimenData,\n\t                revertSpecimenData: this.props.revertSpecimenData,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.edit.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('temperature');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.edit.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              stati: stati,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('status');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.edit.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.sites[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              sites: this.props.options.sites,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('location');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.sites[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (this.props.specimen.parentSpecimenId) {\n\t          var specimenURL = loris.BaseURL = '/biobank/specimen/?barcode=';\n\t          var parentSpecimenFieldValue = React.createElement(\n\t            'a',\n\t            { href: specimenURL + this.props.data.parentSpecimen.barcode },\n\t            this.props.data.parentSpecimen.barcode\n\t          );\n\t\n\t          parentSpecimenField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Parent Specimen',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                parentSpecimenFieldValue || 'None'\n\t              )\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var containerURL = loris.BaseURL + \"/biobank/container/?barcode=\";\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              href: containerURL + this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode },\n\t            this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            _FormModal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              buttonClass: 'action-button update',\n\t              buttonContent: React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(TextboxElement, {\n\t          name: 'quantity',\n\t          labelClass: 'col-xl-0',\n\t          inputClass: 'col-lg-12',\n\t          onUserInput: this.props.setSpecimenData,\n\t          value: this.props.specimen.quantity\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          name: 'unit',\n\t          labelClass: 'col-xl-0',\n\t          inputClass: 'col-lg-12',\n\t          options: this.props.units,\n\t          onUserInput: this.props.setSpecimenData,\n\t          value: this.props.specimen.unitId\n\t        }),\n\t        React.createElement(ButtonElement, {\n\t          label: 'Update',\n\t          onUserInput: this.props.saveSpecimen,\n\t          columnSize: 'col-lg-12'\n\t        }),\n\t        React.createElement(\n\t          'a',\n\t          { onClick: this.props.toggle\n\t          },\n\t          'Cancel'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimenData: React.PropTypes.func,\n\t  revertSpecimenData: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                _this2.props.toggle();_this2.props.revertContainerData();\n\t              } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                _this2.props.revertContainerData();_this2.props.toggle();\n\t              }\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.sites,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                _this2.props.revertContainerData();_this2.props.toggle();\n\t              }\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  sites: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(23);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).call(this));\n\t\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  //map options for forms\n\t\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(rawObject, targetAttribute) {\n\t      var data = {};\n\t      for (var id in rawObject) {\n\t        data[id] = rawObject[id][targetAttribute];\n\t      }\n\t\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t      var containerBarcodesNonPrimary = this.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.props.setContainerData,\n\t        required: true,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainerData: this.props.setContainerData\n\t          });\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        React.createElement('br', null),\n\t        React.createElement(ButtonElement, { label: 'Update' })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var type = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary ? 'specimen' : 'container';\n\t        var url = loris.BaseURL + '/biobank/' + type + '/?barcode=' + this.props.children[this.props.coordinates[coordinate]].barcode;\n\t\n\t        window.location.href = url;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      this.props.saveChildContainer(container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // This is eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = null;\n\t\n\t            if (!this.props.select) {\n\t              // This double if statement doesn't sound great\n\t              if (this.props.coordinates) {\n\t                if (this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node occupied';\n\t                  dataHtml = 'true';\n\t                  dataToggle = 'tooltip';\n\t                  dataPlacement = 'top';\n\t                  tooltipTitle = '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                  draggable = 'true';\n\t                  onDragStart = this.drag;\n\t                  onDragOver = null;\n\t                  onDrop = null;\n\t                  onClick = this.redirectURL;\n\t                }\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this2.props.setContainerData('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this2.props.setContainerData('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  // TODO: --- This is currently not working ---\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            {\n\t              className: 'row',\n\t              style: rowStyle\n\t            },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'display' },\n\t        display\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle(props) {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    var _this = _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).call(this, props));\n\t\n\t    _this.state = {};\n\t\n\t    return _this;\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {}\n\t  }, {\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({ 'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #093782', 'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var collectionNode = void 0;\n\t      var collectionTooltip = void 0;\n\t      if (this.props.collection || this.props.container) {\n\t        collectionTooltip = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'h',\n\t            null,\n\t            'Collection'\n\t          ),\n\t          React.createElement(\n\t            'p',\n\t            null,\n\t            'Date:'\n\t          )\n\t        );\n\t\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      var preparationNode = void 0;\n\t      if (this.props.preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      var analysisNode = void 0;\n\t      if (this.props.analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement('div', { className: 'lifecycle-node' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-text' },\n\t            'Analysis'\n\t          )\n\t        );\n\t      }\n\t\n\t      var line = void 0;\n\t      line = React.createElement('div', { className: 'lifecycle-line' });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 25 */,\n/* 26 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainerData('parentContainerId', null);\n\t      this.props.setContainerData('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FormModal = __webpack_require__(11);\n\t\n\tvar _FormModal2 = _interopRequireDefault(_FormModal);\n\t\n\tvar _Loader = __webpack_require__(13);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(17);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(5);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(7);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _specimenForm = __webpack_require__(3);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(24);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(26);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).call(this));\n\t\n\t    _this.state = {\n\t      data: {},\n\t      isLoaded: false,\n\t      loadedData: 0,\n\t      edit: {\n\t        temperature: false,\n\t        quantity: false,\n\t        collection: false,\n\t        preparation: false\n\t      }\n\t    };\n\t\n\t    _this.fetchSpecimenData = _this.fetchSpecimenData.bind(_this);\n\t    _this.fetchOptions = _this.fetchOptions.bind(_this);\n\t    _this.toggle = _this.toggle.bind(_this);\n\t    _this.toggleAll = _this.toggleAll.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.setContainerData = _this.setContainerData.bind(_this);\n\t    _this.revertContainerData = _this.revertContainerData.bind(_this);\n\t    _this.setSpecimenData = _this.setSpecimenData.bind(_this);\n\t    _this.revertSpecimenData = _this.revertSpecimenData.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.submit = _this.submit.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.fetchSpecimenData();\n\t      this.fetchOptions();\n\t    }\n\t  }, {\n\t    key: 'fetchSpecimenData',\n\t    value: function fetchSpecimenData() {\n\t      var self = this;\n\t      $.ajax(this.props.specimenPageDataURL, {\n\t        dataType: 'json',\n\t        success: function success(data) {\n\t          var specimen = JSON.parse(JSON.stringify(data.specimen));\n\t          var container = JSON.parse(JSON.stringify(data.container));\n\t          self.setState({\n\t            data: data,\n\t            container: container,\n\t            specimen: specimen,\n\t            isLoaded: true\n\t          });\n\t        },\n\t        error: function error(_error, errorCode, errorMsg) {\n\t          console.error(_error, errorCode, errorMsg);\n\t          self.setState({\n\t            error: 'An error occurred when loading the form!'\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetchOptions',\n\t    value: function fetchOptions() {\n\t      var self = this;\n\t      $.ajax(this.props.optionsURL, {\n\t        dataType: 'json',\n\t        success: function success(data) {\n\t          self.setState({\n\t            options: data\n\t          });\n\t        },\n\t        error: function error(_error2, errorCode, errorMsg) {\n\t          console.error(_error2, errorCode, errorMsg);\n\t          self.setState({\n\t            error: 'An error occurred when loading the form!'\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this2 = this;\n\t\n\t      var container = JSON.parse(JSON.stringify(this.state.container));\n\t      var containerObj = new FormData();\n\t      for (var key in container) {\n\t        containerObj.append(key, container[key]);\n\t      }\n\t\n\t      this.submit(containerObj, this.props.saveContainer, 'Container Save Successful!').then(function () {\n\t        //this.fetchSpecimenData();\n\t        //this.fetchOptions();\n\t        var data = _this2.state.data;\n\t        data.container = JSON.parse(JSON.stringify(_this2.state.container));\n\t        _this2.setState({ data: data });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this3 = this;\n\t\n\t      var specimen = JSON.parse(JSON.stringify(this.state.specimen));;\n\t      var specimenObj = new FormData();\n\t      for (var key in specimen) {\n\t        if (key === 'collection' || key === 'preparation' || key === 'analysis') {\n\t          specimen[key] = JSON.stringify(specimen[key]);\n\t        }\n\t        specimenObj.append(key, specimen[key]);\n\t      }\n\t\n\t      this.submit(specimenObj, this.props.saveSpecimen, 'Specimen Save Successful!').then(function () {\n\t        var data = _this3.state.data;\n\t        data.specimen = JSON.parse(JSON.stringify(_this3.state.specimen));\n\t        _this3.setState({ data: data });\n\t      });\n\t    }\n\t\n\t    //TODO: this should likely be placed in its own component.\n\t    //TODO: should the success messages be coming from the back end?\n\t\n\t  }, {\n\t    key: 'submit',\n\t    value: function submit(data, url, message) {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: data,\n\t          cache: false,\n\t          contentType: false,\n\t          processData: false,\n\t          xhr: function () {\n\t            var xhr = new window.XMLHttpRequest();\n\t            return xhr;\n\t          }.bind(_this4),\n\t          success: function success() {\n\t            resolve();\n\t            _this4.toggleAll();\n\t            swal(message, '', 'success');\n\t          },\n\t          error: function error(_error3) {\n\t            var message = _error3.responseJSON ? _error3.responseJSON.message : \"Submission error!\";\n\t            _this4.setState({\n\t              errorMessage: message\n\t            });\n\t            swal(message, '', 'error');\n\t            console.error(_error3);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle(stateKey) {\n\t      var edit = this.state.edit;\n\t      var stateValue = edit[stateKey];\n\t      edit[stateKey] = !stateValue;\n\t      this.setState({ edit: edit });\n\t    }\n\t  }, {\n\t    key: 'toggleAll',\n\t    value: function toggleAll() {\n\t      var edit = this.state.edit;\n\t      for (var key in edit) {\n\t        edit[key] = false;\n\t      }\n\t      this.setState({ edit: edit });\n\t    }\n\t\n\t    // TODO: map options for forms - this is used frequently and may need\n\t    // to be moved to a more global place\n\t\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(rawObject, targetAttribute) {\n\t      var data = {};\n\t      for (var id in rawObject) {\n\t        data[id] = rawObject[id][targetAttribute];\n\t      }\n\t\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'setContainerData',\n\t    value: function setContainerData(name, value) {\n\t      var container = this.state.container;\n\t\n\t      if (value !== null) {\n\t        container[name] = value;\n\t      } else {\n\t        delete container[name];\n\t      }\n\t\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainerData',\n\t    value: function revertContainerData() {\n\t      var container = this.state.container;\n\t      container = this.state.data.container;\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenData',\n\t    value: function setSpecimenData(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimenData',\n\t    value: function revertSpecimenData() {\n\t      var specimen = this.state.specimen;\n\t      specimen = this.state.data.specimen;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this5 = this;\n\t\n\t      // Data loading error\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      // Waiting for data to load\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(_Loader2.default, null);\n\t      }\n\t\n\t      /**\n\t       * Specimen Form\n\t       */\n\t      var addAliquotForm = void 0;\n\t\n\t      if (loris.userHasPermission('biobank_write')) {\n\t        /**\n\t         * Map Options for Form Select Elements\n\t         */\n\t        var specimenTypes = {};\n\t        //produces options conditionally based on the parentId of the specimen\n\t        for (var _id in this.state.options.specimenTypes) {\n\t          // if parentTypeId is equal to typeId\n\t          if (this.state.options.specimenTypes[_id].parentTypeId == this.state.data.specimen.typeId || _id == this.state.data.specimen.typeId) {\n\t            specimenTypes[_id] = this.state.options.specimenTypes[_id]['type'];\n\t          }\n\t        }\n\t\n\t        var specimenUnits = this.mapFormOptions(this.state.options.specimenUnits, 'unit');\n\t        var containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\t\n\t        var addAliquotButtonContent = React.createElement(\n\t          'span',\n\t          null,\n\t          '+'\n\t        );\n\t\n\t        addAliquotForm = React.createElement(\n\t          'div',\n\t          { title: 'Make Aliquots' },\n\t          React.createElement(\n\t            _FormModal2.default,\n\t            {\n\t              title: 'Add Aliquots',\n\t              buttonClass: 'action-button add',\n\t              buttonContent: addAliquotButtonContent\n\t            },\n\t            React.createElement(_specimenForm2.default, {\n\t              action: loris.BaseURL + '/biobank/ajax/submitData.php?action=submitSpecimen',\n\t              parentSpecimenIds: this.state.data.specimen.id,\n\t              parentSpecimenBarcodes: this.state.data.container.barcode,\n\t              candidateId: this.state.data.specimen.candidateId,\n\t              sessionId: this.state.data.specimen.sessionId,\n\t              pscid: this.state.data.candidate.PSCID,\n\t              visit: this.state.data.session.Visit_label,\n\t              unitId: this.state.data.specimen.unitId,\n\t              specimenTypes: specimenTypes,\n\t              specimenTypeUnits: this.state.options.specimenTypeUnits,\n\t              specimenUnits: specimenUnits,\n\t              containerTypesPrimary: containerTypesPrimary,\n\t              containersNonPrimary: this.state.options.containersNonPrimary,\n\t              containerDimensions: this.state.options.containerDimensions,\n\t              containerCoordinates: this.state.options.containerCoordinates,\n\t              specimenTypeAttributes: this.state.options.specimenTypeAttributes,\n\t              attributeDatatypes: this.state.options.attributeDatatypes,\n\t              attributeOptions: this.state.options.attributeOptions,\n\t              refreshParent: this.fetchSpecimenData\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.state.edit.collection) {\n\t\n\t        //Map Options for Form Select Elements\n\t        var _specimenTypes = {};\n\t        //produces options conditionally based on the parentId of the specimen\n\t        for (var id in this.state.options.specimenTypes) {\n\t          // if specimen type has a parent type\n\t          if (this.state.options.specimenTypes[this.state.data.specimen.typeId].parentTypeId) {\n\t            if (this.state.options.specimenTypes[id].parentTypeId == this.state.options.specimenTypes[this.state.data.specimen.typeId].parentTypeId || id == this.state.data.specimen.typeId) {\n\t              _specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n\t            }\n\t            // else if specimen type has no parent type\n\t          } else {\n\t            if (!this.state.options.specimenTypes[id].parentTypeId) {\n\t              _specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n\t            }\n\t          }\n\t        }\n\t\n\t        var _containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.state.data.specimen,\n\t          specimenTypes: _specimenTypes,\n\t          specimenTypeAttributes: this.state.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.state.options.specimenTypeUnits,\n\t          toggle: function toggle() {\n\t            return _this5.toggle('collection');\n\t          },\n\t          setSpecimenData: this.setSpecimenData,\n\t          revertSpecimenData: this.revertSpecimenData,\n\t          saveSpecimen: this.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: function onClick() {\n\t              return _this5.toggle('collection');\n\t            }\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t\n\t        //loops through data object to produce static elements\n\t        if (this.state.data.specimen.collection.data) {\n\t          var dataObject = this.state.data.specimen.collection.data;\n\t          var specimenTypeAttributes = Object.keys(dataObject).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this5.state.options.specimenTypeAttributes[_this5.state.data.specimen.typeId][key].name,\n\t              text: dataObject[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.state.data.specimen.collection.quantity + ' ' + this.state.options.specimenUnits[this.state.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.sites[this.state.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.state.edit.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.state.edit.collection ? null : function () {\n\t              return _this5.toggle('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var specimenProtocolAttributes = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t\n\t      // If the form is an edit state\n\t      if (this.state.edit.preparation) {\n\t        //Map Options for Form Select Elements Here\n\t        specimenProtocolAttributes = this.state.options.specimenProtocolAttributes[this.state.data.specimen.typeId];\n\t\n\t        //This remaps specimen Protocols based on the specimen Type\n\t        //this may need to be refactored or put into a function later\n\t        var specimenProtocols = {};\n\t        for (var _id2 in specimenProtocolAttributes) {\n\t          specimenProtocols[_id2] = this.state.options.specimenProtocols[_id2];\n\t        }\n\t\n\t        specimenProtocols = this.mapFormOptions(specimenProtocols, 'protocol');\n\t\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimenId: this.state.data.specimen.id,\n\t          preparation: this.state.data.specimen.preparation ? this.state.data.specimen.preparation : null,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          sites: this.state.options.sites,\n\t          insertAction: loris.BaseURL + '/biobank/ajax/submitData.php?action=insertSpecimenPreparation',\n\t          updateAction: loris.BaseURL + '/biobank/ajax/submitData.php?action=updateSpecimenPreparation'\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          { className: 'pull-right', style: { cursor: 'pointer' }, onClick: function onClick() {\n\t              return _this5.toggle('preparation');\n\t            } },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation Does Exist and the form is not in an edit state\n\t      if (this.state.data.specimen.preparation && !this.state.edit.preparation) {\n\t        var dataObject = this.state.data.specimen.preparation.data;\n\t\n\t        if (dataObject) {\n\t          specimenProtocolAttributes = Object.keys(dataObject).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this5.state.options.specimenProtocolAttributes[_this5.state.data.specimen.typeId][_this5.state.data.specimen.preparation.protocolId][key].name,\n\t              text: dataObject[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.state.options.specimenProtocols[this.state.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.sites[this.state.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (this.state.options.specimenProtocolAttributes[this.state.data.specimen.typeId] && !this.state.data.specimen.preparation && !this.state.edit.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                return _this5.toggle('preparation');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.state.data.specimen.preparation || this.state.edit.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.state.edit.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.state.edit.preparation ? null : function () {\n\t                return _this5.toggle('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      analysisPanel = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'panel inactive'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'add-process'\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          null,\n\t          'ADD ANALYSIS'\n\t        )\n\t      );\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.state.specimen,\n\t        container: this.state.container,\n\t        data: this.state.data,\n\t        options: this.state.options,\n\t        edit: this.state.edit,\n\t        toggle: this.toggle,\n\t        mapFormOptions: this.mapFormOptions,\n\t        setSpecimenData: this.setSpecimenData,\n\t        revertSpecimenData: this.revertSpecimenData,\n\t        saveSpecimen: this.saveSpecimen,\n\t        setContainerData: this.setContainerData,\n\t        revertContainerData: this.revertContainerData,\n\t        saveContainer: this.saveContainer\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.state.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.state.container,\n\t              setContainerData: this.setContainerData,\n\t              saveContainer: this.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            collection: this.state.data.specimen.collection,\n\t            preparation: this.state.data.specimen.preparation,\n\t            analysis: this.state.data.specimen.analysis,\n\t            sites: this.state.options.sites\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\t\n\twindow.BiobankSpecimen = BiobankSpecimen;\n\twindow.RBiobankSpecimen = RBiobankSpecimen;\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/specimenIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b0b68922fb406dfde504","/* global ReactDOM */\n\nimport BiobankSpecimen from './specimen';\nconst args = QueryString.get(document.currentScript.src);\n\n$(function() {\n  const biobankSpecimen = (\n    <div className=\"page-specimen-form\">\n      <div className=\"row\">\n        <div className=\"col-md-9 col-lg-12\">\n          <BiobankSpecimen\n            specimenPageDataURL={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getSpecimenData&barcode=${args.barcode}`}\n            optionsURL={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getFormOptions`}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n            saveSpecimen={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveSpecimen`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenIndex.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formData: {},\n      errorMessage: null,\n      formErrors: {},\n      barcodeFormList: {1: {specimen: {}, container: {}}},\n      countBarcodeForms: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.setParentFormData = this.setParentFormData.bind(this);\n    this.specimenSubmit = this.specimenSubmit.bind(this);\n    this.addBarcodeForm = this.addBarcodeForm.bind(this);\n    this.setBarcodeFormData = this.setBarcodeFormData.bind(this);\n  }\n\n  componentDidMount() {\n\n    // Sets formData to formData passed from parent component\n    // or else it is set to an empty object\n    // TODO: this should be moved to the constructor.\n    let formData = this.props.formData || this.state.formData;\n\n    //if this is a child specimen form then certain formData is set when component mount\n    //TODO: there is a better way of doing this.\n    //This solution assumes too much about the props being passed\n    if (this.props.parentSpecimenIds) {\n      formData['parentSpecimenIds'] = this.props.parentSpecimenIds;\n      formData['pscid'] = this.props.candidateId;\n      formData['visitLabel'] = this.props.sessionId;\n      formData['unitId'] = this.props.unitId;\n    }\n\n    this.setState({formData});\n  }\n\n  render() {\n\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeFormList);\n    let barcodeForms = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodeForms.push(\n        <SpecimenBarcodeForm\n          key={key}\n          barcodeKey={key}\n          id={i} \n          formData={this.state.barcodeFormList[key] ? \n            this.state.barcodeFormList[key] : null}\n          removeBarcodeForm={barcodeListArray.length !== 1 ?\n            () => this.removeBarcodeForm(key) : null}\n          addBarcodeForm={i == barcodeListArray.length ? this.addBarcodeForm : null}\n          copyBarcodeForm={i == barcodeListArray.length && this.state.barcodeFormList[key] ? \n            this.copyBarcodeForm.bind(this, key) : null}\n          setParentFormData={this.setBarcodeFormData}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.parentSpecimenIds) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.parentSpecimenBarcodes}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.pscid}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.visit}\n          />\n        </div>\n      );\n\n      //TODO: It may be wise to make unit static and forced, or atleast prepopulated --\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.setFormData}\n            required={true}\n            value={this.state.formData.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.setFormData}\n            emptyOption={false}\n            required={true}\n            value={this.state.formData.unitId}\n          />\n        </div>\n      );\n    } else {\n      globalFields = (\n          <div>\n            <SearchableDropdown\n              name=\"pscid\"\n              label=\"PSCID\"\n              options={this.props.pSCIDs}\n              onUserInput={this.setFormData}\n              ref=\"pscid\"\n              required={true}\n              value={this.state.formData.pscid}\n              placeHolder='Search for a PSCID'\n            />\n            <SelectElement\n              name=\"visitLabel\"\n              label=\"Visit Label\"\n              options={this.state.visits}\n              onUserInput={this.setFormData}\n              ref=\"visitLabel\"\n              required={true}\n              value={this.state.formData.visitLabel}\n              disabled={this.state.formData.pscid ? false : true}\n            />\n          </div>\n      );\n    }\n\n    //TODO: {barcodeForms} should eventually be moved to be after {remainingQuantityFields}\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={this.handleSubmit}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodeForms}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n\n/** *******************************************************************************\n *                      ******     Helper methods     *******\n *********************************************************************************/\n\n  /**\n   * Returns a valid name for the file to be specimened\n   *\n   * @param {string} pscid - PSCID selected from the dropdown\n   * @param {string} visitLabel - Visit label selected from the dropdown\n   * @param {string} instrument - Instrument selected from the dropdown\n   * @return {string} - Generated valid filename for the current selection\n   */\n//  getValidFileName(pscid, visitLabel, instrument) {\n//    var fileName = pscid + \"_\" + visitLabel;\n//    if (instrument) fileName += \"_\" + instrument;\n//\n//    return fileName;\n//  }\n\n\n  validateForm(formElement, value) {\n    let formErrors = this.state.formErrors;\n\n    //validate barcode regex\n    if (formElement === \"barcode\" && value !== \"\") {\n      if (!(/^hello/.test(this.state.formData.barcode))) {\n        formErrors.barcode = true;\n      } else {\n        formErrors.barcode = false;\n      }\n    }\n\n    //validate that quantity is a number and less than capacity\n    if (formElement === \"quantity\" && value !== \"\") {\n      if (isNaN(value) || (value > this.props.capacities[this.state.currentContainerType])) {\n        formErrors.quantity = true;\n      } else {\n        formErrors.quantity = false;\n      }\n    }\n\n    //validate datatypes and regex of generated type attributes\n    var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n    var specimenTypeFields = Object.keys(specimenTypeFieldsObject).map((attribute) => {\n\n      let datatype = this.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"number\") {\n        if (formElement === attribute) {\n          if (isNaN(value) && value !== \"\") {\n            formErrors[attribute] = true;\n          } else {\n            formErrors[attribute] = false;\n          }\n        }\n      }\n    })\n\n    this.setState({\n      formErrors: formErrors\n    });\n\n  }\n\n\n  /**\n   * Handle form submission\n   * @param {object} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let formData = this.state.formData;\n    let barcodeFormList = this.state.barcodeFormList;\n    let formRefs = this.refs;\n    //let biobankFiles = this.state.Data.biobankFiles ? this.state.Data.biobankFiles : [];\n\n    // Validate the form\n    if (!this.isValidForm(formRefs, formData)) {\n      return;\n    }\n\n    this.specimenSubmit();\n  }\n\n  /*\n   * Uploads the file to the server\n   */\n  specimenSubmit() {\n    // Set form data and specimen the biobank file\n    let formData = this.state.formData;\n    let barcodeFormList = this.state.barcodeFormList;\n    formData['barcodeFormList'] = JSON.stringify(barcodeFormList);\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        let xhr = new window.XMLHttpRequest();\n        return xhr;\n      }.bind(this),\n      success: function() {\n\n        this.props.refreshParent();\n        swal(\"Specimen Submission Successful!\", \"\", \"success\");\n        this.props.onSuccess();\n      }.bind(this),\n      error: function(err) {\n        console.error(err);\n        let msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n        this.setState({\n          errorMessage: msg,\n        });\n        swal(msg, \"\", \"error\");\n      }.bind(this)\n    });\n  }\n\n  /**\n   * Validate the form\n   *\n   * @param {object} formRefs - Object containing references to React form elements\n   * @param {object} formData - Object containing form data inputed by user\n   * @return {boolean} - true if all required fields are filled, false otherwise\n   */\n  //TODO: check media for the basis for validation\n  isValidForm(formRefs, formData) {\n    var isValidForm = true;\n\n    var requiredFields = {\n      pscid: null,\n      visitLabel: null,\n    };\n\n    Object.keys(requiredFields).map(function(field) {\n      if (formData[field]) {\n        requiredFields[field] = formData[field];\n      } else if (formRefs[field]) {\n        formRefs[field].props.hasError = true;\n        isValidForm = false;\n      }\n    });\n    this.forceUpdate();\n\n    return isValidForm;\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    // This lets the modal window know that there is formData\n    // and will cause a warning to be thrown of the modal window\n    // is exited\n    this.props.onChange instanceof Function && this.props.onChange();\n  \n    if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n      this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n    }\n\n    var formData = this.state.formData;\n    formData[formElement] = value;\n\n    this.setState(\n      {formData},\n      this.setParentFormData()\n    );\n  }\n\n  setBarcodeFormData(barcodeFormData, barcodeKey) {\n    var formData = this.state.formData;\n    var barcodeFormList = this.state.barcodeFormList;\n    barcodeFormList[barcodeKey] = barcodeFormData;\n    formData['barcodeFormList'] = barcodeFormList;\n\n    this.setState(\n      {formData},\n      this.setParentFormData()\n    );\n  }\n\n  addBarcodeForm() {\n    let barcodeFormList = this.state.barcodeFormList;\n    let count = this.state.countBarcodeForms;\n    \n    barcodeFormList[count+1] = {specimen: {}, container: {}}; \n\n    this.setState({\n      barcodeFormList: barcodeFormList,\n      countBarcodeForms: count + 1\n    });\n  }\n\n  copyBarcodeForm(key, multiplier) {\n    let count = this.state.countBarcodeForms;\n    let nextKey = count+1;\n    let barcodeFormList = this.state.barcodeFormList;\n\n    for (let i=1; i<=multiplier; i++) {\n      barcodeFormList[nextKey] = JSON.parse(JSON.stringify(barcodeFormList[key])); \n      delete barcodeFormList[nextKey].barcode;\n      nextKey++;\n    }\n\n    this.setState({\n      barcodeFormList: barcodeFormList,\n      countBarcodeForms: nextKey\n    });\n  }\n\n  removeBarcodeForm(key) {\n    let barcodeFormList = this.state.barcodeFormList;\n    delete barcodeFormList[key];\n\n    this.setState({\n      barcodeFormList: barcodeFormList\n    });\n  }\n\n  setParentFormData() {\n    if (this.props.setParentFormData) {\n      let formData = this.state.formData;\n      this.props.setParentFormData(formData);\n    }\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  action: React.PropTypes.string.isRequired,\n  barcode: React.PropTypes.string,\n  refreshTable: React.PropTypes.func\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      formData: {},\n      formErrors: {},\n      collapsed: true,\n      copyMultiplier: 1,\n    };\n   \n    this.setFormData = this.setFormData.bind(this);\n    this.setChildFormData = this.setChildFormData.bind(this);\n    this.setParentFormData = this.setParentFormData.bind(this);\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.formData) {\n      let formData = this.props.formData;\n    \n      this.setState({\n        formData: formData\n      }); \n    }   \n  }\n\n  toggleCollapse() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    \n    this.setState({\n      copyMultiplier: copyMultiplier\n    }); \n  }\n\n  copy() {\n    this.props.copyBarcodeForm(this.state.copyMultiplier);\n  }\n\n  render() {\n    let addBarcodeFormButton;\n    let addBarcodeFormText;\n    let copyBarcodeFormButton;\n    let copyBarcodeFormText;\n    if (this.props.addBarcodeForm) {\n      addBarcodeFormButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcodeForm}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeFormText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcodeForm) {\n      copyBarcodeFormButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeFormText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.setCopyMultiplier}\n            value={this.state.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeFormButton;\n    if (this.props.removeBarcodeForm) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeFormButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcodeForm}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setFormData}\n                ref='barcode'\n                required={true}\n                value={this.state.formData.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.state.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.id}\n              onClick={this.toggleCollapse}\n            />\n            {removeBarcodeFormButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.id} className='collapse'>\n              <SelectElement                                                          \n                name=\"specimenType\"                                                   \n                label=\"Specimen Type\"                                                 \n                options={this.props.specimenTypes}                                    \n                onUserInput={this.setFormData}                                        \n                ref=\"specimenType\"                                                    \n                required={true}                                                       \n                value={this.state.formData.specimenType}                              \n              />                 \n              <SelectElement                                                        \n                name=\"containerType\"                                                \n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setFormData}                                      \n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.state.formData.containerType}                           \n              />            \n              <SpecimenCollectionForm\n                formData={this.props.formData}\n                setParentFormData={this.setChildFormData}\n                onChange={this.props.onChange}\n                specimenTypes={this.props.specimenTypes}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n                containerTypesPrimary={this.props.containerTypesPrimary}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                stati={this.props.stati}\n              />\n              <ContainerParentForm                                                    \n                setParentFormData={this.setContainerParentFormData}                   \n                containersNonPrimary={this.props.containersNonPrimary}                \n                containerDimensions={this.props.containerDimensions}                  \n                containerCoordinates={this.props.containerCoordinates}                \n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeFormButton}\n              {addBarcodeFormText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeFormButton}\n              {copyBarcodeFormText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    this.props.onChange instanceof Function && this.props.onChange();   \n\n    var formData = this.state.formData;\n    formData[formElement] = value;\n\n    this.setState(\n      {\n      formData: formData\n      },\n      this.setParentFormData\n    );\n  }\n\n  setChildFormData(collectionFormData) {\n    var formData = this.state.formData;\n    \n    for (let field in collectionFormData) {\n      formData[field] = collectionFormData[field]\n    }\n \n    this.setState(\n      {\n        formData: formData\n      },\n      this.setParentFormData\n    );\n  }\n\n  setParentFormData() {\n    this.props.setParentFormData(this.state.formData, this.props.barcodeKey);\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n  id: React.PropTypes.string,\n  specimenTypes: React.PropTypes.object.isRequired,\n  containerTypesPrimary: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  capacities: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.getSpecimenTypeFields = this.getSpecimenTypeFields.bind(this);\n  }\n\n  render() {\n\n    let updateButton;\n    if (this.props.specimen) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n     \n      //This modifies the selections for unit drop down based on the chosen specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        specimenTypeFields = this.getSpecimenTypeFields(specimenTypeFieldsObject);\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setSpecimenData}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setSpecimenData}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setSpecimenData}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setSpecimenData}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setSpecimenData}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n\n  // TODO: decouple this code from the preaprationForm by making it a React Component\n  // This generates all the form fields for a given specimen type\n  getSpecimenTypeFields(fieldsObject) {\n    let specimenTypeFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"text\" || datatype === \"number\") {\n\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setSpecimenData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.collection.data[attribute]}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setSpecimenData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.collection.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setSpecimenData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.props.specimen.collection.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n        // There is currently no CheckboxElement or RadioElement in loris/jsx/Form.js and therefore\n        // this is not possible.     \n      }\n    })\n\n    return specimenTypeFields;\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formData: {data:{}},\n      currentProtocol: this.props.preparation ? this.props.preparation.protocolId : null,\n      formErrors: {},\n    };\n\n    this.setFormData = this.setFormData.bind(this);\n    this.setParentFormData = this.setParentFormData.bind(this);\n    this.setSpecimenProtocolFieldFormData = this.setSpecimenProtocolFieldFormData.bind(this);\n    this.getSpecimenProtocolFields = this.getSpecimenProtocolFields.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.savePreparation = this.savePreparation.bind(this);\n  }\n\n  componentDidMount() {\n    let formData = this.state.formData;\n\n    // if (this.props.specimenId) ??\n    formData['specimenId'] = this.props.specimenId;\n\n    //TODO: this is a shitty fix to the problem, do better.\n    // Actually, this may be less shitty than I thought\n    if (this.props.formData) {\n      formData = this.props.formData;\n  \n      let currentProtocol;\n      currentProtocol = this.props.formData.protocolId || null;\n      this.setState({currentProtocol});\n    }\n\n    // This for autoloading data and will be used later\n    if (this.props.preparation) {\n      formData['protocolId'] = this.props.preparation.protocolId;\n      formData['locationId'] = this.props.preparation.locationId;\n      formData['date']       = this.props.preparation.date;\n      formData['time']       = this.props.preparation.time;\n      formData['comments']   = this.props.preparation.comments;\n\n      var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.state.currentProtocol];\n      if (specimenProtocolFieldsObject) {\n        var specimenProtocolFields = Object.keys(specimenProtocolFieldsObject).map((attribute) => {\n          formData.data[attribute] = this.props.preparation.data[attribute];\n        });\n      }\n    }\n    this.setState({\n      formData: formData\n    });\n  }\n\n  render() {\n\n    var submitButton;\n    //TODO: fix this second check (!this.props.specimenId) -- it's not great\n    // All it does is signal that we are in the pool specimen form. There must be\n    // a better way!!\n    if (this.props.preparation || !this.props.specimenId) {\n      submitButton = null;\n    } else if (!this.props.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    var updateButton;\n    var locationField;\n    if (this.props.preparation) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n\n      locationField = (\n        <SelectElement\n          name=\"locationId\"\n          label=\"Location\"\n          options={this.props.sites}\n          onUserInput={this.setFormData}\n          required={true}\n          value={this.state.formData.locationId}\n        />\n      );\n    }\n\n  let specimenProtocolFields;\n  if (this.state.currentProtocol) {\n    var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.state.currentProtocol];\n\n    if (specimenProtocolFieldsObject) {\n      specimenProtocolFields = this.getSpecimenProtocolFields(specimenProtocolFieldsObject);\n    }\n  }\n\n    //This will be for default fields, if there are any eventually\n    if (this.state.currentSpecimenProtocol) {\n      preparationFields = (\n        <div>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.handleSave}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setFormData}\n          required={true}\n          value={this.state.formData.protocolId}\n        />\n        {locationField}\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setFormData}\n          required={true}\n          value={this.state.formData.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setFormData}\n          required={true}\n          value={this.state.formData.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setFormData}\n          value={this.state.formData.comments}\n        />\n        {submitButton} \n        {updateButton}\n      </FormElement>\n    );\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n\n    let formData = this.state.formData;\n\n    if (formElement === \"protocolId\" && value !== \"\") {\n      //This is to eliminate the values for the specimen protocol fields\n      //TODO: This could potentially be improved later to retain the values\n      //for the fields that are common accross protocols\n      formData.data = {};\n      this.setState({\n        currentProtocol: value\n      });\n    }\n\n    formData[formElement] = value;\n\n    this.setState(\n      {formData}, \n      this.setParentFormData\n    );\n  }\n\n  setSpecimenProtocolFieldFormData(formElement, value) {\n    let formData = this.state.formData;\n    formData.data[formElement] = value;\n  \n    this.setState(\n      {formData}, \n      this.setParentFormData\n    );\n  }\n\n  setParentFormData() {\n    if (this.props.setParentFormData) {\n      let formData = this.state.formData;\n      this.props.setParentFormData(formData);\n    }\n  } \n\n  // TODO: decouple this code from the collectionForm by make it a React Component\n  // This generates all the form fields for a given specimen protocol\n  getSpecimenProtocolFields(fieldsObject) {\n    var specimenProtocolFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\n      if (datatype === \"text\" || datatype === \"number\") {\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setSpecimenProtocolFieldFormData}\n              ref={attribute}\n              required={fieldsObject[attribute]['required']}\n              value={this.state.formData.data[attribute]}\n              errorMessage={this.state.formErrors[attribute] ? 'This is a '+datatype+' field.' : null}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setSpecimenProtocolFieldFormData}\n              ref={attribute}\n              required={fieldsObject[attribute]['required']}\n              value={this.state.formData.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setSpecimenProtocolFieldFormData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.state.formData.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n      \n      }\n    })\n\n    return specimenProtocolFields;\n  }\n\n  handleSave(e) {\n    //more things will go here later\n    if (!this.props.preparation) {\n      this.savePreparation(this.props.insertAction)\n    }\n    if (this.props.preparation) {\n      this.savePreparation(this.props.updateAction);\n    }\n  }\n\n  savePreparation(action) {\n    let formData = this.state.formData;\n    formData['data'] = JSON.stringify(formData['data']);\n\n    console.log(formData);\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: action,\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        let xhr = new window.XMLHttpRequest();\n        return xhr;\n      }.bind(this),\n      success: function() {\n        //Update Parent Specimen Page Here\n        //formData.data = JSON.parse(formData.data);\n        this.props.refreshParent();\n        //swal(\"Specimen Preparation Update Successful!\", \"\", \"success\");\n        //this.props.onSuccess();\n      }.bind(this),\n      error: function(err) {\n        console.error(err);\n        let msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\n        this.setState({\n          errorMessage: msg,\n        });\n        swal(msg, \"\", \"error\");\n      }.bind(this)\n    });\n  }\n}\n\nSpecimenPreparationForm.propTypes = {\n  containerTypesPrimary: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  capacities: React.PropTypes.object.isRequired,\n  units: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\nimport Modal from './Modal';\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\n\nclass FormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { show: false, throwWarning: false }\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.confirmClose = this.confirmClose.bind(this);\n    this.setWarning = this.setWarning.bind(this);\n  }\n\n  renderChildren() {\n    return React.Children.map(this.props.children, child => {\n      return React.cloneElement(child, { onSuccess: this.closeModal, onChange: this.setWarning });\n    });\n  }\n\n  openModal() {\n    this.setState({\n      show: true\n    });\n  } \n\n  setWarning() {\n    this.setState({\n      throwWarning: true\n    });\n  }\n\n  confirmClose() {\n    if (this.state.throwWarning) {\n      swal({\n        title: \"Are You Sure?\",\n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Proceed',\n        cancelButtonText: 'Cancel',\n      },\n      function() {\n        this.closeModal();\n      }.bind(this));\n    } else {\n      this.closeModal();\n    }\n  }\n\n  closeModal() {\n    this.setState({\n      show: false,\n      throwWarning: false\n    });\n  }\n\n  render() {\n    return (\n      <Modal \n        closeModal={this.confirmClose} \n        openModal={this.openModal} \n        show={this.state.show}\n        {...this.props} \n      >\n        {this.renderChildren()}\n      </Modal>\n    );\n  }\n}\n\nFormModal.propTypes = {\n  title: React.PropTypes.string,\n  buttonClass: React.PropTypes.string,\n  buttonStyle: React.PropTypes.object,\n  buttonContent: React.PropTypes.object,\n};\nFormModal.defaultProps = {\n  buttonClass: 'btn btn-primary'\n};\n\nexport default FormModal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FormModal.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 1000,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '70px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    var button = (\n      <div\n        className={this.props.buttonClass}\n        onClick={this.props.openModal}\n      >\n        {this.props.buttonContent}\n      </div>\n    );\n\n    var modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.props.closeModal}>\n          <div\n            style={modalStyle}\n            onClick={e => {\n              e.stopPropagation();\n            }}\n          >\n            <div\n              style={titleStyle}\n            >\n              {this.props.title}\n              <span \n                style={glyphStyle}\n                onClick={this.props.closeModal}\n              >\n                ×\n              </span>\n            </div>\n            <div\n              style={bodyStyle}\n            >\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div style={this.props.style}>\n        {button}\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  buttonClass: React.PropTypes.string,\n  buttonStyle: React.PropTypes.object,\n  buttonContent: React.PropTypes.object,\n  show: React.PropTypes.boolean,\n  closeModal: React.PropTypes.func,\n  openModal: React.PropTypes.func\n};\nModal.defaultProps = {\n  buttonClass: 'btn btn-primary'\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","/**\n * This file contains React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n      <div className='loader-container'>\n        <div className=\"loader\"/>\n      </div>\n\n\n    );\n  }\n}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","import FormModal from 'FormModal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.edit.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.toggle('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n        console.log(units);\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                className='centered-horizontal'\n                specimen={this.props.specimen}\n                units={units}\n                toggle={() => this.props.toggle('quantity')}\n                setSpecimenData={this.props.setSpecimenData}\n                revertSpecimenData={this.props.revertSpecimenData}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.edit.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('temperature')}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              className='centered-horizontal'                                   \n              container={this.props.container}                                  \n              toggle={() => this.props.toggle('temperature')}                     \n              setContainerData={this.props.setContainerData}\n              revertContainerData={this.props.revertContainerData}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.edit.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              className='centered-horizontal'                                   \n              container={this.props.container}                                  \n              stati={stati}\n              toggle={() => this.props.toggle('status')}                          \n              setContainerData={this.props.setContainerData}                          \n              revertContainerData={this.props.revertContainerData}                    \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.edit.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.sites[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              className='centered-horizontal'                                   \n              container={this.props.container}\n              sites={this.props.options.sites}\n              toggle={() => this.props.toggle('location')}                        \n              setContainerData={this.props.setContainerData}                          \n              revertContainerData={this.props.revertContainerData}                    \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.sites[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if (this.props.data.specimen) {\n      if (this.props.specimen.parentSpecimenId) {\n        let specimenURL = loris.BaseURL='/biobank/specimen/?barcode=';\n        let parentSpecimenFieldValue = (\n          <a href={specimenURL+this.props.data.parentSpecimen.barcode}>\n            {this.props.data.parentSpecimen.barcode}\n          </a>\n        );\n\n        parentSpecimenField = (\n          <div className='item'>\n            <div className='field'>\n            Parent Specimen\n              <div className='value'>\n                {parentSpecimenFieldValue || 'None'}\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let containerURL = loris.BaseURL+\"/biobank/container/?barcode=\";            \n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a                                                                      \n          href={containerURL+this.props.options.containersNonPrimary[             \n            this.props.data.container.parentContainerId                           \n          ].barcode}>                                                             \n            {this.props.options.containersNonPrimary[                             \n              this.props.data.container.parentContainerId                         \n            ].barcode}                                                            \n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <FormModal                                                              \n            title='Update Parent Container'                                       \n            buttonClass='action-button update'                                    \n            buttonContent={<span className='glyphicon glyphicon-chevron-right'/>} \n          >                                                                       \n            <ContainerParentForm\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              setContainerData={this.props.setContainerData}                            \n              revertContainerData={this.props.revertContainerData}\n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </FormModal>                                                            \n        </div>                                                                    \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <TextboxElement\n          name='quantity'\n          labelClass='col-xl-0'\n          inputClass='col-lg-12'\n          onUserInput={this.props.setSpecimenData}\n          value={this.props.specimen.quantity}\n        />\n        <SelectElement\n          name='unit'\n          labelClass='col-xl-0'\n          inputClass='col-lg-12'\n          options={this.props.units}\n          onUserInput={this.props.setSpecimenData}\n          value={this.props.specimen.unitId}\n        />\n        <ButtonElement\n          label=\"Update\"\n          onUserInput={this.props.saveSpecimen}\n          columnSize= 'col-lg-12'\n        />\n        <a onClick={this.props.toggle}\n        >\n          Cancel\n        </a>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimenData: React.PropTypes.func,\n  revertSpecimenData: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <TextboxElement\n              name='temperature'\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.temperature}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a onClick={()=>{this.props.toggle(); this.props.revertContainerData()}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.statusId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={() => \n              {this.props.revertContainerData(); this.props.toggle();}\n            }\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='locationId'\n              options={this.props.sites}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.locationId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={() => \n              {this.props.revertContainerData(); this.props.toggle();}\n            }\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  sites: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n  constructor() {\n    super();\n    this.mapFormOptions = this.mapFormOptions.bind(this);\n  }\n\n  //map options for forms\n  mapFormOptions(rawObject, targetAttribute) {\n    let data = {}; \n    for (let id in rawObject) {\n      data[id] = rawObject[id][targetAttribute];\n    }   \n\n    return data;\n  }\n\n  render() {\n    let containerDisplay;\n    let containerBarcodesNonPrimary = this.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.props.setContainerData}\n        required={true}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions = {\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates = {\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes = {this.props.containerTypes}\n            containerStati = {this.props.containerStati} \n            select = {true}\n            selectedCoordinate = {this.props.container.coordinate}\n            setContainerData = {this.props.setContainerData}\n          />\n        );\n      }\n    }   \n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        <br/>\n        <ButtonElement label=\"Update\"/>\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let type = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary ? 'specimen' : 'container';\n      let url = loris.BaseURL+'/biobank/'+type+'/?barcode='+\n        this.props.children[this.props.coordinates[coordinate]].barcode;\n\n      window.location.href = url;\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    this.props.saveChildContainer(container);\n  }\n\n  render() {\n  // This is eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  var coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = null;\n\n        if (!this.props.select) {\n          // This double if statement doesn't sound great\n          if (this.props.coordinates) {\n            if (this.props.coordinates[coordinate]) {\n              nodeClass = 'node occupied';\n              dataHtml = 'true';\n              dataToggle = 'tooltip';\n              dataPlacement = 'top';\n              tooltipTitle = \n            '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n              draggable = 'true';\n              onDragStart = this.drag;\n              onDragOver = null;\n              onDrop = null;\n              onClick = this.redirectURL;\n            }\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainerData('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n\t\t\t  onClick = (e) => this.props.setContainerData('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            // TODO: --- This is currently not working ---\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div\n          className='row'\n          style={rowStyle} \n        >\n          {column}\n        </div>\n      )\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div className='display'>\n        {display}\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass LifeCycle extends React.Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n    \n    };\n   \n  }\n\n  componentDidMount() {\n  }\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css(\n        {'border': '2px solid #093782',\n         'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'});\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #093782', 'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'});\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n\n    let collectionNode;\n    let collectionTooltip;\n    if (this.props.collection || this.props.container) {\n      collectionTooltip = (\n        <div>\n          <h>Collection</h>\n          <p>Date:</p> \n        </div>\n      );\n\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    let preparationNode;\n    if (this.props.preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    let analysisNode;\n    if (this.props.analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'/>\n           <div className='lifecycle-text'>Analysis</div>\n        </div>\n      );\n    }\n\n    let line;\n    line = (\n        <div className='lifecycle-line'/>\n    );\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainerData('parentContainerId', null);\n    this.props.setContainerData('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainerData: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankSpecimen */\n\nimport FormModal from 'FormModal';\nimport Loader from 'Loader';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: {},\n      isLoaded: false,\n      loadedData: 0,\n      edit: {\n        temperature: false,\n        quantity: false,\n        collection: false,\n        preparation: false\n      }\n    };\n\n    this.fetchSpecimenData = this.fetchSpecimenData.bind(this);\n    this.fetchOptions = this.fetchOptions.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleAll = this.toggleAll.bind(this);\n    this.mapFormOptions = this.mapFormOptions.bind(this);\n    this.setContainerData = this.setContainerData.bind(this);\n    this.revertContainerData = this.revertContainerData.bind(this);\n    this.setSpecimenData = this.setSpecimenData.bind(this);\n    this.revertSpecimenData = this.revertSpecimenData.bind(this);\n    this.saveContainer = this.saveContainer.bind(this);\n    this.saveSpecimen = this.saveSpecimen.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchSpecimenData();\n    this.fetchOptions();\n  }\n\n  fetchSpecimenData() {\n    var self = this;\n    $.ajax(this.props.specimenPageDataURL, {\n      dataType: 'json',\n      success: function(data) {\n        let specimen = JSON.parse(JSON.stringify(data.specimen));\n        let container = JSON.parse(JSON.stringify(data.container));\n        self.setState({\n          data: data,\n          container: container,\n          specimen: specimen,\n          isLoaded: true,\n        });\n      },\n      error: function(error, errorCode, errorMsg) {\n        console.error(error, errorCode, errorMsg);\n        self.setState({\n          error: 'An error occurred when loading the form!'\n        });\n      }\n    });\n  }\n\n  fetchOptions() {\n    var self = this;\n    $.ajax(this.props.optionsURL, {\n      dataType: 'json',\n      success: function(data) {\n        self.setState({\n          options: data,\n        });\n      },\n      error: function(error, errorCode, errorMsg) {\n        console.error(error, errorCode, errorMsg);\n        self.setState({\n          error: 'An error occurred when loading the form!'\n        });\n      }\n    });\n  }\n\n  saveContainer() {\n    let container = JSON.parse(JSON.stringify(this.state.container));\n    let containerObj = new FormData();\n    for (let key in container) {\n      containerObj.append(key, container[key]);\n    }   \n  \n    this.submit(containerObj, this.props.saveContainer, 'Container Save Successful!').then(\n      () => {\n        //this.fetchSpecimenData();\n        //this.fetchOptions();\n        let data = this.state.data;\n        data.container = JSON.parse(JSON.stringify(this.state.container));\n        this.setState({data});\n      }\n    );\n  }\n\n  saveSpecimen() {\n    let specimen = JSON.parse(JSON.stringify(this.state.specimen));;\n    let specimenObj = new FormData();\n    for (let key in specimen) {\n      if ((key === 'collection') || (key === 'preparation') || (key === 'analysis')) {\n          specimen[key] = JSON.stringify(specimen[key]);\n      }\n      specimenObj.append(key, specimen[key]);\n    }   \n\n    this.submit(specimenObj, this.props.saveSpecimen, 'Specimen Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.specimen = JSON.parse(JSON.stringify(this.state.specimen));\n        this.setState({data})\n      }\n    );\n  }\n\n  //TODO: this should likely be placed in its own component.\n  //TODO: should the success messages be coming from the back end?\n  submit(data, url, message) {\n    return new Promise(resolve => {\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: data,\n        cache: false,\n        contentType: false,\n        processData: false,\n        xhr: function() {\n          let xhr = new window.XMLHttpRequest();\n          return xhr;\n        }.bind(this),\n        success: () => {\n          resolve();\n          this.toggleAll();\n          swal(message, '', 'success');\n        },\n        error: error => {\n          let message = error.responseJSON ? error.responseJSON.message : \"Submission error!\";\n          this.setState({\n            errorMessage: message\n          });\n          swal(message, '', 'error');\n          console.error(error);\n        }\n      });\n    })\n  }\n\n  toggle(stateKey) {\n    let edit = this.state.edit;\n    let stateValue = edit[stateKey];\n    edit[stateKey] = !stateValue;\n    this.setState({edit});\n  }\n\n  toggleAll() {\n    let edit = this.state.edit;\n    for (let key in edit) {\n      edit[key] = false;\n    }\n    this.setState({edit});\n  }\n\n  // TODO: map options for forms - this is used frequently and may need\n  // to be moved to a more global place\n  mapFormOptions(rawObject, targetAttribute) {\n    var data = {};\n    for (var id in rawObject) {\n      data[id] = rawObject[id][targetAttribute];\n    }\n\n    return data;\n  }\n\n  setContainerData(name, value) {\n    let container = this.state.container;\n\n    if (value !== null) {\n      container[name] = value;\n    } else {\n      delete container[name];\n    }\n\n    this.setState({container});\n  }\n\n  revertContainerData() {\n    let container = this.state.container;\n    container = this.state.data.container;\n    this.setState({container});\n  }\n\n  setSpecimenData(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n\n    this.setState({specimen});\n  }\n\n  revertSpecimenData() {\n    let specimen = this.state.specimen;\n    specimen = this.state.data.specimen;\n    this.setState({specimen});\n  }\n\n  render() {\n    // Data loading error\n    if (this.state.error !== undefined) {\n      return (\n        <div className=\"alert alert-danger text-center\">\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    // Waiting for data to load\n    if (!this.state.isLoaded) {\n      return (\n        <Loader/>\n      );\n    }\n\n    /**\n     * Specimen Form\n     */\n    let addAliquotForm;\n\n    if (loris.userHasPermission('biobank_write')) {\n      /**\n       * Map Options for Form Select Elements\n       */      \n      let specimenTypes = {};\n      //produces options conditionally based on the parentId of the specimen\n      for (let id in this.state.options.specimenTypes) {\n        // if parentTypeId is equal to typeId\n        if (\n             (this.state.options.specimenTypes[id].parentTypeId == \n             this.state.data.specimen.typeId) || \n             (id == this.state.data.specimen.typeId)\n           ) {\n          specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n        }\n      }\n\n      let specimenUnits = this.mapFormOptions(this.state.options.specimenUnits, 'unit');\n      let containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\n      let addAliquotButtonContent = (\n        <span>+</span>  \n      );\n\n      addAliquotForm = (\n        <div title='Make Aliquots'>\n          <FormModal\n            title=\"Add Aliquots\"\n            buttonClass='action-button add'\n            buttonContent={addAliquotButtonContent}\n          >\n            <BiobankSpecimenForm\n              action={`${loris.BaseURL}/biobank/ajax/submitData.php?action=submitSpecimen`}\n              parentSpecimenIds={this.state.data.specimen.id}\n              parentSpecimenBarcodes={this.state.data.container.barcode}\n              candidateId={this.state.data.specimen.candidateId}\n              sessionId={this.state.data.specimen.sessionId} \n              pscid={this.state.data.candidate.PSCID}\n              visit={this.state.data.session.Visit_label}\n              unitId={this.state.data.specimen.unitId}\n              specimenTypes={specimenTypes}\n              specimenTypeUnits={this.state.options.specimenTypeUnits}\n              specimenUnits = {specimenUnits}\n              containerTypesPrimary={containerTypesPrimary}\n              containersNonPrimary={this.state.options.containersNonPrimary}\n              containerDimensions={this.state.options.containerDimensions}\n              containerCoordinates={this.state.options.containerCoordinates}\n              specimenTypeAttributes={this.state.options.specimenTypeAttributes}\n              attributeDatatypes={this.state.options.attributeDatatypes}\n              attributeOptions={this.state.options.attributeOptions}\n              refreshParent={this.fetchSpecimenData}\n            />\n          </FormModal>\n        </div>\n      );\n    }\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.state.edit.collection) {\n\n      //Map Options for Form Select Elements\n      let specimenTypes = {};\n      //produces options conditionally based on the parentId of the specimen\n      for (var id in this.state.options.specimenTypes) {\n        // if specimen type has a parent type\n        if (this.state.options.specimenTypes[this.state.data.specimen.typeId].parentTypeId) {\n          if (this.state.options.specimenTypes[id].parentTypeId == \n             this.state.options.specimenTypes[this.state.data.specimen.typeId].parentTypeId\n             || id == this.state.data.specimen.typeId) {\n            specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n          }\n        // else if specimen type has no parent type\n        } else {\n          if (!this.state.options.specimenTypes[id].parentTypeId) {\n            specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n          }\n        }\n      }\n\n      let containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.state.data.specimen}\n          specimenTypes={specimenTypes}\n          specimenTypeAttributes={this.state.options.specimenTypeAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.state.options.specimenTypeUnits}\n          toggle={() => this.toggle('collection')}\n          setSpecimenData={this.setSpecimenData}\n          revertSpecimenData={this.revertSpecimenData}\n          saveSpecimen={this.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={() => this.toggle('collection')}\n        >\n          Cancel\n        </a>\n      );\n\n    } else {\n\n      //loops through data object to produce static elements\n      if (this.state.data.specimen.collection.data) {\n        var dataObject = this.state.data.specimen.collection.data;\n        var specimenTypeAttributes = Object.keys(dataObject).map((key) => {\n          return (\n            <StaticElement\n              label={this.state.options.specimenTypeAttributes[this.state.data.specimen.typeId][key].name}\n              text={dataObject[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.state.data.specimen.collection.quantity+' '+\n              this.state.options.specimenUnits[\n                this.state.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.sites[this.state.data.specimen.collection.locationId]}\n          />\n\t      {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.state.edit.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.state.edit.collection ? null : () => this.toggle('collection')}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    \n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let specimenProtocolAttributes;\n    let cancelEditPreparationButton;\n\n    // If the form is an edit state\n    if (this.state.edit.preparation) {\n      //Map Options for Form Select Elements Here\n      specimenProtocolAttributes = this.state.options.specimenProtocolAttributes[this.state.data.specimen.typeId];\n\n      //This remaps specimen Protocols based on the specimen Type\n      //this may need to be refactored or put into a function later\n      let specimenProtocols = {};\n      for (let id in specimenProtocolAttributes) {\n        specimenProtocols[id] = this.state.options.specimenProtocols[id];\n      }\n\n      specimenProtocols = this.mapFormOptions(specimenProtocols, 'protocol');\n \n      preparationForm = (\n        <SpecimenPreparationForm\n          specimenId={this.state.data.specimen.id}\n          preparation={this.state.data.specimen.preparation ? this.state.data.specimen.preparation : null}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          sites={this.state.options.sites}\n          insertAction={`${loris.BaseURL}/biobank/ajax/submitData.php?action=insertSpecimenPreparation`}\n          updateAction={`${loris.BaseURL}/biobank/ajax/submitData.php?action=updateSpecimenPreparation`}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a className=\"pull-right\" style={{cursor:'pointer'}} onClick={() => this.toggle('preparation')}>Cancel</a>\n      );\n    }\n\n    // If Preparation Does Exist and the form is not in an edit state\n    if (this.state.data.specimen.preparation && !this.state.edit.preparation) {\n      var dataObject = this.state.data.specimen.preparation.data;\n      \n      if (dataObject) {\n        specimenProtocolAttributes = Object.keys(dataObject).map((key) => {\n          return (\n            <StaticElement\n              label={this.state.options.specimenProtocolAttributes[this.state.data.specimen.typeId][this.state.data.specimen.preparation.protocolId][key].name}\n              text={dataObject[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.state.options.specimenProtocols[this.state.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.sites[this.state.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (this.state.options.specimenProtocolAttributes[this.state.data.specimen.typeId] && \n        !this.state.data.specimen.preparation && !this.state.edit.preparation) {\n      preparationPanel = (\n        <div\n          className='panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => this.toggle('preparation')}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n\n    } else if (this.state.data.specimen.preparation || this.state.edit.preparation) {\n      preparationPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.state.edit.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.state.edit.preparation ? null : () => this.toggle('preparation')}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    analysisPanel = (\n\t  <div\n        className='panel inactive'\n\t  >\n        <div\n          className='add-process'\n        >\n          <span className='glyphicon glyphicon-plus'/>\n        </div>\n        <div>\n        ADD ANALYSIS\n        </div>\n      </div>\n    );\n\n    let globals = (\n      <Globals\n        specimen={this.state.specimen}\n        container={this.state.container}\n        data={this.state.data}\n        options={this.state.options}\n        edit={this.state.edit}\n        toggle={this.toggle}\n        mapFormOptions={this.mapFormOptions}\n        setSpecimenData={this.setSpecimenData}\n        revertSpecimenData={this.revertSpecimenData}\n        saveSpecimen={this.saveSpecimen}\n        setContainerData={this.setContainerData}\n        revertContainerData={this.revertContainerData}\n        saveContainer={this.saveContainer}\n      />\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.state.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.state.container}\n              setContainerData={this.setContainerData}\n              saveContainer={this.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            collection={this.state.data.specimen.collection}\n            preparation={this.state.data.specimen.preparation}\n            analysis={this.state.data.specimen.analysis}\n            sites={this.state.options.sites}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n      </div>\n    ); \n  }\n\n}\n\n  \n\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\nwindow.BiobankSpecimen = BiobankSpecimen;\nwindow.RBiobankSpecimen = RBiobankSpecimen;\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js"],"sourceRoot":""}