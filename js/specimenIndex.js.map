{"version":3,"sources":["webpack:///modules/biobank/js/specimenIndex.js","webpack:///webpack/bootstrap c96f989a0538674481fa?b3a0*********","webpack:///./modules/biobank/jsx/specimenIndex.js","webpack:///./modules/biobank/jsx/specimenForm.js?35c0","webpack:///./modules/biobank/jsx/barcodeForm.js?02a4","webpack:///./modules/biobank/jsx/collectionForm.js?e0f7","webpack:///./modules/biobank/jsx/containerParentForm.js?0f0c*","webpack:///./modules/biobank/jsx/containerDisplay.js?4e23*","webpack:///./modules/biobank/jsx/preparationForm.js?0045","webpack:///./jsx/FormModal.js?4a02*","webpack:///./jsx/Modal.js?d3d7*","webpack:///./jsx/Loader.js?06c1*","webpack:///./modules/biobank/jsx/globals.js?ec01","webpack:///./modules/biobank/jsx/quantityField.js?752f","webpack:///./modules/biobank/jsx/temperatureField.js?6aab","webpack:///./modules/biobank/jsx/statusField.js?e88e","webpack:///./modules/biobank/jsx/locationField.js?527d","webpack:///./modules/biobank/jsx/lifeCycle.js?5ad9","webpack:///./modules/biobank/jsx/containerCheckout.js?acdc","webpack:///./modules/biobank/jsx/specimen.js","webpack:///./modules/biobank/jsx/analysisForm.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_specimen","_specimen2","args","QueryString","get","document","currentScript","src","$","biobankSpecimen","React","createElement","className","specimenPageDataURL","loris","BaseURL","barcode","optionsURL","saveContainer","saveSpecimen","saveBarcodeListURL","ReactDOM","render","getElementById","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","_React$Component","this","_this","getPrototypeOf","state","formErrors","candidateId","sessionId","centerId","barcodeList","1","specimen","collection","container","count","collapsed","copyMultiplier","toggleCollapse","bind","setSpecimen","setContainer","addBarcode","setCopyMultiplier","copyBarcode","removeBarcode","saveBarcodeList","setState","_this2","JSON","parse","stringify","availableId","keys","containerStati","find","statusId","temperature","locationId","originId","quantity","unitId","specimenTypes","typeId","freezeThaw","fTCycle","data","candidate","CandID","session","ID","parentSpecimenId","save","then","refreshParent","name","onChange","Function","sessionCenters","e","nextKey","multiplier","_this3","barcodeListArray","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","push","barcodeKey","mapFormOptions","containerTypesPrimary","containersNonPrimary","specimenTypeAttributes","attributeDatatypes","attributeOptions","capacities","containerDimensions","containerCoordinates","specimenTypeUnits","units","_iterator","Symbol","iterator","next","done","err","return","globalFields","remainingQuantityFields","StaticElement","label","text","PSCID","Visit_label","TextboxElement","onUserInput","setSpecimenData","required","SelectElement","options","specimenUnits","emptyOption","sessions","candidateSessions","candidates","placeHolder","disabled","FormElement","onSubmit","ref","ButtonElement","columnSize","Component","propTypes","_collectionForm","_collectionForm2","_containerParentForm","_containerParentForm2","SpecimenBarcodeForm","copy","addBarcodeButton","addBarcodeText","copyBarcodeButton","copyBarcodeText","onClick","type","min","max","style","width","display","removeBarcodeButton","glyphStyle","color","marginLeft","cursor","fontSize","parentTypeId","paddingLeft","marginTop","position","right","data-toggle","data-target","setContainerData","SpecimenCollectionForm","getSpecimenTypeFields","setCollectionData","addData","setData","fieldsObject","specimenTypeFields","map","attribute","datatype","DateElement","updateButton","unit","specimenTypeFieldsObject","specimenFields","minYear","maxYear","date","TimeElement","time","TextareaElement","comments","PropTypes","func","isRequired","object","_containerDisplay","_containerDisplay2","ContainerParentForm","apply","arguments","containerDisplay","containerBarcodesNonPrimary","parentContainerField","parentContainerId","dimensionId","dimensions","coordinatesTotal","dimension","coordinates","containerTypes","select","selectedCoordinate","coordinate","ContainerDisplay","redirectURL","drag","drop","tooltip","types","children","primary","url","window","location","href","preventDefault","dataTransfer","getData","newCoordinate","parseInt","saveChildContainer","column","row","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","status","coordinateDisplay","data-html","data-placement","data-original-title","rowHeight","rowStyle","height","SpecimenPreparationForm","getSpecimenProtocolFields","setPreparation","preparation","specimenProtocolFields","submitButton","protocolId","specimenProtocolFieldsObject","specimenProtocolAttributes","specimenProtocols","_extends","assign","source","hasOwnProperty","_Modal","_Modal2","FormModal","closeModal","confirmClose","closeAction","toggleModal","throwWarning","swal","title","showCancelButton","confirmButtonText","cancelButtonText","show","togglemodal","bool","defaultProps","Modal","backdropStyle","zIndex","top","bottom","left","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","borderTopRightRadius","bodyStyle","modal","stopPropagation","string","openModal","Loader","_FormModal","_FormModal2","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","Globals","increaseCycle","decreaseCycle","cycle","specimenTypeField","containerTypeField","quantityField","edit","toggle","revertSpecimenData","fTCycleField","temperatureField","revertContainerData","statusField","stati","locationField","centers","originField","parentSpecimenField","dateTimeCreate","specimenURL","parentSpecimenFieldValue","parentSpecimenContainer","parentContainerBarcodeValue","containerURL","containerParent","candidateSessionField","fieldList","QuantityField","labelClass","inputClass","TemperatureField","StatusField","LocationField","centerIds","LifeCycle","css","border","box-shadow","collectionNode","collectionTooltip","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","analysis","line","ContainerCheckout","checkoutContainer","checkoutButton","_Loader","_Loader2","_globals","_globals2","_preparationForm","_preparationForm2","_analysisForm","_analysisForm2","_specimenForm","_specimenForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","isLoaded","aliquot","fetch","loadPage","clone","toggleAll","addPreparation","Promise","resolve","_this4","ajax","dataType","success","error","errorCode","errorMsg","console","_this5","_this6","message","cache","textStatus","errorThrown","responseJSON","stateKey","stateValue","rawObject","targetAttribute","_this7","addAliquotForm","fetchSpecimenData","collectionPanel","collectionPanelForm","cancelEditCollectionButton","collectionData","preparationPanel","preparationForm","cancelEditPreparationButton","protocol","preparationData","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","method","analysisData","methodId","addAnalysis","globals","RBiobankSpecimen","createFactory","SpecimenAnalysisForm","getSpecimenMethodFields","setAnalysis","specimenMethodFields","specimenMethodFieldsObject"],"mappings":"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","file":"./modules/biobank/js/specimenIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _specimen = __webpack_require__(25);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar args = QueryString.get(document.currentScript.src); /* global ReactDOM */\n\t\n\t$(function () {\n\t  var biobankSpecimen = React.createElement(\n\t    \"div\",\n\t    { className: \"page-specimen-form\" },\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"row\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"col-md-9 col-lg-12\" },\n\t        React.createElement(_specimen2.default, {\n\t          specimenPageDataURL: loris.BaseURL + \"/biobank/ajax/requestData.php?action=getSpecimenData&barcode=\" + args.barcode,\n\t          optionsURL: loris.BaseURL + \"/biobank/ajax/requestData.php?action=getFormOptions\",\n\t          saveContainer: loris.BaseURL + \"/biobank/ajax/submitData.php?action=saveContainer\",\n\t          saveSpecimen: loris.BaseURL + \"/biobank/ajax/submitData.php?action=saveSpecimen\",\n\t          saveBarcodeListURL: loris.BaseURL + \"/biobank/ajax/submitData.php?action=saveBarcodeList\"\n\t        })\n\t      )\n\t    )\n\t  );\n\t\n\t  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(4);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      candidateId: null,\n\t      sessionId: null,\n\t      centerId: null,\n\t      barcodeList: { 1: { specimen: { collection: {} }, container: {} } },\n\t      count: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.addBarcode = _this.addBarcode.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyBarcode = _this.copyBarcode.bind(_this);\n\t    _this.removeBarcode = _this.removeBarcode.bind(_this);\n\t    _this.saveBarcodeList = _this.saveBarcodeList.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveBarcodeList',\n\t    value: function saveBarcodeList() {\n\t      var _this2 = this;\n\t\n\t      var barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var barcode in barcodeList) {\n\t        //set container values\n\t        var container = barcodeList[barcode].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.locationId = this.state.centerId;\n\t        container.originId = this.state.centerId;\n\t\n\t        //set specimen values\n\t        var specimen = barcodeList[barcode].specimen;\n\t        specimen.candidateId = this.state.candidateId;\n\t        specimen.sessionId = this.state.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.locationId = this.state.centerId;\n\t        if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n\t          specimen.fTCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: these will eventually be higher level states.\n\t        if (this.props.data) {\n\t          specimen.candidateId = this.props.data.candidate.CandID;\n\t          specimen.sessionId = this.props.data.session.ID;\n\t          specimen.parentSpecimenId = this.props.data.specimen.id;\n\t          specimen.collection.locationId = this.props.data.container.locationId;\n\t          container.locationId = this.props.data.container.locationId;\n\t          container.originId = this.props.data.container.locationId;\n\t        }\n\t\n\t        barcodeList[barcode].container = container;\n\t        barcodeList[barcode].specimen = specimen;\n\t      }\n\t\n\t      this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(function () {\n\t        _this2.props.refreshParent();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var centerId = this.state.centerId;\n\t      var candidateId = this.state.candidateId;\n\t      var sessionId = this.state.sessionId;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      if (name === 'candidateId') {\n\t        candidateId = value;\n\t      } else if (name === 'sessionId') {\n\t        sessionId = value;\n\t        centerId = this.props.sessionCenters[sessionId].centerId;\n\t      } else {\n\t        //this is eliminate values if specimen type is changed\n\t        if (name === 'typeId') {\n\t          barcodeList[key].specimen = { collection: {} };\n\t        }\n\t        barcodeList[key].specimen[name] = value;\n\t      }\n\t\n\t      this.setState({ barcodeList: barcodeList, centerId: centerId, candidateId: candidateId, sessionId: sessionId });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var barcodeList = this.state.barcodeList;\n\t      barcodeList[key].container[name] = value;\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'addBarcode',\n\t    value: function addBarcode() {\n\t      var barcodeList = this.state.barcodeList;\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t\n\t      barcodeList[count + 1] = { specimen: {}, container: { collection: {} } };\n\t      collapsed[count + 1] = true;\n\t      count = count + 1;\n\t\n\t      this.setState({ barcodeList: barcodeList, collapsed: collapsed, count: count });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyBarcode',\n\t    value: function copyBarcode(key) {\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t      var nextKey = count + 1;\n\t      var barcodeList = this.state.barcodeList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key]));\n\t        delete barcodeList[nextKey].container.barcode;\n\t        collapsed[nextKey] = true;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList,\n\t        count: nextKey,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeBarcode',\n\t    value: function removeBarcode(key) {\n\t      var barcodeList = this.state.barcodeList;\n\t      delete barcodeList[key];\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(_barcodeForm2.default, {\n\t            data: _this3.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this3.state.collapsed[key],\n\t            toggleCollapse: _this3.toggleCollapse,\n\t            mapFormOptions: _this3.props.mapFormOptions,\n\t            container: _this3.state.barcodeList[key].container || null,\n\t            specimen: _this3.state.barcodeList[key].specimen || null,\n\t            removeBarcode: barcodeListArray.length !== 1 ? function () {\n\t              return _this3.removeBarcode(key);\n\t            } : null,\n\t            addBarcode: i == barcodeListArray.length ? _this3.addBarcode : null,\n\t            setCopyMultiplier: _this3.setCopyMultiplier,\n\t            copyMultiplier: _this3.state.copyMultiplier,\n\t            copyBarcode: i == barcodeListArray.length && _this3.state.barcodeList[key] ? _this3.copyBarcode : null,\n\t            setContainer: _this3.setContainer,\n\t            setSpecimen: _this3.setSpecimen,\n\t            onChange: _this3.props.onChange,\n\t            specimenTypes: _this3.props.specimenTypes,\n\t            containerTypesPrimary: _this3.props.containerTypesPrimary,\n\t            containersNonPrimary: _this3.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this3.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this3.props.attributeDatatypes,\n\t            attributeOptions: _this3.props.attributeOptions,\n\t            capacities: _this3.props.capacities,\n\t            containerDimensions: _this3.props.containerDimensions,\n\t            containerCoordinates: _this3.props.containerCoordinates,\n\t            specimenTypeUnits: _this3.props.specimenTypeUnits,\n\t            units: _this3.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimenData,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.state.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.candidateId,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.sessionId,\n\t            disabled: this.state.candidateId ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: function onSubmit() {\n\t            _this3.saveBarcodeList();\n\t            _this3.props.saveSpecimen instanceof Function && _this3.props.saveSpecimen();\n\t          },\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(5);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(6);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimen(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyBarcode(this.props.copyMultiplier);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var addBarcodeButton = void 0;\n\t      var addBarcodeText = void 0;\n\t      var copyBarcodeButton = void 0;\n\t      var copyBarcodeText = void 0;\n\t      if (this.props.addBarcode) {\n\t        addBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcode\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcode) {\n\t        copyBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeButton = void 0;\n\t      if (this.props.removeBarcode) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcode,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeBarcodeButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                setSpecimenData: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainerData: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeButton,\n\t              addBarcodeText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeButton,\n\t              copyBarcodeText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.getSpecimenTypeFields = _this.getSpecimenTypeFields.bind(_this);\n\t    _this.setCollectionData = _this.setCollectionData.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollectionData',\n\t    value: function setCollectionData(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimenData('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimenData('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollectionData('data', data);\n\t    }\n\t\n\t    // This generates all the form fields for a given specimen type\n\t\n\t  }, {\n\t    key: 'getSpecimenTypeFields',\n\t    value: function getSpecimenTypeFields(fieldsObject) {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this2.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.collection.data[attribute]\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.collection.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this2.setData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this2.props.specimen.collection.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {\n\t          // There is currently no CheckboxElement or RadioElement in loris/jsx/Form.js and therefore\n\t          // this is not possible.     \n\t        }\n\t      });\n\t\n\t      return specimenTypeFields;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = this.getSpecimenTypeFields(specimenTypeFieldsObject);\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollectionData,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimenData: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(7);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * */\n\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    return _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.props.setContainerData,\n\t        required: true,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainerData: this.props.setContainerData\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var type = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary ? 'specimen' : 'container';\n\t        var url = loris.BaseURL + '/biobank/' + type + '/?barcode=' + this.props.children[this.props.coordinates[coordinate]].barcode;\n\t\n\t        window.location.href = url;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      this.props.saveChildContainer(container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // This is eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = null;\n\t\n\t            if (!this.props.select) {\n\t              // This double if statement doesn't sound great\n\t              if (this.props.coordinates) {\n\t                if (this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node occupied';\n\t                  dataHtml = 'true';\n\t                  dataToggle = 'tooltip';\n\t                  dataPlacement = 'top';\n\t                  tooltipTitle = '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                  draggable = 'true';\n\t                  onDragStart = this.drag;\n\t                  onDragOver = null;\n\t                  onDrop = null;\n\t                  onClick = this.redirectURL;\n\t                }\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this2.props.setContainerData('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this2.props.setContainerData('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  // TODO: --- This is currently not working ---\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            {\n\t              className: 'row',\n\t              style: rowStyle\n\t            },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'display' },\n\t        display\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 8 */,\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.getSpecimenProtocolFields = _this.getSpecimenProtocolFields.bind(_this);\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimenData('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimenData('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t\n\t    // TODO: decouple this code from the collectionForm by make it a React Component\n\t    // This generates all the form fields for a given specimen protocol\n\t\n\t  }, {\n\t    key: 'getSpecimenProtocolFields',\n\t    value: function getSpecimenProtocolFields(fieldsObject) {\n\t      var _this2 = this;\n\t\n\t      var specimenProtocolFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this2.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.preparation.data[attribute]\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.preparation.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this2.setData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this2.props.specimen.preparation.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {}\n\t      });\n\t\n\t      return specimenProtocolFields;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = this.getSpecimenProtocolFields(specimenProtocolFieldsObject);\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(14);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React components for Modal component.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\t\n\tvar FormModal = function (_React$Component) {\n\t  _inherits(FormModal, _React$Component);\n\t\n\t  function FormModal() {\n\t    _classCallCheck(this, FormModal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (FormModal.__proto__ || Object.getPrototypeOf(FormModal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    _this.confirmClose = _this.confirmClose.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FormModal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      this.props.closeAction instanceof Function && this.props.closeAction();\n\t      this.props.toggleModal();\n\t    }\n\t  }, {\n\t    key: \"confirmClose\",\n\t    value: function confirmClose() {\n\t      if (this.props.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          this.closeModal();\n\t        }.bind(this));\n\t      } else {\n\t        this.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        _Modal2.default,\n\t        _extends({\n\t          closeModal: this.confirmClose,\n\t          show: this.props.show\n\t        }, this.props),\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FormModal;\n\t}(React.Component);\n\t\n\tFormModal.propTypes = {\n\t  closeAction: React.PropTypes.func,\n\t  togglemodal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tFormModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = FormModal;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal(props) {\n\t    _classCallCheck(this, Modal);\n\t\n\t    return _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 1000,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '70px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          'div',\n\t          { style: backdropStyle, onClick: this.props.closeModal },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              style: modalStyle,\n\t              onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              }\n\t            },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                style: titleStyle\n\t              },\n\t              this.props.title,\n\t              React.createElement(\n\t                'span',\n\t                {\n\t                  style: glyphStyle,\n\t                  onClick: this.props.closeModal\n\t                },\n\t                '\\xD7'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                style: bodyStyle\n\t              },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func,\n\t  openModal: React.PropTypes.func\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader(props) {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).call(this, props));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"loader-container\" },\n\t        React.createElement(\"div\", { className: \"loader\" })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 16 */,\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FormModal = __webpack_require__(13);\n\t\n\tvar _FormModal2 = _interopRequireDefault(_FormModal);\n\t\n\tvar _quantityField = __webpack_require__(18);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(19);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(20);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(21);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(6);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimenData('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimenData('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.edit.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.toggle('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                className: 'centered-horizontal',\n\t                specimen: this.props.specimen,\n\t                units: units,\n\t                toggle: function toggle() {\n\t                  return _this2.props.toggle('quantity');\n\t                },\n\t                setSpecimenData: this.props.setSpecimenData,\n\t                revertSpecimenData: this.props.revertSpecimenData,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if ((this.props.data.specimen || {}).fTCycle !== undefined) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.edit.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('temperature');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.edit.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              stati: stati,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('status');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.edit.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              centers: this.props.options.centers,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('location');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var specimenURL = loris.BaseURL = '/biobank/specimen/?barcode=';\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { href: specimenURL + this.props.data.parentSpecimenContainer.barcode },\n\t          this.props.data.parentSpecimenContainer.barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var containerURL = loris.BaseURL + \"/biobank/container/?barcode=\";\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              href: containerURL + this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode },\n\t            this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleModal('containerParent');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t          ),\n\t          React.createElement(\n\t            _FormModal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              closeAction: this.props.revertContainerData,\n\t              show: this.props.show.containerParent,\n\t              toggleModal: function toggleModal() {\n\t                _this2.props.toggleModal('containerParent');\n\t              }\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(TextboxElement, {\n\t          name: 'quantity',\n\t          labelClass: 'col-xl-0',\n\t          inputClass: 'col-lg-12',\n\t          onUserInput: this.props.setSpecimenData,\n\t          value: this.props.specimen.quantity\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          name: 'unit',\n\t          labelClass: 'col-xl-0',\n\t          inputClass: 'col-lg-12',\n\t          options: this.props.units,\n\t          onUserInput: this.props.setSpecimenData,\n\t          value: this.props.specimen.unitId\n\t        }),\n\t        React.createElement(ButtonElement, {\n\t          label: 'Update',\n\t          onUserInput: this.props.saveSpecimen,\n\t          columnSize: 'col-lg-12'\n\t        }),\n\t        React.createElement(\n\t          'a',\n\t          {\n\t            onClick: function onClick() {\n\t              _this2.props.toggle();_this2.props.revertSpecimenData();\n\t            }\n\t          },\n\t          'Cancel'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimenData: React.PropTypes.func,\n\t  revertSpecimenData: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                _this2.props.toggle();_this2.props.revertContainerData();\n\t              } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                _this2.props.revertContainerData();_this2.props.toggle();\n\t              }\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.centerIds,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                _this2.props.revertContainerData();_this2.props.toggle();\n\t              }\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle(props) {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    var _this = _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).call(this, props));\n\t\n\t    _this.state = {};\n\t\n\t    return _this;\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {}\n\t  }, {\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({ 'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #093782', 'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var collectionNode = void 0;\n\t      var collectionTooltip = void 0;\n\t      if (this.props.collection || this.props.container) {\n\t        collectionTooltip = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'h',\n\t            null,\n\t            'Collection'\n\t          ),\n\t          React.createElement(\n\t            'p',\n\t            null,\n\t            'Date:'\n\t          )\n\t        );\n\t\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      var preparationNode = void 0;\n\t      if (this.props.preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      var analysisNode = void 0;\n\t      if (this.props.analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement('div', { className: 'lifecycle-node' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-text' },\n\t            'Analysis'\n\t          )\n\t        );\n\t      }\n\t\n\t      var line = void 0;\n\t      line = React.createElement('div', { className: 'lifecycle-line' });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 23 */,\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainerData('parentContainerId', null);\n\t      this.props.setContainerData('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FormModal = __webpack_require__(13);\n\t\n\tvar _FormModal2 = _interopRequireDefault(_FormModal);\n\t\n\tvar _Loader = __webpack_require__(15);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(17);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(5);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(9);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(26);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(3);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(22);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(24);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).call(this));\n\t\n\t    _this.state = {\n\t      data: {},\n\t      container: {},\n\t      specimen: {},\n\t      options: {},\n\t      isLoaded: false,\n\t      show: {\n\t        aliquot: false,\n\t        containerParent: false\n\t      },\n\t      edit: {\n\t        temperature: false,\n\t        quantity: false,\n\t        collection: false,\n\t        preparation: false,\n\t        analysis: false\n\t      }\n\t    };\n\t\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.loadPage = _this.loadPage.bind(_this);\n\t    _this.clone = _this.clone.bind(_this);\n\t    _this.toggle = _this.toggle.bind(_this);\n\t    _this.toggleModal = _this.toggleModal.bind(_this);\n\t    _this.toggleAll = _this.toggleAll.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.setContainerData = _this.setContainerData.bind(_this);\n\t    _this.revertContainerData = _this.revertContainerData.bind(_this);\n\t    _this.setSpecimenData = _this.setSpecimenData.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.revertSpecimenData = _this.revertSpecimenData.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _this2 = this;\n\t\n\t      this.loadPage().then(function () {\n\t        _this2.setState({ isLoaded: true });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadPage',\n\t    value: function loadPage() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this3.fetch('data', _this3.props.specimenPageDataURL).then(function (data) {\n\t          var specimen = _this3.clone(data.specimen);\n\t          var container = _this3.clone(data.container);\n\t          _this3.setState({ data: data, specimen: specimen, container: container });\n\t        });\n\t        _this3.fetch('options', _this3.props.optionsURL).then(function (data) {\n\t          var options = data;\n\t          _this3.setState({ options: options });\n\t        });\n\t        resolve();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetch',\n\t    value: function fetch(state, url) {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        $.ajax(url, {\n\t          dataType: 'json',\n\t          success: function success(data) {\n\t            resolve(data);\n\t          },\n\t          error: function error(_error, errorCode, errorMsg) {\n\t            console.error(_error, errorCode, errorMsg);\n\t            _this4.setState({\n\t              error: 'An error occurred when loading the form!'\n\t            });\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone(object) {\n\t      return JSON.parse(JSON.stringify(object));\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this5 = this;\n\t\n\t      var container = this.clone(this.state.container);\n\t      this.save(container, this.props.saveContainer, 'Container Save Successful!').then(function () {\n\t        var data = _this5.state.data;\n\t        data.container = _this5.clone(_this5.state.container);\n\t        _this5.setState({ data: data });\n\t        _this5.toggleAll();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this6 = this;\n\t\n\t      var specimen = this.clone(this.state.specimen);;\n\t      this.save(specimen, this.props.saveSpecimen, 'Specimen Save Successful!').then(function () {\n\t        var data = _this6.state.data;\n\t        data.specimen = _this6.clone(_this6.state.specimen);\n\t        _this6.setState({ data: data });\n\t        _this6.toggleAll();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(data, url, message) {\n\t      return new Promise(function (resolve) {\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: { data: JSON.stringify(data) },\n\t          cache: false,\n\t          success: function success() {\n\t            resolve();\n\t            message ? swal(message, '', 'success') : swal('Save Successful!', '', 'success');\n\t          },\n\t          error: function error(_error2, textStatus, errorThrown) {\n\t            var message = (_error2.responseJSON || {}).message || 'Submission error!';\n\t            swal(message, '', 'error');\n\t            console.error(_error2, textStatus, errorThrown);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle(stateKey) {\n\t      var edit = this.state.edit;\n\t      var stateValue = edit[stateKey];\n\t      edit[stateKey] = !stateValue;\n\t      this.setState({ edit: edit });\n\t    }\n\t  }, {\n\t    key: 'toggleModal',\n\t    value: function toggleModal(stateKey) {\n\t      var show = this.state.show;\n\t      var stateValue = show[stateKey];\n\t      show[stateKey] = !stateValue;\n\t      this.setState({ show: show });\n\t    }\n\t  }, {\n\t    key: 'toggleAll',\n\t    value: function toggleAll() {\n\t      var edit = this.state.edit;\n\t      for (var key in edit) {\n\t        edit[key] = false;\n\t      }\n\t      var show = this.state.show;\n\t      for (var _key in show) {\n\t        show[_key] = false;\n\t      }\n\t      this.setState({ edit: edit, show: show });\n\t    }\n\t\n\t    // TODO: map options for forms - this is used frequently and may need\n\t    // to be moved to a more global place\n\t\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(rawObject, targetAttribute) {\n\t      var data = {};\n\t      for (var id in rawObject) {\n\t        data[id] = rawObject[id][targetAttribute];\n\t      }\n\t\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'setContainerData',\n\t    value: function setContainerData(name, value) {\n\t      var container = this.state.container;\n\t\n\t      if (value !== null) {\n\t        container[name] = value;\n\t      } else {\n\t        delete container[name];\n\t      }\n\t\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainerData',\n\t    value: function revertContainerData() {\n\t      var container = this.state.container;\n\t      container = this.clone(this.state.data.container);\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenData',\n\t    value: function setSpecimenData(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addAnalysis',\n\t    value: function addAnalysis() {\n\t      var specimen = this.state.specimen;\n\t      specimen.analysis = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimenData',\n\t    value: function revertSpecimenData() {\n\t      var specimen = this.state.specimen;\n\t      specimen = this.clone(this.state.data.specimen);\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this7 = this;\n\t\n\t      // Data loading error\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      // Waiting for data to load\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(_Loader2.default, null);\n\t      }\n\t\n\t      /**\n\t       * Specimen Form\n\t       */\n\t      /**\n\t       * Map Options for Form Select Elements\n\t       */\n\t      var specimenUnits = this.mapFormOptions(this.state.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.mapFormOptions(this.state.options.containerStati, 'status');\n\t      var candidates = this.mapFormOptions(this.state.options.candidates, 'pscid');\n\t      var sessions = this.mapFormOptions(this.state.options.sessions, 'label');\n\t\n\t      var addAliquotForm = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Make Aliquots'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              return _this7.toggleModal('aliquot');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _FormModal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            closeAction: this.revertSpecimenData,\n\t            show: this.state.show.aliquot,\n\t            toggleModal: function toggleModal() {\n\t              _this7.toggleModal('aliquot');\n\t            }\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.state.data,\n\t            specimen: this.state.specimen,\n\t            setSpecimenData: this.setSpecimenData,\n\t            saveSpecimen: this.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.state.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.state.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.state.options.specimenTypeAttributes,\n\t            attributeOptions: this.state.options.attributeOptions,\n\t            attributeDatatypes: this.state.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.state.options.containersNonPrimary,\n\t            containerDimensions: this.state.options.containerDimensions,\n\t            containerCoordinates: this.state.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            refreshParent: this.fetchSpecimenData,\n\t            mapFormOptions: this.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            save: this.save\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.state.edit.collection) {\n\t        var _containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.state.specimen,\n\t          data: this.state.data,\n\t          specimenTypeAttributes: this.state.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.state.options.specimenTypeUnits,\n\t          toggle: function toggle() {\n\t            return _this7.toggle('collection');\n\t          },\n\t          setSpecimenData: this.setSpecimenData,\n\t          revertSpecimenData: this.revertSpecimenData,\n\t          saveSpecimen: this.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: function onClick() {\n\t              return _this7.toggle('collection');\n\t            }\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t\n\t        var specimenTypeAttributes = void 0;\n\t        //loops through data object to produce static elements\n\t        if (this.state.data.specimen.collection.data) {\n\t          var collectionData = this.state.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(collectionData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this7.state.options.specimenTypeAttributes[_this7.state.data.specimen.typeId][key].name,\n\t              text: collectionData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.state.data.specimen.collection.quantity + ' ' + this.state.options.specimenUnits[this.state.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.centers[this.state.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.state.edit.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.state.edit.collection ? null : function () {\n\t              return _this7.toggle('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.state.options.specimenProtocols) {\n\t        if (this.state.options.specimenProtocols[id].typeId === this.state.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.state.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.state.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.state.edit.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.state.specimen,\n\t          data: this.state.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          setSpecimenData: this.setSpecimenData,\n\t          revertSpecimenData: this.revertSpecimenData,\n\t          saveSpecimen: this.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: function onClick() {\n\t              _this7.toggle('preparation');_this7.revertSpecimenData();\n\t            }\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation Does Exist and the form is not in an edit state\n\t      if (this.state.data.specimen.preparation && !this.state.edit.preparation) {\n\t        if (this.state.data.specimen.preparation.data) {\n\t          var preparationData = this.state.data.specimen.preparation.data;\n\t          specimenProtocolAttributes = Object.keys(preparationData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this7.state.options.specimenProtocolAttributes[_this7.state.data.specimen.preparation.protocolId][key].name,\n\t              text: preparationData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.state.options.specimenProtocols[this.state.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.centers[this.state.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.state.data.specimen.preparation && !this.state.edit.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this7.toggle('preparation');_this7.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.state.data.specimen.preparation || this.state.edit.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.state.edit.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.state.edit.preparation ? null : function () {\n\t                return _this7.toggle('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.state.options.specimenMethods) {\n\t        if (this.state.options.specimenMethods[_id].typeId === this.state.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.state.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.state.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.state.edit.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.state.specimen,\n\t          data: this.state.data,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          setSpecimenData: this.setSpecimenData,\n\t          revertSpecimenData: this.revertSpecimenData,\n\t          saveSpecimen: this.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: function onClick() {\n\t              _this7.toggle('analysis');_this7.revertSpecimenData();\n\t            }\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.state.data.specimen.analysis && !this.state.edit.analysis) {\n\t        //TODO: This can likely go into a function since it is used elsewhere\n\t        if (this.state.data.specimen.analysis.data) {\n\t          var analysisData = this.state.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.key(analysisData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this7.state.options.specimenMethodAttributes[_this7.state.data.specimen.analysis.methodId][key].name,\n\t              text: analysisData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.state.options.specimenMethods[this.state.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.centers[this.state.data.specimen.analysis.locationId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.state.data.specimen.analysis && !this.state.edit.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this7.toggle('analysis');_this7.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.state.data.specimen.analysis || this.state.edit.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.state.edit.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.state.edit.analysis ? null : function () {\n\t                return _this7.toggle('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.state.specimen,\n\t        container: this.state.container,\n\t        data: this.state.data,\n\t        options: this.state.options,\n\t        edit: this.state.edit,\n\t        toggle: this.toggle,\n\t        show: this.state.show,\n\t        toggleModal: this.toggleModal,\n\t        mapFormOptions: this.mapFormOptions,\n\t        setSpecimenData: this.setSpecimenData,\n\t        revertSpecimenData: this.revertSpecimenData,\n\t        saveSpecimen: this.saveSpecimen,\n\t        setContainerData: this.setContainerData,\n\t        revertContainerData: this.revertContainerData,\n\t        saveContainer: this.saveContainer\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.state.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.state.container,\n\t              setContainerData: this.setContainerData,\n\t              saveContainer: this.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            collection: this.state.data.specimen.collection,\n\t            preparation: this.state.data.specimen.preparation,\n\t            analysis: this.state.data.specimen.analysis,\n\t            centers: this.state.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\t\n\twindow.BiobankSpecimen = BiobankSpecimen;\n\twindow.RBiobankSpecimen = RBiobankSpecimen;\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.getSpecimenMethodFields = _this.getSpecimenMethodFields.bind(_this);\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimenData('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimenData('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      data[name] = value;\n\t      this.setAnalysis('data', data);\n\t    }\n\t\n\t    // TODO: decouple this code from the collectionForm by make it a React Component\n\t    // This generates all the form fields for a given specimen method\n\t\n\t  }, {\n\t    key: 'getSpecimenMethodFields',\n\t    value: function getSpecimenMethodFields(fieldsObject) {\n\t      var _this2 = this;\n\t\n\t      var specimenMethodFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this2.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.analysis.data[attribute]\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.analysis.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this2.setData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this2.props.specimen.analysis.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {}\n\t      });\n\t\n\t      return specimenMethodFields;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.analysis) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = this.getSpecimenMethodFields(specimenMethodFieldsObject);\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/specimenIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c96f989a0538674481fa","/* global ReactDOM */\n\nimport BiobankSpecimen from './specimen';\nconst args = QueryString.get(document.currentScript.src);\n\n$(function() {\n  const biobankSpecimen = (\n    <div className=\"page-specimen-form\">\n      <div className=\"row\">\n        <div className=\"col-md-9 col-lg-12\">\n          <BiobankSpecimen\n            specimenPageDataURL={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getSpecimenData&barcode=${args.barcode}`}\n            optionsURL={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getFormOptions`}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n            saveSpecimen={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveSpecimen`}\n            saveBarcodeListURL={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveBarcodeList`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenIndex.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      formErrors: {},\n      candidateId: null,\n      sessionId: null,\n      centerId: null,\n      barcodeList: {1: {specimen: {collection: {}}, container: {}}},\n      count: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.addBarcode = this.addBarcode.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyBarcode = this.copyBarcode.bind(this);\n    this.removeBarcode = this.removeBarcode.bind(this);\n    this.saveBarcodeList = this.saveBarcodeList.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveBarcodeList() {\n    let barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let barcode in barcodeList) {\n      //set container values\n      let container = barcodeList[barcode].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.locationId = this.state.centerId;\n      container.originId = this.state.centerId;\n\n      //set specimen values\n      let specimen = barcodeList[barcode].specimen;\n      specimen.candidateId = this.state.candidateId;\n      specimen.sessionId = this.state.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.locationId = this.state.centerId;\n      if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n        specimen.fTCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: these will eventually be higher level states.\n      if (this.props.data) {\n        specimen.candidateId = this.props.data.candidate.CandID;\n        specimen.sessionId = this.props.data.session.ID;\n        specimen.parentSpecimenId = this.props.data.specimen.id;\n        specimen.collection.locationId = this.props.data.container.locationId;\n        container.locationId = this.props.data.container.locationId;\n        container.originId = this.props.data.container.locationId;\n      }\n    \n      barcodeList[barcode].container = container;\n      barcodeList[barcode].specimen = specimen;\n    }\n\n    this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(\n      () => {this.props.refreshParent();}\n    );\n  }\n\n  setSpecimen(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let centerId = this.state.centerId;\n    let candidateId = this.state.candidateId;\n    let sessionId = this.state.sessionId;\n    let barcodeList = this.state.barcodeList;\n\n    if (name === 'candidateId') {\n      candidateId = value;\n    } else if (name === 'sessionId') {\n      sessionId = value;\n      centerId = this.props.sessionCenters[sessionId].centerId;\n    } else {\n      //this is eliminate values if specimen type is changed\n      if (name === 'typeId') {\n        barcodeList[key].specimen = {collection:{}};\n      }\n      barcodeList[key].specimen[name] = value;\n    }\n\n    this.setState({barcodeList, centerId, candidateId, sessionId})\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let barcodeList = this.state.barcodeList;\n    barcodeList[key].container[name] = value;\n    this.setState({barcodeList});\n  }\n\n  addBarcode() {\n    let barcodeList = this.state.barcodeList;\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n\n    barcodeList[count+1] = {specimen: {}, container: {collection:{}}}; \n    collapsed[count+1] = true;\n    count = count+1\n\n    this.setState({barcodeList, collapsed, count});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyBarcode(key) {\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n    let nextKey = count+1;\n    let barcodeList = this.state.barcodeList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key])); \n      delete barcodeList[nextKey].container.barcode;\n      collapsed[nextKey] = true;\n      nextKey++;\n    }\n\n    this.setState({\n      barcodeList: barcodeList,\n      count: nextKey,\n      collapsed: collapsed,\n    });\n  }\n\n  removeBarcode(key) {\n    let barcodeList = this.state.barcodeList;\n    delete barcodeList[key];\n    this.setState({barcodeList: barcodeList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          container={this.state.barcodeList[key].container || null}\n          specimen={this.state.barcodeList[key].specimen || null}\n          removeBarcode={barcodeListArray.length !== 1 ?\n            () => this.removeBarcode(key) : null}\n          addBarcode={i == barcodeListArray.length ? this.addBarcode : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyBarcode={i == barcodeListArray.length && this.state.barcodeList[key] ? \n            this.copyBarcode : null}\n          setContainer={this.setContainer}\n          setSpecimen={this.setSpecimen}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimenData}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimenData}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.state.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.candidateId}\n            placeHolder='Search for a PSCID'\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.sessionId}\n            disabled={this.state.candidateId ? false : true}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={() => {\n          this.saveBarcodeList();\n          this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()}}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimen(name, value, this.props.barcodeKey);\n  }\n\n  copy() {\n    this.props.copyBarcode(this.props.copyMultiplier);\n  }\n\n  render() {\n    let addBarcodeButton;\n    let addBarcodeText;\n    let copyBarcodeButton;\n    let copyBarcodeText;\n    if (this.props.addBarcode) {\n      addBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcode}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcode) {\n      copyBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeButton;\n    if (this.props.removeBarcode) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcode}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => this.props.toggleCollapse(this.props.barcodeKey)}\n            />\n            {removeBarcodeButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                setSpecimenData={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainerData={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeButton}\n              {addBarcodeText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeButton}\n              {copyBarcodeText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.getSpecimenTypeFields = this.getSpecimenTypeFields.bind(this);\n    this.setCollectionData = this.setCollectionData.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollectionData(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimenData('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimenData('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollectionData('data', data);\n  }\n\n  // This generates all the form fields for a given specimen type\n  getSpecimenTypeFields(fieldsObject) {\n    let specimenTypeFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"text\" || datatype === \"number\") {\n\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.collection.data[attribute]}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.collection.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.props.specimen.collection.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n        // There is currently no CheckboxElement or RadioElement in loris/jsx/Form.js and therefore\n        // this is not possible.     \n      }\n    })\n\n    return specimenTypeFields;\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = this.getSpecimenTypeFields(specimenTypeFieldsObject);\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollectionData}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimenData: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n\n  render() {\n    let containerDisplay;\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.props.setContainerData}\n        required={true}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions = {\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates = {\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes = {this.props.containerTypes}\n            containerStati = {this.props.containerStati} \n            select = {true}\n            selectedCoordinate = {this.props.container.coordinate}\n            setContainerData = {this.props.setContainerData}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainerData: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let type = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary ? 'specimen' : 'container';\n      let url = loris.BaseURL+'/biobank/'+type+'/?barcode='+\n        this.props.children[this.props.coordinates[coordinate]].barcode;\n\n      window.location.href = url;\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    this.props.saveChildContainer(container);\n  }\n\n  render() {\n  // This is eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  var coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = null;\n\n        if (!this.props.select) {\n          // This double if statement doesn't sound great\n          if (this.props.coordinates) {\n            if (this.props.coordinates[coordinate]) {\n              nodeClass = 'node occupied';\n              dataHtml = 'true';\n              dataToggle = 'tooltip';\n              dataPlacement = 'top';\n              tooltipTitle = \n            '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n              draggable = 'true';\n              onDragStart = this.drag;\n              onDragOver = null;\n              onDrop = null;\n              onClick = this.redirectURL;\n            }\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainerData('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n\t\t\t  onClick = (e) => this.props.setContainerData('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            // TODO: --- This is currently not working ---\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div\n          className='row'\n          style={rowStyle} \n        >\n          {column}\n        </div>\n      )\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div className='display'>\n        {display}\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.getSpecimenProtocolFields = this.getSpecimenProtocolFields.bind(this);\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimenData('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimenData('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  // TODO: decouple this code from the collectionForm by make it a React Component\n  // This generates all the form fields for a given specimen protocol\n  getSpecimenProtocolFields(fieldsObject) {\n    let specimenProtocolFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\n      if (datatype === \"text\" || datatype === \"number\") {\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.preparation.data[attribute]}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.preparation.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.props.specimen.preparation.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n      }\n    });\n\n    return specimenProtocolFields;\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = this.getSpecimenProtocolFields(specimenProtocolFieldsObject);\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\nimport Modal from './Modal';\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\n\nclass FormModal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n    this.confirmClose = this.confirmClose.bind(this);\n  }\n\n  closeModal() {\n    this.props.closeAction instanceof Function && this.props.closeAction();\n    this.props.toggleModal();\n  }\n\n  confirmClose() {\n    if (this.props.throwWarning) {\n      swal({\n        title: \"Are You Sure?\",\n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Proceed',\n        cancelButtonText: 'Cancel',\n      },\n      function() {\n        this.closeModal();\n      }.bind(this));\n    } else {\n      this.closeModal();\n    }\n  }\n\n  render() {\n    return (\n      <Modal \n        closeModal={this.confirmClose} \n        show={this.props.show}\n        {...this.props} \n      >\n        {this.props.children}\n      </Modal>\n    );\n  }\n}\n\nFormModal.propTypes = {\n  closeAction: React.PropTypes.func,\n  togglemodal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nFormModal.defaultProps = {\n  throwWarning: true,\n}\n\nexport default FormModal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FormModal.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 1000,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '70px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.props.closeModal}>\n          <div\n            style={modalStyle}\n            onClick={e => {\n              e.stopPropagation();\n            }}\n          >\n            <div\n              style={titleStyle}\n            >\n              {this.props.title}\n              <span \n                style={glyphStyle}\n                onClick={this.props.closeModal}\n              >\n                ×\n              </span>\n            </div>\n            <div\n              style={bodyStyle}\n            >\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func,\n  openModal: React.PropTypes.func\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","/**\n * This file contains React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n      <div className='loader-container'>\n        <div className=\"loader\"/>\n      </div>\n\n\n    );\n  }\n}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","import FormModal from 'FormModal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimenData('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimenData('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.edit.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.toggle('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                className='centered-horizontal'\n                specimen={this.props.specimen}\n                units={units}\n                toggle={() => this.props.toggle('quantity')}\n                setSpecimenData={this.props.setSpecimenData}\n                revertSpecimenData={this.props.revertSpecimenData}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if ((this.props.data.specimen||{}).fTCycle !== undefined) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.edit.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('temperature')}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              className='centered-horizontal'                                   \n              container={this.props.container}                                  \n              toggle={() => this.props.toggle('temperature')}                     \n              setContainerData={this.props.setContainerData}\n              revertContainerData={this.props.revertContainerData}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.edit.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              className='centered-horizontal'                                   \n              container={this.props.container}                                  \n              stati={stati}\n              toggle={() => this.props.toggle('status')}                          \n              setContainerData={this.props.setContainerData}                          \n              revertContainerData={this.props.revertContainerData}                    \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.edit.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              className='centered-horizontal'                                   \n              container={this.props.container}\n              centers={this.props.options.centers}\n              toggle={() => this.props.toggle('location')}                        \n              setContainerData={this.props.setContainerData}                          \n              revertContainerData={this.props.revertContainerData}                    \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let specimenURL = loris.BaseURL='/biobank/specimen/?barcode=';\n      let parentSpecimenFieldValue = (\n        <a href={specimenURL+this.props.data.parentSpecimenContainer.barcode}>\n          {this.props.data.parentSpecimenContainer.barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let containerURL = loris.BaseURL+\"/biobank/container/?barcode=\";            \n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a                                                                      \n          href={containerURL+this.props.options.containersNonPrimary[             \n            this.props.data.container.parentContainerId                           \n          ].barcode}>                                                             \n            {this.props.options.containersNonPrimary[                             \n              this.props.data.container.parentContainerId                         \n            ].barcode}                                                            \n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <span                                                               \n            className='action-button update'                                  \n            onClick={() => this.props.toggleModal('containerParent')}                       \n          >                                                                   \n            <span className='glyphicon glyphicon-chevron-right'/>             \n          </span>                                                             \n          <FormModal                                                              \n            title='Update Parent Container'                                       \n            closeAction={this.props.revertContainerData}\n            show={this.props.show.containerParent}\n            toggleModal={()=>{this.props.toggleModal('containerParent')}}\n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainerData={this.props.setContainerData}                            \n              revertContainerData={this.props.revertContainerData}\n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </FormModal>                                                            \n        </div>                                                                \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <TextboxElement\n          name='quantity'\n          labelClass='col-xl-0'\n          inputClass='col-lg-12'\n          onUserInput={this.props.setSpecimenData}\n          value={this.props.specimen.quantity}\n        />\n        <SelectElement\n          name='unit'\n          labelClass='col-xl-0'\n          inputClass='col-lg-12'\n          options={this.props.units}\n          onUserInput={this.props.setSpecimenData}\n          value={this.props.specimen.unitId}\n        />\n        <ButtonElement\n          label=\"Update\"\n          onUserInput={this.props.saveSpecimen}\n          columnSize= 'col-lg-12'\n        />\n        <a\n          onClick={()=>{this.props.toggle(); this.props.revertSpecimenData()}}\n        >\n          Cancel\n        </a>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimenData: React.PropTypes.func,\n  revertSpecimenData: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <TextboxElement\n              name='temperature'\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.temperature}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a onClick={()=>{this.props.toggle(); this.props.revertContainerData()}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.statusId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={() => \n              {this.props.revertContainerData(); this.props.toggle();}\n            }\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='locationId'\n              options={this.props.centerIds}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.locationId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={() => \n              {this.props.revertContainerData(); this.props.toggle();}\n            }\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass LifeCycle extends React.Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n    \n    };\n   \n  }\n\n  componentDidMount() {\n  }\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css(\n        {'border': '2px solid #093782',\n         'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'});\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #093782', 'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'});\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n\n    let collectionNode;\n    let collectionTooltip;\n    if (this.props.collection || this.props.container) {\n      collectionTooltip = (\n        <div>\n          <h>Collection</h>\n          <p>Date:</p> \n        </div>\n      );\n\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    let preparationNode;\n    if (this.props.preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    let analysisNode;\n    if (this.props.analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'/>\n           <div className='lifecycle-text'>Analysis</div>\n        </div>\n      );\n    }\n\n    let line;\n    line = (\n        <div className='lifecycle-line'/>\n    );\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainerData('parentContainerId', null);\n    this.props.setContainerData('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainerData: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankSpecimen */\n\nimport FormModal from 'FormModal';\nimport Loader from 'Loader';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: {},\n      container: {},\n      specimen: {},\n      options: {},\n      isLoaded: false,\n      show: {\n        aliquot: false,\n        containerParent: false,\n      },\n      edit: {\n        temperature: false,\n        quantity: false,\n        collection: false,\n        preparation: false,\n        analysis: false,\n      }\n    };\n\n    this.fetch = this.fetch.bind(this);\n    this.loadPage = this.loadPage.bind(this);\n    this.clone = this.clone.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.toggleAll = this.toggleAll.bind(this);\n    this.mapFormOptions = this.mapFormOptions.bind(this);\n    this.setContainerData = this.setContainerData.bind(this);\n    this.revertContainerData = this.revertContainerData.bind(this);\n    this.setSpecimenData = this.setSpecimenData.bind(this);\n    this.addPreparation = this.addPreparation.bind(this);\n    this.revertSpecimenData = this.revertSpecimenData.bind(this);\n    this.saveContainer = this.saveContainer.bind(this);\n    this.saveSpecimen = this.saveSpecimen.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadPage().then(() => {this.setState({isLoaded: true})});\n  }\n\n  loadPage() {\n    return new Promise(resolve => {\n      this.fetch('data', this.props.specimenPageDataURL).then(\n        data => {\n          let specimen = this.clone(data.specimen);\n          let container = this.clone(data.container);\n          this.setState({data, specimen, container});\n        }\n      );\n      this.fetch('options', this.props.optionsURL).then(\n        data => {\n          let options = data;\n          this.setState({options});\n        }\n      );\n      resolve();\n    });\n  }\n\n  fetch(state, url) {\n    return new Promise(resolve => {\n      $.ajax(url, {\n        dataType: 'json',\n        success: data => {\n          resolve(data);\n        },\n        error: (error, errorCode, errorMsg) => {\n          console.error(error, errorCode, errorMsg);\n          this.setState({\n            error: 'An error occurred when loading the form!'\n          });\n        }\n      });\n    });\n  }\n\n  clone(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  saveContainer() {\n    let container = this.clone(this.state.container);\n    this.save(container, this.props.saveContainer, 'Container Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.container = this.clone(this.state.container);\n        this.setState({data});\n        this.toggleAll();\n      }\n    );\n  }\n\n  saveSpecimen() {\n    let specimen = this.clone(this.state.specimen);;\n    this.save(specimen, this.props.saveSpecimen, 'Specimen Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.specimen = this.clone(this.state.specimen);\n        this.setState({data});\n        this.toggleAll();\n      }\n    );\n  }\n\n  save(data, url, message) {\n    return new Promise(resolve => {\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: {data: JSON.stringify(data)},\n        cache: false,\n        success: () => {\n          resolve();\n          message ? swal(message, '', 'success') : swal('Save Successful!', '', 'success');\n        },\n        error: (error, textStatus, errorThrown) => {\n          let message = (error.responseJSON||{}).message || 'Submission error!';\n          swal(message, '', 'error');\n          console.error(error, textStatus, errorThrown);\n        }\n      });\n    })\n  }\n\n  toggle(stateKey) {\n    let edit = this.state.edit;\n    let stateValue = edit[stateKey];\n    edit[stateKey] = !stateValue;\n    this.setState({edit});\n  }\n\n  toggleModal(stateKey) {\n    let show = this.state.show;\n    let stateValue = show[stateKey];\n    show[stateKey] = !stateValue;\n    this.setState({show});\n  }\n\n  toggleAll() {\n    let edit = this.state.edit;\n    for (let key in edit) {\n      edit[key] = false;\n    }\n    let show = this.state.show;\n    for (let key in show) {\n      show[key] = false;\n    }\n    this.setState({edit, show});\n  }\n\n  // TODO: map options for forms - this is used frequently and may need\n  // to be moved to a more global place\n  mapFormOptions(rawObject, targetAttribute) {\n    let data = {};\n    for (let id in rawObject) {\n      data[id] = rawObject[id][targetAttribute];\n    }\n\n    return data;\n  }\n\n  setContainerData(name, value) {\n    let container = this.state.container;\n\n    if (value !== null) {\n      container[name] = value;\n    } else {\n      delete container[name];\n    }\n\n    this.setState({container});\n  }\n\n  revertContainerData() {\n    let container = this.state.container;\n    container = this.clone(this.state.data.container);\n    this.setState({container});\n  }\n\n  setSpecimenData(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  addAnalysis() {\n    let specimen = this.state.specimen;\n    specimen.analysis = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  revertSpecimenData() {\n    let specimen = this.state.specimen;\n    specimen = this.clone(this.state.data.specimen);\n    this.setState({specimen});\n  }\n\n  render() {\n    // Data loading error\n    if (this.state.error !== undefined) {\n      return (\n        <div className=\"alert alert-danger text-center\">\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    // Waiting for data to load\n    if (!this.state.isLoaded) {\n      return (\n        <Loader/>\n      );\n    }\n\n    /**\n     * Specimen Form\n     */\n    /**\n     * Map Options for Form Select Elements\n     */      \n    let specimenUnits = this.mapFormOptions(this.state.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n    let containerStati = this.mapFormOptions(this.state.options.containerStati, 'status');\n    let candidates = this.mapFormOptions(this.state.options.candidates, 'pscid');\n    let sessions = this.mapFormOptions(this.state.options.sessions, 'label');\n\n    let addAliquotForm = (\n      <div\n        className='action'\n        title='Make Aliquots'\n      >\n        <div\n          className='action-button add'\n          onClick={() => this.toggleModal('aliquot')}\n        >\n          <span>+</span>  \n        </div>\n        <FormModal\n          title=\"Add Aliquots\"\n          closeAction={this.revertSpecimenData}\n          show={this.state.show.aliquot}\n          toggleModal={()=>{this.toggleModal('aliquot')}}\n        >\n          <BiobankSpecimenForm\n            data={this.state.data}\n            specimen={this.state.specimen}\n            setSpecimenData={this.setSpecimenData}\n            saveSpecimen={this.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.state.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.state.options.specimenTypeUnits}\n            specimenTypeAttributes={this.state.options.specimenTypeAttributes}\n            attributeOptions={this.state.options.attributeOptions}\n            attributeDatatypes={this.state.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.state.options.containersNonPrimary}\n            containerDimensions={this.state.options.containerDimensions}\n            containerCoordinates={this.state.options.containerCoordinates}\n            containerStati={containerStati}\n            refreshParent={this.fetchSpecimenData}\n            mapFormOptions={this.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            save={this.save}\n          />\n        </FormModal>\n      </div>\n    );\n    \n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.state.edit.collection) {\n      let containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.state.specimen}\n          data={this.state.data}\n          specimenTypeAttributes={this.state.options.specimenTypeAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.state.options.specimenTypeUnits}\n          toggle={() => this.toggle('collection')}\n          setSpecimenData={this.setSpecimenData}\n          revertSpecimenData={this.revertSpecimenData}\n          saveSpecimen={this.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={() => this.toggle('collection')}\n        >\n          Cancel\n        </a>\n      );\n\n    } else {\n\n      let specimenTypeAttributes;\n      //loops through data object to produce static elements\n      if (this.state.data.specimen.collection.data) {\n        let collectionData = this.state.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(collectionData).map((key) => {\n          return (\n            <StaticElement\n              label={this.state.options.specimenTypeAttributes[this.state.data.specimen.typeId][key].name}\n              text={collectionData[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.state.data.specimen.collection.quantity+' '+\n              this.state.options.specimenUnits[\n                this.state.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.centers[this.state.data.specimen.collection.locationId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.state.edit.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.state.edit.collection ? null : () => this.toggle('collection')}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.state.options.specimenProtocols) {\n      if (this.state.options.specimenProtocols[id].typeId === this.state.data.specimen.typeId) {\n        specimenProtocols[id] = this.state.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.state.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.state.edit.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.state.specimen}\n          data={this.state.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          setSpecimenData={this.setSpecimenData}\n          revertSpecimenData={this.revertSpecimenData}\n          saveSpecimen={this.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={() => {this.toggle('preparation'); this.revertSpecimenData()}}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation Does Exist and the form is not in an edit state\n    if (this.state.data.specimen.preparation && !this.state.edit.preparation) {\n      if (this.state.data.specimen.preparation.data) {\n        let preparationData = this.state.data.specimen.preparation.data;\n        specimenProtocolAttributes = Object.keys(preparationData).map((key) => {\n          return (\n            <StaticElement\n              label={this.state.options.specimenProtocolAttributes[this.state.data.specimen.preparation.protocolId][key].name}\n              text={preparationData[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.state.options.specimenProtocols[this.state.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.centers[this.state.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.state.data.specimen.preparation && !this.state.edit.preparation) {\n      preparationPanel = (\n        <div\n          className='panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.toggle('preparation'); this.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.state.data.specimen.preparation || this.state.edit.preparation) {\n      preparationPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.state.edit.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.state.edit.preparation ? null : () => this.toggle('preparation')}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.state.options.specimenMethods) {\n      if (this.state.options.specimenMethods[id].typeId === this.state.data.specimen.typeId) {\n        specimenMethods[id] = this.state.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.state.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.state.edit.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.state.specimen}\n          data={this.state.data}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          setSpecimenData={this.setSpecimenData}\n          revertSpecimenData={this.revertSpecimenData}\n          saveSpecimen={this.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={()=>{this.toggle('analysis'); this.revertSpecimenData()}}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.state.data.specimen.analysis && !this.state.edit.analysis) {\n      //TODO: This can likely go into a function since it is used elsewhere\n      if (this.state.data.specimen.analysis.data) {\n      let analysisData = this.state.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.key(analysisData).map((key) => {\n          return ( \n            <StaticElement\n              label={this.state.options.specimenMethodAttributes[this.state.data.specimen.analysis.methodId][key].name}\n              text={analysisData[key]}\n            />\n          );\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.state.options.specimenMethods[this.state.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.centers[this.state.data.specimen.analysis.locationId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.state.data.specimen.analysis && !this.state.edit.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.toggle('analysis'); this.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.state.data.specimen.analysis || this.state.edit.analysis) {\n      analysisPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.state.edit.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.state.edit.analysis ? null : () => this.toggle('analysis')}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.state.specimen}\n        container={this.state.container}\n        data={this.state.data}\n        options={this.state.options}\n        edit={this.state.edit}\n        toggle={this.toggle}\n        show={this.state.show}\n        toggleModal={this.toggleModal}\n        mapFormOptions={this.mapFormOptions}\n        setSpecimenData={this.setSpecimenData}\n        revertSpecimenData={this.revertSpecimenData}\n        saveSpecimen={this.saveSpecimen}\n        setContainerData={this.setContainerData}\n        revertContainerData={this.revertContainerData}\n        saveContainer={this.saveContainer}\n      />\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.state.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.state.container}\n              setContainerData={this.setContainerData}\n              saveContainer={this.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            collection={this.state.data.specimen.collection}\n            preparation={this.state.data.specimen.preparation}\n            analysis={this.state.data.specimen.analysis}\n            centers={this.state.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n      </div>\n    ); \n  }\n}\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\nwindow.BiobankSpecimen = BiobankSpecimen;\nwindow.RBiobankSpecimen = RBiobankSpecimen;\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.getSpecimenMethodFields = this.getSpecimenMethodFields.bind(this);\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimenData('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimenData('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    data[name] = value;\n    this.setAnalysis('data', data);\n  }\n\n  // TODO: decouple this code from the collectionForm by make it a React Component\n  // This generates all the form fields for a given specimen method\n  getSpecimenMethodFields(fieldsObject) {\n    let specimenMethodFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\n      if (datatype === \"text\" || datatype === \"number\") {\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.analysis.data[attribute]}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.analysis.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.props.specimen.analysis.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n      }\n    });\n\n    return specimenMethodFields;\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.analysis) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = this.getSpecimenMethodFields(specimenMethodFieldsObject);\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js"],"sourceRoot":""}