{"version":3,"sources":["webpack:///modules/biobank/js/specimenIndex.js","webpack:///webpack/bootstrap 68e3b314ce250beba595?4509*********","webpack:///./modules/biobank/jsx/specimenIndex.js","webpack:///./modules/biobank/jsx/specimenForm.js?35c0","webpack:///./modules/biobank/jsx/barcodeForm.js?02a4","webpack:///./modules/biobank/jsx/collectionForm.js?e0f7","webpack:///./modules/biobank/jsx/preparationForm.js?0045","webpack:///./jsx/FormModal.js?4a02*","webpack:///./jsx/Modal.js?d3d7*","webpack:///./jsx/Loader.js?06c1*","webpack:///./modules/biobank/jsx/globals.js?ec01","webpack:///./modules/biobank/jsx/quantityField.js?752f","webpack:///./modules/biobank/jsx/temperatureField.js?6aab","webpack:///./modules/biobank/jsx/statusField.js?e88e","webpack:///./modules/biobank/jsx/locationField.js?527d","webpack:///./modules/biobank/jsx/containerParentForm.js?0f0c","webpack:///./modules/biobank/jsx/containerDisplay.js?4e23","webpack:///./modules/biobank/jsx/lifeCycle.js?5ad9","webpack:///./modules/biobank/jsx/containerCheckout.js?acdc","webpack:///./modules/biobank/jsx/specimen.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_specimen","_specimen2","args","QueryString","get","document","currentScript","src","$","biobankSpecimen","React","createElement","className","specimenPageDataURL","loris","BaseURL","barcode","optionsURL","saveContainer","saveSpecimen","ReactDOM","render","getElementById","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","_React$Component","this","_this","getPrototypeOf","availableId","keys","containerStati","find","state","errorMessage","formErrors","barcodeList","1","specimen","container","statusId","temperature","countBarcodes","saveBarcodeList","bind","save","entity","url","entityObject","FormData","append","ajax","type","data","entityObj","cache","contentType","processData","xhr","window","XMLHttpRequest","success","refreshParent","swal","onSuccess","error","err","console","msg","responseJSON","message","setState","name","siteId","containerList","barcodeData","barcodeKey","count","multiplier","nextKey","JSON","parse","stringify","_this2","barcodeListArray","barcodeFormList","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","push","removeBarcode","addBarcode","copyBarcode","setParentFormData","setBarcodeList","onChange","specimenTypes","containerTypesPrimary","containersNonPrimary","specimenTypeAttributes","attributeDatatypes","attributeOptions","capacities","containerDimensions","containerCoordinates","specimenTypeUnits","units","_iterator","Symbol","iterator","next","done","return","globalFields","remainingQuantityFields","parentSpecimenIds","StaticElement","label","text","parentSpecimenBarcodes","pscid","visit","TextboxElement","onUserInput","setFormData","required","formData","quantity","SelectElement","options","specimenUnits","emptyOption","unitId","SearchableDropdown","pSCIDs","ref","placeHolder","visits","visitLabel","disabled","FormElement","onSubmit","ButtonElement","columnSize","Component","propTypes","_collectionForm","_collectionForm2","SpecimenBarcodeForm","collapsed","copyMultiplier","setChildFormData","toggleCollapse","setCopyMultiplier","copy","e","copyBarcodeForm","addBarcodeFormButton","addBarcodeFormText","copyBarcodeFormButton","copyBarcodeFormText","addBarcodeForm","onClick","min","max","style","width","display","removeBarcodeFormButton","removeBarcodeForm","glyphStyle","color","marginLeft","cursor","fontSize","paddingLeft","marginTop","position","right","data-toggle","data-target","specimenType","containerType","stati","ContainerParentForm","setContainerParentFormData","formElement","Function","collectionFormData","field","PropTypes","string","object","isRequired","SpecimenCollectionForm","getSpecimenTypeFields","setCollectionData","setData","collection","setSpecimenData","fieldsObject","specimenTypeFields","map","attribute","datatype","DateElement","updateButton","typeId","unit","specimenTypeFieldsObject","specimenFields","minYear","maxYear","date","TimeElement","time","TextareaElement","comments","SpecimenPreparationForm","getSpecimenProtocolFields","setPreparation","addData","preparation","specimenProtocolFields","submitButton","protocolId","specimenProtocolFieldsObject","specimenProtocolAttributes","specimenProtocols","_extends","assign","arguments","source","hasOwnProperty","_Modal","_Modal2","FormModal","show","throwWarning","openModal","closeModal","confirmClose","setWarning","Children","children","child","cloneElement","title","showCancelButton","confirmButtonText","cancelButtonText","renderChildren","buttonClass","buttonStyle","buttonContent","defaultProps","Modal","modal","backdropStyle","zIndex","top","bottom","left","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","height","borderTopRightRadius","bodyStyle","button","stopPropagation","boolean","func","Loader","_FormModal","_FormModal2","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","_containerParentForm","_containerParentForm2","Globals","apply","specimenTypeField","containerTypeField","containerTypes","quantityField","edit","mapFormOptions","log","toggle","revertSpecimenData","temperatureField","setContainerData","revertContainerData","statusField","status","locationField","location","sites","locationId","originField","originId","parentSpecimenField","dateTimeCreate","parentSpecimenId","specimenURL","parentSpecimenFieldValue","href","parentSpecimen","parentContainerBarcodeValue","parentContainerId","containerURL","parentContainerField","coordinate","candidateSessionField","candidateId","candidate","PSCID","sessionId","session","Visit_label","fieldList","QuantityField","labelClass","inputClass","TemperatureField","StatusField","LocationField","_containerDisplay","_containerDisplay2","containerDisplay","containerBarcodesNonPrimary","dimensionId","dimensions","coordinatesTotal","dimension","coordinates","select","selectedCoordinate","ContainerDisplay","redirectURL","drag","drop","tooltip","types","primary","preventDefault","dataTransfer","getData","newCoordinate","parseInt","saveChildContainer","column","row","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","data-html","data-placement","data-original-title","rowHeight","rowStyle","LifeCycle","css","border","box-shadow","collectionNode","collectionTooltip","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","analysis","line","ContainerCheckout","checkoutContainer","checkoutButton","_Loader","_Loader2","_globals","_globals2","_preparationForm","_preparationForm2","_specimenForm","_specimenForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","isLoaded","loadedData","fetchSpecimenData","fetchOptions","toggleAll","addPreparation","submit","dataType","errorCode","errorMsg","containerObj","then","_this3","specimenObj","_this4","Promise","resolve","_error3","stateKey","stateValue","rawObject","targetAttribute","_this5","addAliquotForm","userHasPermission","parentTypeId","addAliquotButtonContent","action","collectionPanel","collectionPanelForm","cancelEditCollectionButton","dataObject","preparationPanel","preparationForm","cancelEditPreparationButton","protocol","analysisPanel","globals","RBiobankSpecimen","createFactory"],"mappings":"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","file":"./modules/biobank/js/specimenIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _specimen = __webpack_require__(27);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar args = QueryString.get(document.currentScript.src); /* global ReactDOM */\n\t\n\t$(function () {\n\t  var biobankSpecimen = React.createElement(\n\t    \"div\",\n\t    { className: \"page-specimen-form\" },\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"row\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"col-md-9 col-lg-12\" },\n\t        React.createElement(_specimen2.default, {\n\t          specimenPageDataURL: loris.BaseURL + \"/biobank/ajax/requestData.php?action=getSpecimenData&barcode=\" + args.barcode,\n\t          optionsURL: loris.BaseURL + \"/biobank/ajax/requestData.php?action=getFormOptions\",\n\t          saveContainer: loris.BaseURL + \"/biobank/ajax/submitData.php?action=saveContainer\",\n\t          saveSpecimen: loris.BaseURL + \"/biobank/ajax/submitData.php?action=saveSpecimen\"\n\t        })\n\t      )\n\t    )\n\t  );\n\t\n\t  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(4);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm(props) {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    // get Id of available status\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this, props));\n\t\n\t    var availableId = Object.keys(_this.props.containerStati).find(function (key) {\n\t      return _this.props.containerStati[key] === 'Availabale';\n\t    });\n\t\n\t    _this.state = {\n\t      errorMessage: null,\n\t      formErrors: {},\n\t      barcodeList: {\n\t        1: {\n\t          specimen: {},\n\t          container: { statusId: availableId, temperature: 20 }\n\t        }\n\t      },\n\t      countBarcodes: 1\n\t    };\n\t\n\t    _this.saveBarcodeList = _this.saveBarcodeList.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'saveBarcodeList',\n\t    value: function saveBarcodeList() {\n\t      var barcodeList = this.state.barcodeList;\n\t      for (var barcode in barcodeList) {\n\t        this.save(barcodeList[barcode].container, this.props.saveContainer);\n\t        this.save(barcodeList[barcode].specimen, this.props.saveSpecimen);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(entity, url) {\n\t      var entityObject = new FormData();\n\t      for (var key in entity) {\n\t        if (entity[key] !== \"\") {\n\t          entityObject.append(key, entity[key]);\n\t        }\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: url,\n\t        data: entityObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function () {\n\t          this.props.refreshParent();\n\t          swal(\"Save Successful!\", \"\", \"success\");\n\t          this.props.onSuccess();\n\t        }.bind(this),\n\t        error: function (err) {\n\t          console.error(err);\n\t          var msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\t          this.setState({\n\t            errorMessage: msg\n\t          });\n\t          swal(msg, \"\", \"error\");\n\t        }.bind(this)\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var siteId = this.state.siteId;\n\t      var containerList = this.state.containerList;\n\t\n\t      if (name === 'siteId') {\n\t        siteId = value;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {}\n\t  }, {\n\t    key: 'setBarcodeList',\n\t    value: function setBarcodeList(barcodeData, barcodeKey) {\n\t      var barcodeList = this.state.barcodeList;\n\t      barcodeList[barcodeKey] = barcodeData;\n\t\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'addBarcode',\n\t    value: function addBarcode() {\n\t      var barcodeList = this.state.barcodeList;\n\t      var count = this.state.countBarcodes;\n\t\n\t      barcodeList[count + 1] = {\n\t        specimen: {},\n\t        container: {}\n\t      };\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList,\n\t        countBarcodes: count + 1\n\t      });\n\t    }\n\t  }, {\n\t    key: 'copyBarcode',\n\t    value: function copyBarcode(key, multiplier) {\n\t      var count = this.state.countBarcodes;\n\t      var nextKey = count + 1;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key]));\n\t        delete barcodeList[nextKey].barcode;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList,\n\t        countBarcodes: nextKey\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeBarcode',\n\t    value: function removeBarcode(key) {\n\t      var barcodeList = this.state.barcodeList;\n\t      delete barcodeList[key];\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeFormList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(_barcodeForm2.default, {\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            barcodeData: _this2.state.barcodeFormList[key] ? _this2.state.barcodeFormList[key] : null,\n\t            removeBarcode: barcodeListArray.length !== 1 ? function () {\n\t              return _this2.removeBarcode(key);\n\t            } : null,\n\t            addBarcode: i == barcodeListArray.length ? _this2.addBarcode : null,\n\t            copyBarcode: i == barcodeListArray.length && _this2.state.barcodeList[key] ? _this2.copyBarcode.bind(_this2, key) : null,\n\t            setParentFormData: _this2.setBarcodeList,\n\t            onChange: _this2.props.onChange,\n\t            specimenTypes: _this2.props.specimenTypes,\n\t            containerTypesPrimary: _this2.props.containerTypesPrimary,\n\t            containersNonPrimary: _this2.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this2.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this2.props.attributeDatatypes,\n\t            attributeOptions: _this2.props.attributeOptions,\n\t            capacities: _this2.props.capacities,\n\t            containerDimensions: _this2.props.containerDimensions,\n\t            containerCoordinates: _this2.props.containerCoordinates,\n\t            specimenTypeUnits: _this2.props.specimenTypeUnits,\n\t            units: _this2.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.parentSpecimenIds) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.parentSpecimenBarcodes\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.pscid\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.visit\n\t          })\n\t        );\n\t\n\t        //TODO: It may be wise to make unit static and forced, or atleast prepopulated --\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.setFormData,\n\t            required: true,\n\t            value: this.state.formData.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.setFormData,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.state.formData.unitId\n\t          })\n\t        );\n\t      } else {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'pscid',\n\t            label: 'PSCID',\n\t            options: this.props.pSCIDs,\n\t            onUserInput: this.setFormData,\n\t            ref: 'pscid',\n\t            required: true,\n\t            value: this.state.formData.pscid,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'visitLabel',\n\t            label: 'Visit Label',\n\t            options: this.state.visits,\n\t            onUserInput: this.setFormData,\n\t            ref: 'visitLabel',\n\t            required: true,\n\t            value: this.state.formData.visitLabel,\n\t            disabled: this.state.formData.pscid ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: this.saveBarcodeList,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(5);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm(props) {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      formErrors: {},\n\t      collapsed: true,\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.setChildFormData = _this.setChildFormData.bind(_this);\n\t    _this.setParentFormData = _this.setParentFormData.bind(_this);\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      if (this.props.formData) {\n\t        var formData = this.props.formData;\n\t\n\t        this.setState({\n\t          formData: formData\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t\n\t      this.setState({\n\t        copyMultiplier: copyMultiplier\n\t      });\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyBarcodeForm(this.state.copyMultiplier);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var addBarcodeFormButton = void 0;\n\t      var addBarcodeFormText = void 0;\n\t      var copyBarcodeFormButton = void 0;\n\t      var copyBarcodeFormText = void 0;\n\t      if (this.props.addBarcodeForm) {\n\t        addBarcodeFormButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcodeForm\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeFormText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcodeForm) {\n\t        copyBarcodeFormButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeFormText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.setCopyMultiplier,\n\t            value: this.state.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeFormButton = void 0;\n\t      if (this.props.removeBarcodeForm) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeFormButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcodeForm,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setFormData,\n\t                ref: 'barcode',\n\t                required: true,\n\t                value: this.state.formData.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.state.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.id,\n\t              onClick: this.toggleCollapse\n\t            }),\n\t            removeBarcodeFormButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.id, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'specimenType',\n\t                label: 'Specimen Type',\n\t                options: this.props.specimenTypes,\n\t                onUserInput: this.setFormData,\n\t                ref: 'specimenType',\n\t                required: true,\n\t                value: this.state.formData.specimenType\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'containerType',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setFormData,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.state.formData.containerType\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                formData: this.props.formData,\n\t                setParentFormData: this.setChildFormData,\n\t                onChange: this.props.onChange,\n\t                specimenTypes: this.props.specimenTypes,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions,\n\t                containerTypesPrimary: this.props.containerTypesPrimary,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                stati: this.props.stati\n\t              }),\n\t              React.createElement(ContainerParentForm, {\n\t                setParentFormData: this.setContainerParentFormData,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeFormButton,\n\t              addBarcodeFormText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeFormButton,\n\t              copyBarcodeFormText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t\n\t      var formData = this.state.formData;\n\t      formData[formElement] = value;\n\t\n\t      this.setState({\n\t        formData: formData\n\t      }, this.setParentFormData);\n\t    }\n\t  }, {\n\t    key: 'setChildFormData',\n\t    value: function setChildFormData(collectionFormData) {\n\t      var formData = this.state.formData;\n\t\n\t      for (var field in collectionFormData) {\n\t        formData[field] = collectionFormData[field];\n\t      }\n\t\n\t      this.setState({\n\t        formData: formData\n\t      }, this.setParentFormData);\n\t    }\n\t  }, {\n\t    key: 'setParentFormData',\n\t    value: function setParentFormData() {\n\t      this.props.setParentFormData(this.state.formData, this.props.barcodeKey);\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {\n\t  id: React.PropTypes.string,\n\t  specimenTypes: React.PropTypes.object.isRequired,\n\t  containerTypesPrimary: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  capacities: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.getSpecimenTypeFields = _this.getSpecimenTypeFields.bind(_this);\n\t    _this.setCollectionData = _this.setCollectionData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollectionData',\n\t    value: function setCollectionData(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimenData('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollectionData('data', data);\n\t    }\n\t\n\t    // This generates all the form fields for a given specimen type\n\t\n\t  }, {\n\t    key: 'getSpecimenTypeFields',\n\t    value: function getSpecimenTypeFields(fieldsObject) {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this2.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.collection.data[attribute]\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.collection.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this2.setData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this2.props.specimen.collection.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {\n\t          // There is currently no CheckboxElement or RadioElement in loris/jsx/Form.js and therefore\n\t          // this is not possible.     \n\t        }\n\t      });\n\t\n\t      return specimenTypeFields;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var updateButton = void 0;\n\t      if (this.props.specimen) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          specimenTypeFields = this.getSpecimenTypeFields(specimenTypeFieldsObject);\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollectionData,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollectionData,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 6 */,\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.getSpecimenProtocolFields = _this.getSpecimenProtocolFields.bind(_this);\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimenData('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimenData('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t\n\t    // TODO: decouple this code from the collectionForm by make it a React Component\n\t    // This generates all the form fields for a given specimen protocol\n\t\n\t  }, {\n\t    key: 'getSpecimenProtocolFields',\n\t    value: function getSpecimenProtocolFields(fieldsObject) {\n\t      var _this2 = this;\n\t\n\t      var specimenProtocolFields = Object.keys(fieldsObject).map(function (attribute) {\n\t        var datatype = _this2.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\t\n\t        if (datatype === \"text\" || datatype === \"number\") {\n\t          if (fieldsObject[attribute]['refTableId'] == null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.preparation.data[attribute]\n\t            });\n\t          }\n\t\n\t          if (fieldsObject[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fieldsObject[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fieldsObject[attribute]['refTableId']],\n\t              onUserInput: _this2.setData,\n\t              required: fieldsObject[attribute]['required'],\n\t              value: _this2.props.specimen.preparation.data[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === \"datetime\") {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fieldsObject[attribute]['name'],\n\t            onUserInput: _this2.setData,\n\t            ref: attribute,\n\t            required: fieldsObject[attribute]['required'],\n\t            value: _this2.props.specimen.preparation.data[attribute]\n\t          });\n\t        }\n\t\n\t        if (datatype === \"boolean\") {}\n\t      });\n\t\n\t      return specimenProtocolFields;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = this.getSpecimenProtocolFields(specimenProtocolFieldsObject);\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(12);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React components for Modal component.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\t\n\tvar FormModal = function (_React$Component) {\n\t  _inherits(FormModal, _React$Component);\n\t\n\t  function FormModal(props) {\n\t    _classCallCheck(this, FormModal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (FormModal.__proto__ || Object.getPrototypeOf(FormModal)).call(this, props));\n\t\n\t    _this.state = { show: false, throwWarning: false };\n\t\n\t    _this.openModal = _this.openModal.bind(_this);\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    _this.confirmClose = _this.confirmClose.bind(_this);\n\t    _this.setWarning = _this.setWarning.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FormModal, [{\n\t    key: \"renderChildren\",\n\t    value: function renderChildren() {\n\t      var _this2 = this;\n\t\n\t      return React.Children.map(this.props.children, function (child) {\n\t        return React.cloneElement(child, { onSuccess: _this2.closeModal, onChange: _this2.setWarning });\n\t      });\n\t    }\n\t  }, {\n\t    key: \"openModal\",\n\t    value: function openModal() {\n\t      this.setState({\n\t        show: true\n\t      });\n\t    }\n\t  }, {\n\t    key: \"setWarning\",\n\t    value: function setWarning() {\n\t      this.setState({\n\t        throwWarning: true\n\t      });\n\t    }\n\t  }, {\n\t    key: \"confirmClose\",\n\t    value: function confirmClose() {\n\t      if (this.state.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          this.closeModal();\n\t        }.bind(this));\n\t      } else {\n\t        this.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      this.setState({\n\t        show: false,\n\t        throwWarning: false\n\t      });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        _Modal2.default,\n\t        _extends({\n\t          closeModal: this.confirmClose,\n\t          openModal: this.openModal,\n\t          show: this.state.show\n\t        }, this.props),\n\t        this.renderChildren()\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FormModal;\n\t}(React.Component);\n\t\n\tFormModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  buttonClass: React.PropTypes.string,\n\t  buttonStyle: React.PropTypes.object,\n\t  buttonContent: React.PropTypes.object\n\t};\n\tFormModal.defaultProps = {\n\t  buttonClass: 'btn btn-primary'\n\t};\n\t\n\texports.default = FormModal;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal(props) {\n\t    _classCallCheck(this, Modal);\n\t\n\t    return _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 1000,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '70px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var button = React.createElement(\n\t        'div',\n\t        {\n\t          className: this.props.buttonClass,\n\t          onClick: this.props.openModal\n\t        },\n\t        this.props.buttonContent\n\t      );\n\t\n\t      var modal;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          'div',\n\t          { style: backdropStyle, onClick: this.props.closeModal },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              style: modalStyle,\n\t              onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              }\n\t            },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                style: titleStyle\n\t              },\n\t              this.props.title,\n\t              React.createElement(\n\t                'span',\n\t                {\n\t                  style: glyphStyle,\n\t                  onClick: this.props.closeModal\n\t                },\n\t                '\\xD7'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                style: bodyStyle\n\t              },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { style: this.props.style },\n\t        button,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  buttonClass: React.PropTypes.string,\n\t  buttonStyle: React.PropTypes.object,\n\t  buttonContent: React.PropTypes.object,\n\t  show: React.PropTypes.boolean,\n\t  closeModal: React.PropTypes.func,\n\t  openModal: React.PropTypes.func\n\t};\n\tModal.defaultProps = {\n\t  buttonClass: 'btn btn-primary'\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader(props) {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).call(this, props));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"loader-container\" },\n\t        React.createElement(\"div\", { className: \"loader\" })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FormModal = __webpack_require__(11);\n\t\n\tvar _FormModal2 = _interopRequireDefault(_FormModal);\n\t\n\tvar _quantityField = __webpack_require__(18);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(19);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(20);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(21);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(22);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    return _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.edit.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.toggle('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t          console.log(units);\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                className: 'centered-horizontal',\n\t                specimen: this.props.specimen,\n\t                units: units,\n\t                toggle: function toggle() {\n\t                  return _this2.props.toggle('quantity');\n\t                },\n\t                setSpecimenData: this.props.setSpecimenData,\n\t                revertSpecimenData: this.props.revertSpecimenData,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.edit.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('temperature');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.edit.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              stati: stati,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('status');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.edit.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.sites[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.toggle('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              className: 'centered-horizontal',\n\t              container: this.props.container,\n\t              sites: this.props.options.sites,\n\t              toggle: function toggle() {\n\t                return _this2.props.toggle('location');\n\t              },\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.sites[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (this.props.specimen.parentSpecimenId) {\n\t          var specimenURL = loris.BaseURL = '/biobank/specimen/?barcode=';\n\t          var parentSpecimenFieldValue = React.createElement(\n\t            'a',\n\t            { href: specimenURL + this.props.data.parentSpecimen.barcode },\n\t            this.props.data.parentSpecimen.barcode\n\t          );\n\t\n\t          parentSpecimenField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Parent Specimen',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                parentSpecimenFieldValue || 'None'\n\t              )\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var containerURL = loris.BaseURL + \"/biobank/container/?barcode=\";\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              href: containerURL + this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode },\n\t            this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            _FormModal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              buttonClass: 'action-button update',\n\t              buttonContent: React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainerData: this.props.setContainerData,\n\t              revertContainerData: this.props.revertContainerData,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(TextboxElement, {\n\t          name: 'quantity',\n\t          labelClass: 'col-xl-0',\n\t          inputClass: 'col-lg-12',\n\t          onUserInput: this.props.setSpecimenData,\n\t          value: this.props.specimen.quantity\n\t        }),\n\t        React.createElement(SelectElement, {\n\t          name: 'unit',\n\t          labelClass: 'col-xl-0',\n\t          inputClass: 'col-lg-12',\n\t          options: this.props.units,\n\t          onUserInput: this.props.setSpecimenData,\n\t          value: this.props.specimen.unitId\n\t        }),\n\t        React.createElement(ButtonElement, {\n\t          label: 'Update',\n\t          onUserInput: this.props.saveSpecimen,\n\t          columnSize: 'col-lg-12'\n\t        }),\n\t        React.createElement(\n\t          'a',\n\t          {\n\t            onClick: function onClick() {\n\t              _this2.props.toggle();_this2.props.revertSpecimenData();\n\t            }\n\t          },\n\t          'Cancel'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimenData: React.PropTypes.func,\n\t  revertSpecimenData: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                _this2.props.toggle();_this2.props.revertContainerData();\n\t              } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                _this2.props.revertContainerData();_this2.props.toggle();\n\t              }\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.sites,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainerData,\n\t            value: this.props.container.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                _this2.props.revertContainerData();_this2.props.toggle();\n\t              }\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  revertContainerData: React.PropTypes.func.isRequired,\n\t  sites: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(23);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    return _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.props.setContainerData,\n\t        required: true,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainerData: this.props.setContainerData\n\t          });\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        React.createElement('br', null),\n\t        React.createElement(ButtonElement, { label: 'Update' })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var type = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary ? 'specimen' : 'container';\n\t        var url = loris.BaseURL + '/biobank/' + type + '/?barcode=' + this.props.children[this.props.coordinates[coordinate]].barcode;\n\t\n\t        window.location.href = url;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      this.props.saveChildContainer(container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // This is eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = null;\n\t\n\t            if (!this.props.select) {\n\t              // This double if statement doesn't sound great\n\t              if (this.props.coordinates) {\n\t                if (this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node occupied';\n\t                  dataHtml = 'true';\n\t                  dataToggle = 'tooltip';\n\t                  dataPlacement = 'top';\n\t                  tooltipTitle = '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                  draggable = 'true';\n\t                  onDragStart = this.drag;\n\t                  onDragOver = null;\n\t                  onDrop = null;\n\t                  onClick = this.redirectURL;\n\t                }\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this2.props.setContainerData('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this2.props.setContainerData('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  // TODO: --- This is currently not working ---\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            {\n\t              className: 'row',\n\t              style: rowStyle\n\t            },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'display' },\n\t        display\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle(props) {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    var _this = _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).call(this, props));\n\t\n\t    _this.state = {};\n\t\n\t    return _this;\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {}\n\t  }, {\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({ 'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #093782', 'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var collectionNode = void 0;\n\t      var collectionTooltip = void 0;\n\t      if (this.props.collection || this.props.container) {\n\t        collectionTooltip = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'h',\n\t            null,\n\t            'Collection'\n\t          ),\n\t          React.createElement(\n\t            'p',\n\t            null,\n\t            'Date:'\n\t          )\n\t        );\n\t\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      var preparationNode = void 0;\n\t      if (this.props.preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      var analysisNode = void 0;\n\t      if (this.props.analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement('div', { className: 'lifecycle-node' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-text' },\n\t            'Analysis'\n\t          )\n\t        );\n\t      }\n\t\n\t      var line = void 0;\n\t      line = React.createElement('div', { className: 'lifecycle-line' });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 25 */,\n/* 26 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainerData('parentContainerId', null);\n\t      this.props.setContainerData('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainerData: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FormModal = __webpack_require__(11);\n\t\n\tvar _FormModal2 = _interopRequireDefault(_FormModal);\n\t\n\tvar _Loader = __webpack_require__(13);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(17);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(5);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(7);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _specimenForm = __webpack_require__(3);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(24);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(26);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).call(this));\n\t\n\t    _this.state = {\n\t      data: {},\n\t      isLoaded: false,\n\t      loadedData: 0,\n\t      edit: {\n\t        temperature: false,\n\t        quantity: false,\n\t        collection: false,\n\t        preparation: false\n\t      }\n\t    };\n\t\n\t    _this.fetchSpecimenData = _this.fetchSpecimenData.bind(_this);\n\t    _this.fetchOptions = _this.fetchOptions.bind(_this);\n\t    _this.toggle = _this.toggle.bind(_this);\n\t    _this.toggleAll = _this.toggleAll.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.setContainerData = _this.setContainerData.bind(_this);\n\t    _this.revertContainerData = _this.revertContainerData.bind(_this);\n\t    _this.setSpecimenData = _this.setSpecimenData.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.revertSpecimenData = _this.revertSpecimenData.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.submit = _this.submit.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.fetchSpecimenData();\n\t      this.fetchOptions();\n\t    }\n\t  }, {\n\t    key: 'fetchSpecimenData',\n\t    value: function fetchSpecimenData() {\n\t      var self = this;\n\t      $.ajax(this.props.specimenPageDataURL, {\n\t        dataType: 'json',\n\t        success: function success(data) {\n\t          var specimen = JSON.parse(JSON.stringify(data.specimen));\n\t          var container = JSON.parse(JSON.stringify(data.container));\n\t          self.setState({\n\t            data: data,\n\t            container: container,\n\t            specimen: specimen,\n\t            isLoaded: true\n\t          });\n\t        },\n\t        error: function error(_error, errorCode, errorMsg) {\n\t          console.error(_error, errorCode, errorMsg);\n\t          self.setState({\n\t            error: 'An error occurred when loading the form!'\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetchOptions',\n\t    value: function fetchOptions() {\n\t      var self = this;\n\t      $.ajax(this.props.optionsURL, {\n\t        dataType: 'json',\n\t        success: function success(data) {\n\t          self.setState({\n\t            options: data\n\t          });\n\t        },\n\t        error: function error(_error2, errorCode, errorMsg) {\n\t          console.error(_error2, errorCode, errorMsg);\n\t          self.setState({\n\t            error: 'An error occurred when loading the form!'\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this2 = this;\n\t\n\t      var container = JSON.parse(JSON.stringify(this.state.container));\n\t      var containerObj = new FormData();\n\t      for (var key in container) {\n\t        containerObj.append(key, container[key]);\n\t      }\n\t\n\t      this.submit(containerObj, this.props.saveContainer, 'Container Save Successful!').then(function () {\n\t        //this.fetchSpecimenData();\n\t        //this.fetchOptions();\n\t        var data = _this2.state.data;\n\t        data.container = JSON.parse(JSON.stringify(_this2.state.container));\n\t        _this2.setState({ data: data });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this3 = this;\n\t\n\t      var specimen = JSON.parse(JSON.stringify(this.state.specimen));;\n\t      var specimenObj = new FormData();\n\t      for (var key in specimen) {\n\t        if (key === 'collection' || key === 'preparation' || key === 'analysis') {\n\t          specimen[key] = JSON.stringify(specimen[key]);\n\t        }\n\t        specimenObj.append(key, specimen[key]);\n\t      }\n\t\n\t      this.submit(specimenObj, this.props.saveSpecimen, 'Specimen Save Successful!').then(function () {\n\t        var data = _this3.state.data;\n\t        data.specimen = JSON.parse(JSON.stringify(_this3.state.specimen));\n\t        _this3.setState({ data: data });\n\t      });\n\t    }\n\t\n\t    //TODO: this should likely be placed in its own component.\n\t    //TODO: should the success messages be coming from the back end?\n\t\n\t  }, {\n\t    key: 'submit',\n\t    value: function submit(data, url, message) {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: data,\n\t          cache: false,\n\t          contentType: false,\n\t          processData: false,\n\t          xhr: function () {\n\t            var xhr = new window.XMLHttpRequest();\n\t            return xhr;\n\t          }.bind(_this4),\n\t          success: function success() {\n\t            resolve();\n\t            _this4.toggleAll();\n\t            swal(message, '', 'success');\n\t          },\n\t          error: function error(_error3) {\n\t            var message = _error3.responseJSON ? _error3.responseJSON.message : \"Submission error!\";\n\t            _this4.setState({\n\t              errorMessage: message\n\t            });\n\t            swal(message, '', 'error');\n\t            console.error(_error3);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle(stateKey) {\n\t      var edit = this.state.edit;\n\t      var stateValue = edit[stateKey];\n\t      edit[stateKey] = !stateValue;\n\t      this.setState({ edit: edit });\n\t    }\n\t  }, {\n\t    key: 'toggleAll',\n\t    value: function toggleAll() {\n\t      var edit = this.state.edit;\n\t      for (var key in edit) {\n\t        edit[key] = false;\n\t      }\n\t      this.setState({ edit: edit });\n\t    }\n\t\n\t    // TODO: map options for forms - this is used frequently and may need\n\t    // to be moved to a more global place\n\t\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(rawObject, targetAttribute) {\n\t      var data = {};\n\t      for (var id in rawObject) {\n\t        data[id] = rawObject[id][targetAttribute];\n\t      }\n\t\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'setContainerData',\n\t    value: function setContainerData(name, value) {\n\t      var container = this.state.container;\n\t\n\t      if (value !== null) {\n\t        container[name] = value;\n\t      } else {\n\t        delete container[name];\n\t      }\n\t\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainerData',\n\t    value: function revertContainerData() {\n\t      var container = this.state.container;\n\t      container = JSON.parse(JSON.stringify(this.state.data.container));\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenData',\n\t    value: function setSpecimenData(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimenData',\n\t    value: function revertSpecimenData() {\n\t      var specimen = this.state.specimen;\n\t      specimen = JSON.parse(JSON.stringify(this.state.data.specimen));\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this5 = this;\n\t\n\t      // Data loading error\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      // Waiting for data to load\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(_Loader2.default, null);\n\t      }\n\t\n\t      /**\n\t       * Specimen Form\n\t       */\n\t      var addAliquotForm = void 0;\n\t\n\t      if (loris.userHasPermission('biobank_write')) {\n\t        /**\n\t         * Map Options for Form Select Elements\n\t         */\n\t        var specimenTypes = {};\n\t        //produces options conditionally based on the parentId of the specimen\n\t        for (var _id in this.state.options.specimenTypes) {\n\t          // if parentTypeId is equal to typeId\n\t          if (this.state.options.specimenTypes[_id].parentTypeId == this.state.data.specimen.typeId || _id == this.state.data.specimen.typeId) {\n\t            specimenTypes[_id] = this.state.options.specimenTypes[_id]['type'];\n\t          }\n\t        }\n\t\n\t        var specimenUnits = this.mapFormOptions(this.state.options.specimenUnits, 'unit');\n\t        var containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\t\n\t        var addAliquotButtonContent = React.createElement(\n\t          'span',\n\t          null,\n\t          '+'\n\t        );\n\t\n\t        addAliquotForm = React.createElement(\n\t          'div',\n\t          { title: 'Make Aliquots' },\n\t          React.createElement(\n\t            _FormModal2.default,\n\t            {\n\t              title: 'Add Aliquots',\n\t              buttonClass: 'action-button add',\n\t              buttonContent: addAliquotButtonContent\n\t            },\n\t            React.createElement(_specimenForm2.default, {\n\t              action: loris.BaseURL + '/biobank/ajax/submitData.php?action=submitSpecimen',\n\t              parentSpecimenIds: this.state.data.specimen.id,\n\t              parentSpecimenBarcodes: this.state.data.container.barcode,\n\t              candidateId: this.state.data.specimen.candidateId,\n\t              sessionId: this.state.data.specimen.sessionId,\n\t              pscid: this.state.data.candidate.PSCID,\n\t              visit: this.state.data.session.Visit_label,\n\t              unitId: this.state.data.specimen.unitId,\n\t              specimenTypes: specimenTypes,\n\t              specimenTypeUnits: this.state.options.specimenTypeUnits,\n\t              specimenUnits: specimenUnits,\n\t              containerTypesPrimary: containerTypesPrimary,\n\t              containersNonPrimary: this.state.options.containersNonPrimary,\n\t              containerDimensions: this.state.options.containerDimensions,\n\t              containerCoordinates: this.state.options.containerCoordinates,\n\t              specimenTypeAttributes: this.state.options.specimenTypeAttributes,\n\t              attributeDatatypes: this.state.options.attributeDatatypes,\n\t              attributeOptions: this.state.options.attributeOptions,\n\t              refreshParent: this.fetchSpecimenData\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.state.edit.collection) {\n\t\n\t        //Map Options for Form Select Elements\n\t        var _specimenTypes = {};\n\t        //produces options conditionally based on the parentId of the specimen\n\t        for (var id in this.state.options.specimenTypes) {\n\t          // if specimen type has a parent type\n\t          if (this.state.options.specimenTypes[this.state.data.specimen.typeId].parentTypeId) {\n\t            if (this.state.options.specimenTypes[id].parentTypeId == this.state.options.specimenTypes[this.state.data.specimen.typeId].parentTypeId || id == this.state.data.specimen.typeId) {\n\t              _specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n\t            }\n\t            // else if specimen type has no parent type\n\t          } else {\n\t            if (!this.state.options.specimenTypes[id].parentTypeId) {\n\t              _specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n\t            }\n\t          }\n\t        }\n\t\n\t        var _containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.state.specimen,\n\t          specimenTypes: _specimenTypes,\n\t          specimenTypeAttributes: this.state.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.state.options.specimenTypeUnits,\n\t          toggle: function toggle() {\n\t            return _this5.toggle('collection');\n\t          },\n\t          setSpecimenData: this.setSpecimenData,\n\t          revertSpecimenData: this.revertSpecimenData,\n\t          saveSpecimen: this.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: function onClick() {\n\t              return _this5.toggle('collection');\n\t            }\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t\n\t        //loops through data object to produce static elements\n\t        if (this.state.data.specimen.collection.data) {\n\t          var dataObject = this.state.data.specimen.collection.data;\n\t          var specimenTypeAttributes = Object.keys(dataObject).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this5.state.options.specimenTypeAttributes[_this5.state.data.specimen.typeId][key].name,\n\t              text: dataObject[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.state.data.specimen.collection.quantity + ' ' + this.state.options.specimenUnits[this.state.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.sites[this.state.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.state.edit.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.state.edit.collection ? null : function () {\n\t              return _this5.toggle('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var specimenProtocolAttributes = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t\n\t      // If the form is an edit state\n\t      if (this.state.edit.preparation) {\n\t        //Map Options for Form Select Elements Here\n\t        specimenProtocolAttributes = this.state.options.specimenProtocolAttributes[this.state.data.specimen.typeId];\n\t\n\t        //This remaps specimen Protocols based on the specimen Type\n\t        //this may need to be refactored or put into a function later\n\t        var specimenProtocols = {};\n\t        for (var _id2 in specimenProtocolAttributes) {\n\t          specimenProtocols[_id2] = this.state.options.specimenProtocols[_id2];\n\t        }\n\t\n\t        specimenProtocols = this.mapFormOptions(specimenProtocols, 'protocol');\n\t\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.state.specimen,\n\t          data: this.state.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.state.options.attributeDatatypes,\n\t          attributeOptions: this.state.options.attributeOptions,\n\t          sites: this.state.options.sites,\n\t          setSpecimenData: this.setSpecimenData,\n\t          revertSpecimenData: this.revertSpecimenData,\n\t          saveSpecimen: this.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: function onClick() {\n\t              _this5.toggle('preparation');_this5.revertSpecimenData();\n\t            }\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation Does Exist and the form is not in an edit state\n\t      if (this.state.data.specimen.preparation && !this.state.edit.preparation) {\n\t        var dataObject = this.state.data.specimen.preparation.data;\n\t\n\t        if (dataObject) {\n\t          specimenProtocolAttributes = Object.keys(dataObject).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this5.state.options.specimenProtocolAttributes[_this5.state.data.specimen.typeId][_this5.state.data.specimen.preparation.protocolId][key].name,\n\t              text: dataObject[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.state.options.specimenProtocols[this.state.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.state.options.sites[this.state.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.state.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.state.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.state.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (this.state.options.specimenProtocolAttributes[this.state.data.specimen.typeId] && !this.state.data.specimen.preparation && !this.state.edit.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this5.toggle('preparation');_this5.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.state.data.specimen.preparation || this.state.edit.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.state.edit.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.state.edit.preparation ? null : function () {\n\t                return _this5.toggle('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      analysisPanel = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'panel inactive'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'add-process'\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          null,\n\t          'ADD ANALYSIS'\n\t        )\n\t      );\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.state.specimen,\n\t        container: this.state.container,\n\t        data: this.state.data,\n\t        options: this.state.options,\n\t        edit: this.state.edit,\n\t        toggle: this.toggle,\n\t        mapFormOptions: this.mapFormOptions,\n\t        setSpecimenData: this.setSpecimenData,\n\t        revertSpecimenData: this.revertSpecimenData,\n\t        saveSpecimen: this.saveSpecimen,\n\t        setContainerData: this.setContainerData,\n\t        revertContainerData: this.revertContainerData,\n\t        saveContainer: this.saveContainer\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.state.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.state.container,\n\t              setContainerData: this.setContainerData,\n\t              saveContainer: this.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            collection: this.state.data.specimen.collection,\n\t            preparation: this.state.data.specimen.preparation,\n\t            analysis: this.state.data.specimen.analysis,\n\t            sites: this.state.options.sites\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\t\n\twindow.BiobankSpecimen = BiobankSpecimen;\n\twindow.RBiobankSpecimen = RBiobankSpecimen;\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/specimenIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 68e3b314ce250beba595","/* global ReactDOM */\n\nimport BiobankSpecimen from './specimen';\nconst args = QueryString.get(document.currentScript.src);\n\n$(function() {\n  const biobankSpecimen = (\n    <div className=\"page-specimen-form\">\n      <div className=\"row\">\n        <div className=\"col-md-9 col-lg-12\">\n          <BiobankSpecimen\n            specimenPageDataURL={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getSpecimenData&barcode=${args.barcode}`}\n            optionsURL={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getFormOptions`}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n            saveSpecimen={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveSpecimen`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenIndex.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // get Id of available status\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Availabale'\n    );\n\n    this.state = {\n      errorMessage: null,\n      formErrors: {},\n      barcodeList: {\n        1: {\n          specimen: {},\n          container: {statusId: availableId, temperature: 20}\n        }\n      },\n      countBarcodes: 1\n    };\n\n    this.saveBarcodeList = this.saveBarcodeList.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  saveBarcodeList() {\n    let barcodeList = this.state.barcodeList;\n    for (let barcode in barcodeList) {\n      this.save(barcodeList[barcode].container, this.props.saveContainer);\n      this.save(barcodeList[barcode].specimen, this.props.saveSpecimen);\n    }\n  }\n\n  save(entity, url) {\n    let entityObject = new FormData();\n    for (let key in entity) {\n      if (entity[key] !== \"\") {\n        entityObject.append(key, entity[key]);\n      }\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: url,\n      data: entityObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        let xhr = new window.XMLHttpRequest();\n        return xhr;\n      }.bind(this),\n      success: function() {\n        this.props.refreshParent();\n        swal(\"Save Successful!\", \"\", \"success\");\n        this.props.onSuccess();\n      }.bind(this),\n      error: function(err) {\n        console.error(err);\n        let msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n        this.setState({\n          errorMessage: msg,\n        });\n        swal(msg, \"\", \"error\");\n      }.bind(this)\n    });\n  }\n\n  setContainer(name, value) {\n    let siteId = this.state.siteId;\n    let containerList = this.state.containerList;\n\n    if (name === 'siteId') {\n      siteId = value;\n\n    }\n\n    \n  }\n\n  setSpecimen(name, value) {\n\n  }\n\n  setBarcodeList(barcodeData, barcodeKey) {\n    let barcodeList = this.state.barcodeList;\n    barcodeList[barcodeKey] = barcodeData;\n    \n    this.setState({ barcodeList});\n  };\n\n  addBarcode() {\n    let barcodeList = this.state.barcodeList;\n    let count = this.state.countBarcodes;\n\n    barcodeList[count+1] = {\n      specimen: {},\n      container: {}\n    }; \n\n    this.setState({\n      barcodeList: barcodeList,\n      countBarcodes: count + 1\n    });\n  }\n\n  copyBarcode(key, multiplier) {\n    let count = this.state.countBarcodes;\n    let nextKey = count+1;\n    let barcodeList = this.state.barcodeList;\n\n    for (let i=1; i<=multiplier; i++) {\n      barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key])); \n      delete barcodeList[nextKey].barcode;\n      nextKey++;\n    }\n\n    this.setState({\n      barcodeList: barcodeList,\n      countBarcodes: nextKey\n    });\n  }\n\n  removeBarcode(key) {\n    let barcodeList = this.state.barcodeList;\n    delete barcodeList[key];\n\n    this.setState({\n      barcodeList: barcodeList\n    });\n  }\n\n  render() {\n\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeFormList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          key={key}\n          barcodeKey={key}\n          id={i} \n          barcodeData={this.state.barcodeFormList[key] ? \n            this.state.barcodeFormList[key] : null}\n          removeBarcode={barcodeListArray.length !== 1 ?\n            () => this.removeBarcode(key) : null}\n          addBarcode={i == barcodeListArray.length ? this.addBarcode : null}\n          copyBarcode={i == barcodeListArray.length && this.state.barcodeList[key] ? \n            this.copyBarcode.bind(this, key) : null}\n          setParentFormData={this.setBarcodeList}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.parentSpecimenIds) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.parentSpecimenBarcodes}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.pscid}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.visit}\n          />\n        </div>\n      );\n\n      //TODO: It may be wise to make unit static and forced, or atleast prepopulated --\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.setFormData}\n            required={true}\n            value={this.state.formData.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.setFormData}\n            emptyOption={false}\n            required={true}\n            value={this.state.formData.unitId}\n          />\n        </div>\n      );\n    } else {\n      globalFields = (\n          <div>\n            <SearchableDropdown\n              name=\"pscid\"\n              label=\"PSCID\"\n              options={this.props.pSCIDs}\n              onUserInput={this.setFormData}\n              ref=\"pscid\"\n              required={true}\n              value={this.state.formData.pscid}\n              placeHolder='Search for a PSCID'\n            />\n            <SelectElement\n              name=\"visitLabel\"\n              label=\"Visit Label\"\n              options={this.state.visits}\n              onUserInput={this.setFormData}\n              ref=\"visitLabel\"\n              required={true}\n              value={this.state.formData.visitLabel}\n              disabled={this.state.formData.pscid ? false : true}\n            />\n          </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={this.saveBarcodeList}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      formData: {},\n      formErrors: {},\n      collapsed: true,\n      copyMultiplier: 1,\n    };\n   \n    this.setFormData = this.setFormData.bind(this);\n    this.setChildFormData = this.setChildFormData.bind(this);\n    this.setParentFormData = this.setParentFormData.bind(this);\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.formData) {\n      let formData = this.props.formData;\n    \n      this.setState({\n        formData: formData\n      }); \n    }   \n  }\n\n  toggleCollapse() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    \n    this.setState({\n      copyMultiplier: copyMultiplier\n    }); \n  }\n\n  copy() {\n    this.props.copyBarcodeForm(this.state.copyMultiplier);\n  }\n\n  render() {\n    let addBarcodeFormButton;\n    let addBarcodeFormText;\n    let copyBarcodeFormButton;\n    let copyBarcodeFormText;\n    if (this.props.addBarcodeForm) {\n      addBarcodeFormButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcodeForm}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeFormText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcodeForm) {\n      copyBarcodeFormButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeFormText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.setCopyMultiplier}\n            value={this.state.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeFormButton;\n    if (this.props.removeBarcodeForm) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeFormButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcodeForm}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setFormData}\n                ref='barcode'\n                required={true}\n                value={this.state.formData.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.state.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.id}\n              onClick={this.toggleCollapse}\n            />\n            {removeBarcodeFormButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.id} className='collapse'>\n              <SelectElement                                                          \n                name=\"specimenType\"                                                   \n                label=\"Specimen Type\"                                                 \n                options={this.props.specimenTypes}                                    \n                onUserInput={this.setFormData}                                        \n                ref=\"specimenType\"                                                    \n                required={true}                                                       \n                value={this.state.formData.specimenType}                              \n              />                 \n              <SelectElement                                                        \n                name=\"containerType\"                                                \n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setFormData}                                      \n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.state.formData.containerType}                           \n              />            \n              <SpecimenCollectionForm\n                formData={this.props.formData}\n                setParentFormData={this.setChildFormData}\n                onChange={this.props.onChange}\n                specimenTypes={this.props.specimenTypes}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n                containerTypesPrimary={this.props.containerTypesPrimary}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                stati={this.props.stati}\n              />\n              <ContainerParentForm                                                    \n                setParentFormData={this.setContainerParentFormData}                   \n                containersNonPrimary={this.props.containersNonPrimary}                \n                containerDimensions={this.props.containerDimensions}                  \n                containerCoordinates={this.props.containerCoordinates}                \n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeFormButton}\n              {addBarcodeFormText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeFormButton}\n              {copyBarcodeFormText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    this.props.onChange instanceof Function && this.props.onChange();   \n\n    var formData = this.state.formData;\n    formData[formElement] = value;\n\n    this.setState(\n      {\n      formData: formData\n      },\n      this.setParentFormData\n    );\n  }\n\n  setChildFormData(collectionFormData) {\n    var formData = this.state.formData;\n    \n    for (let field in collectionFormData) {\n      formData[field] = collectionFormData[field]\n    }\n \n    this.setState(\n      {\n        formData: formData\n      },\n      this.setParentFormData\n    );\n  }\n\n  setParentFormData() {\n    this.props.setParentFormData(this.state.formData, this.props.barcodeKey);\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n  id: React.PropTypes.string,\n  specimenTypes: React.PropTypes.object.isRequired,\n  containerTypesPrimary: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  capacities: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.getSpecimenTypeFields = this.getSpecimenTypeFields.bind(this);\n    this.setCollectionData = this.setCollectionData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollectionData(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimenData('collection', collection);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollectionData('data', data);\n  }\n\n  // This generates all the form fields for a given specimen type\n  getSpecimenTypeFields(fieldsObject) {\n    let specimenTypeFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"text\" || datatype === \"number\") {\n\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.collection.data[attribute]}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.collection.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.props.specimen.collection.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n        // There is currently no CheckboxElement or RadioElement in loris/jsx/Form.js and therefore\n        // this is not possible.     \n      }\n    })\n\n    return specimenTypeFields;\n  }\n\n  render() {\n\n    let updateButton;\n    if (this.props.specimen) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n     \n      //This modifies the selections for unit drop down based on the chosen specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        specimenTypeFields = this.getSpecimenTypeFields(specimenTypeFieldsObject);\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollectionData}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollectionData}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.getSpecimenProtocolFields = this.getSpecimenProtocolFields.bind(this);\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimenData('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimenData('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  // TODO: decouple this code from the collectionForm by make it a React Component\n  // This generates all the form fields for a given specimen protocol\n  getSpecimenProtocolFields(fieldsObject) {\n    let specimenProtocolFields = Object.keys(fieldsObject).map((attribute) => {\n      let datatype = this.props.attributeDatatypes[fieldsObject[attribute]['datatypeId']].datatype;\n\n      if (datatype === \"text\" || datatype === \"number\") {\n        if (fieldsObject[attribute]['refTableId'] == null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.preparation.data[attribute]}\n            />\n          );\n        }\n\n        if (fieldsObject[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fieldsObject[attribute]['name']}\n              options={this.props.attributeOptions[fieldsObject[attribute]['refTableId']]}\n              onUserInput={this.setData}\n              required={fieldsObject[attribute]['required']}\n              value={this.props.specimen.preparation.data[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === \"datetime\") {\n        return (\n          <DateElement\n            name={attribute}\n            label={fieldsObject[attribute]['name']}\n            onUserInput={this.setData}\n            ref={attribute}\n            required={fieldsObject[attribute]['required']}\n            value={this.props.specimen.preparation.data[attribute]}\n          />\n        );\n      }\n\n      if (datatype === \"boolean\") {\n      }\n    });\n\n    return specimenProtocolFields;\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = this.getSpecimenProtocolFields(specimenProtocolFieldsObject);\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\nimport Modal from './Modal';\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\n\nclass FormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { show: false, throwWarning: false }\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.confirmClose = this.confirmClose.bind(this);\n    this.setWarning = this.setWarning.bind(this);\n  }\n\n  renderChildren() {\n    return React.Children.map(this.props.children, child => {\n      return React.cloneElement(child, { onSuccess: this.closeModal, onChange: this.setWarning });\n    });\n  }\n\n  openModal() {\n    this.setState({\n      show: true\n    });\n  } \n\n  setWarning() {\n    this.setState({\n      throwWarning: true\n    });\n  }\n\n  confirmClose() {\n    if (this.state.throwWarning) {\n      swal({\n        title: \"Are You Sure?\",\n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Proceed',\n        cancelButtonText: 'Cancel',\n      },\n      function() {\n        this.closeModal();\n      }.bind(this));\n    } else {\n      this.closeModal();\n    }\n  }\n\n  closeModal() {\n    this.setState({\n      show: false,\n      throwWarning: false\n    });\n  }\n\n  render() {\n    return (\n      <Modal \n        closeModal={this.confirmClose} \n        openModal={this.openModal} \n        show={this.state.show}\n        {...this.props} \n      >\n        {this.renderChildren()}\n      </Modal>\n    );\n  }\n}\n\nFormModal.propTypes = {\n  title: React.PropTypes.string,\n  buttonClass: React.PropTypes.string,\n  buttonStyle: React.PropTypes.object,\n  buttonContent: React.PropTypes.object,\n};\nFormModal.defaultProps = {\n  buttonClass: 'btn btn-primary'\n};\n\nexport default FormModal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FormModal.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 1000,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '70px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    var button = (\n      <div\n        className={this.props.buttonClass}\n        onClick={this.props.openModal}\n      >\n        {this.props.buttonContent}\n      </div>\n    );\n\n    var modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.props.closeModal}>\n          <div\n            style={modalStyle}\n            onClick={e => {\n              e.stopPropagation();\n            }}\n          >\n            <div\n              style={titleStyle}\n            >\n              {this.props.title}\n              <span \n                style={glyphStyle}\n                onClick={this.props.closeModal}\n              >\n                ×\n              </span>\n            </div>\n            <div\n              style={bodyStyle}\n            >\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div style={this.props.style}>\n        {button}\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  buttonClass: React.PropTypes.string,\n  buttonStyle: React.PropTypes.object,\n  buttonContent: React.PropTypes.object,\n  show: React.PropTypes.boolean,\n  closeModal: React.PropTypes.func,\n  openModal: React.PropTypes.func\n};\nModal.defaultProps = {\n  buttonClass: 'btn btn-primary'\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","/**\n * This file contains React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n      <div className='loader-container'>\n        <div className=\"loader\"/>\n      </div>\n\n\n    );\n  }\n}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","import FormModal from 'FormModal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.edit.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.toggle('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n        console.log(units);\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                className='centered-horizontal'\n                specimen={this.props.specimen}\n                units={units}\n                toggle={() => this.props.toggle('quantity')}\n                setSpecimenData={this.props.setSpecimenData}\n                revertSpecimenData={this.props.revertSpecimenData}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.edit.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('temperature')}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              className='centered-horizontal'                                   \n              container={this.props.container}                                  \n              toggle={() => this.props.toggle('temperature')}                     \n              setContainerData={this.props.setContainerData}\n              revertContainerData={this.props.revertContainerData}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.edit.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              className='centered-horizontal'                                   \n              container={this.props.container}                                  \n              stati={stati}\n              toggle={() => this.props.toggle('status')}                          \n              setContainerData={this.props.setContainerData}                          \n              revertContainerData={this.props.revertContainerData}                    \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.edit.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.sites[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.toggle('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              className='centered-horizontal'                                   \n              container={this.props.container}\n              sites={this.props.options.sites}\n              toggle={() => this.props.toggle('location')}                        \n              setContainerData={this.props.setContainerData}                          \n              revertContainerData={this.props.revertContainerData}                    \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.sites[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if (this.props.data.specimen) {\n      if (this.props.specimen.parentSpecimenId) {\n        let specimenURL = loris.BaseURL='/biobank/specimen/?barcode=';\n        let parentSpecimenFieldValue = (\n          <a href={specimenURL+this.props.data.parentSpecimen.barcode}>\n            {this.props.data.parentSpecimen.barcode}\n          </a>\n        );\n\n        parentSpecimenField = (\n          <div className='item'>\n            <div className='field'>\n            Parent Specimen\n              <div className='value'>\n                {parentSpecimenFieldValue || 'None'}\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let containerURL = loris.BaseURL+\"/biobank/container/?barcode=\";            \n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a                                                                      \n          href={containerURL+this.props.options.containersNonPrimary[             \n            this.props.data.container.parentContainerId                           \n          ].barcode}>                                                             \n            {this.props.options.containersNonPrimary[                             \n              this.props.data.container.parentContainerId                         \n            ].barcode}                                                            \n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <FormModal                                                              \n            title='Update Parent Container'                                       \n            buttonClass='action-button update'                                    \n            buttonContent={<span className='glyphicon glyphicon-chevron-right'/>} \n          >                                                                       \n            <ContainerParentForm\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainerData={this.props.setContainerData}                            \n              revertContainerData={this.props.revertContainerData}\n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </FormModal>                                                            \n        </div>                                                                    \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <TextboxElement\n          name='quantity'\n          labelClass='col-xl-0'\n          inputClass='col-lg-12'\n          onUserInput={this.props.setSpecimenData}\n          value={this.props.specimen.quantity}\n        />\n        <SelectElement\n          name='unit'\n          labelClass='col-xl-0'\n          inputClass='col-lg-12'\n          options={this.props.units}\n          onUserInput={this.props.setSpecimenData}\n          value={this.props.specimen.unitId}\n        />\n        <ButtonElement\n          label=\"Update\"\n          onUserInput={this.props.saveSpecimen}\n          columnSize= 'col-lg-12'\n        />\n        <a\n          onClick={()=>{this.props.toggle(); this.props.revertSpecimenData()}}\n        >\n          Cancel\n        </a>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimenData: React.PropTypes.func,\n  revertSpecimenData: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <TextboxElement\n              name='temperature'\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.temperature}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a onClick={()=>{this.props.toggle(); this.props.revertContainerData()}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.statusId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={() => \n              {this.props.revertContainerData(); this.props.toggle();}\n            }\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='locationId'\n              options={this.props.sites}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainerData}\n              value={this.props.container.locationId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={() => \n              {this.props.revertContainerData(); this.props.toggle();}\n            }\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainerData: React.PropTypes.func.isRequired,\n  revertContainerData: React.PropTypes.func.isRequired,\n  sites: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n\n  render() {\n    let containerDisplay;\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.props.setContainerData}\n        required={true}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions = {\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates = {\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes = {this.props.containerTypes}\n            containerStati = {this.props.containerStati} \n            select = {true}\n            selectedCoordinate = {this.props.container.coordinate}\n            setContainerData = {this.props.setContainerData}\n          />\n        );\n      }\n    }   \n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        <br/>\n        <ButtonElement label=\"Update\"/>\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let type = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary ? 'specimen' : 'container';\n      let url = loris.BaseURL+'/biobank/'+type+'/?barcode='+\n        this.props.children[this.props.coordinates[coordinate]].barcode;\n\n      window.location.href = url;\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    this.props.saveChildContainer(container);\n  }\n\n  render() {\n  // This is eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  var coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = null;\n\n        if (!this.props.select) {\n          // This double if statement doesn't sound great\n          if (this.props.coordinates) {\n            if (this.props.coordinates[coordinate]) {\n              nodeClass = 'node occupied';\n              dataHtml = 'true';\n              dataToggle = 'tooltip';\n              dataPlacement = 'top';\n              tooltipTitle = \n            '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n              draggable = 'true';\n              onDragStart = this.drag;\n              onDragOver = null;\n              onDrop = null;\n              onClick = this.redirectURL;\n            }\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainerData('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n\t\t\t  onClick = (e) => this.props.setContainerData('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            // TODO: --- This is currently not working ---\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div\n          className='row'\n          style={rowStyle} \n        >\n          {column}\n        </div>\n      )\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div className='display'>\n        {display}\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass LifeCycle extends React.Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n    \n    };\n   \n  }\n\n  componentDidMount() {\n  }\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css(\n        {'border': '2px solid #093782',\n         'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'});\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #093782', 'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'});\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n\n    let collectionNode;\n    let collectionTooltip;\n    if (this.props.collection || this.props.container) {\n      collectionTooltip = (\n        <div>\n          <h>Collection</h>\n          <p>Date:</p> \n        </div>\n      );\n\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    let preparationNode;\n    if (this.props.preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    let analysisNode;\n    if (this.props.analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'/>\n           <div className='lifecycle-text'>Analysis</div>\n        </div>\n      );\n    }\n\n    let line;\n    line = (\n        <div className='lifecycle-line'/>\n    );\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainerData('parentContainerId', null);\n    this.props.setContainerData('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainerData: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankSpecimen */\n\nimport FormModal from 'FormModal';\nimport Loader from 'Loader';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: {},\n      isLoaded: false,\n      loadedData: 0,\n      edit: {\n        temperature: false,\n        quantity: false,\n        collection: false,\n        preparation: false\n      }\n    };\n\n    this.fetchSpecimenData = this.fetchSpecimenData.bind(this);\n    this.fetchOptions = this.fetchOptions.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleAll = this.toggleAll.bind(this);\n    this.mapFormOptions = this.mapFormOptions.bind(this);\n    this.setContainerData = this.setContainerData.bind(this);\n    this.revertContainerData = this.revertContainerData.bind(this);\n    this.setSpecimenData = this.setSpecimenData.bind(this);\n    this.addPreparation = this.addPreparation.bind(this);\n    this.revertSpecimenData = this.revertSpecimenData.bind(this);\n    this.saveContainer = this.saveContainer.bind(this);\n    this.saveSpecimen = this.saveSpecimen.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchSpecimenData();\n    this.fetchOptions();\n  }\n\n  fetchSpecimenData() {\n    var self = this;\n    $.ajax(this.props.specimenPageDataURL, {\n      dataType: 'json',\n      success: function(data) {\n        let specimen = JSON.parse(JSON.stringify(data.specimen));\n        let container = JSON.parse(JSON.stringify(data.container));\n        self.setState({\n          data: data,\n          container: container,\n          specimen: specimen,\n          isLoaded: true,\n        });\n      },\n      error: function(error, errorCode, errorMsg) {\n        console.error(error, errorCode, errorMsg);\n        self.setState({\n          error: 'An error occurred when loading the form!'\n        });\n      }\n    });\n  }\n\n  fetchOptions() {\n    var self = this;\n    $.ajax(this.props.optionsURL, {\n      dataType: 'json',\n      success: function(data) {\n        self.setState({\n          options: data,\n        });\n      },\n      error: function(error, errorCode, errorMsg) {\n        console.error(error, errorCode, errorMsg);\n        self.setState({\n          error: 'An error occurred when loading the form!'\n        });\n      }\n    });\n  }\n\n  saveContainer() {\n    let container = JSON.parse(JSON.stringify(this.state.container));\n    let containerObj = new FormData();\n    for (let key in container) {\n      containerObj.append(key, container[key]);\n    }   \n  \n    this.submit(containerObj, this.props.saveContainer, 'Container Save Successful!').then(\n      () => {\n        //this.fetchSpecimenData();\n        //this.fetchOptions();\n        let data = this.state.data;\n        data.container = JSON.parse(JSON.stringify(this.state.container));\n        this.setState({data});\n      }\n    );\n  }\n\n  saveSpecimen() {\n    let specimen = JSON.parse(JSON.stringify(this.state.specimen));;\n    let specimenObj = new FormData();\n    for (let key in specimen) {\n      if ((key === 'collection') || (key === 'preparation') || (key === 'analysis')) {\n          specimen[key] = JSON.stringify(specimen[key]);\n      }\n      specimenObj.append(key, specimen[key]);\n    }   \n\n    this.submit(specimenObj, this.props.saveSpecimen, 'Specimen Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.specimen = JSON.parse(JSON.stringify(this.state.specimen));\n        this.setState({data})\n      }\n    );\n  }\n\n  //TODO: this should likely be placed in its own component.\n  //TODO: should the success messages be coming from the back end?\n  submit(data, url, message) {\n    return new Promise(resolve => {\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: data,\n        cache: false,\n        contentType: false,\n        processData: false,\n        xhr: function() {\n          let xhr = new window.XMLHttpRequest();\n          return xhr;\n        }.bind(this),\n        success: () => {\n          resolve();\n          this.toggleAll();\n          swal(message, '', 'success');\n        },\n        error: error => {\n          let message = error.responseJSON ? error.responseJSON.message : \"Submission error!\";\n          this.setState({\n            errorMessage: message\n          });\n          swal(message, '', 'error');\n          console.error(error);\n        }\n      });\n    })\n  }\n\n  toggle(stateKey) {\n    let edit = this.state.edit;\n    let stateValue = edit[stateKey];\n    edit[stateKey] = !stateValue;\n    this.setState({edit});\n  }\n\n  toggleAll() {\n    let edit = this.state.edit;\n    for (let key in edit) {\n      edit[key] = false;\n    }\n    this.setState({edit});\n  }\n\n  // TODO: map options for forms - this is used frequently and may need\n  // to be moved to a more global place\n  mapFormOptions(rawObject, targetAttribute) {\n    var data = {};\n    for (var id in rawObject) {\n      data[id] = rawObject[id][targetAttribute];\n    }\n\n    return data;\n  }\n\n  setContainerData(name, value) {\n    let container = this.state.container;\n\n    if (value !== null) {\n      container[name] = value;\n    } else {\n      delete container[name];\n    }\n\n    this.setState({container});\n  }\n\n  revertContainerData() {\n    let container = this.state.container;\n    container = JSON.parse(JSON.stringify(this.state.data.container));\n    this.setState({container});\n  }\n\n  setSpecimenData(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  revertSpecimenData() {\n    let specimen = this.state.specimen;\n    specimen = JSON.parse(JSON.stringify(this.state.data.specimen));\n    this.setState({specimen});\n  }\n\n  render() {\n    // Data loading error\n    if (this.state.error !== undefined) {\n      return (\n        <div className=\"alert alert-danger text-center\">\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    // Waiting for data to load\n    if (!this.state.isLoaded) {\n      return (\n        <Loader/>\n      );\n    }\n\n    /**\n     * Specimen Form\n     */\n    let addAliquotForm;\n\n    if (loris.userHasPermission('biobank_write')) {\n      /**\n       * Map Options for Form Select Elements\n       */      \n      let specimenTypes = {};\n      //produces options conditionally based on the parentId of the specimen\n      for (let id in this.state.options.specimenTypes) {\n        // if parentTypeId is equal to typeId\n        if (\n             (this.state.options.specimenTypes[id].parentTypeId == \n             this.state.data.specimen.typeId) || \n             (id == this.state.data.specimen.typeId)\n           ) {\n          specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n        }\n      }\n\n      let specimenUnits = this.mapFormOptions(this.state.options.specimenUnits, 'unit');\n      let containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\n      let addAliquotButtonContent = (\n        <span>+</span>  \n      );\n\n      addAliquotForm = (\n        <div title='Make Aliquots'>\n          <FormModal\n            title=\"Add Aliquots\"\n            buttonClass='action-button add'\n            buttonContent={addAliquotButtonContent}\n          >\n            <BiobankSpecimenForm\n              action={`${loris.BaseURL}/biobank/ajax/submitData.php?action=submitSpecimen`}\n              parentSpecimenIds={this.state.data.specimen.id}\n              parentSpecimenBarcodes={this.state.data.container.barcode}\n              candidateId={this.state.data.specimen.candidateId}\n              sessionId={this.state.data.specimen.sessionId} \n              pscid={this.state.data.candidate.PSCID}\n              visit={this.state.data.session.Visit_label}\n              unitId={this.state.data.specimen.unitId}\n              specimenTypes={specimenTypes}\n              specimenTypeUnits={this.state.options.specimenTypeUnits}\n              specimenUnits = {specimenUnits}\n              containerTypesPrimary={containerTypesPrimary}\n              containersNonPrimary={this.state.options.containersNonPrimary}\n              containerDimensions={this.state.options.containerDimensions}\n              containerCoordinates={this.state.options.containerCoordinates}\n              specimenTypeAttributes={this.state.options.specimenTypeAttributes}\n              attributeDatatypes={this.state.options.attributeDatatypes}\n              attributeOptions={this.state.options.attributeOptions}\n              refreshParent={this.fetchSpecimenData}\n            />\n          </FormModal>\n        </div>\n      );\n    }\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.state.edit.collection) {\n\n      //Map Options for Form Select Elements\n      let specimenTypes = {};\n      //produces options conditionally based on the parentId of the specimen\n      for (var id in this.state.options.specimenTypes) {\n        // if specimen type has a parent type\n        if (this.state.options.specimenTypes[this.state.data.specimen.typeId].parentTypeId) {\n          if (this.state.options.specimenTypes[id].parentTypeId == \n             this.state.options.specimenTypes[this.state.data.specimen.typeId].parentTypeId\n             || id == this.state.data.specimen.typeId) {\n            specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n          }\n        // else if specimen type has no parent type\n        } else {\n          if (!this.state.options.specimenTypes[id].parentTypeId) {\n            specimenTypes[id] = this.state.options.specimenTypes[id]['type'];\n          }\n        }\n      }\n\n      let containerTypesPrimary = this.mapFormOptions(this.state.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.state.specimen}\n          specimenTypes={specimenTypes}\n          specimenTypeAttributes={this.state.options.specimenTypeAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.state.options.specimenTypeUnits}\n          toggle={() => this.toggle('collection')}\n          setSpecimenData={this.setSpecimenData}\n          revertSpecimenData={this.revertSpecimenData}\n          saveSpecimen={this.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={() => this.toggle('collection')}\n        >\n          Cancel\n        </a>\n      );\n\n    } else {\n\n      //loops through data object to produce static elements\n      if (this.state.data.specimen.collection.data) {\n        var dataObject = this.state.data.specimen.collection.data;\n        var specimenTypeAttributes = Object.keys(dataObject).map((key) => {\n          return (\n            <StaticElement\n              label={this.state.options.specimenTypeAttributes[this.state.data.specimen.typeId][key].name}\n              text={dataObject[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.state.data.specimen.collection.quantity+' '+\n              this.state.options.specimenUnits[\n                this.state.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.sites[this.state.data.specimen.collection.locationId]}\n          />\n\t      {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.state.edit.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.state.edit.collection ? null : () => this.toggle('collection')}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    \n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let specimenProtocolAttributes;\n    let cancelEditPreparationButton;\n\n    // If the form is an edit state\n    if (this.state.edit.preparation) {\n      //Map Options for Form Select Elements Here\n      specimenProtocolAttributes = this.state.options.specimenProtocolAttributes[this.state.data.specimen.typeId];\n\n      //This remaps specimen Protocols based on the specimen Type\n      //this may need to be refactored or put into a function later\n      let specimenProtocols = {};\n      for (let id in specimenProtocolAttributes) {\n        specimenProtocols[id] = this.state.options.specimenProtocols[id];\n      }\n\n      specimenProtocols = this.mapFormOptions(specimenProtocols, 'protocol');\n \n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.state.specimen}\n          data={this.state.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.state.options.attributeDatatypes}\n          attributeOptions={this.state.options.attributeOptions}\n          sites={this.state.options.sites}\n          setSpecimenData={this.setSpecimenData}\n          revertSpecimenData={this.revertSpecimenData}\n          saveSpecimen={this.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={() => {this.toggle('preparation'); this.revertSpecimenData()}}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation Does Exist and the form is not in an edit state\n    if (this.state.data.specimen.preparation && !this.state.edit.preparation) {\n      var dataObject = this.state.data.specimen.preparation.data;\n      \n      if (dataObject) {\n        specimenProtocolAttributes = Object.keys(dataObject).map((key) => {\n          return (\n            <StaticElement\n              label={this.state.options.specimenProtocolAttributes[\n                this.state.data.specimen.typeId\n              ][this.state.data.specimen.preparation.protocolId][key].name}\n              text={dataObject[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.state.options.specimenProtocols[this.state.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.state.options.sites[this.state.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.state.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.state.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.state.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (this.state.options.specimenProtocolAttributes[this.state.data.specimen.typeId] && \n        !this.state.data.specimen.preparation && !this.state.edit.preparation) {\n      preparationPanel = (\n        <div\n          className='panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.toggle('preparation'); this.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n\n    } else if (this.state.data.specimen.preparation || this.state.edit.preparation) {\n      preparationPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.state.edit.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.state.edit.preparation ? null : () => this.toggle('preparation')}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    analysisPanel = (\n\t  <div\n        className='panel inactive'\n\t  >\n        <div\n          className='add-process'\n        >\n          <span className='glyphicon glyphicon-plus'/>\n        </div>\n        <div>\n        ADD ANALYSIS\n        </div>\n      </div>\n    );\n\n    let globals = (\n      <Globals\n        specimen={this.state.specimen}\n        container={this.state.container}\n        data={this.state.data}\n        options={this.state.options}\n        edit={this.state.edit}\n        toggle={this.toggle}\n        mapFormOptions={this.mapFormOptions}\n        setSpecimenData={this.setSpecimenData}\n        revertSpecimenData={this.revertSpecimenData}\n        saveSpecimen={this.saveSpecimen}\n        setContainerData={this.setContainerData}\n        revertContainerData={this.revertContainerData}\n        saveContainer={this.saveContainer}\n      />\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.state.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.state.container}\n              setContainerData={this.setContainerData}\n              saveContainer={this.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            collection={this.state.data.specimen.collection}\n            preparation={this.state.data.specimen.preparation}\n            analysis={this.state.data.specimen.analysis}\n            sites={this.state.options.sites}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n      </div>\n    ); \n  }\n\n}\n\n  \n\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\nwindow.BiobankSpecimen = BiobankSpecimen;\nwindow.RBiobankSpecimen = RBiobankSpecimen;\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js"],"sourceRoot":""}