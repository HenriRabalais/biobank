{"version":3,"sources":["webpack:///modules/biobank/js/specimenIndex.js","webpack:///webpack/bootstrap bb02907b947b37f858b1?3e3a********","webpack:///./modules/biobank/jsx/specimenIndex.js","webpack:///./jsx/Panel.js?b4c8","webpack:///./modules/biobank/jsx/specimen.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_specimen","_specimen2","args","QueryString","get","document","currentScript","src","$","biobankSpecimen","React","createElement","className","DataURL","loris","BaseURL","barcode","action","ReactDOM","render","getElementById","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","Panel","_React$Component","this","_this","getPrototypeOf","state","collapsed","initCollapsed","panelClass","toggleCollapsed","bind","setState","glyphClass","panelHeading","title","onClick","data-toggle","data-target","style","cursor","role","height","children","Component","propTypes","PropTypes","string","defaultProps","_Panel","_Panel2","BiobankSpecimen","Data","collectionData","uploadResult","isLoaded","loadedData","handleSubmit","setCollectionData","showAlertMessage","ajax","dataType","success","data","specimen","specimenData","container","containerData","parentSpecimenBarcode","parentContainerBarcode","specimenTypes","containerTypesPrimary","error","errorCode","errorMsg","console","undefined","alertMessage","alertClass","backURL","concat","specimenURL","LinkElement","label","text","href","containerURL","dataObject","dataArray","keys","map","StaticElement","location","containerLoci","locusId","location_id","siteInfo","Name","destination_id","ref","FormElement","columns","candidateInfo","PSCID","CandID","sessionInfo","Visit_label","ID","containerStati","statusId","name","onSubmit","typeId","quantity","containerUnits","containerCapacities","capacity_id","unit_id","unit","origin_id","timeCollect","notes","e","preventDefault","myCollectionData","formData","hide","removeClass","type","url","JSON","stringify","cache","contentType","processData","xhr","window","XMLHttpRequest","upload","addEventListener","evt","lengthComputable","progressbar","progresslabel","percent","Math","round","total","width","html","attr","addClass","err","formElement","refs","alertMsg","fadeTo","delay","slideUp","isRequired","RBiobankSpecimen","createFactory"],"mappings":"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","file":"./modules/biobank/js/specimenIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _specimen = __webpack_require__(7);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar args = QueryString.get(document.currentScript.src); /* global ReactDOM */\n\t\n\t$(function () {\n\t  var biobankSpecimen = React.createElement(\n\t    \"div\",\n\t    { className: \"page-specimen-form\" },\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"row\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"col-md-9 col-lg-12\" },\n\t        React.createElement(_specimen2.default, {\n\t          DataURL: loris.BaseURL + \"/biobank/ajax/FileUpload.php?action=getSpecimenData&barcode=\" + args.barcode,\n\t          action: loris.BaseURL + \"/biobank/ajax/FileUpload.php?action=specimen\"\n\t        })\n\t      )\n\t    )\n\t  );\n\t\n\t  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\",\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        },\n\t        this.props.title,\n\t        React.createElement(\"span\", { className: glyphClass })\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(2);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen(props) {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).call(this, props));\n\t\n\t    _this.state = {\n\t      Data: {},\n\t      collectionData: {},\n\t      uploadResult: null,\n\t      isLoaded: false,\n\t      loadedData: 0\n\t    };\n\t\n\t    _this.handleSubmit = _this.handleSubmit.bind(_this);\n\t    _this.setCollectionData = _this.setCollectionData.bind(_this);\n\t    _this.showAlertMessage = _this.showAlertMessage.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var self = this;\n\t      $.ajax(this.props.DataURL, {\n\t        dataType: 'json',\n\t        success: function success(data) {\n\t          var collectionData = {\n\t            specimen: data.specimenData,\n\t            container: data.containerData,\n\t            parentSpecimenBarcode: data.parentSpecimenBarcode,\n\t            parentContainerBarcode: data.parentContainerBarcode\n\t          };\n\t\n\t          var mappingData = {\n\t            specimenTypes: data.specimenTypes,\n\t            containerTypesPrimary: data.containerTypesPrimary\n\t          };\n\t\n\t          self.setState({\n\t            Data: data,\n\t            isLoaded: true,\n\t            collectionData: collectionData\n\t          });\n\t        },\n\t        error: function error(_error, errorCode, errorMsg) {\n\t          console.error(_error, errorCode, errorMsg);\n\t          self.setState({\n\t            error: 'An error occurred when loading the form!'\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Data loading error\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      // Waiting for data to load\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'button',\n\t          { className: 'btn-info has-spinner' },\n\t          'Loading',\n\t          React.createElement('span', {\n\t            className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate' })\n\t        );\n\t      }\n\t\n\t      var alertMessage = \"\";\n\t      var alertClass = \"alert text-center hide\";\n\t      var backURL = loris.BaseURL.concat('/biobank/');\n\t\n\t      if (this.state.uploadResult) {\n\t        if (this.state.uploadResult === \"success\") {\n\t          alertClass = \"alert alert-success text-center\";\n\t          alertMessage = \"Update Successful!\";\n\t        } else if (this.state.uploadResult === \"error\") {\n\t          alertClass = \"alert alert-danger text-center\";\n\t          alertMessage = \"Failed to update the file\";\n\t        }\n\t      }\n\t\n\t      //checks if parent specimen exists and returns static element with href\n\t      if (this.state.collectionData.parentSpecimenBarcode) {\n\t        var specimenURL = loris.BaseURL + \"/biobank/specimen/?barcode=\";\n\t        var parentSpecimenBarcode = React.createElement(LinkElement, {\n\t          label: 'Parent Specimen',\n\t          text: this.state.collectionData.parentSpecimenBarcode,\n\t          href: specimenURL + this.state.collectionData.parentSpecimenBarcode\n\t        });\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href\n\t      if (this.state.collectionData.parentContainerBarcode) {\n\t        var containerURL = loris.BaseURL + \"/biobank/container/?barcode=\";\n\t        var parentContainerBarcode = React.createElement(LinkElement, {\n\t          label: 'Parent Container',\n\t          text: this.state.collectionData.parentContainerBarcode,\n\t          href: containerURL + this.state.collectionData.parentContainerBarcode\n\t        });\n\t      }\n\t\n\t      //loops through data object to produce static elements\n\t      if (this.state.collectionData.specimen.data) {\n\t        var dataObject = this.state.collectionData.specimen.data;\n\t        var dataArray = Object.keys(dataObject).map(function (key) {\n\t          return React.createElement(StaticElement, {\n\t            label: key,\n\t            text: dataObject[key]\n\t          });\n\t        });\n\t      }\n\t\n\t      //checks if location exists, if not posts destination\n\t      var location;\n\t      if (this.state.Data.containerLoci[this.state.collectionData.container.locusId].location_id) {\n\t        location = React.createElement(StaticElement, {\n\t          label: 'Location ',\n\t          text: this.state.Data.siteInfo[this.state.Data.containerLoci[this.state.collectionData.container.locusId].location_id].Name\n\t        });\n\t      } else {\n\t        location = React.createElement(StaticElement, {\n\t          label: 'Destination ',\n\t          text: this.state.Data.siteInfo[this.state.Data.containerLoci[this.state.collectionData.container.locusId].destination_id].Name + \" (In Transit)\"\n\t        });\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: alertClass, role: 'alert', ref: 'alert-message' },\n\t          alertMessage\n\t        ),\n\t        this.state.uploadResult === \"success\" ? React.createElement(\n\t          'a',\n\t          { className: 'btn btn-primary', href: backURL },\n\t          'Back to biobank'\n\t        ) : null,\n\t        React.createElement(\n\t          'h3',\n\t          null,\n\t          'Specimen ',\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.collectionData.container.barcode\n\t          )\n\t        ),\n\t        React.createElement(\n\t          FormElement,\n\t          {\n\t            columns: 4\n\t          },\n\t          React.createElement(LinkElement, {\n\t            label: 'PSCID',\n\t            text: this.state.Data.candidateInfo[''].PSCID,\n\t            href: loris.BaseURL + '/' + this.state.Data.candidateInfo[''].CandID\n\t          }),\n\t          React.createElement(LinkElement, {\n\t            label: 'Visit Label',\n\t            text: this.state.Data.sessionInfo[''].Visit_label,\n\t            href: loris.BaseURL + '/instrument_list/?candID=' + this.state.Data.candidateInfo[''].CandID + '&sessionID=' + this.state.Data.sessionInfo[''].ID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Status',\n\t            text: this.state.Data.containerStati[this.state.collectionData.container.statusId].label\n\t          }),\n\t          location,\n\t          parentSpecimenBarcode,\n\t          parentContainerBarcode\n\t        ),\n\t        React.createElement(\n\t          FormElement,\n\t          {\n\t            columns: 3\n\t          },\n\t          React.createElement(\n\t            _Panel2.default,\n\t            {\n\t              id: 'collection-panel',\n\t              title: 'Collection'\n\t            },\n\t            React.createElement(\n\t              FormElement,\n\t              {\n\t                name: 'biobankSpecimen',\n\t                onSubmit: this.handleSubmit,\n\t                ref: 'form'\n\t              },\n\t              React.createElement(StaticElement, {\n\t                label: 'Type',\n\t                text: this.state.Data.specimenTypes[this.state.collectionData.specimen.typeId].label\n\t              }),\n\t              React.createElement(StaticElement, {\n\t                label: 'Quantity',\n\t                text: this.state.collectionData.specimen.quantity + ' ' + this.state.Data.containerUnits[this.state.Data.containerCapacities[this.state.Data.containerTypesPrimary[this.state.collectionData.container.typeId].capacity_id].unit_id].unit\n\t              }),\n\t              React.createElement(StaticElement, {\n\t                label: 'Container Type',\n\t                text: this.state.Data.containerTypesPrimary[this.state.collectionData.container.typeId].label\n\t              }),\n\t              React.createElement(StaticElement, {\n\t                label: 'Site',\n\t                text: this.state.Data.siteInfo[this.state.Data.containerLoci[this.state.collectionData.container.locusId].origin_id].Name\n\t              }),\n\t              React.createElement(StaticElement, {\n\t                label: 'Collection Time',\n\t                text: this.state.collectionData.specimen.timeCollect\n\t              }),\n\t              dataArray,\n\t              React.createElement(StaticElement, {\n\t                label: 'Notes',\n\t                text: this.state.collectionData.specimen.notes\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(_Panel2.default, {\n\t            id: 'preparation-panel',\n\t            title: 'Preparation'\n\t          }),\n\t          React.createElement(_Panel2.default, {\n\t            id: 'analysis-panel',\n\t            title: 'Analysis'\n\t          })\n\t        )\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Handles form submission\n\t     * @param {event} e - Form submition event\n\t     */\n\t\n\t  }, {\n\t    key: 'handleSubmit',\n\t    value: function handleSubmit(e) {\n\t      e.preventDefault();\n\t\n\t      var self = this;\n\t      var myCollectionData = this.state.formData;\n\t\n\t      $('#biobankSpecimenEl').hide();\n\t      $(\"#file-progress\").removeClass('hide');\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: self.props.action,\n\t        data: JSON.stringify(myCollectionData),\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function xhr() {\n\t          var xhr = new window.XMLHttpRequest();\n\t          xhr.upload.addEventListener(\"progress\", function (evt) {\n\t            if (evt.lengthComputable) {\n\t              var progressbar = $(\"#progressbar\");\n\t              var progresslabel = $(\"#progresslabel\");\n\t              var percent = Math.round(evt.loaded / evt.total * 100);\n\t              $(progressbar).width(percent + \"%\");\n\t              $(progresslabel).html(percent + \"%\");\n\t              progressbar.attr('aria-valuenow', percent);\n\t            }\n\t          }, false);\n\t          return xhr;\n\t        },\n\t        success: function success(data) {\n\t          $(\"#file-progress\").addClass('hide');\n\t          self.setState({\n\t            uploadResult: \"success\"\n\t          });\n\t          self.showAlertMessage();\n\t        },\n\t        error: function error(err) {\n\t          console.error(err);\n\t          self.setState({\n\t            uploadResult: \"error\"\n\t          });\n\t          self.showAlertMessage();\n\t        }\n\t\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setCollectionData',\n\t    value: function setCollectionData(formElement, value) {\n\t      var collectionData = this.state.collectionData;\n\t\n\t      if (value === \"\") {\n\t        collectionData[formElement] = null;\n\t      } else {\n\t        collectionData[formElement] = value;\n\t      }\n\t\n\t      this.setState({\n\t        collectionData: collectionData\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Display a success/error alert message after form submission\n\t     */\n\t\n\t  }, {\n\t    key: 'showAlertMessage',\n\t    value: function showAlertMessage() {\n\t      var self = this;\n\t\n\t      if (this.refs[\"alert-message\"] === null) {\n\t        return;\n\t      }\n\t\n\t      var alertMsg = this.refs[\"alert-message\"];\n\t      $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(500, function () {\n\t        self.setState({\n\t          uploadResult: null\n\t        });\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  action: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\t\n\twindow.BiobankSpecimen = BiobankSpecimen;\n\twindow.RBiobankSpecimen = RBiobankSpecimen;\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/specimenIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bb02907b947b37f858b1","/* global ReactDOM */\n\nimport BiobankSpecimen from './specimen';\nconst args = QueryString.get(document.currentScript.src);\n\n$(function() {\n  const biobankSpecimen = (\n    <div className=\"page-specimen-form\">\n      <div className=\"row\">\n        <div className=\"col-md-9 col-lg-12\">\n          <BiobankSpecimen\n            DataURL={`${loris.BaseURL}/biobank/ajax/FileUpload.php?action=getSpecimenData&barcode=${args.barcode}`}\n            action={`${loris.BaseURL}/biobank/ajax/FileUpload.php?action=specimen`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  ReactDOM.render(biobankSpecimen, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenIndex.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n        onClick={this.toggleCollapsed}\n        data-toggle=\"collapse\"\n        data-target={'#' + this.props.id}\n        style={{cursor: 'pointer'}}\n      >\n        {this.props.title}\n        <span className={glyphClass}></span>\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","/* exported RBiobankSpecimen */\n\n\nimport Panel from '../../../jsx/Panel';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Data: {},\n      collectionData: {},\n      uploadResult: null,\n      isLoaded: false,\n      loadedData: 0\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setCollectionData = this.setCollectionData.bind(this);\n    this.showAlertMessage = this.showAlertMessage.bind(this);\n  }\n\n  componentDidMount() {\n    var self = this;\n    $.ajax(this.props.DataURL, {\n      dataType: 'json',\n      success: function(data) {\n        var collectionData = {\n          specimen: data.specimenData,\n\t  \t  container: data.containerData,\n\t      parentSpecimenBarcode: data.parentSpecimenBarcode,\n\t      parentContainerBarcode: data.parentContainerBarcode,\n        };\n\t\t  \n\t\tvar mappingData = {\n\t\t  specimenTypes: data.specimenTypes,\n\t\t  containerTypesPrimary: data.containerTypesPrimary,\n\t\t};\n\n        self.setState({\n          Data: data,\n          isLoaded: true,\n          collectionData: collectionData,\n        });\n      },\n      error: function(error, errorCode, errorMsg) {\n        console.error(error, errorCode, errorMsg);\n        self.setState({\n          error: 'An error occurred when loading the form!'\n        });\n      }\n    });\n  }\n\n  render() {\n    // Data loading error\n    if (this.state.error !== undefined) {\n      return (\n        <div className=\"alert alert-danger text-center\">\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    // Waiting for data to load\n    if (!this.state.isLoaded) {\n      return (\n        <button className=\"btn-info has-spinner\">\n          Loading\n          <span\n            className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n          </span>\n        </button>\n      );\n    }\n\n    var alertMessage = \"\";\n    var alertClass = \"alert text-center hide\";\n    var backURL = loris.BaseURL.concat('/biobank/');\n\n    if (this.state.uploadResult) {\n      if (this.state.uploadResult === \"success\") {\n        alertClass = \"alert alert-success text-center\";\n        alertMessage = \"Update Successful!\";\n      } else if (this.state.uploadResult === \"error\") {\n        alertClass = \"alert alert-danger text-center\";\n        alertMessage = \"Failed to update the file\";\n      }\n    }\n\n\t//checks if parent specimen exists and returns static element with href\n\tif (this.state.collectionData.parentSpecimenBarcode) {\n\t  var specimenURL = loris.BaseURL+\"/biobank/specimen/?barcode=\";\n\t  var parentSpecimenBarcode = (\n          <LinkElement\n            label=\"Parent Specimen\"\n            text={this.state.collectionData.parentSpecimenBarcode}\n\t        href={specimenURL+this.state.collectionData.parentSpecimenBarcode}\n          />\n\t  );\n\t}\t\n\n\t//checks if parent container exists and returns static element with href\n\tif (this.state.collectionData.parentContainerBarcode) {\n\t  var containerURL = loris.BaseURL+\"/biobank/container/?barcode=\";\n\t  var parentContainerBarcode = (\n          <LinkElement\n            label=\"Parent Container\"\n            text={this.state.collectionData.parentContainerBarcode}\n\t        href={containerURL+this.state.collectionData.parentContainerBarcode}\n          />\n\t  );\n\t}\t\n\n\t//loops through data object to produce static elements\n    if (this.state.collectionData.specimen.data) {\n      var dataObject = this.state.collectionData.specimen.data;\n      var dataArray = Object.keys(dataObject).map(function(key) {\n        return (\n          <StaticElement\n            label = {key}\n            text = {dataObject[key]}\n          />\n        );\n      })\n    }\n\n\t//checks if location exists, if not posts destination\n    var location;\n    if (this.state.Data.containerLoci[this.state.collectionData.container.locusId].location_id) {\n      location = (\n        <StaticElement\n          label=\"Location \"\n          text={this.state.Data.siteInfo[this.state.Data.containerLoci[this.state.collectionData.container.locusId].location_id].Name}\n        />\n      );\n     } else {\n      location = (\n        <StaticElement\n          label=\"Destination \"\n          text={this.state.Data.siteInfo[this.state.Data.containerLoci[this.state.collectionData.container.locusId].destination_id].Name+\" (In Transit)\"}\n        />\n      );\n    } \n\n    return (\n      <div>\n        <div className={alertClass} role=\"alert\" ref=\"alert-message\">\n          {alertMessage}\n        </div>\n        {\n          this.state.uploadResult === \"success\" ?\n          <a className=\"btn btn-primary\" href={backURL}>Back to biobank</a> :\n          null\n        }\n        <h3>Specimen <strong>{this.state.collectionData.container.barcode}</strong></h3>\n        <FormElement\n          columns={4}\n        >\n            <LinkElement\n              label=\"PSCID\"\n              text={this.state.Data.candidateInfo[''].PSCID}\n              href={loris.BaseURL+'/'+this.state.Data.candidateInfo[''].CandID}\n            />\n            <LinkElement\n              label=\"Visit Label\"\n              text={this.state.Data.sessionInfo[''].Visit_label}\n              href={loris.BaseURL+'/instrument_list/?candID='+this.state.Data.candidateInfo[''].CandID+'&sessionID='+this.state.Data.sessionInfo[''].ID}\n            />\n            <StaticElement\n              label=\"Status\"\n              text={this.state.Data.containerStati[this.state.collectionData.container.statusId].label}\n            />\n            {location}\n\t\t    {parentSpecimenBarcode}\n\t\t    {parentContainerBarcode}\n        </FormElement>\n        <FormElement\n          columns={3}\n        >\n\t\t<Panel\n\t\t  id=\"collection-panel\"\n\t\t  title=\"Collection\"\n\t\t>\n          <FormElement\n            name=\"biobankSpecimen\"\n            onSubmit={this.handleSubmit}\n            ref=\"form\"\n          >\n            <StaticElement\n              label=\"Type\"\n              text={this.state.Data.specimenTypes[this.state.collectionData.specimen.typeId].label}\n            />\n            <StaticElement\n              label=\"Quantity\"\n              text={this.state.collectionData.specimen.quantity+' '+this.state.Data.containerUnits[this.state.Data.containerCapacities[this.state.Data.containerTypesPrimary[this.state.collectionData.container.typeId].capacity_id].unit_id].unit}\n            />\n            <StaticElement\n              label=\"Container Type\"\n              text={this.state.Data.containerTypesPrimary[this.state.collectionData.container.typeId].label}\n            />\n            <StaticElement\n              label=\"Site\"\n              text={this.state.Data.siteInfo[this.state.Data.containerLoci[this.state.collectionData.container.locusId].origin_id].Name}\n            />\n            <StaticElement\n              label=\"Collection Time\"\n              text={this.state.collectionData.specimen.timeCollect}\n            />\n\t        {dataArray}\n            <StaticElement\n              label=\"Notes\"\n              text={this.state.collectionData.specimen.notes}\n            />\n          </FormElement>\n\t\t</Panel>\n\t\t<Panel\n\t\t  id=\"preparation-panel\"\n\t\t  title=\"Preparation\"\n\t\t>\n\t\t</Panel>\n\t\t<Panel\n\t\t  id=\"analysis-panel\"\n\t\t  title=\"Analysis\"\n\t\t>\n\t\t</Panel>\n        </FormElement>\n      </div>\n    ); \n  }\n\n  /**\n   * Handles form submission\n   * @param {event} e - Form submition event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n\n    var self = this;\n    var myCollectionData = this.state.formData;\n\n    $('#biobankSpecimenEl').hide();\n    $(\"#file-progress\").removeClass('hide');\n\n    $.ajax({\n      type: 'POST',\n      url: self.props.action,\n      data: JSON.stringify(myCollectionData),\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        var xhr = new window.XMLHttpRequest();\n        xhr.upload.addEventListener(\"progress\", function(evt) {\n          if (evt.lengthComputable) {\n            var progressbar = $(\"#progressbar\");\n            var progresslabel = $(\"#progresslabel\");\n            var percent = Math.round((evt.loaded / evt.total) * 100);\n            $(progressbar).width(percent + \"%\");\n            $(progresslabel).html(percent + \"%\");\n            progressbar.attr('aria-valuenow', percent);\n          }\n        }, false);\n        return xhr;\n      },\n      success: function(data) {\n        $(\"#file-progress\").addClass('hide');\n        self.setState({\n          uploadResult: \"success\"\n        });\n        self.showAlertMessage();\n      },\n      error: function(err) {\n        console.error(err);\n        self.setState({\n          uploadResult: \"error\"\n        });\n        self.showAlertMessage();\n      }\n\n    });\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setCollectionData(formElement, value) {\n    var collectionData = this.state.collectionData;\n\n    if (value === \"\") {\n      collectionData[formElement] = null;\n    } else {\n      collectionData[formElement] = value;\n    }\n\n    this.setState({\n      collectionData: collectionData\n    });\n  }\n\n  /**\n   * Display a success/error alert message after form submission\n   */\n  showAlertMessage() {\n    var self = this;\n\n    if (this.refs[\"alert-message\"] === null) {\n      return;\n    }\n\n    var alertMsg = this.refs[\"alert-message\"];\n    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(500, function() {\n      self.setState({\n        uploadResult: null\n      });\n    });\n  }\n\n}\n\nBiobankSpecimen.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  action: React.PropTypes.string.isRequired\n};\n\nvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\nwindow.BiobankSpecimen = BiobankSpecimen;\nwindow.RBiobankSpecimen = RBiobankSpecimen;\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js"],"sourceRoot":""}