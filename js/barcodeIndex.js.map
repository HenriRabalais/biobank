{"version":3,"sources":["webpack:///modules/biobank/js/barcodeIndex.js","webpack:///webpack/bootstrap 74e54207929018b338c6?ca40*******","webpack:///./modules/biobank/jsx/barcodeIndex.js","webpack:///./jsx/Loader.js","webpack:///./modules/biobank/jsx/specimen.js","webpack:///./jsx/Modal.js","webpack:///./modules/biobank/jsx/globals.js","webpack:///./modules/biobank/jsx/quantityField.js","webpack:///./modules/biobank/jsx/temperatureField.js","webpack:///./modules/biobank/jsx/statusField.js","webpack:///./modules/biobank/jsx/locationField.js","webpack:///./modules/biobank/jsx/containerParentForm.js","webpack:///./modules/biobank/jsx/containerDisplay.js","webpack:///./modules/biobank/jsx/collectionForm.js","webpack:///./modules/biobank/jsx/customFields.js","webpack:///./modules/biobank/jsx/preparationForm.js","webpack:///./modules/biobank/jsx/analysisForm.js","webpack:///./modules/biobank/jsx/specimenForm.js","webpack:///./modules/biobank/jsx/barcodeForm.js","webpack:///./modules/biobank/jsx/lifeCycle.js","webpack:///./modules/biobank/jsx/containerCheckout.js","webpack:///./modules/biobank/jsx/container.js","webpack:///./modules/biobank/jsx/barcodePath.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_Loader","_Loader2","_specimen","_specimen2","_container","_container2","BarcodeIndex","_React$Component","this","_this","getPrototypeOf","state","data","specimen","container","options","files","isLoaded","editable","aliquotForm","containerParentForm","temperature","quantity","status","location","collection","preparation","analysis","fetch","bind","loadOptions","loadContainer","loadSpecimen","clone","mapFormOptions","edit","close","setSpecimen","revertSpecimen","setContainer","revertContainer","setFiles","addPreparation","addAnalysis","saveSpecimen","saveContainer","saveChildContainer","save","_this2","url","window","href","name","replace","regex","RegExp","results","exec","barcode","decodeURIComponent","then","containerTypes","typeId","primary","console","log","setState","_this3","Promise","resolve","optionsURL","_this4","containerDataURL","_this5","specimenDataURL","$","ajax","dataType","success","error","errorCode","errorMsg","object","JSON","parse","stringify","attribute","stateKey","locationId","_this6","saveSpecimenURL","_this7","saveContainerURL","_this8","containerCoordinates","coordinate","childContainers","Unassigned","indexOf","message","_this9","dataObject","FormData","file","dataOject","append","type","cache","contentType","processData","swal","textStatus","errorThrown","responseJSON","undefined","React","createElement","className","display","Component","request","loris","BaseURL","submit","barcodeIndex","saveBarcodeListURL","ReactDOM","render","document","getElementById","Loader","apply","arguments","_Modal","_Modal2","_globals","_globals2","_collectionForm","_collectionForm2","_preparationForm","_preparationForm2","_analysisForm","_analysisForm2","_specimenForm","_specimenForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","specimenUnits","containerTypesPrimary","containerStati","candidates","sessions","addAliquotForm","title","onClick","closeModal","show","setSpecimenData","specimenTypes","specimenTypeUnits","specimenTypeAttributes","attributeOptions","attributeDatatypes","containersNonPrimary","containerDimensions","collectionPanel","collectionPanelForm","cancelEditCollectionButton","style","cursor","collectionData","keys","map","StaticElement","label","text","FormElement","unitId","unit","centers","date","time","comments","preparationPanel","preparationForm","cancelEditPreparationButton","specimenProtocols","specimenProtocolAttributes","protocol","preparationData","protocolId","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","method","analysisData","methodId","datatypeId","datatype","LinkElement","download","globals","propTypes","specimenPageDataURL","PropTypes","string","isRequired","RBiobankSpecimen","createFactory","Modal","throwWarning","showCancelButton","confirmButtonText","cancelButtonText","backdropStyle","position","zIndex","top","bottom","left","right","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","height","borderTopRightRadius","color","fontSize","glyphStyle","marginLeft","bodyStyle","modal","e","stopPropagation","children","bool","func","defaultProps","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","_containerParentForm","_containerParentForm2","Globals","increaseCycle","decreaseCycle","cycle","fTCycle","specimenTypeField","containerTypeField","quantityField","units","fTCycleField","temperatureField","statusField","stati","statusId","locationField","originField","originId","parentSpecimenField","dateTimeCreate","parentSpecimenId","parentSpecimenContainer","parentSpecimenFieldValue","parentContainerBarcodeValue","parentContainerId","parentContainerField","candidateSessionField","candidateId","candidate","PSCID","sessionId","session","Visit_label","fieldList","QuantityField","flexGrow","TextboxElement","inputClass","onUserInput","SelectElement","ButtonElement","columnSize","TemperatureField","StatusField","LocationField","labelClass","centerIds","_containerDisplay","_containerDisplay2","ContainerParentForm","containerDisplay","containerBarcodesNonPrimary","required","dimensionId","dimensions","coordinatesTotal","dimension","coordinates","select","selectedCoordinate","updateButton","onSubmit","ContainerDisplay","redirectURL","drag","drop","tooltip","load","types","preventDefault","dataTransfer","setData","getData","newCoordinate","parseInt","column","row","y","x","nodeWidth","nodeStyle","width","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","push","data-html","data-toggle","data-placement","data-original-title","rowHeight","rowStyle","_customFields","_customFields2","SpecimenCollectionForm","setCollection","addData","specimenTypeFields","specimenTypeFieldsObject","fields","specimenFields","DateElement","minYear","maxYear","TimeElement","TextareaElement","ref","CustomFields","attributeFields","DataElement","FileElement","SpecimenPreparationForm","setPreparation","submitButton","specimenProtocolFields","specimenProtocolFieldsObject","SpecimenAnalysisForm","setAnalysis","File","specimenMethodFields","specimenMethodFieldsObject","fileUpload","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","formErrors","centerId","barcodeList","1","count","collapsed","copyMultiplier","toggleCollapse","addBarcode","setCopyMultiplier","copyBarcode","removeBarcode","saveBarcodeList","availableId","find","freezeThaw","CandID","ID","refreshParent","onChange","Function","sessionCenters","nextKey","multiplier","barcodeListArray","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","barcodeKey","capacities","_iterator","Symbol","iterator","next","done","err","return","globalFields","remainingQuantityFields","emptyOption","candidateSessions","placeHolder","disabled","SpecimenBarcodeForm","copy","addBarcodeButton","addBarcodeText","copyBarcodeButton","copyBarcodeText","min","max","removeBarcodeButton","parentTypeId","paddingLeft","marginTop","data-target","setContainerData","LifeCycle","css","border","box-shadow","collectionNode","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","line","nodes","lineWidth","lineStyle","ContainerCheckout","checkoutContainer","checkoutButton","_barcodePath","_barcodePath2","BiobankContainer","barcodePath","parentContainers","listAssigned","listUnassigned","child","containerPageDataURL","RBiobankContainer","BarcodePath","path","pathLength"],"mappings":"CAAS,SAAUA,SCInB,QAAAC,qBAAAC,UAGA,GAAAC,iBAAAD,UACA,MAAAC,kBAAAD,UAAAE,OAGA,IAAAC,QAAAF,iBAAAD,WACAE,WACAE,GAAAJ,SACAK,QAAA,EAUA,OANAP,SAAAE,UAAAM,KAAAH,OAAAD,QAAAC,cAAAD,QAAAH,qBAGAI,OAAAE,QAAA,EAGAF,OAAAD,QAvBA,GAAAD,oBAqCA,OATAF,qBAAAQ,EAAAT,QAGAC,oBAAAS,EAAAP,iBAGAF,oBAAAU,EAAA,GAGAV,oBAAA,KDMM,SAASI,OAAQD,QAASH,qBAE/B,YAgBA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YApBje,GAAIW,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBE9CjiB6B,QAAA9C,oBAAA,GFkDK+C,SAAWpC,uBAAuBmC,SEjDvCE,UAAAhD,oBAAA,GFqDKiD,WAAatC,uBAAuBqC,WEpDzCE,WAAAlD,oBAAA,IFwDKmD,YAAcxC,uBAAuBuC,YErDpCE,aF+Dc,SAAUC,kBE9D5B,QAAAD,gBAAcrC,gBAAAuC,KAAAF,aAAA,IAAAG,OAAApC,2BAAAmC,MAAAF,aAAAlB,WAAAR,OAAA8B,eAAAJ,eAAA7C,KAAA+C,MAAA,OAGZC,OAAKE,OACHC,QACAC,YACAC,aACAC,WACAC,SACAC,UAAU,EACVC,UACEC,aAAa,EACbC,qBAAqB,EACrBC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,UAAU,IAIdlB,MAAKmB,MAAqBnB,MAAKmB,MAAMC,KAAXpB,OAC1BA,MAAKqB,YAAqBrB,MAAKqB,YAAYD,KAAjBpB,OAC1BA,MAAKsB,cAAqBtB,MAAKsB,cAAcF,KAAnBpB,OAC1BA,MAAKuB,aAAqBvB,MAAKuB,aAAaH,KAAlBpB,OAC1BA,MAAKmB,MAAqBnB,MAAKmB,MAAMC,KAAXpB,OAC1BA,MAAKwB,MAAqBxB,MAAKwB,MAAMJ,KAAXpB,OAC1BA,MAAKyB,eAAqBzB,MAAKyB,eAAeL,KAApBpB,OAC1BA,MAAK0B,KAAqB1B,MAAK0B,KAAKN,KAAVpB,OAC1BA,MAAK2B,MAAqB3B,MAAK2B,MAAMP,KAAXpB,OAC1BA,MAAK4B,YAAqB5B,MAAK4B,YAAYR,KAAjBpB,OAC1BA,MAAK6B,eAAqB7B,MAAK6B,eAAeT,KAApBpB,OAC1BA,MAAK8B,aAAqB9B,MAAK8B,aAAaV,KAAlBpB,OAC1BA,MAAK+B,gBAAqB/B,MAAK+B,gBAAgBX,KAArBpB,OAC1BA,MAAKgC,SAAqBhC,MAAKgC,SAASZ,KAAdpB,OAC1BA,MAAKiC,eAAqBjC,MAAKiC,eAAeb,KAApBpB,OAC1BA,MAAKkC,YAAqBlC,MAAKkC,YAAYd,KAAjBpB,OAC1BA,MAAKmC,aAAqBnC,MAAKmC,aAAaf,KAAlBpB,OAC1BA,MAAKoC,cAAqBpC,MAAKoC,cAAchB,KAAnBpB,OAC1BA,MAAKqC,mBAAqBrC,MAAKqC,mBAAmBjB,KAAxBpB,OAC1BA,MAAKsC,KAAqBtC,MAAKsC,KAAKlB,KAAVpB,OA1CdA,MF6ab,MA9WAjC,WAAU8B,aAAcC,kBAkDxBlB,aAAaiB,eACXT,IAAK,oBACLd,MAAO,WEtEU,GAAAiE,QAAAxC,KAEdyC,IAAMC,OAAO1B,SAAS2B,KACtBC,KAAO,UAAUC,QAAQ,UAAW,QACpCC,MAAQ,GAAIC,QAAO,OAASH,KAAO,qBACrCI,QAAUF,MAAMG,KAAKR,KACnBS,QAAUC,mBAAmBH,QAAQ,GAAGH,QAAQ,MAAO,KAE3D7C,MAAKsB,cAAc8B,KAAK,iBAAMZ,QAAKjB,cAAc2B,SAASE,KACxD,WACMZ,OAAKrC,MAAMI,QAAQ8C,eAAeb,OAAKrC,MAAMC,KAAKE,UAAUgD,QAAQC,SACtEC,QAAQC,IAAI,aACZjB,OAAKhB,aAAa0B,SAASE,KAAKZ,OAAKkB,UAAUjD,UAAU,KACzD+C,QAAQC,IAAI,aAEZjB,OAAKkB,UAAUjD,UAAU,WF8E9BpB,IAAK,cACLd,MAAO,WEzEI,GAAAoF,QAAA3D,IACZ,OAAO,IAAI4D,SAAQ,SAAAC,SACjBF,OAAKvC,MAAMuC,OAAK3E,MAAM8E,YAAYV,KAChC,SAAAhD,MACE,GAAIG,SAAUH,IACduD,QAAKD,UAAUnD,iBAAUsD,kBF+E9BxE,IAAK,gBACLd,MAAO,SE1EI2E,SAAS,GAAAa,QAAA/D,IACrB,OAAO,IAAI4D,SAAQ,SAAAC,SACjBE,OAAK3C,MAAM2C,OAAK/E,MAAMgF,iBAAiBd,SAASE,KAC9C,SAAAhD,MACE,GAAIE,WAAYyD,OAAKtC,MAAMrB,KAAKE,UAChCyD,QAAKL,UAAUtD,UAAME,qBAAYuD,kBFgFtCxE,IAAK,eACLd,MAAO,SE3EG2E,SAAS,GAAAe,QAAAjE,IACpB,OAAO,IAAI4D,SAAQ,SAAAC,SACjBL,QAAQC,IAAIQ,OAAKjF,MAAMkF,gBAAgBhB,SACvCe,OAAK7C,MAAM6C,OAAKjF,MAAMkF,gBAAgBhB,SAASE,KAC7C,SAAAhD,MACEoD,QAAQC,IAAIrD,KACZ,IAAIC,UAAW4D,OAAKxC,MAAMrB,KAAKC,UAC3BC,UAAY2D,OAAKxC,MAAMrB,KAAKE,UAChC2D,QAAKP,UAAUtD,UAAMC,kBAAUC,qBAAYuD,kBFiFhDxE,IAAK,QACLd,MAAO,SE5EJkE,KACJ,MAAO,IAAImB,SAAQ,SAAAC,SACjBM,EAAEC,KAAK3B,KACL4B,SAAU,OACVC,QAAS,SAAAlE,MACPyD,QAAQzD,OAEVmE,MAAO,SAACA,OAAOC,UAAWC,UACxBjB,QAAQe,MAAMA,OAAOC,UAAWC,kBFkFrCpF,IAAK,QACLd,MAAO,SE7EJmG,QACJ,MAAOC,MAAKC,MAAMD,KAAKE,UAAUH,YFgFhCrF,IAAK,iBACLd,MAAO,SE9EKmG,OAAQI,WACrB,GAAI1E,QACJ,KAAK,GAAIrD,MAAM2H,QACbtE,KAAKrD,IAAM2H,OAAO3H,IAAI+H,UAGxB,OAAO1E,SFiFNf,IAAK,OACLd,MAAO,SE/ELwG,UACH/E,KAAK4B,OACL,IAAIlB,UAAWV,KAAKG,MAAMO,QAC1BA,UAASqE,WAAY,EACrB/E,KAAK0D,UAAUhD,uBFkFdrB,IAAK,QACLd,MAAO,WE/ER,GAAImC,UAAWV,KAAKG,MAAMO,QAC1B,KAAK,GAAIrB,OAAOqB,UACdA,SAASrB,MAAO,CAElBW,MAAKG,MAAMC,KAAKC,UAAYL,KAAK8B,iBACjC9B,KAAKgC,kBACLhC,KAAK0D,UAAUhD,uBFmFdrB,IAAK,cACLd,MAAO,SEhFEqE,KAAMrE,OAChB,GAAI8B,UAAWL,KAAKG,MAAME,QAC1BA,UAASuC,MAAQrE,MACjByB,KAAK0D,UAAUrD,uBFmFdhB,IAAK,iBACLd,MAAO,WEhFR,GAAI8B,UAAWL,KAAKG,MAAME,QAC1BA,UAAWL,KAAKyB,MAAMzB,KAAKG,MAAMC,KAAKC,UACtCL,KAAK0D,UAAUrD,uBFoFdhB,IAAK,eACLd,MAAO,SElFGqE,KAAMrE,OACjB,GAAI+B,WAAYN,KAAKG,MAAMG,SAC3B/B,OAAQ+B,UAAUsC,MAAQrE,YAAe+B,WAAUsC,MACnD5C,KAAK0D,UAAUpD,yBFqFdjB,IAAK,kBACLd,MAAO,WElFR,GAAI+B,WAAYN,KAAKG,MAAMG,SAC3BA,WAAYN,KAAKyB,MAAMzB,KAAKG,MAAMC,KAAKE,WACvCN,KAAK0D,UAAUpD,yBFsFdjB,IAAK,WACLd,MAAO,SEpFDqE,KAAMrE,OACb,GAAIiC,OAAQR,KAAKG,MAAMK,KACvBA,OAAMjC,MAAMqE,MAAQrE,MACpByB,KAAK0D,UAAUlD,iBFuFdnB,IAAK,iBACLd,MAAO,WEpFR,GAAI8B,UAAWL,KAAKG,MAAME,QAC1BA,UAASa,aAAe8D,WAAYhF,KAAKG,MAAMC,KAAKE,UAAU0E,YAC9DhF,KAAK0D,UAAUrD,uBFwFdhB,IAAK,cACLd,MAAO,WErFR,GAAI8B,UAAWL,KAAKG,MAAME,QAC1BA,UAASc,UAAY6D,WAAYhF,KAAKG,MAAMC,KAAKE,UAAU0E,YAC3DhF,KAAK0D,UAAUrD,uBFyFdhB,IAAK,eACLd,MAAO,WEvFK,GAAA0G,QAAAjF,KACTK,SAAWL,KAAKG,MAAME,QAC1BL,MAAKuC,KAAKlC,SAAUL,KAAKhB,MAAMkG,gBAAiB,6BAA6B9B,KAC3E,WACE,GAAIhD,MAAO6E,OAAK9E,MAAMC,IACtBA,MAAKC,SAAW4E,OAAKxD,MAAMwD,OAAK9E,MAAME,UACtC4E,OAAKvB,UAAUtD,YACf6E,OAAKrD,aF4FRvC,IAAK,gBACLd,MAAO,WExFM,GAAA4G,QAAAnF,KACVM,UAAYN,KAAKG,MAAMG,SAC3BN,MAAKuC,KAAKjC,UAAWN,KAAKhB,MAAMoG,iBAAkB,8BAA8BhC,KAC9E,WACE,GAAIhD,MAAO+E,OAAKhF,MAAMC,IACtBA,MAAKE,UAAY6E,OAAK1D,MAAM0D,OAAKhF,MAAMG,WACvC6E,OAAKzB,UAAUtD,YACf+E,OAAKvD,aF6FRvC,IAAK,qBACLd,MAAO,SEzFS+B,WAAW,GAAA+E,QAAArF,IAC5BA,MAAKuC,KAAKjC,UAAWN,KAAKhB,MAAMqD,eAAee,KAC7C,WACE,GAAI7C,SAAU8E,OAAKlF,MAAMI,QACrBH,KAAUiF,OAAKlF,MAAMC,IACzBG,SAAQ+E,qBAAqBlF,KAAKE,UAAUvD,IAAIuD,UAAUiF,YAAcjF,UAAUvD,GAC9EqD,KAAKoF,gBAAgBlF,UAAUvD,IAAIwI,iBAC9BhF,SAAQ+E,qBAAqBlF,KAAKE,UAAUvD,IAAIqD,KAAKoF,gBAAgBlF,UAAUvD,IAAIwI,kBAEnFhF,SAAQ+E,qBAAqBlF,KAAKE,UAAUvD,IAAI0I,WAAWC,QAAQtF,KAAKE,UAAUvD,IAG3FqD,KAAKoF,gBAAgBlF,UAAUvD,IAAMsI,OAAK5D,MAAMnB,WAChD+E,OAAK3B,UAAUnD,gBAASH,iBF8F3Bf,IAAK,OACLd,MAAO,SE1FL6B,KAAMqC,IAAKkD,SAAS,GAAAC,QAAA5F,IACvB,OAAO,IAAI4D,SAAQ,SAAAC,SACjB,GAAIgC,YAAa,GAAIC,SACrB,KAAK,GAAIC,QAAQH,QAAKzF,MAAMK,MAC1BwF,UAAUC,OAAOL,OAAKzF,MAAMK,MAAMuF,MAAMnD,KAAMgD,OAAKzF,MAAMK,MAAMuF,MAEjEF,YAAWI,OAAO,OAAQtB,KAAKE,UAAUzE,OACzC+D,EAAEC,MACA8B,KAAM,OACNzD,IAAKA,IACLrC,KAAMyF,WACNM,OAAO,EACPC,aAAa,EACbC,aAAa,EACb/B,QAAS,WACPT,UACA8B,SAAWW,KAAKX,QAAS,GAAI,YAE/BpB,MAAO,SAACA,QAAOgC,WAAYC,aACzB,GAAIb,UAAWpB,QAAMkC,kBAAkBd,SAAW,mBAClDW,MAAKX,QAAS,GAAI,SAClBnC,QAAQe,MAAMA,QAAOgC,WAAYC,qBFkGtCnH,IAAK,SACLd,MAAO,WE5FR,GAAyBmI,SAArB1G,KAAKG,MAAMoE,MACb,MACEoC,OAAAC,cAAA,OAAKC,UAAU,kCACbF,MAAAC,cAAA,cACG5G,KAAKG,MAAMoE,OAMpB,KAAKvE,KAAKG,MAAMM,SACd,MACEkG,OAAAC,cAAAnH,SAAAjC,QAAA,KAIJ,IAAIsJ,gBACAvD,QAAUvD,KAAKG,MAAMI,QAAQ8C,eAAerD,KAAKG,MAAMC,KAAKE,UAAUgD,QAAQC,OAChF,QAAQA,SACN,IAAK,GACHuD,QACEH,MAAAC,cAAA/G,YAAArC,SACE4C,KAAMJ,KAAKG,MAAMC,KACjBG,QAASP,KAAKG,MAAMI,QACpBD,UAAWN,KAAKG,MAAMG,UACtBI,SAAUV,KAAKG,MAAMO,SACrBa,cAAevB,KAAKuB,cACpBC,aAAcxB,KAAKwB,aACnBE,eAAgB1B,KAAK0B,eACrBK,aAAc/B,KAAK+B,aACnBC,gBAAiBhC,KAAKgC,gBACtBK,cAAerC,KAAKqC,cACpBC,mBAAoBtC,KAAKsC,mBACzBX,KAAM3B,KAAK2B,KACXC,MAAO5B,KAAK4B,OAGhB,MACF,KAAK,GACHkF,QACEH,MAAAC,cAAAjH,WAAAnC,SACE4C,KAAMJ,KAAKG,MAAMC,KACjBG,QAASP,KAAKG,MAAMI,QACpBD,UAAWN,KAAKG,MAAMG,UACtBD,SAAUL,KAAKG,MAAME,SACrBK,SAAUV,KAAKG,MAAMO,SACrBa,cAAevB,KAAKuB,cACpBC,aAAcxB,KAAKwB,aACnBE,eAAgB1B,KAAK0B,eACrBK,aAAc/B,KAAK+B,aACnBC,gBAAiBhC,KAAKgC,gBACtBK,cAAerC,KAAKqC,cACpBR,YAAa7B,KAAK6B,YAClBC,eAAgB9B,KAAK8B,eACrBM,aAAcpC,KAAKoC,aACnBF,eAAgBlC,KAAKkC,eACrBC,YAAanC,KAAKmC,YAClBG,mBAAoBtC,KAAKsC,mBACzBX,KAAM3B,KAAK2B,KACXC,MAAO5B,KAAK4B,QAMtB,MACE+E,OAAAC,cAAA,OAAKC,UAAU,gBACbF,MAAAC,cAAA,OAAKC,UAAU,OACbF,MAAAC,cAAA,OAAKC,UAAU,aACZC,eFqGHhH,cE9aiB6G,MAAMI,UAiVjC5C,GAAE,WACA,GAAM6C,SAAaC,MAAMC,QAAnB,iCACAC,OAAYF,MAAMC,QAAlB,gCACAE,aACJT,MAAAC,cAAA,OAAKC,UAAU,gBACbF,MAAAC,cAAC9G,cACCoE,gBAAoB8C,QAApB,kCACAhD,iBAAqBgD,QAArB,mCACAlD,WAAekD,QAAf,wBACA5B,iBAAqB+B,OAArB,uBACAjC,gBAAoBiC,OAApB,sBACAE,mBAAuBF,OAAvB,2BAING,UAASC,OAAOH,aAAcI,SAASC,eAAe,sBFqGlD,SAAS3K,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBGzc3hB+J,OH4dQ,SAAU3H,kBAGrB,QAAS2H,UAGP,MAFAjK,iBAAgBuC,KAAM0H,QAEf7J,2BAA2BmC,MAAO0H,OAAO9I,WAAaR,OAAO8B,eAAewH,SAASC,MAAM3H,KAAM4H,YAc1G,MAnBA5J,WAAU0J,OAAQ3H,kBAQlBlB,aAAa6I,SACXrI,IAAK,SACLd,MAAO,WGpeR,MACEoI,OAAAC,cAAA,OAAKC,UAAU,oBACbF,MAAAC,cAAA,OAAKC,UAAU,gBH2eba,QGhfWf,MAAMI,UHmf1BlK,SAAQW,QGxeMkK,QH4eT,SAAS5K,OAAQD,QAASH,qBAE/B,YAwCA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YA5CjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBIxgBjiBkK,OAAAnL,oBAAA,GJ4gBKoL,QAAUzK,uBAAuBwK,QI3gBtCE,SAAArL,oBAAA,GJ+gBKsL,UAAY3K,uBAAuB0K,UI9gBxCE,gBAAAvL,oBAAA,IJkhBKwL,iBAAmB7K,uBAAuB4K,iBIjhB/CE,iBAAAzL,oBAAA,IJqhBK0L,kBAAoB/K,uBAAuB8K,kBIphBhDE,cAAA3L,oBAAA,IJwhBK4L,eAAiBjL,uBAAuBgL,eIvhB7CE,cAAA7L,oBAAA,IJ2hBK8L,eAAiBnL,uBAAuBkL,eI1hB7CE,WAAA/L,oBAAA,IJ8hBKgM,YAAcrL,uBAAuBoL,YI7hB1CE,mBAAAjM,oBAAA,IJiiBKkM,oBAAsBvL,uBAAuBsL,oBIrhB5CE,gBJyiBiB,SAAU9I,kBAG9B,QAAS8I,mBAGP,MAFApL,iBAAgBuC,KAAM6I,iBAEfhL,2BAA2BmC,MAAO6I,gBAAgBjK,WAAaR,OAAO8B,eAAe2I,kBAAkBlB,MAAM3H,KAAM4H,YA2hB5H,MAhiBA5J,WAAU6K,gBAAiB9I,kBAQ3BlB,aAAagK,kBACXxJ,IAAK,SACLd,MAAO,WIljBD,GAAAiE,QAAAxC,KAQH8I,cAAgB9I,KAAKhB,MAAM0C,eAAe1B,KAAKhB,MAAMuB,QAAQuI,cAAe,QAC5EC,sBAAwB/I,KAAKhB,MAAM0C,eAAe1B,KAAKhB,MAAMuB,QAAQwI,sBAAuB,SAC5FC,eAAiBhJ,KAAKhB,MAAM0C,eAAe1B,KAAKhB,MAAMuB,QAAQyI,eAAgB,UAC9EC,WAAajJ,KAAKhB,MAAM0C,eAAe1B,KAAKhB,MAAMuB,QAAQ0I,WAAY,SACtEC,SAAWlJ,KAAKhB,MAAM0C,eAAe1B,KAAKhB,MAAMuB,QAAQ2I,SAAU,SAElEC,eACFxC,MAAAC,cAAA,OACEC,UAAU,SACVuC,MAAM,iBAENzC,MAAAC,cAAA,OACEC,UAAU,oBACVwC,QAAS,WAAK7G,OAAKxD,MAAM2C,KAAK,iBAE9BgF,MAAAC,cAAA,kBAEFD,MAAAC,cAAAkB,QAAAtK,SACE4L,MAAM,eACNE,WAAYtJ,KAAKhB,MAAM4C,MACvB2H,KAAMvJ,KAAKhB,MAAM0B,SAASC,aAE1BgG,MAAAC,cAAA4B,eAAAhL,SACE4C,KAAMJ,KAAKhB,MAAMoB,KACjBC,SAAUL,KAAKhB,MAAMqB,SACrBmJ,gBAAiBxJ,KAAKhB,MAAM6C,YAC5BO,aAAcpC,KAAKhB,MAAMoD,aACzB6G,WAAYA,WACZC,SAAUA,SACVO,cAAezJ,KAAKhB,MAAMuB,QAAQkJ,cAClCX,cAAeA,cACfY,kBAAmB1J,KAAKhB,MAAMuB,QAAQmJ,kBACtCC,uBAAwB3J,KAAKhB,MAAMuB,QAAQoJ,uBAC3CC,iBAAkB5J,KAAKhB,MAAMuB,QAAQqJ,iBACrCC,mBAAoB7J,KAAKhB,MAAMuB,QAAQsJ,mBACvCd,sBAAuBA,sBACvBe,qBAAsB9J,KAAKhB,MAAMuB,QAAQuJ,qBACzCC,oBAAqB/J,KAAKhB,MAAMuB,QAAQwJ,oBACxCzE,qBAAsBtF,KAAKhB,MAAMuB,QAAQ+E,qBACzC0D,eAAgBA,eAChBtH,eAAgB1B,KAAKhB,MAAM0C,eAC3B2F,mBAAoBrH,KAAKhB,MAAMqI,mBAC/B9E,KAAMvC,KAAKhB,MAAMuD,SAWrByH,uBACAC,2BACAC,iCAEJ,IAAIlK,KAAKhB,MAAM0B,SAASO,WAAY,CAClC,GAAI8H,wBAAwB/I,KAAKhB,MAAM0C,eAAe1B,KAAKhB,MAAMuB,QAAQwI,sBAAuB,QAEhGkB,qBACEtD,MAAAC,cAAAsB,iBAAA1K,SACE6C,SAAUL,KAAKhB,MAAMqB,SACrBD,KAAMJ,KAAKhB,MAAMoB,KACjBuJ,uBAAwB3J,KAAKhB,MAAMuB,QAAQoJ,uBAC3CE,mBAAoB7J,KAAKhB,MAAMuB,QAAQsJ,mBACvCD,iBAAkB5J,KAAKhB,MAAMuB,QAAQqJ,iBACrCb,sBAAuBA,uBACvBW,kBAAmB1J,KAAKhB,MAAMuB,QAAQmJ,kBACtC7H,YAAa7B,KAAKhB,MAAM6C,YACxBO,aAAcpC,KAAKhB,MAAMoD,eAI7B8H,2BACEvD,MAAAC,cAAA,KACEC,UAAU,aACVsD,OAAQC,OAAO,WACff,QAASrJ,KAAKhB,MAAM4C,OAHtB,cAQG,CACL,GAAI+H,8BAEJ,IAAI3J,KAAKhB,MAAMoB,KAAKC,SAASY,WAAWb,KAAM,CAC5C,GAAIiK,gBAAiBrK,KAAKhB,MAAMoB,KAAKC,SAASY,WAAWb,IACzDuJ,wBAAyBvL,OAAOkM,KAAKD,gBAAgBE,IAAI,SAAClL,KACxD,MACEsH,OAAAC,cAAC4D,eACCC,MAAOjI,OAAKxD,MAAMuB,QAAQoJ,uBAAuBnH,OAAKxD,MAAMoB,KAAKC,SAASiD,QAAQjE,KAAKuD,KACvF8H,KAAML,eAAehL,SAM7B4K,oBACEtD,MAAAC,cAAC+D,YAAD,KACEhE,MAAAC,cAAC4D,eACCC,MAAM,WACNC,KACE1K,KAAKhB,MAAMoB,KAAKC,SAASY,WAAWH,SAAS,IAC7Cd,KAAKhB,MAAMuB,QAAQuI,cACjB9I,KAAKhB,MAAMoB,KAAKC,SAASY,WAAW2J,QACpCC,OAGNlE,MAAAC,cAAC4D,eACCC,MAAM,WACNC,KAAM1K,KAAKhB,MAAMuB,QAAQuK,QAAQ9K,KAAKhB,MAAMoB,KAAKC,SAASY,WAAW+D,cAEvE2E,uBACAhD,MAAAC,cAAC4D,eACCC,MAAM,OACNC,KAAM1K,KAAKhB,MAAMoB,KAAKC,SAASY,WAAW8J,OAE5CpE,MAAAC,cAAC4D,eACCC,MAAM,OACNC,KAAM1K,KAAKhB,MAAMoB,KAAKC,SAASY,WAAW+J,OAE5CrE,MAAAC,cAAC4D,eACCC,MAAM,WACNC,KAAM1K,KAAKhB,MAAMoB,KAAKC,SAASY,WAAWgK,YAMlDjB,gBACDrD,MAAAC,cAAA,OAAKC,UAAU,uBACVF,MAAAC,cAAA,OAAKC,UAAU,iBACbF,MAAAC,cAAA,OAAKC,UAAU,6BACbF,MAAAC,cAAA,OAAKC,UAAU,UAAf,MAEFF,MAAAC,cAAA,OAAKC,UAAU,SAAf,cAGAF,MAAAC,cAAA,QACEC,UAAW7G,KAAKhB,MAAM0B,SAASO,WAAa,KAAO,6BACnDoI,QAASrJ,KAAKhB,MAAM0B,SAASO,WAAa,KAAO,WAAOuB,OAAKxD,MAAM2C,KAAK,kBAG5EgF,MAAAC,cAAA,OAAKC,UAAU,cACZoD,oBACAC,4BASP,IAAIgB,yBACAC,uBACAC,mCACAC,qBACAC,6BAGJ,KAAK,GAAIvO,MAAMiD,MAAKhB,MAAMuB,QAAQ8K,kBAC5BrL,KAAKhB,MAAMuB,QAAQ8K,kBAAkBtO,IAAIuG,SAAWtD,KAAKhB,MAAMoB,KAAKC,SAASiD,SAC/E+H,kBAAkBtO,IAAMiD,KAAKhB,MAAMuB,QAAQ8K,kBAAkBtO,IAAIwO,SACjED,2BAA2BvO,IAAMiD,KAAKhB,MAAMuB,QAAQ+K,2BAA2BvO,IA8BnF,IA1BIiD,KAAKhB,MAAM0B,SAASQ,cACtBiK,gBACExE,MAAAC,cAAAwB,kBAAA5K,SACE6C,SAAUL,KAAKhB,MAAMqB,SACrBD,KAAMJ,KAAKhB,MAAMoB,KACjBiL,kBAAmBA,kBACnBC,2BAA4BA,2BAC5BzB,mBAAoB7J,KAAKhB,MAAMuB,QAAQsJ,mBACvCD,iBAAkB5J,KAAKhB,MAAMuB,QAAQqJ,iBACrC/H,YAAa7B,KAAKhB,MAAM6C,YACxBO,aAAcpC,KAAKhB,MAAMoD,eAI7BgJ,4BACEzE,MAAAC,cAAA,KACEC,UAAU,aACVsD,OAAQC,OAAO,WACff,QAASrJ,KAAKhB,MAAM4C,OAHtB,WAWA5B,KAAKhB,MAAMoB,KAAKC,SAASa,cAAgBlB,KAAKhB,MAAM0B,SAASQ,YAAa,CAC5E,GAAIlB,KAAKhB,MAAMoB,KAAKC,SAASa,YAAYd,KAAM,CAC7C,GAAIoL,iBAAkBxL,KAAKhB,MAAMoB,KAAKC,SAASa,YAAYd,IAC3DkL,4BAA6BlN,OAAOkM,KAAKkB,iBAAiBjB,IAAI,SAAClL,KAC7D,MACEsH,OAAAC,cAAC4D,eACCC,MAAOjI,OAAKxD,MAAMuB,QAAQ+K,2BAA2B9I,OAAKxD,MAAMoB,KAAKC,SAASa,YAAYuK,YAAYpM,KAAKuD,KAC3G8H,KAAMc,gBAAgBnM,SAM9B8L,gBACExE,MAAAC,cAAC+D,YAAD,KACEhE,MAAAC,cAAC4D,eACCC,MAAM,WACNC,KAAM1K,KAAKhB,MAAMuB,QAAQ8K,kBAAkBrL,KAAKhB,MAAMoB,KAAKC,SAASa,YAAYuK,YAAYF,WAE9F5E,MAAAC,cAAC4D,eACCC,MAAM,WACNC,KAAM1K,KAAKhB,MAAMuB,QAAQuK,QAAQ9K,KAAKhB,MAAMoB,KAAKC,SAASa,YAAY8D,cAEvEsG,2BACD3E,MAAAC,cAAC4D,eACCC,MAAM,OACNC,KAAM1K,KAAKhB,MAAMoB,KAAKC,SAASa,YAAY6J,OAE7CpE,MAAAC,cAAC4D,eACCC,MAAM,OACNC,KAAM1K,KAAKhB,MAAMoB,KAAKC,SAASa,YAAY8J,OAE7CrE,MAAAC,cAAC4D,eACCC,MAAM,WACNC,KAAM1K,KAAKhB,MAAMoB,KAAKC,SAASa,YAAY+J,YAQH,IAA1C7M,OAAOkM,KAAKe,mBAAmBnM,QAAkBc,KAAKhB,MAAMoB,KAAKC,SAASa,aAAgBlB,KAAKhB,MAAM0B,SAASQ,aAgBzGlB,KAAKhB,MAAMoB,KAAKC,SAASa,aAAelB,KAAKhB,MAAM0B,SAASQ,eACrEgK,iBACEvE,MAAAC,cAAA,OAAKC,UAAU,uBACbF,MAAAC,cAAA,OAAKC,UAAU,iBACbF,MAAAC,cAAA,OAAKC,UAAU,8BACbF,MAAAC,cAAA,OAAKC,UAAU,UAAf,MAEFF,MAAAC,cAAA,OAAKC,UAAU,SAAf,eAGAF,MAAAC,cAAA,QACEC,UAAW7G,KAAKhB,MAAM0B,SAASQ,YAAc,KAAO,6BACpDmI,QAASrJ,KAAKhB,MAAM0B,SAASQ,YAAc,KAAO,WAAOsB,OAAKxD,MAAM2C,KAAK,mBAG7EgF,MAAAC,cAAA,OAAKC,UAAU,cACZsE,gBACAC,+BAhCPF,iBACEvE,MAAAC,cAAA,OACEC,UAAU,kBAEVF,MAAAC,cAAA,OACEC,UAAU,cACVwC,QAAS,WAAO7G,OAAKxD,MAAM2C,KAAK,eAAgBa,OAAKxD,MAAMkD,mBAE3DyE,MAAAC,cAAA,QAAMC,UAAU,8BAElBF,MAAAC,cAAA,8BA+BN,IAAI8E,sBACAC,oBACAC,gCACAC,mBACAC,4BACAC,oCAEJ,KAAK,GAAIhP,OAAMiD,MAAKhB,MAAMuB,QAAQsL,gBAC5B7L,KAAKhB,MAAMuB,QAAQsL,gBAAgB9O,KAAIuG,SAAWtD,KAAKhB,MAAMoB,KAAKC,SAASiD,SAC7EuI,gBAAgB9O,KAAMiD,KAAKhB,MAAMuB,QAAQsL,gBAAgB9O,KAAIiP,OAC7DF,yBAAyB/O,KAAMiD,KAAKhB,MAAMuB,QAAQuL,yBAAyB/O,KA+B/E,IA3BIiD,KAAKhB,MAAM0B,SAASS,WACtBwK,aACEhF,MAAAC,cAAA0B,eAAA9K,SACE6C,SAAUL,KAAKhB,MAAMqB,SACrBD,KAAMJ,KAAKhB,MAAMoB,KACjBI,MAAOR,KAAKhB,MAAMwB,MAClBqL,gBAAiBA,gBACjBC,yBAA0BA,yBAC1BjC,mBAAoB7J,KAAKhB,MAAMuB,QAAQsJ,mBACvCD,iBAAkB5J,KAAKhB,MAAMuB,QAAQqJ,iBACrC/H,YAAa7B,KAAKhB,MAAM6C,YACxBI,SAAUjC,KAAKhB,MAAMiD,SACrBG,aAAcpC,KAAKhB,MAAMoD,eAI7BwJ,yBACEjF,MAAAC,cAAA,KACEC,UAAU,aACVsD,OAAQC,OAAO,WACff,QAASrJ,KAAKhB,MAAM4C,OAHtB,WAUA5B,KAAKhB,MAAMoB,KAAKC,SAASc,WAAanB,KAAKhB,MAAM0B,SAASS,SAAU,CAEtE,GAAInB,KAAKhB,MAAMoB,KAAKC,SAASc,SAASf,KAAM,CAC5C,GAAI6L,cAAejM,KAAKhB,MAAMoB,KAAKC,SAASc,SAASf,IAEnD2L,+BAAgC3N,OAAOkM,KAAK2B,cAAc1B,IAAI,SAAClL,KAC7D,MAEe,SAFXmD,OAAKxD,MAAMuB,QAAQsJ,mBACrBrH,OAAKxD,MAAMuB,QAAQuL,yBAAyBtJ,OAAKxD,MAAMoB,KAAKC,SAASc,SAAS+K,UAAU7M,KAAK8M,YAC7FC,SAEEzF,MAAAC,cAACyF,aACA5B,MAAOjI,OAAKxD,MAAMuB,QAAQuL,yBAAyBtJ,OAAKxD,MAAMoB,KAAKC,SAASc,SAAS+K,UAAU7M,KAAKuD,KACpG8H,KAAMuB,aAAa5M,KACnBsD,KAAMsE,MAAMC,QAAQ,0DAA0D+E,aAAa5M,KAC3FN,OAAQ,SACRuN,SAAUL,aAAa5M,OAKxBsH,MAAAC,cAAC4D,eACCC,MAAOjI,OAAKxD,MAAMuB,QAAQuL,yBAAyBtJ,OAAKxD,MAAMoB,KAAKC,SAASc,SAAS+K,UAAU7M,KAAKuD,KACpG8H,KAAMuB,aAAa5M,SAO7BsM,aACEhF,MAAAC,cAAC+D,YAAD,KACEhE,MAAAC,cAAC4D,eACCC,MAAM,SACNC,KAAM1K,KAAKhB,MAAMuB,QAAQsL,gBAAgB7L,KAAKhB,MAAMoB,KAAKC,SAASc,SAAS+K,UAAUF,SAEvFrF,MAAAC,cAAC4D,eACCC,MAAM,WACNC,KAAM1K,KAAKhB,MAAMuB,QAAQuK,QAAQ9K,KAAKhB,MAAMoB,KAAKC,SAASc,SAAS6D,cAEpE+G,8BACDpF,MAAAC,cAAC4D,eACCC,MAAM,OACNC,KAAM1K,KAAKhB,MAAMoB,KAAKC,SAASc,SAAS4J,OAE1CpE,MAAAC,cAAC4D,eACCC,MAAM,OACNC,KAAM1K,KAAKhB,MAAMoB,KAAKC,SAASc,SAAS6J,OAE1CrE,MAAAC,cAAC4D,eACCC,MAAM,WACNC,KAAM1K,KAAKhB,MAAMoB,KAAKC,SAASc,SAAS8J,YAMF,IAAxC7M,OAAOkM,KAAKuB,iBAAiB3M,QAAkBc,KAAKhB,MAAMoB,KAAKC,SAASc,UAAanB,KAAKhB,MAAM0B,SAASS,UAgBpGnB,KAAKhB,MAAMoB,KAAKC,SAASc,UAAYnB,KAAKhB,MAAM0B,SAASS,YAClEuK,cACE/E,MAAAC,cAAA,OAAKC,UAAU,uBACbF,MAAAC,cAAA,OAAKC,UAAU,iBACbF,MAAAC,cAAA,OAAKC,UAAU,8BACbF,MAAAC,cAAA,OAAKC,UAAU,UAAf,MAEFF,MAAAC,cAAA,OAAKC,UAAU,SAAf,YAGAF,MAAAC,cAAA,QACEC,UAAW7G,KAAKhB,MAAM0B,SAASS,SAAW,KAAO,6BACjDkI,QAASrJ,KAAKhB,MAAM0B,SAASS,SAAW,KAAO,WAAOqB,OAAKxD,MAAM2C,KAAK,gBAG1EgF,MAAAC,cAAA,OAAKC,UAAU,cACZ8E,aACAC,4BAhCPF,cACC/E,MAAAC,cAAA,OACGC,UAAU,kBAEVF,MAAAC,cAAA,OACEC,UAAU,cACVwC,QAAS,WAAO7G,OAAKxD,MAAM2C,KAAK,YAAaa,OAAKxD,MAAMmD,gBAExDwE,MAAAC,cAAA,QAAMC,UAAU,8BAElBF,MAAAC,cAAA,2BA4BN,IAAI2F,SACF5F,MAAAC,cAAAoB,UAAAxK,SACE6C,SAAUL,KAAKhB,MAAMqB,SACrBC,UAAWN,KAAKhB,MAAMsB,UACtBF,KAAMJ,KAAKhB,MAAMoB,KACjBG,QAASP,KAAKhB,MAAMuB,QACpBG,SAAUV,KAAKhB,MAAM0B,SACrBiB,KAAM3B,KAAKhB,MAAM2C,KACjBC,MAAO5B,KAAKhB,MAAM4C,MAClBF,eAAgB1B,KAAKhB,MAAM0C,eAC3BG,YAAa7B,KAAKhB,MAAM6C,YACxBO,aAAcpC,KAAKhB,MAAMoD,aACzBL,aAAc/B,KAAKhB,MAAM+C,aACzBM,cAAerC,KAAKhB,MAAMqD,eAI9B,OACEsE,OAAAC,cAAA,OAAK7J,GAAG,iBACN4J,MAAAC,cAAA,OAAKC,UAAU,mBACbF,MAAAC,cAAA,OAAKC,UAAU,kBACbF,MAAAC,cAAA,OAAKC,UAAU,WAAf,UAEEF,MAAAC,cAAA,OAAKC,UAAU,SACbF,MAAAC,cAAA,cAAS5G,KAAKhB,MAAMoB,KAAKE,UAAU4C,WAGtCiG,eACDxC,MAAAC,cAAAgC,oBAAApL,SACE8C,UAAWN,KAAKhB,MAAMsB,UACtByB,aAAc/B,KAAKhB,MAAM+C,aACzBM,cAAerC,KAAKhB,MAAMqD,iBAG9BsE,MAAAC,cAAA8B,YAAAlL,SACE6C,SAAUL,KAAKhB,MAAMoB,KAAKC,SAC1ByK,QAAS9K,KAAKhB,MAAMuB,QAAQuK,WAGhCnE,MAAAC,cAAA,OAAKC,UAAU,WACZ0F,QACD5F,MAAAC,cAAA,OAAKC,UAAU,cACZmD,gBACAkB,iBACAQ,qBJqnBH7C,iBI1kCoBlC,MAAMI,UA6dpC8B,iBAAgB2D,WACdC,oBAAqB9F,MAAM+F,UAAUC,OAAOC,WAG9C,IAAIC,kBAAmBlG,MAAMmG,cAAcjE,gBAE3CnG,QAAOmG,gBAAkBA,gBACzBnG,OAAOmK,iBAAmBA,iBJknBzBhQ,QAAQW,QIhnBMqL,iBJonBT,SAAS/L,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBKrmC3hBoP,ML+nCO,SAAUhN,kBK9nCrB,QAAAgN,SAActP,gBAAAuC,KAAA+M,MAAA,IAAA9M,OAAApC,2BAAAmC,MAAA+M,MAAAnO,WAAAR,OAAA8B,eAAA6M,QAAA9P,KAAA+C,MAAA,OAEZC,OAAKqJ,WAAarJ,MAAKqJ,WAAWjI,KAAhBpB,OAFNA,MLovCb,MArHAjC,WAAU+O,MAAOhN,kBAWjBlB,aAAakO,QACX1N,IAAK,aACLd,MAAO,WKvoCG,GAAAiE,QAAAxC,IACPA,MAAKhB,MAAMgO,cACbxJ,QAAQC,IAAI,eACZ6C,MACE8C,MAAO,gBACPsB,KAAM,uEACNxE,KAAM,UACN+G,kBAAkB,EAClBC,kBAAmB,UACnBC,iBAAkB,UAEpB,WACE3K,OAAKxD,MAAMsK,gBAGbtJ,KAAKhB,MAAMsK,gBL4oCZjK,IAAK,SACLd,MAAO,WKvoCR,GAAM6O,gBACJC,SAAU,QACVC,OAAQ,KACRC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,gBAAiB,kBACjBC,QAAS,IAILC,YACJR,SAAU,WACVS,SAAU,IACVC,UAAW,OACXC,OAAQ,SACRL,gBAAiB,OACjBM,aAAc,GACdC,UAAW,OACXZ,OAAQ,MAGJa,YACJrH,QAAS,OACTsH,cAAe,MACfC,WAAY,SACZC,WAAY,UACZC,OAAQ,OACRC,qBAAsB,KACtBC,MAAO,UACPC,SAAU,GACVd,QAAS,IAGLe,YACJC,WAAY,OACZxE,OAAQ,WAGJyE,WACJjB,QAAS,IAGPkB,YAmBJ,OAlBI9O,MAAKhB,MAAMuK,OACbuF,MACEnI,MAAAC,cAAA,OAAKuD,MAAOiD,cAAe/D,QAASrJ,KAAKsJ,YACvC3C,MAAAC,cAAA,OAAKuD,MAAO0D,WAAYxE,QAAS,SAAA0F,GAAMA,EAAEC,oBACvCrI,MAAAC,cAAA,OAAKuD,MAAOgE,YACTnO,KAAKhB,MAAMoK,MACZzC,MAAAC,cAAA,QAAMuD,MAAOwE,WAAYtF,QAASrJ,KAAKsJ,YAAvC,MAIF3C,MAAAC,cAAA,OAAKuD,MAAO0E,WACT7O,KAAKhB,MAAMiQ,aAQpBtI,MAAAC,cAAA,WACGkI,WLypCC/B,OKrvCUpG,MAAMI,UAkG1BgG,OAAMP,WACJpD,MAAOzC,MAAM+F,UAAUC,OACvBpD,KAAM5C,MAAM+F,UAAUwC,KAAKtC,WAC3BtD,WAAY3C,MAAM+F,UAAUyC,KAAKvC,WACjCI,aAAcrG,MAAM+F,UAAUwC,KAAKtC,YAGrCG,MAAMqC,cACJpC,cAAc,GLypCfnQ,QAAQW,QKtpCMuP,OL0pCT,SAASjQ,OAAQD,QAASH,qBAE/B,YAgCA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC;AAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YApCjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBMjyCjiBkK,OAAAnL,oBAAA,GNqyCKoL,QAAUzK,uBAAuBwK,QMpyCtCwH,eAAA3S,oBAAA,GNwyCK4S,gBAAkBjS,uBAAuBgS,gBMvyC9CE,kBAAA7S,oBAAA,GN2yCK8S,mBAAqBnS,uBAAuBkS,mBM1yCjDE,aAAA/S,oBAAA,GN8yCKgT,cAAgBrS,uBAAuBoS,cM7yC5CE,eAAAjT,oBAAA,GNizCKkT,gBAAkBvS,uBAAuBsS,gBMhzC9CE,qBAAAnT,oBAAA,GNozCKoT,sBAAwBzS,uBAAuBwS,sBM1yC9CE,QN4zCS,SAAUhQ,kBM3zCvB,QAAAgQ,WAActS,gBAAAuC,KAAA+P,QAAA,IAAA9P,OAAApC,2BAAAmC,MAAA+P,QAAAnR,WAAAR,OAAA8B,eAAA6P,UAAA9S,KAAA+C,MAAA,OAEZC,OAAK+P,cAAgB/P,MAAK+P,cAAc3O,KAAnBpB,OACrBA,MAAKgQ,cAAgBhQ,MAAKgQ,cAAc5O,KAAnBpB,OAHTA,MNk0Db,MAtgBAjC,WAAU+R,QAAShQ,kBAYnBlB,aAAakR,UACX1Q,IAAK,gBACLd,MAAO,WMn0CR,GAAI2R,OAAQlQ,KAAKhB,MAAMqB,SAAS8P,OAChCD,SACAlQ,KAAKhB,MAAM6C,YAAY,UAAWqO,OAClClQ,KAAKhB,MAAMoD,kBNu0CV/C,IAAK,gBACLd,MAAO,WMp0CR,GAAI2R,OAAQlQ,KAAKhB,MAAMqB,SAAS8P,OAChCD,SACAlQ,KAAKhB,MAAM6C,YAAY,UAAWqO,OAClClQ,KAAKhB,MAAMoD,kBNw0CV/C,IAAK,SACLd,MAAO,WMt0CD,GAAAiE,QAAAxC,KACHoQ,wBACApQ,MAAKhB,MAAMoB,KAAKC,WAClB+P,kBACEzJ,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,gBAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZ7G,KAAKhB,MAAMuB,QAAQkJ,cAClBzJ,KAAKhB,MAAMoB,KAAKC,SAASiD,QACzB4C,QAOZ,IAAImK,oBACD1J,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,iBAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZ7G,KAAKhB,MAAMuB,QAAQ8C,eAClBrD,KAAKhB,MAAMoB,KAAKE,UAAUgD,QAC1BmH,SAMP6F,oBACJ,IAAItQ,KAAKhB,MAAMoB,KAAKC,SAClB,GAAKL,KAAKhB,MAAM0B,SAASI,SAuBlB,CACL,GAAIyP,OAAQvQ,KAAKhB,MAAM0C,eACrB1B,KAAKhB,MAAMuB,QAAQmJ,kBAAkB1J,KAAKhB,MAAMoB,KAAKC,SAASiD,QAAS,OAGzEgN,eACE3J,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,WAEEF,MAAAC,cAAA0I,gBAAA9R,SACE6C,SAAUL,KAAKhB,MAAMqB,SACrBkQ,MAAOA,MACP3O,MAAO5B,KAAKhB,MAAM4C,MAClBC,YAAa7B,KAAKhB,MAAM6C,YACxBO,aAAcpC,KAAKhB,MAAMoD,qBApCjCkO,eACE3J,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,WAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZ7G,KAAKhB,MAAMoB,KAAKC,SAASS,SACzB,IAAId,KAAKhB,MAAMuB,QAAQuI,cAAc9I,KAAKhB,MAAMoB,KAAKC,SAASuK,QAAQC,OAG3ElE,MAAAC,cAAA,OACEC,UAAU,SACVuC,MAAM,mBAENzC,MAAAC,cAAA,OACEC,UAAU,uBACVwC,QAAS,iBAAM7G,QAAKxD,MAAM2C,KAAK,cAE/BgF,MAAAC,cAAA,QAAMC,UAAU,wCA2B5B,IAAI2J,oBACJ,IAA+C9J,UAA1C1G,KAAKhB,MAAMoB,KAAKC,cAAc8P,QAAuB,CACxD,GAAIF,qBACAjQ,MAAKhB,MAAMoB,KAAKC,SAAS8P,QAAU,IACrCF,cACEtJ,MAAAC,cAAA,OACEC,UAAU,SACVuC,MAAM,gBAENzC,MAAAC,cAAA,QACEC,UAAU,uBACVwC,QAASrJ,KAAKiQ,eAEdtJ,MAAAC,cAAA,QAAMC,UAAU,iCAKxB2J,aACE7J,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,oBAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZ7G,KAAKhB,MAAMoB,KAAKC,SAAS8P,UAG7BF,cACDtJ,MAAAC,cAAA,OACEC,UAAU,SACVuC,MAAM,aAENzC,MAAAC,cAAA,QACEC,UAAU,uBACVwC,QAASrJ,KAAKgQ,eAEdrJ,MAAAC,cAAA,QAAMC,UAAU,gCAO1B,GAAI4J,wBAwBFA,kBAvBGzQ,KAAKhB,MAAM0B,SAASG,YAwBrB8F,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,cAEEF,MAAAC,cAAA4I,mBAAAhS,SACE8C,UAAWN,KAAKhB,MAAMsB,UACtBsB,MAAO5B,KAAKhB,MAAM4C,MAClBG,aAAc/B,KAAKhB,MAAM+C,aACzBM,cAAerC,KAAKhB,MAAMqD,kBA7BhCsE,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,cAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZ7G,KAAKhB,MAAMoB,KAAKE,UAAUO,YAAc,OAG7C8F,MAAAC,cAAA,OACEC,UAAU,SACVuC,MAAM,sBAENzC,MAAAC,cAAA,QACEC,UAAU,uBACVwC,QAAS,WAAO7G,OAAKxD,MAAM2C,KAAK,iBAEhCgF,MAAAC,cAAA,QAAMC,UAAU,wCAqB3B,IAAI6J,mBACJ,IAAK1Q,KAAKhB,MAAM0B,SAASK,OAsBhB,CACN,GAAI4P,OAAQ3Q,KAAKhB,MAAM0C,eAAe1B,KAAKhB,MAAMuB,QAAQyI,eAAgB,SACzE0H,aACE/J,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,SAEEF,MAAAC,cAAA8I,cAAAlS,SACE8C,UAAWN,KAAKhB,MAAMsB,UACtBqQ,MAAOA,MACP/O,MAAO5B,KAAKhB,MAAM4C,MAClBG,aAAc/B,KAAKhB,MAAM+C,aACzBM,cAAerC,KAAKhB,MAAMqD,sBAhCnCqO,aACG/J,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,SAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZ7G,KAAKhB,MAAMuB,QAAQyI,eAAehJ,KAAKhB,MAAMoB,KAAKE,UAAUsQ,UAAU7P,SAG3E4F,MAAAC,cAAA,OACEC,UAAU,SACVuC,MAAM,iBAENzC,MAAAC,cAAA,QACEC,UAAU,uBACVwC,QAAS,iBAAM7G,QAAKxD,MAAM2C,KAAK,YAE/BgF,MAAAC,cAAA,QAAMC,UAAU,wCAuB1B,IAAIgK,qBAwBFA,eAvBG7Q,KAAKhB,MAAM0B,SAASM,SAwBrB2F,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,WAEEF,MAAAC,cAAAgJ,gBAAApS,SACE8C,UAAWN,KAAKhB,MAAMsB,UACtBwK,QAAS9K,KAAKhB,MAAMuB,QAAQuK,QAC5BlJ,MAAO5B,KAAKhB,MAAM4C,MAClBG,aAAc/B,KAAKhB,MAAM+C,aACzBM,cAAerC,KAAKhB,MAAMqD,kBA9BhCsE,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,WAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZ7G,KAAKhB,MAAMuB,QAAQuK,QAAQ9K,KAAKhB,MAAMoB,KAAKE,UAAU0E,cAG1D2B,MAAAC,cAAA,OACEC,UAAU,SACVuC,MAAM,iBAENzC,MAAAC,cAAA,QACEC,UAAU,uBACVwC,QAAS,iBAAM7G,QAAKxD,MAAM2C,KAAK,cAE/BgF,MAAAC,cAAA,QAAMC,UAAU,wCAsB1B,IAAIiK,aACFnK,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,SAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZ7G,KAAKhB,MAAMuB,QAAQuK,QAAQ9K,KAAKhB,MAAMoB,KAAKE,UAAUyQ,aAiB1DC,qBAVFrK,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,gBAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZ7G,KAAKhB,MAAMoB,KAAKE,UAAU2Q,kBAM/BD,OACJ,KAAKhR,KAAKhB,MAAMoB,KAAKC,cAAc6Q,iBAAkB,CACnD,GAAIhO,SAAUlD,KAAKhB,MAAMoB,KAAK+Q,wBAAwBjO,QAClDkO,yBACFzK,MAAAC,cAAA,KAAGyC,QAAS,iBAAI7G,QAAKxD,MAAMwC,aAAa0B,WACrCA,QAIL8N,qBACErK,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,kBAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZuK,0BAA4B,UAQvC,GAAIC,mCACJ,IAAIrR,KAAKhB,MAAMoB,KAAKE,UAAUgR,kBAAmB,CAC/C,GAAIpO,UAAUlD,KAAKhB,MAAMuB,QAAQuJ,qBAAqB9J,KAAKhB,MAAMoB,KAAKE,UAAUgR,mBAAmBpO,OACnGmO,6BACE1K,MAAAC,cAAA,WACED,MAAAC,cAAA,KAAGyC,QAAS,iBAAI7G,QAAKxD,MAAMuC,cAAc2B,YACtCA,WAMT,GAAIqO,sBACF5K,MAAAC,cAAA,OAAKC,UAAU,QACbF,MAAAC,cAAA,OAAKC,UAAU,SAAf,mBAEEF,MAAAC,cAAA,OAAKC,UAAU,SACZwK,6BAA+B,QAEhCA,6BAA+BrR,KAAKhB,MAAMoB,KAAKE,UAAUiF,WAC3D,cAAcvF,KAAKhB,MAAMoB,KAAKE,UAAUiF,WAAa,MAEvDoB,MAAAC,cAAA,OACEC,UAAU,SACVuC,MAAM,kBAENzC,MAAAC,cAAA,QACEC,UAAU,uBACVwC,QAAS,WAAO7G,OAAKxD,MAAM2C,KAAK,yBAEhCgF,MAAAC,cAAA,QAAMC,UAAU,uCAElBF,MAAAC,cAAAkB,QAAAtK,SACE4L,MAAM,0BACNE,WAAYtJ,KAAKhB,MAAM4C,MACvB2H,KAAMvJ,KAAKhB,MAAM0B,SAASE,qBAE1B+F,MAAAC,cAAAkJ,sBAAAtS,SACE4C,KAAMJ,KAAKhB,MAAMoB,KACjBE,UAAWN,KAAKhB,MAAMsB,UACtBwJ,qBAAsB9J,KAAKhB,MAAMuB,QAAQuJ,qBACzCC,oBAAqB/J,KAAKhB,MAAMuB,QAAQwJ,oBACxCzE,qBAAsBtF,KAAKhB,MAAMuB,QAAQ+E,qBACzCjC,eAAgBrD,KAAKhB,MAAMuB,QAAQ8C,eACnC2F,eAAgBhJ,KAAKhB,MAAMuB,QAAQyI,eACnCtH,eAAgB1B,KAAKhB,MAAM0C,eAC3BK,aAAc/B,KAAKhB,MAAM+C,aACzBM,cAAerC,KAAKhB,MAAMqD,mBAOhCmP,4BACAxR,MAAKhB,MAAMoB,KAAKC,WAClBmR,sBACE7K,MAAAC,cAAA,OAAKC,UAAU,QACXF,MAAAC,cAAA,OAAKC,UAAU,SAAf,QAEEF,MAAAC,cAAA,OAAKC,UAAU,SACbF,MAAAC,cAAA,KAAGjE,KAAMsE,MAAMC,QAAQ,IAAIlH,KAAKhB,MAAMoB,KAAKC,SAASoR,aACjDzR,KAAKhB,MAAMoB,KAAKsR,UAAUC,SAIjChL,MAAAC,cAAA,OAAKC,UAAU,SAAf,cAEEF,MAAAC,cAAA,OAAKC,UAAU,SACbF,MAAAC,cAAA,KAAGjE,KACDsE,MAAMC,QAAQ,4BACdlH,KAAKhB,MAAMoB,KAAKC,SAASoR,YAAY,cACrCzR,KAAKhB,MAAMoB,KAAKC,SAASuR,WAExB5R,KAAKhB,MAAMoB,KAAKyR,QAAQC,gBAQvC,IAAIC,WACFpL,MAAAC,cAAA,OAAKC,UAAU,QACZuJ,kBACAC,mBACAC,cACAE,aACAC,iBACAC,YACAG,cACAC,YACAE,oBACAO,qBACAC,sBAIL,OACE7K,OAAAC,cAAA,OAAKC,UAAU,WACZkL,eN+6CChC,SMn0DYpJ,MAAMI,UA0Z5BgJ,SAAQvD,aN86CP3P,QAAQW,QM36CMuS,SN+6CT,SAASjT,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBO31D3hBqU,cP22De,SAAUjS,kBAG5B,QAASiS,iBAGP,MAFAvU,iBAAgBuC,KAAMgS,eAEfnU,2BAA2BmC,MAAOgS,cAAcpT,WAAaR,OAAO8B,eAAe8R,gBAAgBrK,MAAM3H,KAAM4H,YAoDxH,MAzDA5J,WAAUgU,cAAejS,kBAQzBlB,aAAamT,gBACX3S,IAAK,SACLd,MAAO,WOp3DR,MACEoI,OAAAC,cAAA,OAAKC,UAAU,gBACbF,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAU,IACrBtL,MAAAC,cAACsL,gBACCtP,KAAK,WACLuP,WAAW,YACXC,YAAapS,KAAKhB,MAAM6C,YACxBtD,MAAOyB,KAAKhB,MAAMqB,SAASS,YAG/B6F,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAU,IACrBtL,MAAAC,cAACyL,eACCzP,KAAK,OACLuP,WAAW,YACX5R,QAASP,KAAKhB,MAAMuR,MACpB6B,YAAapS,KAAKhB,MAAM6C,YACxBtD,MAAOyB,KAAKhB,MAAMqB,SAASuK,UAG/BjE,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAU,IACrBtL,MAAAC,cAAC0L,eACC7H,MAAM,SACN2H,YAAapS,KAAKhB,MAAMoD,aACxBmQ,WAAY,eAGhB5L,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAU,IACrBtL,MAAAC,cAAA,KAAGyC,QAASrJ,KAAKhB,MAAM4C,MAAOuI,OAAQC,OAAQ,YAA9C,gBPw4DA4H,eOr6DkBrL,MAAMI,UAsClCiL,eAAcxF,WACZ3K,YAAa8E,MAAM+F,UAAUyC,KAC7BvN,MAAO+E,MAAM+F,UAAUyC,KACvB9O,SAAUsG,MAAM+F,UAAUhI,OAC1BtC,aAAcuE,MAAM+F,UAAUyC,KAC9BtI,UAAWF,MAAM+F,UAAUC,QPq4D5B9P,QAAQW,QOl4DMwU,ePs4DT,SAASlV,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBQ57D3hB6U,iBR48DkB,SAAUzS,kBAG/B,QAASyS,oBAGP,MAFA/U,iBAAgBuC,KAAMwS,kBAEf3U,2BAA2BmC,MAAOwS,iBAAiB5T,WAAaR,OAAO8B,eAAesS,mBAAmB7K,MAAM3H,KAAM4H,YAyC9H,MA9CA5J,WAAUwU,iBAAkBzS,kBAQ5BlB,aAAa2T,mBACXnT,IAAK,SACLd,MAAO,WQr9DR,MACEoI,OAAAC,cAAA,OAAKC,UAAU,gBACbF,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAS,IAClBtL,MAAAC,cAACsL,gBACCtP,KAAK,cACLuP,WAAW,YACXC,YAAapS,KAAKhB,MAAM+C,aACxBxD,MAAOyB,KAAKhB,MAAMsB,UAAUO,eAGlC8F,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAS,IACpBtL,MAAAC,cAAC0L,eACC7H,MAAM,SACN2H,YAAapS,KAAKhB,MAAMqD,cACxBkQ,WAAY,eAGhB5L,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAU,IACrBtL,MAAAC,cAAA,KAAGyC,QAASrJ,KAAKhB,MAAM4C,MAAOuI,OAAQC,OAAO,YAA7C,gBRu+DAoI,kBQ3/DqB7L,MAAMI,UA6BrCyL,kBAAiBhG,WACfzK,aAAc4E,MAAM+F,UAAUyC,KAAKvC,WACnChL,MAAO+E,MAAM+F,UAAUyC,KACvB7O,UAAWqG,MAAM+F,UAAUhI,OAAOkI,WAClCvK,cAAesE,MAAM+F,UAAUyC,KAAKvC,WACpC/F,UAAWF,MAAM+F,UAAUC,QRo+D5B9P,QAAQW,QQj+DMgV,kBRq+DT,SAAS1V,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBSlhE3hB8U,YTkiEa,SAAU1S,kBAG1B,QAAS0S,eAGP,MAFAhV,iBAAgBuC,KAAMyS,aAEf5U,2BAA2BmC,MAAOyS,YAAY7T,WAAaR,OAAO8B,eAAeuS,cAAc9K,MAAM3H,KAAM4H,YA0CpH,MA/CA5J,WAAUyU,YAAa1S,kBAQvBlB,aAAa4T,cACXpT,IAAK,SACLd,MAAO,WS3iER,MACEoI,OAAAC,cAAA,OAAKC,UAAU,gBACbF,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAS,IAClBtL,MAAAC,cAACyL,eACCzP,KAAK,WACLrC,QAASP,KAAKhB,MAAM2R,MACpBwB,WAAW,YACXC,YAAapS,KAAKhB,MAAM+C,aACxBxD,MAAOyB,KAAKhB,MAAMsB,UAAUsQ,YAGlCjK,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAS,IACpBtL,MAAAC,cAAC0L,eACC7H,MAAM,SACN2H,YAAapS,KAAKhB,MAAMqD,cACxBkQ,WAAY,eAGhB5L,MAAAC,cAAA,OAAKuD,OAAQ8H,SAAS,IACpBtL,MAAAC,cAAA,KAAGyC,QAASrJ,KAAKhB,MAAM4C,MAAOuI,OAAQC,OAAO,YAA7C,gBT6jEAqI,aSllEgB9L,MAAMI,UA8BhC0L,aAAYjG,WACVzK,aAAc4E,MAAM+F,UAAUyC,KAAKvC,WACnChL,MAAO+E,MAAM+F,UAAUyC,KACvBwB,MAAOhK,MAAM+F,UAAUhI,OAAOkI,WAC9BtM,UAAWqG,MAAM+F,UAAUhI,OAAOkI,WAClCvK,cAAesE,MAAM+F,UAAUyC,KAAKvC,WACpC/F,UAAWF,MAAM+F,UAAUC,QT0jE5B9P,QAAQW,QSvjEMiV,aT2jET,SAAS3V,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBU1mE3hB+U,cV0nEe,SAAU3S,kBAG5B,QAAS2S,iBAGP,MAFAjV,iBAAgBuC,KAAM0S,eAEf7U,2BAA2BmC,MAAO0S,cAAc9T,WAAaR,OAAO8B,eAAewS,gBAAgB/K,MAAM3H,KAAM4H,YA6CxH,MAlDA5J,WAAU0U,cAAe3S,kBAQzBlB,aAAa6T,gBACXrT,IAAK,SACLd,MAAO,WUnoER,MACEoI,OAAAC,cAAA,OAAKC,UAAW7G,KAAKhB,MAAM6H,WACzBF,MAAAC,cAAA,OAAKC,UAAU,YACXF,MAAAC,cAACyL,eACCzP,KAAK,aACLrC,QAASP,KAAKhB,MAAM8L,QACpB6H,WAAW,WACXR,WAAW,YACXC,YAAapS,KAAKhB,MAAM+C,aACxBxD,MAAOyB,KAAKhB,MAAMsB,UAAU0E,cAGlC2B,MAAAC,cAAA,OAAKC,UAAU,YACbF,MAAAC,cAAC0L,eACC7H,MAAM,SACN2H,YAAapS,KAAKhB,MAAMqD,cACxBkQ,WAAY,eAGhB5L,MAAAC,cAAA,OAAKC,UAAU,YACbF,MAAAC,cAAA,KACEyC,QAASrJ,KAAKhB,MAAM4C,OADtB,gBVupEA8Q,eU7qEkB/L,MAAMI,UAiClC2L,eAAclG,WACZzK,aAAc4E,MAAM+F,UAAUyC,KAAKvC,WACnChL,MAAO+E,MAAM+F,UAAUyC,KAAKvC,WAC5BgG,UAAWjM,MAAM+F,UAAUhI,OAAOkI,WAClCtM,UAAWqG,MAAM+F,UAAUhI,OAAOkI,WAClCvK,cAAesE,MAAM+F,UAAUyC,KAAKvC,WACpC/F,UAAWF,MAAM+F,UAAUC,QVkpE5B9P,QAAQW,QU/oEMkV,eVmpET,SAAS5V,OAAQD,QAASH,qBAE/B,YAYA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAhBjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBWlsEjiBkV,kBAAAnW,oBAAA,IXssEKoW,mBAAqBzV,uBAAuBwV,mBWpsE3CE,oBXutEqB,SAAUhT,kBAGlC,QAASgT,uBAGP,MAFAtV,iBAAgBuC,KAAM+S,qBAEflV,2BAA2BmC,MAAO+S,oBAAoBnU,WAAaR,OAAO8B,eAAe6S,sBAAsBpL,MAAM3H,KAAM4H,YA8EpI,MAnFA5J,WAAU+U,oBAAqBhT,kBAQ/BlB,aAAakU,sBACX1T,IAAK,SACLd,MAAO,WW/tER,GAAIyU,yBACAC,4BAA8BjT,KAAKhB,MAAM0C,eAC3C1B,KAAKhB,MAAM8K,qBAAsB,WAE/ByH,qBACF5K,MAAAC,cAACyL,eACCzP,KAAK,oBACL6H,MAAM,2BACNlK,QAAS0S,4BACTb,YAAapS,KAAKhB,MAAM+C,aACxBmR,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMsB,UAAUgR,mBAIhC,IAAItR,KAAKhB,MAAMsB,UAAUgR,kBAAmB,CAC1C,GAAI6B,aAAcnT,KAAKhB,MAAM8K,qBAC3B9J,KAAKhB,MAAMsB,UAAUgR,mBACrB6B,WAEF,IAAIA,YAAa,CAEf,GAAIC,YAAapT,KAAKhB,MAAM+K,oBAAoBoJ,aAG5CE,iBAAmB,CACvB,KAAK,GAAIC,aAAaF,YACpBC,kBAAsCD,WAAWE,UAKnD,KAAK,GADDC,gBACKtU,EAAI,EAAGA,GAAKoU,iBAAkBpU,IAGjCe,KAAKhB,MAAMsG,qBAAqBtF,KAAKhB,MAAMsB,UAAUgR,oBACnDtR,KAAKhB,MAAMsG,qBAAqBtF,KAAKhB,MAAMsB,UAAUgR,mBAAmBrS,KAK9EsU,YAAYtU,GAAKA,EAGnB+T,kBACErM,MAAAC,cAAAkM,mBAAAtV,SACE4V,WACEpT,KAAKhB,MAAM+K,oBACT/J,KAAKhB,MAAM8K,qBACT9J,KAAKhB,MAAMsB,UAAUgR,mBACrB6B,aAGNI,YACEvT,KAAKhB,MAAMsG,qBAAqBtF,KAAKhB,MAAMsB,UAAUgR,mBAEvDjO,eAAkBrD,KAAKhB,MAAMqE,eAC7B2F,eAAkBhJ,KAAKhB,MAAMgK,eAC7BwK,QAAU,EACVC,mBAAsBzT,KAAKhB,MAAMsB,UAAUiF,WAC3CxD,aAAgB/B,KAAKhB,MAAM+C,gBAMnC,GAAI2R,oBAUJ,QATK1T,KAAKhB,MAAMoB,UAAUE,YACxBoT,aACE/M,MAAAC,cAAA,WACED,MAAAC,cAAA,WACAD,MAAAC,cAAC0L,eAAc7H,MAAM,aAMzB9D,MAAAC,cAAC+D,aACCgJ,SAAU3T,KAAKhB,MAAMqD,eAEpBkP,qBACAyB,iBACAU,kBXstECX,qBW3yEwBpM,MAAMI,UA2FxCgM,qBAAoBvG,WAClB9K,eAAgBiF,MAAM+F,UAAUyC,KAAKvC,WACrC7K,aAAc4E,MAAM+F,UAAUyC,KAAKvC,WACnCvK,cAAesE,MAAM+F,UAAUyC,KAC/B/O,KAAMuG,MAAM+F,UAAUhI,OACtBpE,UAAWqG,MAAM+F,UAAUhI,OAAOkI,WAClC9C,qBAAsBnD,MAAM+F,UAAUhI,OAAOkI,WAC7C7C,oBAAqBpD,MAAM+F,UAAUhI,OAAOkI,WAC5CtH,qBAAsBqB,MAAM+F,UAAUhI,OAAOkI,WAC7CvJ,eAAgBsD,MAAM+F,UAAUhI,OAChCsE,eAAgBrC,MAAM+F,UAAUhI,QXstEjC7H,QAAQW,QWntEMuV,qBXutET,SAASjW,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBY50E3hBiW,iBZ41EkB,SAAU7T,kBY31EhC,QAAA6T,oBAAcnW,gBAAAuC,KAAA4T,iBAAA,IAAA3T,OAAApC,2BAAAmC,MAAA4T,iBAAAhV,WAAAR,OAAA8B,eAAA0T,mBAAA3W,KAAA+C,MAAA,OAGZC,OAAK4T,YAAc5T,MAAK4T,YAAYxS,KAAjBpB,OACnBA,MAAK6T,KAAO7T,MAAK6T,KAAKzS,KAAVpB,OACZA,MAAK8T,KAAO9T,MAAK8T,KAAK1S,KAAVpB,OALAA,MZqhFb,MAzLAjC,WAAU4V,iBAAkB7T,kBAa5BlB,aAAa+U,mBACXvU,IAAK,oBACLd,MAAO,WYl2ER4F,EAAE,2BAA2B6P,aZs2E5B3U,IAAK,oBACLd,MAAO,WYn2ER4F,EAAE,2BAA2B6P,aZu2E5B3U,IAAK,cACLd,MAAO,SYr2EEwQ,GACV,GAAIxJ,YAAawJ,EAAEhQ,OAAOhC,EAC1B,IAAIiD,KAAKhB,MAAMuU,YAAYhO,YAAa,CACtC,GAAI0O,MAAOjU,KAAKhB,MAAMkV,MACpBlU,KAAKhB,MAAMiQ,SAASjP,KAAKhB,MAAMuU,YAAYhO,aAAajC,QACxDC,QAAUvD,KAAKhB,MAAMwC,aAAexB,KAAKhB,MAAMuC,aAEjD0S,MAAKjU,KAAKhB,MAAMiQ,SAASjP,KAAKhB,MAAMuU,YAAYhO,aAAarC,aZu2E9D7D,IAAK,YACLd,MAAO,SYp2EAwQ,GACNA,EAAEoF,oBZu2EH9U,IAAK,OACLd,MAAO,SYr2ELwQ,GACD,GAAIzO,WAAYqE,KAAKE,UACnB7E,KAAKhB,MAAMiQ,SAASjP,KAAKhB,MAAMuU,YAAYxE,EAAEhQ,OAAOhC,KAEtDgS,GAAEqF,aAAaC,QAAQ,aAAc/T,cZs2EtCjB,IAAK,OACLd,MAAO,SYp2ELwQ,GACHA,EAAEoF,gBAEF,IAAI7T,WAAYqE,KAAKC,MAAMmK,EAAEqF,aAAaE,QAAQ,eAC9CC,cAAgBC,SAASzF,EAAEhQ,OAAOhC,GAEtCuD,WAAUiF,WAAagP,cAEvBvU,KAAKhB,MAAMsD,mBAAmBhC,cZu2E7BjB,IAAK,SACLd,MAAO,WYr2ED,GAAAiE,QAAAxC,KAELyU,UACAC,OACA5N,eACAvB,WAAa,CACjB,IAAIvF,KAAKhB,MAAMoU,WAAY,CACzB,IAAK,GAAIuB,GAAE,EAAGA,EAAI3U,KAAKhB,MAAMoU,WAAWuB,EAAGA,IAAK,CAC9CF,SACA,KAAK,GAAIG,GAAE,EAAGA,GAAK5U,KAAKhB,MAAMoU,WAAWwB,EAAGA,IAAK,CAE/C,GAAIC,WAAa,IAAI7U,KAAKhB,MAAMoU,WAAWwB,EAAM,IAAI5U,KAAKhB,MAAMoU,WAAWwB,EAAI,IAC3EE,WAAaC,MAAOF,WACpBG,UAAY,OACZC,aAAe,KACfC,SAAW,QACXC,WAAa,KACbC,cAAgB,KAChBC,UAAY,QACZC,YAAc,KACdC,WAAavV,KAAKwV,UAClBC,OAASzV,KAAK+T,KACd1K,QAAU,IAETrJ,MAAKhB,MAAMwU,QAEVxT,KAAKhB,MAAMuU,aACTvT,KAAKhB,MAAMuU,YAAYhO,cACzByP,UAAY,gBACZE,SAAW,OACXC,WAAa,UACbC,cAAgB,MAChBH,aACF,OAASjV,KAAKhB,MAAMiQ,SAASjP,KAAKhB,MAAMuU,YAAYhO,aAAarC,QAAU,YAClElD,KAAKhB,MAAMqE,eAAerD,KAAKhB,MAAMiQ,SAASjP,KAAKhB,MAAMuU,YAAYhO,aAAajC,QAAQmH,MAAQ,YAClGzK,KAAKhB,MAAMgK,eAAehJ,KAAKhB,MAAMiQ,SAASjP,KAAKhB,MAAMuU,YAAYhO,aAAaqL,UAAU7P,OAAS,QAC5GsU,UAAY,OACZC,YAActV,KAAK8T,KACnByB,WAAa,KACbE,OAAS,KACTpM,QAAUrJ,KAAK6T,aAKjB7T,KAAKhB,MAAMwU,SACTjO,YAAcvF,KAAKhB,MAAMyU,mBAC3BuB,UAAY,gBAEJhV,KAAKhB,MAAMuU,YAIZvT,KAAKhB,MAAMuU,cACbvT,KAAKhB,MAAMuU,YAAYhO,YAInBvF,KAAKhB,MAAMuU,YAAYhO,aAH9ByP,UAAY,iBACrB3L,QAAU,SAAC0F,GAAD,MAAOvM,QAAKxD,MAAM+C,aAAa,aAAcgN,EAAEhQ,OAAOhC,QANzDiY,UAAY,iBACZ3L,QAAU,SAAC0F,GAAD,MAAOvM,QAAKxD,MAAM+C,aAAa,aAAcgN,EAAEhQ,OAAOhC,MAoBpE,IAAI2Y,yBAEFA,mBAAoBd,EAAK5U,KAAKhB,MAAMoU,WAAWwB,EAAID,EAKrDF,OAAOkB,KACLhP,MAAAC,cAAA,OACE7J,GAAIwI,WACJsB,UAAWmO,UACXY,YAAWV,SACXW,cAAaV,WACbW,iBAAgBV,cAChBW,sBAAqBd,aACrB9K,MAAO2K,UACPzL,QAASA,QACTgM,UAAWA,UACXC,YAAaA,YACbC,WAAYA,WACZE,OAAQA,QAEPC,oBAILnQ,aAGF,GAAIyQ,WAAa,IAAIhW,KAAKhB,MAAMoU,WAAWuB,EAAM,IAAI3U,KAAKhB,MAAMoU,WAAWuB,EAAI,IAE3EsB,UADa,IAAIjW,KAAKhB,MAAMoU,WAAWuB,EAAI,KAE7CpG,OAAQyH,WAGVtB,KAAIiB,KACFhP,MAAAC,cAAA,OACEC,UAAU,MACVsD,MAAO8L,UAENxB,SAKP3N,QAAU4N,IAGV,MACE/N,OAAAC,cAAA,OAAKC,UAAU,WACZC,aZ22EC8M,kBYthFqBjN,MAAMI,UAiLrC6M,kBAAiBpH,aZ02EhB3P,QAAQW,QYv2EMoW,kBZ22ET,SAAS9W,OAAQD,QAASH,qBAE/B,YAYA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAhBjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBa/iFjiBuY,cAAAxZ,oBAAA,IbmjFKyZ,eAAiB9Y,uBAAuB6Y,eaviFvCE,uBb2jFwB,SAAUrW;Aa1jFtC,QAAAqW,0BAAc3Y,gBAAAuC,KAAAoW,uBAAA,IAAAnW,OAAApC,2BAAAmC,MAAAoW,uBAAAxX,WAAAR,OAAA8B,eAAAkW,yBAAAnZ,KAAA+C,MAAA,OAGZC,OAAKoW,cAAgBpW,MAAKoW,cAAchV,KAAnBpB,OACrBA,MAAKqW,QAAUrW,MAAKqW,QAAQjV,KAAbpB,OACfA,MAAKoU,QAAUpU,MAAKoU,QAAQhT,KAAbpB,OALHA,Mb8rFb,MAnIAjC,WAAUoY,uBAAwBrW,kBAalClB,aAAauX,yBACX/W,IAAK,gBACLd,MAAO,SalkFIqE,KAAMrE,OAClB,GAAI0C,YAAajB,KAAKhB,MAAMqB,SAASY,UACrCA,YAAW2B,MAAQrE,MACnByB,KAAKhB,MAAM6C,YAAY,aAAcZ,ebwkFpC5B,IAAK,UACLd,MAAO,WapkFR,GAAI0C,YAAajB,KAAKhB,MAAMqB,SAASY,UACrCA,YAAWb,QACXJ,KAAKhB,MAAM6C,YAAY,aAAcZ,ebwkFpC5B,IAAK,UACLd,MAAO,SatkFFqE,KAAMrE,OACZ,GAAI6B,MAAOJ,KAAKhB,MAAMqB,SAASY,WAAWb,IAC1CA,MAAKwC,MAAQrE,MACbyB,KAAKqW,cAAc,OAAQjW,SbykF1Bf,IAAK,SACLd,MAAO,WatkFR,GAAImV,uBACE1T,KAAKhB,MAAMoB,UAAUC,cAAcY,aACvCyS,aACE/M,MAAAC,cAAC0L,eAAc7H,MAAM,WAIzB,IAAIf,sBACA6M,yBACJ,IAAIvW,KAAKhB,MAAMqB,SAASiD,OAAQ,CAI9B,IAAK,GAAIvG,MAAMiD,MAAKhB,MAAM0K,kBAAkB1J,KAAKhB,MAAMqB,SAASiD,QAC9DoG,kBAAkB3M,IAAMiD,KAAKhB,MAAM0K,kBAAkB1J,KAAKhB,MAAMqB,SAASiD,QAAQvG,IAAI8N,IAGvF,IAAI2L,0BAA2BxW,KAAKhB,MAAM2K,uBAAuB3J,KAAKhB,MAAMqB,SAASiD,OACjFkT,8BACIxW,KAAKhB,MAAMqB,cAAcY,gBAAgBb,KAC7CmW,mBACE5P,MAAAC,cAAAuP,eAAA3Y,SACEiZ,OAAQD,yBACR3M,mBAAoB7J,KAAKhB,MAAM6K,mBAC/BD,iBAAkB5J,KAAKhB,MAAM4K,iBAC7BlF,OAAQ1E,KAAKhB,MAAMqB,SAASY,WAAWb,KACvCiU,QAASrU,KAAKqU,UAIlBrU,KAAKsW,WAKX,GAAII,sBA+CJ,OA9CI1W,MAAKhB,MAAMqB,SAASiD,SACtBoT,eACE/P,MAAAC,cAAA,WACED,MAAAC,cAACsL,gBACCtP,KAAK,WACL6H,MAAM,WACN2H,YAAapS,KAAKqW,cAClBnD,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASY,WAAWH,WAExC6F,MAAAC,cAACyL,eACCzP,KAAK,SACL6H,MAAM,OACNlK,QAASmJ,kBACT0I,YAAapS,KAAKqW,cAClBnD,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASY,WAAW2J,SAEvC2L,mBACD5P,MAAAC,cAAC+P,aACC/T,KAAK,OACL6H,MAAM,OACNmM,QAAQ,OACRC,QAAQ,OACRzE,YAAapS,KAAKqW,cAClBnD,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASY,WAAW8J,OAExCpE,MAAAC,cAACkQ,aACClU,KAAK,OACL6H,MAAM,OACN2H,YAAapS,KAAKqW,cAClBnD,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASY,WAAW+J,OAExCrE,MAAAC,cAACmQ,iBACCnU,KAAK,WACL6H,MAAM,WACN2H,YAAapS,KAAKqW,cAClBW,IAAI,WACJzY,MAAOyB,KAAKhB,MAAMqB,SAASY,WAAWgK,aAO5CtE,MAAAC,cAAC+D,aACC/H,KAAK,kBACL+Q,SAAU3T,KAAKhB,MAAMoD,aACrB4U,IAAI,QAEHN,eACAhD,kBbykFC0C,wBa/rF2BzP,MAAMI,UA6H3CqP,wBAAuB5J,WACrB3K,YAAa8E,MAAM+F,UAAUyC,KAAKvC,WAClCxK,aAAcuE,MAAM+F,UAAUyC,KAC9B9O,SAAUsG,MAAM+F,UAAUhI,OAAOkI,WACjC/C,mBAAoBlD,MAAM+F,UAAUhI,OAAOkI,WAC3ChD,iBAAkBjD,MAAM+F,UAAUhI,OAAOkI,WACzClD,kBAAmB/C,MAAM+F,UAAUhI,OAAOkI,WAC1CjD,uBAAwBhD,MAAM+F,UAAUhI,OAAOkI,YbwkFhD/P,QAAQW,QarkFM4Y,wBbykFT,SAAStZ,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBc5tF3hBsZ,ad4uFc,SAAUlX,kBAG3B,QAASkX,gBAGP,MAFAxZ,iBAAgBuC,KAAMiX,cAEfpZ,2BAA2BmC,MAAOiX,aAAarY,WAAaR,OAAO8B,eAAe+W,eAAetP,MAAM3H,KAAM4H,YAkEtH,MAvEA5J,WAAUiZ,aAAclX,kBAQxBlB,aAAaoY,eACX5X,IAAK,SACLd,MAAO,WctvFD,GAAAiE,QAAAxC,KACHyW,OAASzW,KAAKhB,MAAMyX,OACpBS,gBAAkB9Y,OAAOkM,KAAKmM,QAAQlM,IAAI,SAAAzF,WAE5C,GAAIsH,UAAW5J,OAAKxD,MAAM6K,mBAAmB4M,OAAO3R,WAAP,YAAiCsH,QAC9E,IAAiB,SAAbA,UAAoC,WAAbA,SAAuB,CAChD,GAAwC,OAApCqK,OAAO3R,WAAP,WACF,MACE6B,OAAAC,cAACsL,gBACCtP,KAAMkC,UACN2F,MAAOgM,OAAO3R,WAAP,KACPsN,YAAa5P,OAAKxD,MAAMqV,QACxBnB,SAAUuD,OAAO3R,WAAP,SACVvG,MAAOiE,OAAKxD,MAAM0F,OAAOI,YAK/B,IAAwC,OAApC2R,OAAO3R,WAAP,WACF,MACE6B,OAAAC,cAACyL,eACCzP,KAAMkC,UACN2F,MAAOgM,OAAO3R,WAAP,KACPvE,QAASiC,OAAKxD,MAAM4K,iBAAiB6M,OAAO3R,WAAP,YACrCsN,YAAa5P,OAAKxD,MAAMqV,QACxBnB,SAAUuD,OAAO3R,WAAP,SACVvG,MAAOiE,OAAKxD,MAAM0F,OAAOI,aAMjC,MAAiB,aAAbsH,SAEAzF,MAAAC,cAACuQ,aACCvU,KAAMkC,UACN2F,MAAOgM,OAAO3R,WAAP,KACPsN,YAAa5P,OAAKxD,MAAMqV,QACxBnB,SAAUuD,OAAO3R,WAAP,SACVvG,MAAOiE,OAAKxD,MAAM0F,OAAOI,aAOd,SAAbsH,WAAyB5J,OAAKxD,MAAMoB,UAAU0E,WAAlD,OAEI6B,MAAAC,cAACwQ,aACCxU,KAAMkC,UACN2F,MAAOgM,OAAO3R,WAAP,KACPsN,YAAa5P,OAAKxD,MAAMqV,QACxBnB,SAAUuD,OAAO3R,WAAP,SACVvG,MAAOiE,OAAKxD,MAAMwB,MAAMgC,OAAKxD,MAAM0F,OAAOI,eAMlD,OACE6B,OAAAC,cAAA,WACGsQ,qBdsvFCD,ccpzFiBtQ,MAAMI,UAoEjCkQ,cAAazK,WACXiK,OAAQ9P,MAAM+F,UAAUhI,OAAOkI,WAC/B/C,mBAAoBlD,MAAM+F,UAAUhI,OAAOkI,WAC3ChD,iBAAkBjD,MAAM+F,UAAUhI,OAAOkI,WACzClI,OAAQiC,MAAM+F,UAAUhI,OAAOkI,WAC/ByH,QAAS1N,MAAM+F,UAAUyC,KAAKvC,YdsvF/B/P,QAAQW,QcnvFMyZ,cduvFT,SAASna,OAAQD,QAASH,qBAE/B,YAYA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAhBjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBen1FjiBuY,cAAAxZ,oBAAA,Ifu1FKyZ,eAAiB9Y,uBAAuB6Y,ee30FvCmB,wBf+1FyB,SAAUtX,kBe91FvC,QAAAsX,2BAAc5Z,gBAAAuC,KAAAqX,wBAAA,IAAApX,OAAApC,2BAAAmC,MAAAqX,wBAAAzY,WAAAR,OAAA8B,eAAAmX,0BAAApa,KAAA+C,MAAA,OAGZC,OAAKqX,eAAiBrX,MAAKqX,eAAejW,KAApBpB,OACtBA,MAAKqW,QAAUrW,MAAKqW,QAAQjV,KAAbpB,OACfA,MAAKoU,QAAUpU,MAAKoU,QAAQhT,KAAbpB,OALHA,Mfw8Fb,MAzGAjC,WAAUqZ,wBAAyBtX,kBAanClB,aAAawY,0BACXhY,IAAK,iBACLd,MAAO,Set2FKqE,KAAMrE,OACnB,GAAI2C,aAAclB,KAAKhB,MAAMqB,SAASa,WACtCA,aAAY0B,MAAQrE,MACpByB,KAAKhB,MAAM6C,YAAY,cAAeX,gBfy2FrC7B,IAAK,UACLd,MAAO,Wet2FR,GAAI2C,aAAclB,KAAKhB,MAAMqB,SAASa,WACtCA,aAAYd,QACZJ,KAAKhB,MAAM6C,YAAY,cAAeX,gBf02FrC7B,IAAK,UACLd,MAAO,Sex2FFqE,KAAMrE,OACZ,GAAI6B,MAAOJ,KAAKhB,MAAMqB,SAASa,YAAYd,IAC3CA,MAAKwC,MAAQrE,MACbyB,KAAKsX,eAAe,OAAQlX,Sf22F3Bf,IAAK,SACLd,MAAO,Wev2FR,GAAIgZ,oBAEFA,cADEvX,KAAKhB,MAAMoB,KAAKC,SAASa,YAEzByF,MAAAC,cAAC0L,eAAc7H,MAAM,WAIrB9D,MAAAC,cAAC0L,eAAc7H,MAAM,UAIzB,IAAI+M,8BACJ,IAAIxX,KAAKhB,MAAMqB,SAASa,YAAYuK,WAAY,CAC9C,GAAIgM,8BAA+BzX,KAAKhB,MAAMsM,2BAA2BtL,KAAKhB,MAAMqB,SAASa,YAAYuK,WAErGgM,gCACEzX,KAAKhB,MAAMqB,SAASa,YAAYd,KAClCoX,uBACE7Q,MAAAC,cAAAuP,eAAA3Y,SACEiZ,OAAQgB,6BACR5N,mBAAoB7J,KAAKhB,MAAM6K,mBAC/BD,iBAAkB5J,KAAKhB,MAAM4K,iBAC7BlF,OAAQ1E,KAAKhB,MAAMqB,SAASa,YAAYd,KACxCiU,QAASrU,KAAKqU,UAIlBrU,KAAKsW,WAKX,MACE3P,OAAAC,cAAC+D,aACC/H,KAAK,sBACL+Q,SAAU3T,KAAKhB,MAAMoD,aACrB4U,IAAI,QAEJrQ,MAAAC,cAACyL,eACCzP,KAAK,aACL6H,MAAM,WACNlK,QAASP,KAAKhB,MAAMqM,kBACpB+G,YAAapS,KAAKsX,eAClBpE,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASa,YAAYuK,aAExC+L,uBACD7Q,MAAAC,cAAC+P,aACC/T,KAAK,OACL6H,MAAM,OACN2H,YAAapS,KAAKsX,eAClBpE,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASa,YAAY6J,OAEzCpE,MAAAC,cAACkQ,aACClU,KAAK,OACL6H,MAAM,OACN2H,YAAapS,KAAKsX,eAClBpE,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASa,YAAY8J,OAEzCrE,MAAAC,cAACmQ,iBACCnU,KAAK,WACL6H,MAAM,WACN2H,YAAapS,KAAKsX,eAClB/Y,MAAOyB,KAAKhB,MAAMqB,SAASa,YAAY+J,WAExCsM,kBfy2FCF,yBez8F4B1Q,MAAMI,UAuG5CsQ,yBAAwB7K,afu2FvB3P,QAAQW,Qep2FM6Z,yBfw2FT,SAASva,OAAQD,QAASH,qBAE/B,YAYA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAhBjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBgBt+FjiBuY,cAAAxZ,oBAAA,IhB0+FKyZ,eAAiB9Y,uBAAuB6Y,egBh+FvCwB,qBhBk/FsB,SAAU3X,kBgBj/FpC,QAAA2X,wBAAcja,gBAAAuC,KAAA0X,qBAAA,IAAAzX,OAAApC,2BAAAmC,MAAA0X,qBAAA9Y,WAAAR,OAAA8B,eAAAwX,uBAAAza,KAAA+C,MAAA,OAGZC,OAAK0X,YAAc1X,MAAK0X,YAAYtW,KAAjBpB,OACnBA,MAAKqW,QAAUrW,MAAKqW,QAAQjV,KAAbpB,OACfA,MAAKoU,QAAUpU,MAAKoU,QAAQhT,KAAbpB,OALHA,MhBimGb,MA/GAjC,WAAU0Z,qBAAsB3X,kBAahClB,aAAa6Y,uBACXrY,IAAK,cACLd,MAAO,SgBz/FEqE,KAAMrE,OAChB,GAAI4C,UAAWnB,KAAKhB,MAAMqB,SAASc,QACnCA,UAASyB,MAAQrE,MACjByB,KAAKhB,MAAM6C,YAAY,WAAYV,ahB4/FlC9B,IAAK,UACLd,MAAO,WgBz/FR,GAAI4C,UAAWnB,KAAKhB,MAAMqB,SAASc,QACnCA,UAASf,QACTJ,KAAKhB,MAAM6C,YAAY,WAAYV,ahB6/FlC9B,IAAK,UACLd,MAAO,SgB3/FFqE,KAAMrE,OACZ,GAAI6B,MAAOJ,KAAKhB,MAAMqB,SAASc,SAASf,IACpC7B,iBAAiBqZ,OACnBxX,KAAKwC,MAAQrE,MAAMqE,KACnB5C,KAAKhB,MAAMiD,SAASW,KAAMrE,SAE1B6B,KAAKwC,MAAQrE,MACbyB,KAAK2X,YAAY,OAAQvX,UhB+/F1Bf,IAAK,SACLd,MAAO,WgB3/FR,GAAIgZ,oBAEFA,cADEvX,KAAKhB,MAAMoB,KAAKC,SAASc,SAEzBwF,MAAAC,cAAC0L,eAAc7H,MAAM,WAIrB9D,MAAAC,cAAC0L,eAAc7H,MAAM,UAIzB,IAAIoN,4BACJ,IAAI7X,KAAKhB,MAAMqB,SAASc,SAAS+K,SAAU,CACzC,GAAI4L,4BAA6B9X,KAAKhB,MAAM8M,yBAAyB9L,KAAKhB,MAAMqB,SAASc,SAAS+K,SAC9F4L,8BACE9X,KAAKhB,MAAMqB,SAASc,SAASf,KAC/ByX,qBACElR,MAAAC,cAAAuP,eAAA3Y,SACEiZ,OAAQqB,2BACRtX,MAAOR,KAAKhB,MAAMwB,MAClBqJ,mBAAoB7J,KAAKhB,MAAM6K,mBAC/BD,iBAAkB5J,KAAKhB,MAAM4K,iBAC7BlF,OAAQ1E,KAAKhB,MAAMqB,SAASc,SAASf,KACrCA,QAASJ,KAAKhB,MAAMoB,UAAUC,cAAcc,cAAcf,KAC1DiU,QAASrU,KAAKqU,UAIlBrU,KAAKsW,WAKX,MACE3P,OAAAC,cAAC+D,aACC/H,KAAK,mBACL+Q,SAAU3T,KAAKhB,MAAMoD,aACrB2V,YAAY,EACZf,IAAI,QAEJrQ,MAAAC,cAACyL,eACCzP,KAAK,WACL6H,MAAM,SACNlK,QAASP,KAAKhB,MAAM6M,gBACpBuG,YAAapS,KAAK2X,YAClBzE,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASc,SAAS+K,WAErC2L,qBACDlR,MAAAC,cAAC+P,aACC/T,KAAK,OACL6H,MAAM,OACN2H,YAAapS,KAAK2X,YAClBzE,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASc,SAAS4J,OAEtCpE,MAAAC,cAACkQ,aACClU,KAAK,OACL6H,MAAM,OACN2H,YAAapS,KAAK2X,YAClBzE,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASc,SAAS6J,OAEtCrE,MAAAC,cAACmQ,iBACCnU,KAAK,WACL6H,MAAM,WACN2H,YAAapS,KAAK2X,YAClBpZ,MAAOyB,KAAKhB,MAAMqB,SAASc,SAAS8J,WAErCsM,kBhB4/FCG,sBgBlmGyB/Q,MAAMI,UA6GzC2Q,sBAAqBlL,ahB0/FpB3P,QAAQW,QgBv/FMka,sBhB2/FT,SAAS5a,OAAQD,QAASH,qBAE/B,YAYA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAhBjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBiB7nGjiBqa,aAAAtb,oBAAA,IjBioGKub,cAAgB5a,uBAAuB2a,ciBrnGtCE,oBjByoGqB,SAAUnY,kBiBxoGnC,QAAAmY,uBAAcza,gBAAAuC,KAAAkY,oBAAA,IAAAjY,OAAApC,2BAAAmC,MAAAkY,oBAAAtZ,WAAAR,OAAA8B,eAAAgY,sBAAAjb,KAAA+C,MAAA,OAGZC,OAAKE,OACHgY,cACA1G,YAAa,KACbG,UAAW,KACXwG,SAAU,KACVC,aAAcC,GAAIjY,UAAWY,eAAiBX,eAC9CiY,MAAO,EACPC,WAAYF,GAAG,GACfG,eAAgB,GAGlBxY,MAAKyY,eAAiBzY,MAAKyY,eAAerX,KAApBpB,OACtBA,MAAK4B,YAAc5B,MAAK4B,YAAYR,KAAjBpB,OACnBA,MAAK8B,aAAe9B,MAAK8B,aAAaV,KAAlBpB,OACpBA,MAAK0Y,WAAa1Y,MAAK0Y,WAAWtX,KAAhBpB,OAClBA,MAAK2Y,kBAAoB3Y,MAAK2Y,kBAAkBvX,KAAvBpB,OACzBA,MAAK4Y,YAAc5Y,MAAK4Y,YAAYxX,KAAjBpB,OACnBA,MAAK6Y,cAAgB7Y,MAAK6Y,cAAczX,KAAnBpB,OACrBA,MAAK8Y,gBAAkB9Y,MAAK8Y,gBAAgB1X,KAArBpB,OArBXA,MjBw9Gb,MA/UAjC,WAAUka,oBAAqBnY,kBA6B/BlB,aAAaqZ,sBACX7Y,IAAK,iBACLd,MAAO,SiBhpGKc,KACb,GAAImZ,WAAYxY,KAAKG,MAAMqY,SAC3BA,WAAUnZ,MAAQmZ,UAAUnZ,KAC5BW,KAAK0D,UAAU8U,yBjBmpGdnZ,IAAK,kBACLd,MAAO,WiBjpGQ,GAAAiE,QAAAxC,KACZqY,YAAc1T,KAAKC,MAAMD,KAAKE,UAAU7E,KAAKG,MAAMkY,cACnDW,YAAc5a,OAAOkM,KAAKtK,KAAKhB,MAAMgK,gBAAgBiQ,KACvD,SAAA5Z,KAAA,MAA0C,cAAnCmD,OAAKxD,MAAMgK,eAAe3J,MAGnC,KAAK,GAAI6D,WAAWmV,aAAa,CAE/B,GAAI/X,WAAY+X,YAAYnV,SAAS5C,SACrCA,WAAUsQ,SAAWoI,YACrB1Y,UAAUO,YAAc,GACxBP,UAAU0E,WAAahF,KAAKG,MAAMiY,SAClC9X,UAAUyQ,SAAW/Q,KAAKG,MAAMiY,QAGhC,IAAI/X,UAAWgY,YAAYnV,SAAS7C,QACpCA,UAASoR,YAAczR,KAAKG,MAAMsR,YAClCpR,SAASuR,UAAY5R,KAAKG,MAAMyR,UAChCvR,SAASS,SAAWT,SAASY,WAAWH,SACxCT,SAASuK,OAASvK,SAASY,WAAW2J,OACtCvK,SAASY,WAAW+D,WAAahF,KAAKG,MAAMiY,SACiB,IAAzDpY,KAAKhB,MAAMyK,cAAcpJ,SAASiD,QAAQ4V,aAC5C7Y,SAAS8P,QAAU,GAKjBnQ,KAAKhB,MAAMoB,OACbC,SAASoR,YAAczR,KAAKhB,MAAMoB,KAAKsR,UAAUyH,OACjD9Y,SAASuR,UAAY5R,KAAKhB,MAAMoB,KAAKyR,QAAQuH,GAC7C/Y,SAAS6Q,iBAAmBlR,KAAKhB,MAAMoB,KAAKC,SAAStD,GACrDsD,SAASY,WAAW+D,WAAahF,KAAKhB,MAAMoB,KAAKE,UAAU0E,WAC3D1E,UAAU0E,WAAahF,KAAKhB,MAAMoB,KAAKE,UAAU0E,WACjD1E,UAAUyQ,SAAW/Q,KAAKhB,MAAMoB,KAAKE,UAAU0E,YAGjDqT,YAAYnV,SAAS5C,UAAYA,UACjC+X,YAAYnV,SAAS7C,SAAWA,SAGlCL,KAAKhB,MAAMuD,KAAK8V,YAAarY,KAAKhB,MAAMqI,mBAAoB,oBAAoBjE,KAC9E,WAAOZ,OAAKxD,MAAMqa,qBjBupGnBha,IAAK,cACLd,MAAO,SiBppGEqE,KAAMrE,MAAOc,KACvBW,KAAKhB,MAAMsa,mBAAoBC,WAAYvZ,KAAKhB,MAAMsa,UACtD,IAAIlB,UAAWpY,KAAKG,MAAMiY,SACtB3G,YAAczR,KAAKG,MAAMsR,YACzBG,UAAY5R,KAAKG,MAAMyR,UACvByG,YAAcrY,KAAKG,MAAMkY,WAEhB,iBAATzV,KACF6O,YAAclT,MACI,cAATqE,MACTgP,UAAYrT,MACZ6Z,SAAWpY,KAAKhB,MAAMwa,eAAe5H,WAAWwG,WAGnC,WAATxV,OACFyV,YAAYhZ,KAAKgB,UAAYY,gBAE/BoX,YAAYhZ,KAAKgB,SAASuC,MAAQrE,OAGpCyB,KAAK0D,UAAU2U,wBAAaD,kBAAU3G,wBAAaG,yBjBupGlDvS,IAAK,eACLd,MAAO,SiBrpGGqE,KAAMrE,MAAOc,KACxBW,KAAKhB,MAAMsa,mBAAoBC,WAAYvZ,KAAKhB,MAAMsa,UACtD,IAAIjB,aAAcrY,KAAKG,MAAMkY,WAC7BA,aAAYhZ,KAAKiB,UAAUsC,MAAQrE,MACnCyB,KAAK0D,UAAU2U,6BjBwpGdhZ,IAAK,aACLd,MAAO,WiBrpGR,GAAI8Z,aAAcrY,KAAKG,MAAMkY,YACzBE,MAAQvY,KAAKG,MAAMoY,MACnBC,UAAYxY,KAAKG,MAAMqY,SAE3BH,aAAYE,MAAM,IAAMlY,YAAcC,WAAYW,gBAClDuX,UAAUD,MAAM,IAAK,EACrBA,OAAc,EAEdvY,KAAK0D,UAAU2U,wBAAaG,oBAAWD,iBjBypGtClZ,IAAK,oBACLd,MAAO,SiBvpGQwQ,GAChB,GAAI0J,gBAAiB1J,EAAEhQ,OAAOR,KAC9ByB,MAAK0D,UAAU+U,mCjB0pGdpZ,IAAK,cACLd,MAAO,SiBxpGEc,KAOV,IAAK,GANDkZ,OAAQvY,KAAKG,MAAMoY,MACnBC,UAAYxY,KAAKG,MAAMqY,UACvBiB,QAAUlB,MAAM,EAChBF,YAAcrY,KAAKG,MAAMkY,YACzBqB,WAAa1Z,KAAKG,MAAMsY,eAEnBxZ,EAAE,EAAGA,GAAGya,WAAYza,IAC3BoZ,YAAYoB,SAAW9U,KAAKC,MAAMD,KAAKE,UAAUwT,YAAYhZ,aACtDgZ,aAAYoB,SAASnZ,UAAU4C,QACtCsV,UAAUiB,UAAW,EACrBA,SAGFzZ,MAAK0D,UACH2U,YAAaA,YACbE,MAAOkB,QACPjB,UAAWA,ejB4pGZnZ,IAAK,gBACLd,MAAO,SiBzpGIc,KACZ,GAAIgZ,aAAcrY,KAAKG,MAAMkY,kBACtBA,aAAYhZ,KACnBW,KAAK0D,UAAU2U,YAAaA,iBjB4pG3BhZ,IAAK,SACLd,MAAO,WiB1pGD,GAAAoF,QAAA3D,KAEH2Z,iBAAmBvb,OAAOkM,KAAKtK,KAAKG,MAAMkY,aAC1CuB,YACA3a,EAAI,EAJD4a,2BAAA,EAAAC,mBAAA,EAAAC,eAAArT,MAAA,KAKP,OAAAsT,OALOC,MAAA,cAKE5a,KALF2a,MAAAzb,KAMLqb,UAASjE,KACPhP,MAAAC,cAAAqR,cAAAza,SACE4C,KAAMuD,OAAK3E,MAAMoB,MAAQ,KACzBf,IAAKA,IACL6a,WAAY7a,IACZtC,GAAIkC,EACJuZ,UAAW7U,OAAKxD,MAAMqY,UAAUnZ,KAChCqZ,eAAgB/U,OAAK+U,eACrBhX,eAAgBiC,OAAK3E,MAAM0C,eAC3BpB,UAAWqD,OAAKxD,MAAMkY,YAAYhZ,KAAKiB,WAAa,KACpDD,SAAUsD,OAAKxD,MAAMkY,YAAYhZ,KAAKgB,UAAY,KAClDyY,cAA2C,IAA5Ba,iBAAiBza,OAC9B,iBAAMyE,QAAKmV,cAAczZ,MAAO,KAClCsZ,WAAY1Z,GAAK0a,iBAAiBza,OAASyE,OAAKgV,WAAa,KAC7DC,kBAAmBjV,OAAKiV,kBACxBH,eAAgB9U,OAAKxD,MAAMsY,eAC3BI,YAAa5Z,GAAK0a,iBAAiBza,QAAUyE,OAAKxD,MAAMkY,YAAYhZ,KAClEsE,OAAKkV,YAAc,KACrB9W,aAAc4B,OAAK5B,aACnBF,YAAa8B,OAAK9B,YAClByX,SAAU3V,OAAK3E,MAAMsa,SACrB7P,cAAe9F,OAAK3E,MAAMyK,cAC1BV,sBAAuBpF,OAAK3E,MAAM+J,sBAClCe,qBAAsBnG,OAAK3E,MAAM8K,qBACjCH,uBAAwBhG,OAAK3E,MAAM2K,uBACnCE,mBAAoBlG,OAAK3E,MAAM6K,mBAC/BD,iBAAkBjG,OAAK3E,MAAM4K,iBAC7BuQ,WAAYxW,OAAK3E,MAAMmb,WACvBpQ,oBAAqBpG,OAAK3E,MAAM+K,oBAChCzE,qBAAsB3B,OAAK3E,MAAMsG,qBACjCoE,kBAAmB/F,OAAK3E,MAAM0K,kBAC9B6G,MAAO5M,OAAK3E,MAAMuR,SAItBtR,KApCFmb,UAAgBT,iBAAhBU,OAAAC,cAAAT,2BAAAG,MAAAI,UAAAG,QAAAC,MAAAX,2BAAA,EAAkCI,QAL3B,MAAAQ,KAAAX,mBAAA,EAAAC,eAAAU,IAAA,aAAAZ,2BAAAO,UAAAM,QAAAN,UAAAM,SAAA,WAAAZ,kBAAA,KAAAC,iBA4CP,GAAIY,qBACAC,8BACJ,IAAI5a,KAAKhB,MAAMoB,KACbua,aACEhU,MAAAC,cAAA,WACED,MAAAC,cAAC4D,eACCC,MAAM,kBACNC,KAAM1K,KAAKhB,MAAMoB,KAAKE,UAAU4C,UAElCyD,MAAAC,cAAC4D,eACCC,MAAM,QACNC,KAAM1K,KAAKhB,MAAMoB,KAAKsR,UAAUC,QAElChL,MAAAC,cAAC4D,eACCC,MAAM,cACNC,KAAM1K,KAAKhB,MAAMoB,KAAKyR,QAAQC,eAKpC8I,wBACEjU,MAAAC,cAAA,WACED,MAAAC,cAACsL,gBACCtP,KAAK,WACL6H,MAAM,qBACN2H,YAAapS,KAAKhB,MAAMwK,gBACxB0J,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASS,WAE7B6F,MAAAC,cAACyL,eACCzP,KAAK,SACL6H,MAAM,OACNlK,QAASP,KAAKhB,MAAM8J,cACpBsJ,YAAapS,KAAKhB,MAAMwK,gBACxBqR,aAAa,EACb3H,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASuK,cAI5B,CACN,GAAI1B,YACAlJ,MAAKG,MAAMsR,cACbvI,SAAWlJ,KAAKhB,MAAM0C,eAAe1B,KAAKhB,MAAM8b,kBAAkB9a,KAAKG,MAAMsR,aAAc,UAG5FkJ,aACEhU,MAAAC,cAAA,WACED,MAAAC,cAACyL,eACCzP,KAAK,cACL6H,MAAM,QACNlK,QAASP,KAAKhB,MAAMiK,WACpBmJ,YAAapS,KAAK6B,YAClBqR,UAAU,EACV3U,MAAOyB,KAAKG,MAAMsR,YAClBsJ,YAAY,uBAEdpU,MAAAC,cAACyL,eACCzP,KAAK,YACL6H,MAAM,cACNlK,QAAS2I,SACTkJ,YAAapS,KAAK6B,YAClBqR,UAAU,EACV3U,MAAOyB,KAAKG,MAAMyR,UAClBoJ,UAAUhb,KAAKG,MAAMsR,eAM7B,MACE9K,OAAAC,cAAC+D,aACC/H,KAAK,eACL7F,GAAG,eACH4W,SAAU,WACRhQ,OAAKoV,kBACLpV,OAAK3E,MAAMoD,uBAAwBmX,WAAY5V,OAAK3E,MAAMoD,gBAC5D4U,IAAI,QAEJrQ,MAAAC,cAAA,OAAKC,UAAU,OACbF,MAAAC,cAAA,OAAKC,UAAU,4BACZ8T,aACAC,0BAGJhB,SACDjT,MAAAC,cAAC0L,eACC7H,MAAM,SACN8H,WAAW,mCjB+rGX2F,qBiBz9GwBvR,MAAMI,UAiSxCmR,qBAAoB1L,ajB6rGnB3P,QAAQW,QiB1rGM0a,qBjB8rGT,SAASpb,OAAQD,QAASH,qBAE/B,YAgBA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YApBjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBkBt/GjiBsK,gBAAAvL,oBAAA,IlB0/GKwL,iBAAmB7K,uBAAuB4K,iBkBz/G/C4H,qBAAAnT,oBAAA,GlB6/GKoT,sBAAwBzS,uBAAuBwS,sBkBj/G9CoL,oBlBqgHqB,SAAUlb,kBkBpgHnC,QAAAkb,uBAAcxd,gBAAAuC,KAAAib,oBAAA,IAAAhb,OAAApC,2BAAAmC,MAAAib,oBAAArc,WAAAR,OAAA8B,eAAA+a,sBAAAhe,KAAA+C,MAAA,OAEZC,OAAK8B,aAAe9B,MAAK8B,aAAaV,KAAlBpB,OACpBA,MAAK4B,YAAc5B,MAAK4B,YAAYR,KAAjBpB,OACnBA,MAAKib,KAAOjb,MAAKib,KAAK7Z,KAAVpB,OAJAA,MlBouHb,MA/NAjC,WAAUid,oBAAqBlb,kBAa/BlB,aAAaoc,sBACX5b,IAAK,eACLd,MAAO,SkB7gHGqE,KAAMrE,OACjByB,KAAKhB,MAAM+C,aAAaa,KAAMrE,MAAOyB,KAAKhB,MAAMkb,elBghH/C7a,IAAK,cACLd,MAAO,SkB9gHEqE,KAAMrE,OAChByB,KAAKhB,MAAM6C,YAAYe,KAAMrE,MAAOyB,KAAKhB,MAAMkb,elBihH9C7a,IAAK,OACLd,MAAO,WkB9gHRyB,KAAKhB,MAAM6Z,YAAY7Y,KAAKhB,MAAMyZ,mBlBkhHjCpZ,IAAK,SACLd,MAAO,WkBhhHD,GAAAiE,QAAAxC,KACHmb,wBACAC,sBACAC,yBACAC,sBACAtb,MAAKhB,MAAM2Z,aACbwC,iBACExU,MAAAC,cAAA,QAAMC,UAAU,UACdF,MAAAC,cAAA,OACEC,UAAU,oBACVwC,QAASrJ,KAAKhB,MAAM2Z,YAFtB,MASJyC,eACEzU,MAAAC,cAAA,QAAMC,UAAU,gBAAhB,cAMA7G,KAAKhB,MAAM6Z,cACbwC,kBACE1U,MAAAC,cAAA,QAAMC,UAAU,UACdF,MAAAC,cAAA,OACEC,UAAU,oBACVwC,QAASrJ,KAAKkb,MAEdvU,MAAAC,cAAA,QAAMC,UAAU,oCAItByU,gBACE3U,MAAAC,cAAA,QAAMC,UAAU,gBACdF,MAAAC,cAAA,SACEC,UAAU,wBACVX,KAAK,SACLqV,IAAI,IACJC,IAAI,KACJrR,OAAQ4K,MAAO,GAAIjO,QAAS,UAC5BwS,SAAUtZ,KAAKhB,MAAM4Z,kBACrBra,MAAOyB,KAAKhB,MAAMyZ,iBARtB,UAeJ,IAAIgD,2BACJ,IAAIzb,KAAKhB,MAAM8Z,cAAe,CAC5B,GAAMnK,aACJF,MAAO,UACPG,WAAY,GACZxE,OAAQ,UACRsE,SAAU,GAGZ+M,qBACE9U,MAAAC,cAAA,QACEC,UAAU,6BACVwC,QAASrJ,KAAKhB,MAAM8Z,cACpB3O,MAAOwE,aAKb,GAAIlF,iBACJ,IAAIzJ,KAAKhB,MAAMoB,KACb,IAAK,GAAIrD,MAAMiD,MAAKhB,MAAMyK,cAElBzJ,KAAKhB,MAAMyK,cAAc1M,IAAI2e,cAC9B1b,KAAKhB,MAAMoB,KAAKC,SAASiD,QACxBvG,IAAMiD,KAAKhB,MAAMoB,KAAKC,SAASiD,SAEnCmG,cAAc1M,IAAMiD,KAAKhB,MAAMyK,cAAc1M,IAAzB,UAIxB0M,eAAgBzJ,KAAKhB,MAAM0C,eAAe1B,KAAKhB,MAAMyK,cAAe,OAGtE,OACE9C,OAAAC,cAAC+D,aACC/H,KAAK,kBAEL+D,MAAAC,cAAA,OAAKC,UAAU,OACbF,MAAAC,cAAA,OAAKC,UAAU,4BACbF,MAAAC,cAAA,WACED,MAAAC,cAACsL,gBACCtP,KAAK,UACL6H,MAAO,WAAazK,KAAKhB,MAAMjC,GAC/BqV,YAAapS,KAAK+B,aAClBmR,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMsB,UAAU4C,YAIlCyD,MAAAC,cAAA,OAAKC,UAAU,WAAWsD,OAAQwR,YAAY,EAAGC,UAAU,KACzDjV,MAAAC,cAAA,QACEC,UAAY7G,KAAKhB,MAAMwZ,UAAY,mCAAqC,iCACxErO,OAAQC,OAAQ,UAAWsE,SAAS,GAAIrB,SAAS,WAAYK,MAAM,IACnEmI,cAAY,WACZgG,cAAa,SAAW7b,KAAKhB,MAAMkb,WACnC7Q,QAAS,iBAAM7G,QAAKxD,MAAM0Z,eAAelW,OAAKxD,MAAMkb,eAErDuB,sBAGL9U,MAAAC,cAAA,OAAKC,UAAU,OACbF,MAAAC,cAAA,OAAKC,UAAU,aACfF,MAAAC,cAAA,OAAKC,UAAU,YACbF,MAAAC,cAAA,OAAK7J,GAAI,QAAUiD,KAAKhB,MAAMkb,WAAYrT,UAAU,YAClDF,MAAAC,cAACyL,eACCzP,KAAK,SACL6H,MAAM,gBACNlK,QAASkJ,cACT2I,YAAapS,KAAK6B,YAClBqR,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMqB,SAASiD,SAE7BqD,MAAAC,cAACyL,eACCzP,KAAK,SACL6H,MAAM,iBACNlK,QAASP,KAAKhB,MAAM+J,sBACpBqJ,YAAapS,KAAK+B,aAClBiV,IAAI,gBACJ9D,UAAU,EACV3U,MAAOyB,KAAKhB,MAAMsB,UAAUgD,SAE9BqD,MAAAC,cAAAsB,iBAAA1K,SACE6C,SAAUL,KAAKhB,MAAMqB,SACrBmJ,gBAAiBxJ,KAAK6B,YACtB6H,kBAAmB1J,KAAKhB,MAAM0K,kBAC9BC,uBAAwB3J,KAAKhB,MAAM2K,uBACnCE,mBAAoB7J,KAAKhB,MAAM6K,mBAC/BD,iBAAkB5J,KAAKhB,MAAM4K,mBAE/BjD,MAAAC,cAAAkJ,sBAAAtS,SACEse,iBAAkB9b,KAAK+B,aACvBL,eAAgB1B,KAAKhB,MAAM0C,eAC3BpB,UAAWN,KAAKhB,MAAMsB,UACtBwJ,qBAAsB9J,KAAKhB,MAAM8K,qBACjCC,oBAAqB/J,KAAKhB,MAAM+K,oBAChCzE,qBAAsBtF,KAAKhB,MAAMsG,0BAKzCqB,MAAAC,cAAA,OAAKC,UAAU,OACbF,MAAAC,cAAA,OAAKC,UAAU,aACbF,MAAAC,cAAA,OAAKC,UAAU,aACfF,MAAAC,cAAA,OAAKC,UAAU,mBACZsU,iBACAC,gBAEHzU,MAAAC,cAAA,OAAKC,UAAU,mBACZwU,kBACAC,wBlBijHLL,qBkBruHwBtU,MAAMI,UA6LxCkU,qBAAoBzO,alB6iHnB3P,QAAQW,QkB1iHMyd,qBlB8iHT,SAASne,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc;IAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBmB1vH3hBoe,UnB2wHW,SAAUhc,kBAGxB,QAASgc,aAGP,MAFAte,iBAAgBuC,KAAM+b,WAEfle,2BAA2BmC,MAAO+b,UAAUnd,WAAaR,OAAO8B,eAAe6b,YAAYpU,MAAM3H,KAAM4H,YA8HhH,MAnIA5J,WAAU+d,UAAWhc,kBAQrBlB,aAAakd,YACX1c,IAAK,YACLd,MAAO,SmBpxHAwQ,GAEN5K,EAAE,eAAe6X,KACfC,OAAU,oBACVC,aAAc,wEnBwxHjB7c,IAAK,aACLd,MAAO,SmBrxHCwQ,GAEP5K,EAAE,eAAe6X,KACfC,OAAU,oBAAqBC,aAAc,YnByxHhD7c,IAAK,uBACLd,MAAO,SmBtxHWwQ,GAEjB5K,EAAE,gBAAgB6X,KAChBC,OAAU,oBACVC,aAAc,wEnB0xHjB7c,IAAK,wBACLd,MAAO,SmBvxHYwQ,GAElB5K,EAAE,gBAAgB6X,KAAKC,OAAU,oBAAqBC,aAAc,YnB0xHrE7c,IAAK,SACLd,MAAO,WmBxxHD,GAAAiE,QAAAxC,KAEHmc,wBACCnc,KAAKhB,MAAMqB,cAAcY,YAAcjB,KAAKhB,MAAMsB,aACrD6b,eACExV,MAAAC,cAAA,OACEwV,aAAc,SAACrN,GAAD,MAAOvM,QAAK6Z,UAAUtN,IACpCuN,aAAc,SAACvN,GAAD,MAAOvM,QAAK+Z,WAAWxN,IACrClI,UAAU,6BAEVF,MAAAC,cAAA,OAAKC,UAAU,UAAf,MAQN,IAAI2V,yBACCxc,KAAKhB,MAAMqB,cAAca,cAC5Bsb,gBACE7V,MAAAC,cAAA,OACEwV,aAAcpc,KAAKyc,qBACnBH,aAActc,KAAK0c,sBACnB7V,UAAU,8BAEVF,MAAAC,cAAA,OAAKC,UAAU,UAAf,MAQN,IAAI8V,sBACC3c,KAAKhB,MAAMqB,cAAcc,WAC5Bwb,aACEhW,MAAAC,cAAA,OAAKC,UAAU,4BACZF,MAAAC,cAAA,OAAKC,UAAU,kBACbF,MAAAC,cAAA,OAAKC,UAAU,UAAf,OAOT,IAAI+V,aACAC,MAAQ,CACZ,KAAK,GAAI5d,KAAKe,MAAKhB,MAAMqB,SACb,eAANpB,GAA4B,gBAANA,GAA6B,aAANA,GAC/C4d,OAGJ,IAAIC,WAAYD,MAAQ,EAAI,IAAIA,MAAM,GAAK,EACvCE,WAAahI,MAAO+H,UAAU,IAGlC,OAFAF,MAAQjW,MAAAC,cAAA,OAAKC,UAAU,iBAAiBsD,MAAO4S,YAG7CpW,MAAAC,cAAA,OAAKC,UAAU,aACbF,MAAAC,cAAA,OAAKC,UAAU,qBACZsV,eACAK,gBAAkBI,KAAO,KACzBJ,gBACAG,aAAeC,KAAO,KACtBD,mBnBizHDZ,WmB/4HcpV,MAAMI,UAsG9BgV,WAAUvP,anB8yHT3P,QAAQW,QmB3yHMue,WnB+yHT,SAASjf,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBoBj6H3hBqf,kBpBi7HmB,SAAUjd,kBoBh7HjC,QAAAid,qBAAcvf,gBAAAuC,KAAAgd,kBAAA,IAAA/c,OAAApC,2BAAAmC,MAAAgd,kBAAApe,WAAAR,OAAA8B,eAAA8c,oBAAA/f,KAAA+C,MAAA,OAGZC,OAAKgd,kBAAoBhd,MAAKgd,kBAAkB5b,KAAvBpB,OAHbA,MpB29Hb,MA1CAjC,WAAUgf,kBAAmBjd,kBAW7BlB,aAAame,oBACX3d,IAAK,oBACLd,MAAO,WoBv7HRyB,KAAKhB,MAAM+C,aAAa,oBAAqB,MAC7C/B,KAAKhB,MAAM+C,aAAa,aAAc,MACtC/B,KAAKhB,MAAMqD,mBpB27HVhD,IAAK,SACLd,MAAO,WoBx7HR,GAAI2e,sBAaJ,OAZIld,MAAKhB,MAAMsB,UAAUgR,oBACvB4L,eACEvW,MAAAC,cAAA,OACEC,UAAU,uBACVuC,MAAM,qBACNC,QAASrJ,KAAKid,mBAEdtW,MAAAC,cAAA,QAAMC,UAAU,gCAMpBF,MAAAC,cAAA,WACGsW,oBpB+7HCF,mBoB59HsBrW,MAAMI,UAmCtCiW,mBAAkBxQ,WAChBlM,UAAWqG,MAAM+F,UAAUhI,OAAOkI,WAClC7K,aAAc4E,MAAM+F,UAAUyC,KAAKvC,WACnCvK,cAAesE,MAAM+F,UAAUyC,KAAKvC,YpB+7HrC/P,QAAQW,QoB57HMwf,mBpBg8HT,SAASlgB,OAAQD,QAASH,qBAE/B,YAgCA,SAASW,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQE,QAASF,KAEvF,QAASG,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YApCjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBqBv/HjiB6B,QAAA9C,oBAAA,GACAqL,UrB0/HgB1K,uBAAuBmC,SqB1/HvC9C,oBAAA,IrB8/HKsL,UAAY3K,uBAAuB0K,UqB7/HxCU,WAAA/L,oBAAA,IrBigIKgM,YAAcrL,uBAAuBoL,YqBhgI1C0U,aAAAzgB,oBAAA,IrBogIK0gB,cAAgB/f,uBAAuB8f,cqBngI5CtK,kBAAAnW,oBAAA,IrBugIKoW,mBAAqBzV,uBAAuBwV,mBqBtgIjDlK,mBAAAjM,oBAAA,IrB0gIKkM,oBAAsBvL,uBAAuBsL,oBqB9/H5C0U,iBrBkhIkB,SAAUtd,kBqBjhIhC,QAAAsd,oBAAc5f,gBAAAuC,KAAAqd,iBAAA,IAAApd,OAAApC,2BAAAmC,MAAAqd,iBAAAze,WAAAR,OAAA8B,eAAAmd,mBAAApgB,KAAA+C,MAAA,OAGZC,OAAK6T,KAAO7T,MAAK6T,KAAKzS,KAAVpB,OAHAA,MrBssIb,MApLAjC,WAAUqf,iBAAkBtd,kBAW5BlB,aAAawe,mBACXhe,IAAK,OACLd,MAAO,SqBzhILwQ,GACH,GAAIzO,WAAYqE,KAAKE,UAAU7E,KAAKhB,MAAMoB,KAAKoF,gBAAgBuJ,EAAEhQ,OAAOhC,IACxEgS,GAAEqF,aAAaC,QAAQ,aAAc/T,crB4hIpCjB,IAAK,SACLd,MAAO,WqB1hID,GAAAiE,QAAAxC,KACHuM,QACF5F,MAAAC,cAAAoB,UAAAxK,SACE8C,UAAWN,KAAKhB,MAAMsB,UACtBF,KAAMJ,KAAKhB,MAAMoB,KACjBG,QAASP,KAAKhB,MAAMuB,QACpBG,SAAUV,KAAKhB,MAAM0B,SACrBiB,KAAM3B,KAAKhB,MAAM2C,KACjBC,MAAO5B,KAAKhB,MAAM4C,MAClBF,eAAgB1B,KAAKhB,MAAM0C,eAC3BF,aAAcxB,KAAKhB,MAAMwC,aACzBD,cAAevB,KAAKhB,MAAMuC,cAC1BQ,aAAc/B,KAAKhB,MAAM+C,aACzBM,cAAerC,KAAKhB,MAAMqD,gBAI1Bib,YACF3W,MAAAC,cAAAwW,cAAA5f,SACE8C,UAAWN,KAAKhB,MAAMoB,KAAKE,UAC3Bid,iBAAkBvd,KAAKhB,MAAMoB,KAAKmd,iBAClChc,cAAevB,KAAKhB,MAAMuC,gBAI1BuF,cACA9G,MAAKhB,MAAMoB,KAAKE,UAAU6S,cAC5BrM,QACEH,MAAAC,cAAAkM,mBAAAtV,SACEyR,SAAUjP,KAAKhB,MAAMoB,KAAKoF,gBAC1B0O,MAAOlU,KAAKhB,MAAMuB,QAAQ8C,eAC1B+P,WAAYpT,KAAKhB,MAAMuB,QAAQwJ,oBAAoB/J,KAAKhB,MAAMoB,KAAKE,UAAU6S,aAC7EI,YAAavT,KAAKhB,MAAMuB,QAAQ+E,qBAAqBtF,KAAKhB,MAAMoB,KAAKE,UAAUvD,IAAMiD,KAAKhB,MAAMuB,QAAQ+E,qBAAqBtF,KAAKhB,MAAMoB,KAAKE,UAAUvD,IAAM,KAC7JsG,eAAgBrD,KAAKhB,MAAMuB,QAAQ8C,eACnC2F,eAAgBhJ,KAAKhB,MAAMuB,QAAQyI,eACnCxH,aAAcxB,KAAKhB,MAAMwC,aACzBD,cAAevB,KAAKhB,MAAMuC,cAC1Be,mBAAoBtC,KAAKhB,MAAMsD,qBAKrC,IAAIkb,iBACAC,iBAqCJ,OApCIzd,MAAKhB,MAAMoB,KAAKoF,kBAAiB,WACnC,GAAIyJ,UAAWzM,OAAKxD,MAAMoB,KAAKoF,gBADIyU,MAAA,SAE1ByD,OACP,GAAIzJ,YAEFA,MADEzR,OAAKxD,MAAMuB,QAAQ8C,eAAe4L,SAASyO,OAAOpa,QAAQC,QACrDf,OAAKxD,MAAMwC,aAGXgB,OAAKxD,MAAMuC,cAIhB0N,SAASyO,OAAOnY,WAClBiY,aAAa7H,KACXhP,MAAAC,cAAA,WACED,MAAAC,cAAA,KAAGyC,QAAS,iBAAI4K,MAAKhF,SAASyO,OAAOxa,WAClC+L,SAASyO,OAAOxa,SAFrB,MAIM+L,SAASyO,OAAOnY,aAIxBkY,eAAe9H,KACbhP,MAAAC,cAAA,KACEyC,QAAS,iBAAI4K,MAAKhF,SAASyO,OAAOxa,UAClCnG,GAAIkS,SAASyO,OAAO3gB,GACpBsY,WAAW,EACXC,YAAa9S,OAAKsR,MAEjB7E,SAASyO,OAAOxa,UA3BzB,KAAK,GAAIwa,SAASzO,UAAUgL,MAAnByD,UAmCT/W,MAAAC,cAAA,OAAK7J,GAAG,kBACN4J,MAAAC,cAAA,OAAKC,UAAU,oBACbF,MAAAC,cAAA,OAAKC,UAAU,mBACbF,MAAAC,cAAA,OAAKC,UAAU,WAAf,UAEEF,MAAAC,cAAA,OAAKC,UAAU,SACbF,MAAAC,cAAA,cAAS5G,KAAKhB,MAAMoB,KAAKE,UAAU4C,YAIzCyD,MAAAC,cAAAgC,oBAAApL,SACE8C,UAAWN,KAAKhB,MAAMsB,UACtByB,aAAc/B,KAAKhB,MAAM+C,aACzBM,cAAerC,KAAKhB,MAAMqD,gBAE5BsE,MAAAC,cAAA8B,YAAAlL,SACE8C,UAAWN,KAAKhB,MAAMoB,KAAKE,UAC3BwK,QAAS9K,KAAKhB,MAAMuB,QAAQuK,WAGhCnE,MAAAC,cAAA,OAAKC,UAAU,WACZ0F,QACD5F,MAAAC,cAAA,OAAKC,UAAU,qBACZC,QACAwW,aAEH3W,MAAAC,cAAA,OAAKC,UAAU,kBACbF,MAAAC,cAAA,OAAKC,UAAU,SACY,IAAxB2W,aAAate,QAA0C,IAA1Bue,eAAeve,OAAe,2BAA6B,MAE3FyH,MAAAC,cAAA,OAAKC,UAAU,SACY,IAAxB2W,aAAate,OAAe,sBAAwB,MAEpDse,aACuB,IAAvBA,aAAate,OAAcyH,MAAAC,cAAA,WAAQ,KACtCD,MAAAC,cAAA,OAAKC,UAAU,SACc,IAA1B4W,eAAeve,OAAe,wBAA0B,MAE1Due,sBrBokIHJ,kBqBvsIqB1W,MAAMI,UA2IrCsW,kBAAiB7Q,WACfmR,qBAAsBhX,MAAM+F,UAAUC,OAAOC,WAG/C,IAAIgR,mBAAoBjX,MAAMmG,cAAcuQ,iBAE5C3a,QAAO2a,iBAAmBA,iBAC1B3a,OAAOkb,kBAAoBA,kBrBikI1B/gB,QAAQW,QqB/jIM6f,kBrBmkIT,SAASvgB,OAAQD,SAEtB,YAQA,SAASY,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,KAAMb,MAAQ,IAAKa,KAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOd,MAAyB,gBAATA,OAAqC,kBAATA,MAA8Ba,KAAPb,KAElO,QAASe,WAAUC,SAAUC,YAAc,GAA0B,kBAAfA,aAA4C,OAAfA,WAAuB,KAAM,IAAIN,WAAU,iEAAoEM,YAAeD,UAASE,UAAYC,OAAOC,OAAOH,YAAcA,WAAWC,WAAaG,aAAeC,MAAON,SAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,aAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,SAAUC,YAAcD,SAASW,UAAYV,YAVjeE,OAAOgB,eAAevC,QAAS,cAC7B0B,OAAO,GAGT,IAAIM,cAAe,WAAc,QAASC,kBAAiBC,OAAQC,OAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,GAAIE,YAAaH,MAAMC,EAAIE,YAAWX,WAAaW,WAAWX,aAAc,EAAOW,WAAWT,cAAe,EAAU,SAAWS,cAAYA,WAAWV,UAAW,GAAML,OAAOgB,eAAeL,OAAQI,WAAWE,IAAKF,aAAiB,MAAO,UAAUxB,YAAa2B,WAAYC,aAAiJ,MAA9HD,aAAYR,iBAAiBnB,YAAYQ,UAAWmB,YAAiBC,aAAaT,iBAAiBnB,YAAa4B,aAAqB5B,gBsB1uI3hBkgB,YtB0vIa,SAAU9d,kBAG1B,QAAS8d,eAGP,MAFApgB,iBAAgBuC,KAAM6d,aAEfhgB,2BAA2BmC,MAAO6d,YAAYjf,WAAaR,OAAO8B,eAAe2d,cAAclW,MAAM3H,KAAM4H,YAmDpH,MAxDA5J,WAAU6f,YAAa9d,kBAQvBlB,aAAagf,cACXxe,IAAK,SACLd,MAAO,WsB9vIR,IAAK,GALEiE,QAAAxC,KAEH8d,QACAC,WAAa/d,KAAKhB,MAAMue,iBAAiBre,OAAS,EAH/C+a,OAIYhT,MAAMC,QAAQ,+BAJ1B,SAKEjI,GACP6e,KAAKnI,KACHhP,MAAAC,cAAA,QAAMC,UAAU,eACb,IACDF,MAAAC,cAAA,KAAGyC,QAAS,iBAAI7G,QAAKxD,MAAMuC,cAAciB,OAAKxD,MAAMue,iBAAiBte,GAAGiE,WACrEV,OAAKxD,MAAMue,iBAAiBte,GAAGiE,aAL/BjE,EAAE8e,WAAY9e,GAAG,EAAGA,IAAKgb,MAAzBhb,EAmBT,OATA6e,MAAKnI,KACHhP,MAAAC,cAAA,QAAMC,UAAU,eACb,IACDF,MAAAC,cAAA,KAAGyC,QAAS,iBAAI7G,QAAKxD,MAAMuC,cAAciB,OAAKxD,MAAMsB,UAAU4C,WAC3DlD,KAAKhB,MAAMsB,UAAU4C,WAM1ByD,MAAAC,cAAA,WACGkX,UtBuxICD,asBnzIgBlX,MAAMI,UAkChC8W,aAAYrR,atBsxIX3P,QAAQW,QsBnxIMqgB","file":"./modules/biobank/js/barcodeIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _specimen = __webpack_require__(2);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tvar _container = __webpack_require__(19);\n\t\n\tvar _container2 = _interopRequireDefault(_container);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global ReactDOM */\n\t\n\tvar BarcodeIndex = function (_React$Component) {\n\t  _inherits(BarcodeIndex, _React$Component);\n\t\n\t  function BarcodeIndex() {\n\t    _classCallCheck(this, BarcodeIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BarcodeIndex.__proto__ || Object.getPrototypeOf(BarcodeIndex)).call(this));\n\t\n\t    _this.state = {\n\t      data: {},\n\t      specimen: {},\n\t      container: {},\n\t      options: {},\n\t      files: {},\n\t      isLoaded: false,\n\t      editable: {\n\t        aliquotForm: false,\n\t        containerParentForm: false,\n\t        temperature: false,\n\t        quantity: false,\n\t        status: false,\n\t        location: false,\n\t        collection: false,\n\t        preparation: false,\n\t        analysis: false\n\t      }\n\t    };\n\t\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.loadOptions = _this.loadOptions.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.loadSpecimen = _this.loadSpecimen.bind(_this);\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.clone = _this.clone.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.edit = _this.edit.bind(_this);\n\t    _this.close = _this.close.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.revertSpecimen = _this.revertSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.revertContainer = _this.revertContainer.bind(_this);\n\t    _this.setFiles = _this.setFiles.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.addAnalysis = _this.addAnalysis.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveChildContainer = _this.saveChildContainer.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BarcodeIndex, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _this2 = this;\n\t\n\t      //TODO: when there is a single controller this will eventually be replaced\n\t      var url = window.location.href;\n\t      var name = 'barcode'.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t      var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t          results = regex.exec(url);\n\t      var barcode = decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t\n\t      this.loadOptions().then(function () {\n\t        return _this2.loadContainer(barcode).then(function () {\n\t          if (_this2.state.options.containerTypes[_this2.state.data.container.typeId].primary) {\n\t            console.log('am i here');\n\t            _this2.loadSpecimen(barcode).then(_this2.setState({ isLoaded: true }));\n\t            console.log('and here');\n\t          } else {\n\t            _this2.setState({ isLoaded: true });\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadOptions',\n\t    value: function loadOptions() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this3.fetch(_this3.props.optionsURL).then(function (data) {\n\t          var options = data;\n\t          _this3.setState({ options: options }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(barcode) {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this4.fetch(_this4.props.containerDataURL + barcode).then(function (data) {\n\t          var container = _this4.clone(data.container);\n\t          _this4.setState({ data: data, container: container }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimen',\n\t    value: function loadSpecimen(barcode) {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        console.log(_this5.props.specimenDataURL + barcode);\n\t        _this5.fetch(_this5.props.specimenDataURL + barcode).then(function (data) {\n\t          console.log(data);\n\t          var specimen = _this5.clone(data.specimen);\n\t          var container = _this5.clone(data.container);\n\t          _this5.setState({ data: data, specimen: specimen, container: container }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetch',\n\t    value: function fetch(url) {\n\t      return new Promise(function (resolve) {\n\t        $.ajax(url, {\n\t          dataType: 'json',\n\t          success: function success(data) {\n\t            resolve(data);\n\t          },\n\t          error: function error(_error, errorCode, errorMsg) {\n\t            console.error(_error, errorCode, errorMsg);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone(object) {\n\t      return JSON.parse(JSON.stringify(object));\n\t    }\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(object, attribute) {\n\t      var data = {};\n\t      for (var id in object) {\n\t        data[id] = object[id][attribute];\n\t      }\n\t\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'edit',\n\t    value: function edit(stateKey) {\n\t      this.close();\n\t      var editable = this.state.editable;\n\t      editable[stateKey] = true;\n\t      this.setState({ editable: editable });\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var editable = this.state.editable;\n\t      for (var key in editable) {\n\t        editable[key] = false;\n\t      }\n\t      this.state.data.specimen && this.revertSpecimen();\n\t      this.revertContainer();\n\t      this.setState({ editable: editable });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimen',\n\t    value: function revertSpecimen() {\n\t      var specimen = this.state.specimen;\n\t      specimen = this.clone(this.state.data.specimen);\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.state.container;\n\t      value ? container[name] = value : delete container[name];\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainer',\n\t    value: function revertContainer() {\n\t      var container = this.state.container;\n\t      container = this.clone(this.state.data.container);\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setFiles',\n\t    value: function setFiles(name, value) {\n\t      var files = this.state.files;\n\t      files[value.name] = value;\n\t      this.setState({ files: files });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addAnalysis',\n\t    value: function addAnalysis() {\n\t      var specimen = this.state.specimen;\n\t      specimen.analysis = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this6 = this;\n\t\n\t      var specimen = this.state.specimen;\n\t      this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(function () {\n\t        var data = _this6.state.data;\n\t        data.specimen = _this6.clone(_this6.state.specimen);\n\t        _this6.setState({ data: data });\n\t        _this6.close();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this7 = this;\n\t\n\t      var container = this.state.container;\n\t      this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(function () {\n\t        var data = _this7.state.data;\n\t        data.container = _this7.clone(_this7.state.container);\n\t        _this7.setState({ data: data });\n\t        _this7.close();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveChildContainer',\n\t    value: function saveChildContainer(container) {\n\t      var _this8 = this;\n\t\n\t      this.save(container, this.props.saveContainer).then(function () {\n\t        var options = _this8.state.options;\n\t        var data = _this8.state.data;\n\t        options.containerCoordinates[data.container.id][container.coordinate] = container.id;\n\t        if (data.childContainers[container.id].coordinate) {\n\t          delete options.containerCoordinates[data.container.id][data.childContainers[container.id].coordinate];\n\t        } else {\n\t          delete options.containerCoordinates[data.container.id].Unassigned.indexOf[data.container.id];\n\t        }\n\t\n\t        data.childContainers[container.id] = _this8.clone(container);\n\t        _this8.setState({ options: options, data: data });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(data, url, message) {\n\t      var _this9 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var dataObject = new FormData();\n\t        for (var file in _this9.state.files) {\n\t          dataOject.append(_this9.state.files[file].name, _this9.state.files[file]);\n\t        }\n\t        dataObject.append('data', JSON.stringify(data));\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: dataObject,\n\t          cache: false,\n\t          contentType: false,\n\t          processData: false,\n\t          success: function success() {\n\t            resolve();\n\t            message && swal(message, '', 'success');\n\t          },\n\t          error: function error(_error2, textStatus, errorThrown) {\n\t            var message = (_error2.responseJSON || {}).message || 'Submission error!';\n\t            swal(message, '', 'error');\n\t            console.error(_error2, textStatus, errorThrown);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(_Loader2.default, null);\n\t      }\n\t\n\t      var display = void 0;\n\t      var primary = this.state.options.containerTypes[this.state.data.container.typeId].primary;\n\t      switch (primary) {\n\t        case 0:\n\t          display = React.createElement(_container2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t        case 1:\n\t          display = React.createElement(_specimen2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            specimen: this.state.specimen,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setSpecimen: this.setSpecimen,\n\t            revertSpecimen: this.revertSpecimen,\n\t            saveSpecimen: this.saveSpecimen,\n\t            addPreparation: this.addPreparation,\n\t            addAnalysis: this.addAnalysis,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'barcode-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            display\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodeIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t  var request = loris.BaseURL + '/biobank/ajax/requestData.php?';\n\t  var submit = loris.BaseURL + '/biobank/ajax/submitData.php?';\n\t  var barcodeIndex = React.createElement(\n\t    'div',\n\t    { className: 'page=biobank' },\n\t    React.createElement(BarcodeIndex, {\n\t      specimenDataURL: request + 'action=getSpecimenData&barcode=',\n\t      containerDataURL: request + 'action=getContainerData&barcode=',\n\t      optionsURL: request + 'action=getFormOptions',\n\t      saveContainerURL: submit + 'action=saveContainer',\n\t      saveSpecimenURL: submit + 'action=saveSpecimen',\n\t      saveBarcodeListURL: submit + 'action=saveBarcodeList'\n\t    })\n\t  );\n\t  ReactDOM.render(barcodeIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains the React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"loader-container\" },\n\t        React.createElement(\"div\", { className: \"loader\" })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(3);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _globals = __webpack_require__(4);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(11);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(13);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(14);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(15);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(17);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(18);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      /**\n\t       * Specimen Form\n\t       */\n\t\n\t      /**\n\t       * Map Options for Form Select Elements\n\t       */\n\t      var specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      var addAliquotForm = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Make Aliquots'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this2.props.edit('aliquotForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            closeModal: this.props.close,\n\t            show: this.props.editable.aliquotForm\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.props.data,\n\t            specimen: this.props.specimen,\n\t            setSpecimenData: this.props.setSpecimen,\n\t            saveSpecimen: this.props.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.props.editable.collection) {\n\t        var _containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t        var specimenTypeAttributes = void 0;\n\t        //loops through data object to produce static elements\n\t        if (this.props.data.specimen.collection.data) {\n\t          var collectionData = this.props.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(collectionData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenTypeAttributes[_this2.props.data.specimen.typeId][key].name,\n\t              text: collectionData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.props.data.specimen.collection.quantity + ' ' + this.props.options.specimenUnits[this.props.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.props.editable.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.props.editable.collection ? null : function () {\n\t              _this2.props.edit('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.props.options.specimenProtocols) {\n\t        if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation Does Exist and the form is not in an edit state\n\t      if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        if (this.props.data.specimen.preparation.data) {\n\t          var preparationData = this.props.data.specimen.preparation.data;\n\t          specimenProtocolAttributes = Object.keys(preparationData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenProtocolAttributes[_this2.props.data.specimen.preparation.protocolId][key].name,\n\t              text: preparationData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('preparation');_this2.props.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.preparation ? null : function () {\n\t                _this2.props.edit('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.props.options.specimenMethods) {\n\t        if (this.props.options.specimenMethods[_id].typeId === this.props.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.props.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.props.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          files: this.props.files,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          setFiles: this.props.setFiles,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        //TODO: Make the below a separate component\n\t        if (this.props.data.specimen.analysis.data) {\n\t          var analysisData = this.props.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.keys(analysisData).map(function (key) {\n\t            if (_this2.props.options.attributeDatatypes[_this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].datatypeId].datatype === 'file') {\n\t              return React.createElement(LinkElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key],\n\t                href: loris.BaseURL + '/biobank/ajax/requestData.php?action=downloadFile&file=' + analysisData[key],\n\t                target: '_blank',\n\t                download: analysisData[key]\n\t              });\n\t            } else {\n\t              return React.createElement(StaticElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key]\n\t              });\n\t            }\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.analysis.locationId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('analysis');_this2.props.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.analysis ? null : function () {\n\t                _this2.props.edit('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.props.specimen,\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        setSpecimen: this.props.setSpecimen,\n\t        saveSpecimen: this.props.saveSpecimen,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            specimen: this.props.data.specimen,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\t\n\twindow.BiobankSpecimen = BiobankSpecimen;\n\twindow.RBiobankSpecimen = RBiobankSpecimen;\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      var _this2 = this;\n\t\n\t      if (this.props.throwWarning) {\n\t        console.log('not sure...');\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          _this2.props.closeModal();\n\t        });\n\t      } else {\n\t        this.props.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 850,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '70px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          \"div\",\n\t          { style: backdropStyle, onClick: this.closeModal },\n\t          React.createElement(\n\t            \"div\",\n\t            { style: modalStyle, onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              } },\n\t            React.createElement(\n\t              \"div\",\n\t              { style: titleStyle },\n\t              this.props.title,\n\t              React.createElement(\n\t                \"span\",\n\t                { style: glyphStyle, onClick: this.closeModal },\n\t                \"\\xD7\"\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { style: bodyStyle },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(3);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _quantityField = __webpack_require__(5);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(6);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(7);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(8);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.editable.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.edit('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                specimen: this.props.specimen,\n\t                units: units,\n\t                close: this.props.close,\n\t                setSpecimen: this.props.setSpecimen,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if ((this.props.data.specimen || {}).fTCycle !== undefined) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.editable.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  _this2.props.edit('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              container: this.props.container,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.editable.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              container: this.props.container,\n\t              stati: stati,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.editable.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              container: this.props.container,\n\t              centers: this.props.options.centers,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var barcode = this.props.data.parentSpecimenContainer.barcode;\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { onClick: function onClick() {\n\t              return _this2.props.loadSpecimen(barcode);\n\t            } },\n\t          barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var _barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode;\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                return _this2.props.loadContainer(_barcode);\n\t              } },\n\t            _barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerParentForm');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t          ),\n\t          React.createElement(\n\t            _Modal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              closeModal: this.props.close,\n\t              show: this.props.editable.containerParentForm\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            inputClass: 'col-xs-11',\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.quantity\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'unit',\n\t            inputClass: 'col-xs-11',\n\t            options: this.props.units,\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveSpecimen,\n\t            columnSize: 'col-xs-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimen: React.PropTypes.func,\n\t  close: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.centers,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: this.props.close\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * */\n\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    return _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.props.setContainer,\n\t        required: true,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainer: this.props.setContainer\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var load = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\t\n\t        load(this.props.children[this.props.coordinates[coordinate]].barcode);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      this.props.saveChildContainer(container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // This is eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = null;\n\t\n\t            if (!this.props.select) {\n\t              // This double if statement doesn't sound great\n\t              if (this.props.coordinates) {\n\t                if (this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node occupied';\n\t                  dataHtml = 'true';\n\t                  dataToggle = 'tooltip';\n\t                  dataPlacement = 'top';\n\t                  tooltipTitle = '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                  draggable = 'true';\n\t                  onDragStart = this.drag;\n\t                  onDragOver = null;\n\t                  onDrop = null;\n\t                  onClick = this.redirectURL;\n\t                }\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this2.props.setContainer('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this2.props.setContainer('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  // TODO: --- This is currently not working ---\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            {\n\t              className: 'row',\n\t              style: rowStyle\n\t            },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'display' },\n\t        display\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(12);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.setCollection = _this.setCollection.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollection',\n\t    value: function setCollection(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollection('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = React.createElement(_customFields2.default, {\n\t              fields: specimenTypeFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.collection.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollection,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimen: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Custom Attribute Fields\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\tvar CustomFields = function (_React$Component) {\n\t  _inherits(CustomFields, _React$Component);\n\t\n\t  function CustomFields() {\n\t    _classCallCheck(this, CustomFields);\n\t\n\t    return _possibleConstructorReturn(this, (CustomFields.__proto__ || Object.getPrototypeOf(CustomFields)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CustomFields, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var fields = this.props.fields;\n\t      var attributeFields = Object.keys(fields).map(function (attribute) {\n\t\n\t        var datatype = _this2.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n\t        if (datatype === 'text' || datatype === 'number') {\n\t          if (fields[attribute]['refTableId'] === null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t\n\t          if (fields[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fields[attribute]['refTableId']],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === 'datetime') {\n\t          return React.createElement(DataElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.object[attribute]\n\t          });\n\t        }\n\t\n\t        // Do not present the possibility of uploading if file is already set\n\t        // File must instead be deleted or overwritten.\n\t        if (datatype === 'file' && !(_this2.props.data || {})[attribute]) {\n\t          return React.createElement(FileElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.files[_this2.props.object[attribute]]\n\t          });\n\t        }\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        attributeFields\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CustomFields;\n\t}(React.Component);\n\t\n\tCustomFields.propTypes = {\n\t  fields: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  object: React.PropTypes.object.isRequired,\n\t  setData: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = CustomFields;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(12);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = React.createElement(_customFields2.default, {\n\t              fields: specimenProtocolFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.preparation.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(12);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      if (value instanceof File) {\n\t        data[name] = value.name;\n\t        this.props.setFiles(name, value);\n\t      } else {\n\t        data[name] = value;\n\t        this.setAnalysis('data', data);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.analysis) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = React.createElement(_customFields2.default, {\n\t              fields: specimenMethodFieldsObject,\n\t              files: this.props.files,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.analysis.data,\n\t              data: (((this.props.data || {}).specimen || {}).analysis || {}).data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          fileUpload: true,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(16);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      candidateId: null,\n\t      sessionId: null,\n\t      centerId: null,\n\t      barcodeList: { 1: { specimen: { collection: {} }, container: {} } },\n\t      count: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.addBarcode = _this.addBarcode.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyBarcode = _this.copyBarcode.bind(_this);\n\t    _this.removeBarcode = _this.removeBarcode.bind(_this);\n\t    _this.saveBarcodeList = _this.saveBarcodeList.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveBarcodeList',\n\t    value: function saveBarcodeList() {\n\t      var _this2 = this;\n\t\n\t      var barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var barcode in barcodeList) {\n\t        //set container values\n\t        var container = barcodeList[barcode].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.locationId = this.state.centerId;\n\t        container.originId = this.state.centerId;\n\t\n\t        //set specimen values\n\t        var specimen = barcodeList[barcode].specimen;\n\t        specimen.candidateId = this.state.candidateId;\n\t        specimen.sessionId = this.state.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.locationId = this.state.centerId;\n\t        if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n\t          specimen.fTCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: these will eventually be higher level states.\n\t        if (this.props.data) {\n\t          specimen.candidateId = this.props.data.candidate.CandID;\n\t          specimen.sessionId = this.props.data.session.ID;\n\t          specimen.parentSpecimenId = this.props.data.specimen.id;\n\t          specimen.collection.locationId = this.props.data.container.locationId;\n\t          container.locationId = this.props.data.container.locationId;\n\t          container.originId = this.props.data.container.locationId;\n\t        }\n\t\n\t        barcodeList[barcode].container = container;\n\t        barcodeList[barcode].specimen = specimen;\n\t      }\n\t\n\t      this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(function () {\n\t        _this2.props.refreshParent();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var centerId = this.state.centerId;\n\t      var candidateId = this.state.candidateId;\n\t      var sessionId = this.state.sessionId;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      if (name === 'candidateId') {\n\t        candidateId = value;\n\t      } else if (name === 'sessionId') {\n\t        sessionId = value;\n\t        centerId = this.props.sessionCenters[sessionId].centerId;\n\t      } else {\n\t        //this is eliminate values if specimen type is changed\n\t        if (name === 'typeId') {\n\t          barcodeList[key].specimen = { collection: {} };\n\t        }\n\t        barcodeList[key].specimen[name] = value;\n\t      }\n\t\n\t      this.setState({ barcodeList: barcodeList, centerId: centerId, candidateId: candidateId, sessionId: sessionId });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var barcodeList = this.state.barcodeList;\n\t      barcodeList[key].container[name] = value;\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'addBarcode',\n\t    value: function addBarcode() {\n\t      var barcodeList = this.state.barcodeList;\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t\n\t      barcodeList[count + 1] = { specimen: {}, container: { collection: {} } };\n\t      collapsed[count + 1] = true;\n\t      count = count + 1;\n\t\n\t      this.setState({ barcodeList: barcodeList, collapsed: collapsed, count: count });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyBarcode',\n\t    value: function copyBarcode(key) {\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t      var nextKey = count + 1;\n\t      var barcodeList = this.state.barcodeList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key]));\n\t        delete barcodeList[nextKey].container.barcode;\n\t        collapsed[nextKey] = true;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList,\n\t        count: nextKey,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeBarcode',\n\t    value: function removeBarcode(key) {\n\t      var barcodeList = this.state.barcodeList;\n\t      delete barcodeList[key];\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(_barcodeForm2.default, {\n\t            data: _this3.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this3.state.collapsed[key],\n\t            toggleCollapse: _this3.toggleCollapse,\n\t            mapFormOptions: _this3.props.mapFormOptions,\n\t            container: _this3.state.barcodeList[key].container || null,\n\t            specimen: _this3.state.barcodeList[key].specimen || null,\n\t            removeBarcode: barcodeListArray.length !== 1 ? function () {\n\t              return _this3.removeBarcode(key);\n\t            } : null,\n\t            addBarcode: i == barcodeListArray.length ? _this3.addBarcode : null,\n\t            setCopyMultiplier: _this3.setCopyMultiplier,\n\t            copyMultiplier: _this3.state.copyMultiplier,\n\t            copyBarcode: i == barcodeListArray.length && _this3.state.barcodeList[key] ? _this3.copyBarcode : null,\n\t            setContainer: _this3.setContainer,\n\t            setSpecimen: _this3.setSpecimen,\n\t            onChange: _this3.props.onChange,\n\t            specimenTypes: _this3.props.specimenTypes,\n\t            containerTypesPrimary: _this3.props.containerTypesPrimary,\n\t            containersNonPrimary: _this3.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this3.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this3.props.attributeDatatypes,\n\t            attributeOptions: _this3.props.attributeOptions,\n\t            capacities: _this3.props.capacities,\n\t            containerDimensions: _this3.props.containerDimensions,\n\t            containerCoordinates: _this3.props.containerCoordinates,\n\t            specimenTypeUnits: _this3.props.specimenTypeUnits,\n\t            units: _this3.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimenData,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.state.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.candidateId,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.sessionId,\n\t            disabled: this.state.candidateId ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: function onSubmit() {\n\t            _this3.saveBarcodeList();\n\t            _this3.props.saveSpecimen instanceof Function && _this3.props.saveSpecimen();\n\t          },\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(11);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimen(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyBarcode(this.props.copyMultiplier);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var addBarcodeButton = void 0;\n\t      var addBarcodeText = void 0;\n\t      var copyBarcodeButton = void 0;\n\t      var copyBarcodeText = void 0;\n\t      if (this.props.addBarcode) {\n\t        addBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcode\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcode) {\n\t        copyBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeButton = void 0;\n\t      if (this.props.removeBarcode) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcode,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeBarcodeButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                setSpecimenData: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainerData: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeButton,\n\t              addBarcodeText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeButton,\n\t              copyBarcodeText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\t//TODO: revise this component once Shipments are enabled.\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle() {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    return _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // Create Collection Node\n\t      var collectionNode = void 0;\n\t      if ((this.props.specimen || {}).collection || this.props.container) {\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Preparation Node\n\t      var preparationNode = void 0;\n\t      if ((this.props.specimen || {}).preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Analysis Node\n\t      var analysisNode = void 0;\n\t      if ((this.props.specimen || {}).analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'A'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Lines\n\t      var line = void 0;\n\t      var nodes = 0;\n\t      for (var i in this.props.specimen) {\n\t        if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n\t          nodes++;\n\t        }\n\t      }\n\t      var lineWidth = nodes > 1 ? 60 / (nodes - 1) : 0;\n\t      var lineStyle = { width: lineWidth + '%' };\n\t      line = React.createElement('div', { className: 'lifecycle-line', style: lineStyle });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode ? line : null,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainer('parentContainerId', null);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(4);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _lifeCycle = __webpack_require__(17);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _barcodePath = __webpack_require__(20);\n\t\n\tvar _barcodePath2 = _interopRequireDefault(_barcodePath);\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tvar _containerCheckout = __webpack_require__(18);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankContainer */\n\t\n\t/**\n\t * Biobank Container\n\t *\n\t * Fetches data corresponding to a given Container from Loris backend and\n\t * displays a page allowing viewing of meta information of the container\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainer = function (_React$Component) {\n\t  _inherits(BiobankContainer, _React$Component);\n\t\n\t  function BiobankContainer() {\n\t    _classCallCheck(this, BiobankContainer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainer.__proto__ || Object.getPrototypeOf(BiobankContainer)).call(this));\n\t\n\t    _this.drag = _this.drag.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainer, [{\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      var barcodePath = React.createElement(_barcodePath2.default, {\n\t        container: this.props.data.container,\n\t        parentContainers: this.props.data.parentContainers,\n\t        loadContainer: this.props.loadContainer\n\t      });\n\t\n\t      var display = void 0;\n\t      if (this.props.data.container.dimensionId) {\n\t        display = React.createElement(_containerDisplay2.default, {\n\t          children: this.props.data.childContainers,\n\t          types: this.props.options.containerTypes,\n\t          dimensions: this.props.options.containerDimensions[this.props.data.container.dimensionId],\n\t          coordinates: this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null,\n\t          containerTypes: this.props.options.containerTypes,\n\t          containerStati: this.props.options.containerStati,\n\t          loadSpecimen: this.props.loadSpecimen,\n\t          loadContainer: this.props.loadContainer,\n\t          saveChildContainer: this.props.saveChildContainer\n\t        });\n\t      }\n\t\n\t      var listAssigned = [];\n\t      var listUnassigned = [];\n\t      if (this.props.data.childContainers) {\n\t        (function () {\n\t          var children = _this2.props.data.childContainers;\n\t\n\t          var _loop = function _loop(child) {\n\t            var load = void 0;\n\t            if (_this2.props.options.containerTypes[children[child].typeId].primary) {\n\t              load = _this2.props.loadSpecimen;\n\t              //url = loris.BaseURL+\"/biobank/specimen/?barcode=\"+children[child].barcode;\n\t            } else {\n\t              load = _this2.props.loadContainer;\n\t              //url = loris.BaseURL+\"/biobank/container/?barcode=\"+children[child].barcode;\n\t            }\n\t\n\t            if (children[child].coordinate) {\n\t              listAssigned.push(React.createElement(\n\t                'div',\n\t                null,\n\t                React.createElement(\n\t                  'a',\n\t                  { onClick: function onClick() {\n\t                      return load(children[child].barcode);\n\t                    } },\n\t                  children[child].barcode\n\t                ),\n\t                'at ',\n\t                children[child].coordinate\n\t              ));\n\t            } else {\n\t              listUnassigned.push(React.createElement(\n\t                'a',\n\t                {\n\t                  onClick: function onClick() {\n\t                    return load(children[child].barcode);\n\t                  },\n\t                  id: children[child].id,\n\t                  draggable: true,\n\t                  onDragStart: _this2.drag\n\t                },\n\t                children[child].barcode\n\t              ));\n\t            }\n\t          };\n\t\n\t          for (var child in children) {\n\t            _loop(child);\n\t          }\n\t        })();\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'container-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(_containerCheckout2.default, {\n\t            container: this.props.container,\n\t            setContainer: this.props.setContainer,\n\t            saveContainer: this.props.saveContainer\n\t          }),\n\t          React.createElement(_lifeCycle2.default, {\n\t            container: this.props.data.container,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'display-container' },\n\t            display,\n\t            barcodePath\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-list' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length !== 0 ? 'Assigned Containers' : null\n\t            ),\n\t            listAssigned,\n\t            listAssigned.length !== 0 ? React.createElement('br', null) : null,\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listUnassigned.length !== 0 ? 'Unassigned Containers' : null\n\t            ),\n\t            listUnassigned\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainer;\n\t}(React.Component);\n\t\n\tBiobankContainer.propTypes = {\n\t  containerPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankContainer = React.createFactory(BiobankContainer);\n\t\n\twindow.BiobankContainer = BiobankContainer;\n\twindow.RBiobankContainer = RBiobankContainer;\n\t\n\texports.default = BiobankContainer;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Path\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar BarcodePath = function (_React$Component) {\n\t  _inherits(BarcodePath, _React$Component);\n\t\n\t  function BarcodePath() {\n\t    _classCallCheck(this, BarcodePath);\n\t\n\t    return _possibleConstructorReturn(this, (BarcodePath.__proto__ || Object.getPrototypeOf(BarcodePath)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BarcodePath, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var path = [];\n\t      var pathLength = this.props.parentContainers.length - 1;\n\t      var containerURL = loris.BaseURL + '/biobank/container/?barcode=';\n\t\n\t      var _loop = function _loop(i) {\n\t        path.push(React.createElement(\n\t          'span',\n\t          { className: 'barcodePath' },\n\t          '/',\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                return _this2.props.loadContainer(_this2.props.parentContainers[i].barcode);\n\t              } },\n\t            _this2.props.parentContainers[i].barcode\n\t          )\n\t        ));\n\t      };\n\t\n\t      for (var i = pathLength; i >= 0; i--) {\n\t        _loop(i);\n\t      }\n\t      path.push(React.createElement(\n\t        'span',\n\t        { className: 'barcodePath' },\n\t        '/',\n\t        React.createElement(\n\t          'a',\n\t          { onClick: function onClick() {\n\t              return _this2.props.loadContainer(_this2.props.container.barcode);\n\t            } },\n\t          this.props.container.barcode\n\t        )\n\t      ));\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        path\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodePath;\n\t}(React.Component);\n\t\n\tBarcodePath.propTypes = {};\n\t\n\texports.default = BarcodePath;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/barcodeIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 74e54207929018b338c6","/* global ReactDOM */\n\nimport Loader from 'Loader';\nimport BiobankSpecimen from './specimen';\nimport BiobankContainer from './container';\n\n\nclass BarcodeIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: {},\n      specimen: {},\n      container: {},\n      options: {},\n      files: {},\n      isLoaded: false,\n      editable: {\n        aliquotForm: false,\n        containerParentForm: false,\n        temperature: false,\n        quantity: false,\n        status: false,\n        location: false,\n        collection: false,\n        preparation: false,\n        analysis: false,\n      }\n    };\n\n    this.fetch              = this.fetch.bind(this);\n    this.loadOptions        = this.loadOptions.bind(this);\n    this.loadContainer      = this.loadContainer.bind(this);\n    this.loadSpecimen       = this.loadSpecimen.bind(this);\n    this.fetch              = this.fetch.bind(this);\n    this.clone              = this.clone.bind(this);\n    this.mapFormOptions     = this.mapFormOptions.bind(this);\n    this.edit               = this.edit.bind(this);\n    this.close              = this.close.bind(this);\n    this.setSpecimen        = this.setSpecimen.bind(this);\n    this.revertSpecimen     = this.revertSpecimen.bind(this);\n    this.setContainer       = this.setContainer.bind(this);\n    this.revertContainer    = this.revertContainer.bind(this);\n    this.setFiles           = this.setFiles.bind(this)\n    this.addPreparation     = this.addPreparation.bind(this);\n    this.addAnalysis        = this.addAnalysis.bind(this);\n    this.saveSpecimen       = this.saveSpecimen.bind(this);\n    this.saveContainer      = this.saveContainer.bind(this);\n    this.saveChildContainer = this.saveChildContainer.bind(this);\n    this.save               = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    //TODO: when there is a single controller this will eventually be replaced\n    let url = window.location.href;\n    let name = 'barcode'.replace(/[\\[\\]]/g, \"\\\\$&\");\n    let regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n    let barcode = decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\n    this.loadOptions().then(() => this.loadContainer(barcode).then(\n      () => {\n        if (this.state.options.containerTypes[this.state.data.container.typeId].primary) {\n          console.log('am i here');\n          this.loadSpecimen(barcode).then(this.setState({isLoaded: true}));\n          console.log('and here');\n        } else {\n          this.setState({isLoaded: true});\n        }\n      }\n    ));\n  }\n\n  loadOptions() {\n    return new Promise(resolve => {\n      this.fetch(this.props.optionsURL).then(\n        data => {\n          let options = data;\n          this.setState({options}, resolve());\n        }\n      );\n    });\n  }\n\n  loadContainer(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerDataURL+barcode).then(\n        data => {\n          let container = this.clone(data.container);\n          this.setState({data, container}, resolve());\n        }\n      );\n    });\n  }\n\n  loadSpecimen(barcode) {\n    return new Promise(resolve => {\n      console.log(this.props.specimenDataURL+barcode);\n      this.fetch(this.props.specimenDataURL+barcode).then(\n        data => {\n          console.log(data);\n          let specimen = this.clone(data.specimen);\n          let container = this.clone(data.container);\n          this.setState({data, specimen, container}, resolve());\n        }\n      );\n    });\n  }\n\n  fetch(url) {\n    return new Promise(resolve => {\n      $.ajax(url, {\n        dataType: 'json',\n        success: data => {\n          resolve(data);\n        },\n        error: (error, errorCode, errorMsg) => {\n          console.error(error, errorCode, errorMsg);\n        }\n      });\n    });\n  }\n\n  clone(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  mapFormOptions(object, attribute) {\n    let data = {};\n    for (let id in object) {\n      data[id] = object[id][attribute];\n    }\n\n    return data;\n  }\n\n  edit(stateKey) {\n    this.close();\n    let editable = this.state.editable;\n    editable[stateKey] = true;\n    this.setState({editable});\n  }\n\n  close() {\n    let editable = this.state.editable;\n    for (let key in editable) {\n      editable[key] = false;\n    }\n    this.state.data.specimen && this.revertSpecimen();\n    this.revertContainer();\n    this.setState({editable});\n\n  }\n\n  setSpecimen(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  revertSpecimen() {\n    let specimen = this.state.specimen;\n    specimen = this.clone(this.state.data.specimen);\n    this.setState({specimen});\n  }\n\n  setContainer(name, value) {\n    let container = this.state.container;\n    value ? container[name] = value : delete container[name]; \n    this.setState({container});\n  }\n\n  revertContainer() {\n    let container = this.state.container;\n    container = this.clone(this.state.data.container);\n    this.setState({container});\n  }\n\n  setFiles(name, value) {\n    let files = this.state.files;\n    files[value.name] = value;\n    this.setState({files});\n  }\n  \n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  addAnalysis() {\n    let specimen = this.state.specimen;\n    specimen.analysis = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  saveSpecimen() {\n    let specimen = this.state.specimen;\n    this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.specimen = this.clone(this.state.specimen);\n        this.setState({data});\n        this.close();\n      }\n    );\n  }\n\n  saveContainer() {\n    let container = this.state.container;\n    this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.container = this.clone(this.state.container);\n        this.setState({data});\n        this.close();\n      }\n    );\n  }\n  \n  saveChildContainer(container) {\n    this.save(container, this.props.saveContainer).then(\n      () => {\n        let options = this.state.options;\n        let data    = this.state.data;\n        options.containerCoordinates[data.container.id][container.coordinate] = container.id;\n        if (data.childContainers[container.id].coordinate) {\n          delete options.containerCoordinates[data.container.id][data.childContainers[container.id].coordinate];\n        } else {\n          delete options.containerCoordinates[data.container.id].Unassigned.indexOf[data.container.id];\n        }\n\n        data.childContainers[container.id] = this.clone(container);\n        this.setState({options, data});\n      }\n    )\n  }\n\n  save(data, url, message) {\n    return new Promise(resolve => {\n      let dataObject = new FormData();\n      for (let file in this.state.files) {\n        dataOject.append(this.state.files[file].name, this.state.files[file]);\n      }\n      dataObject.append('data', JSON.stringify(data));\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: dataObject,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: () => {\n          resolve();\n          message && swal(message, '', 'success');\n        },\n        error: (error, textStatus, errorThrown) => {\n          let message = (error.responseJSON||{}).message || 'Submission error!';\n          swal(message, '', 'error');\n          console.error(error, textStatus, errorThrown);\n        }\n      });\n    });\n  }\n\n  render() {\n    if (this.state.error !== undefined) {\n      return (\n        <div className='alert alert-danger text-center'>\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    if (!this.state.isLoaded) {\n      return (\n        <Loader/>\n      );\n    }\n\n    let display;\n    let primary = this.state.options.containerTypes[this.state.data.container.typeId].primary;\n      switch (primary) {\n        case 0:\n          display = (\n            <BiobankContainer\n              data={this.state.data}\n              options={this.state.options}\n              container={this.state.container}\n              editable={this.state.editable}\n              loadContainer={this.loadContainer}\n              loadSpecimen={this.loadSpecimen}\n              mapFormOptions={this.mapFormOptions}\n              setContainer={this.setContainer}\n              revertContainer={this.revertContainer}\n              saveContainer={this.saveContainer}\n              saveChildContainer={this.saveChildContainer}\n              edit={this.edit}\n              close={this.close}\n            />\n          );\n          break;\n        case 1: \n          display = (\n            <BiobankSpecimen\n              data={this.state.data}\n              options={this.state.options}\n              container={this.state.container}\n              specimen={this.state.specimen}\n              editable={this.state.editable}\n              loadContainer={this.loadContainer}\n              loadSpecimen={this.loadSpecimen}\n              mapFormOptions={this.mapFormOptions}\n              setContainer={this.setContainer}\n              revertContainer={this.revertContainer}\n              saveContainer={this.saveContainer}\n              setSpecimen={this.setSpecimen}\n              revertSpecimen={this.revertSpecimen}\n              saveSpecimen={this.saveSpecimen}\n              addPreparation={this.addPreparation}\n              addAnalysis={this.addAnalysis}\n              saveChildContainer={this.saveChildContainer}\n              edit={this.edit}\n              close={this.close}\n            />\n          );\n          break;\n      }\n\n    return (\n      <div className=\"barcode-page\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            {display}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n$(function() {\n  const request = `${loris.BaseURL}/biobank/ajax/requestData.php?`;\n  const submit = `${loris.BaseURL}/biobank/ajax/submitData.php?`;\n  const barcodeIndex = (\n    <div className='page=biobank'>\n      <BarcodeIndex\n        specimenDataURL={`${request}action=getSpecimenData&barcode=`}\n        containerDataURL={`${request}action=getContainerData&barcode=`}\n        optionsURL={`${request}action=getFormOptions`}\n        saveContainerURL={`${submit}action=saveContainer`}\n        saveSpecimenURL={`${submit}action=saveSpecimen`}\n        saveBarcodeListURL={`${submit}action=saveBarcodeList`}\n      />\n    </div>\n  );\n  ReactDOM.render(barcodeIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeIndex.js","/**\n * This file contains the React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  render() {\n    return (\n      <div className='loader-container'>\n        <div className=\"loader\"/>\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","/* exported RBiobankSpecimen */\n\nimport Modal from 'Modal';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n\n  render() {\n    /**\n     * Specimen Form\n     */\n\n    /**\n     * Map Options for Form Select Elements\n     */      \n    let specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n    let containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n    let candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n    let sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\n    let addAliquotForm = (\n      <div\n        className='action'\n        title='Make Aliquots'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('aliquotForm')}}\n        >\n          <span>+</span>  \n        </div>\n        <Modal\n          title=\"Add Aliquots\"\n          closeModal={this.props.close}\n          show={this.props.editable.aliquotForm}\n        >\n          <BiobankSpecimenForm\n            data={this.props.data}\n            specimen={this.props.specimen}\n            setSpecimenData={this.props.setSpecimen}\n            saveSpecimen={this.props.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.props.editable.collection) {\n      let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.props.options.specimenTypeUnits}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    } else {\n      let specimenTypeAttributes;\n      //loops through data object to produce static elements\n      if (this.props.data.specimen.collection.data) {\n        let collectionData = this.props.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(collectionData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenTypeAttributes[this.props.data.specimen.typeId][key].name}\n              text={collectionData[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.props.data.specimen.collection.quantity+' '+\n              this.props.options.specimenUnits[\n                this.props.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.collection.locationId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.props.editable.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.props.editable.collection ? null : () => {this.props.edit('collection')}}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.props.options.specimenProtocols) {\n      if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n        specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.props.editable.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation Does Exist and the form is not in an edit state\n    if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      if (this.props.data.specimen.preparation.data) {\n        let preparationData = this.props.data.specimen.preparation.data;\n        specimenProtocolAttributes = Object.keys(preparationData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenProtocolAttributes[this.props.data.specimen.preparation.protocolId][key].name}\n              text={preparationData[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      preparationPanel = (\n        <div\n          className='panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('preparation'); this.props.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n      preparationPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.preparation ? null : () => {this.props.edit('preparation')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.props.options.specimenMethods) {\n      if (this.props.options.specimenMethods[id].typeId === this.props.data.specimen.typeId) {\n        specimenMethods[id] = this.props.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.props.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.props.editable.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          files={this.props.files}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          setFiles={this.props.setFiles}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      //TODO: Make the below a separate component\n      if (this.props.data.specimen.analysis.data) {\n      let analysisData = this.props.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.keys(analysisData).map((key) => {\n          if (this.props.options.attributeDatatypes[\n            this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].datatypeId\n          ].datatype === 'file') {\n            return (\n              <LinkElement\n               label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n               text={analysisData[key]}\n               href={loris.BaseURL+'/biobank/ajax/requestData.php?action=downloadFile&file='+analysisData[key]}\n               target={'_blank'}\n               download={analysisData[key]}\n              />\n            );\n          } else {\n            return ( \n              <StaticElement\n                label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n                text={analysisData[key]}\n              />\n            );\n          }\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.analysis.locationId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('analysis'); this.props.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n      analysisPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.analysis ? null : () => {this.props.edit('analysis')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.props.specimen}\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        setSpecimen={this.props.setSpecimen}\n        saveSpecimen={this.props.saveSpecimen}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.props.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.props.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            specimen={this.props.data.specimen}\n            centers={this.props.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n      </div>\n    ); \n  }\n}\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\nwindow.BiobankSpecimen = BiobankSpecimen;\nwindow.RBiobankSpecimen = RBiobankSpecimen;\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    if (this.props.throwWarning) {                                              \n      console.log('not sure...');\n      swal({                                                                    \n        title: \"Are You Sure?\",                                                 \n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",                                                        \n        showCancelButton: true,                                                 \n        confirmButtonText: 'Proceed',                                           \n        cancelButtonText: 'Cancel',                                             \n      },                                                                        \n      () => {                                                              \n        this.props.closeModal();                                                        \n      });                                                            \n    } else {                                                                    \n      this.props.closeModal();\n    }                                                                           \n  }   \n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 850,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '70px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.closeModal}>\n          <div style={modalStyle} onClick={e => {e.stopPropagation()}}>\n            <div style={titleStyle}>\n              {this.props.title}\n              <span style={glyphStyle} onClick={this.closeModal}>\n                ×\n              </span>\n            </div>\n            <div style={bodyStyle}>\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nModal.defaultProps = {\n  throwWarning: true,\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","import Modal from 'Modal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.editable.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.edit('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                specimen={this.props.specimen}\n                units={units}\n                close={this.props.close}\n                setSpecimen={this.props.setSpecimen}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if ((this.props.data.specimen||{}).fTCycle !== undefined) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.editable.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => {this.props.edit('temperature')}}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              container={this.props.container}                                  \n              close={this.props.close}                     \n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.editable.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              container={this.props.container}                                  \n              stati={stati}\n              close={this.props.close}\n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.editable.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              container={this.props.container}\n              centers={this.props.options.centers}\n              close={this.props.close}                        \n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let barcode = this.props.data.parentSpecimenContainer.barcode;\n      let parentSpecimenFieldValue = (\n        <a onClick={()=>this.props.loadSpecimen(barcode)}>\n          {barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a onClick={()=>this.props.loadContainer(barcode)}>                                                             \n            {barcode}\n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <span                                                               \n            className='action-button update'                                  \n            onClick={() => {this.props.edit('containerParentForm')}}\n          >                                                                   \n            <span className='glyphicon glyphicon-chevron-right'/>             \n          </span>                                                             \n          <Modal                                                              \n            title='Update Parent Container'                                       \n            closeModal={this.props.close}\n            show={this.props.editable.containerParentForm}\n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainer={this.props.setContainer}                            \n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </Modal>                                                            \n        </div>                                                                \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow: 2}}>\n          <TextboxElement\n            name='quantity'\n            inputClass='col-xs-11'\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.quantity}\n          />\n        </div>\n        <div style={{flexGrow: 2}}>\n          <SelectElement\n            name='unit'\n            inputClass='col-xs-11'\n            options={this.props.units}\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveSpecimen}\n            columnSize= 'col-xs-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <a onClick={this.props.close} style={{cursor: 'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimen: React.PropTypes.func,\n  close: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <TextboxElement\n              name='temperature'\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.temperature}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.statusId}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow:1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='locationId'\n              options={this.props.centers}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.locationId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={this.props.close}\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n\n  render() {\n    let containerDisplay;\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.props.setContainer}\n        required={true}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions = {\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates = {\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes = {this.props.containerTypes}\n            containerStati = {this.props.containerStati} \n            select = {true}\n            selectedCoordinate = {this.props.container.coordinate}\n            setContainer = {this.props.setContainer}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let load = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\n      load(this.props.children[this.props.coordinates[coordinate]].barcode);\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    this.props.saveChildContainer(container);\n  }\n\n  render() {\n  // This is eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  var coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = null;\n\n        if (!this.props.select) {\n          // This double if statement doesn't sound great\n          if (this.props.coordinates) {\n            if (this.props.coordinates[coordinate]) {\n              nodeClass = 'node occupied';\n              dataHtml = 'true';\n              dataToggle = 'tooltip';\n              dataPlacement = 'top';\n              tooltipTitle = \n            '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n              draggable = 'true';\n              onDragStart = this.drag;\n              onDragOver = null;\n              onDrop = null;\n              onClick = this.redirectURL;\n            }\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n\t\t\t  onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            // TODO: --- This is currently not working ---\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div\n          className='row'\n          style={rowStyle} \n        >\n          {column}\n        </div>\n      )\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div className='display'>\n        {display}\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","import CustomFields from './customFields'\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.setCollection = this.setCollection.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollection(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimen('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimen('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollection('data', data);\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = (\n            <CustomFields\n              fields={specimenTypeFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.collection.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollection}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimen: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Custom Attribute Fields\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\nclass CustomFields extends React.Component {\n  render() {\n    let fields = this.props.fields;\n    let attributeFields = Object.keys(fields).map(attribute => {\n\n      let datatype = this.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n      if (datatype === 'text' || datatype === 'number') {\n        if (fields[attribute]['refTableId'] === null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n\n        if (fields[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              options={this.props.attributeOptions[fields[attribute]['refTableId']]}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === 'datetime') {\n        return (\n          <DataElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.object[attribute]}\n          />\n        );\n      }\n\n      // Do not present the possibility of uploading if file is already set\n      // File must instead be deleted or overwritten.\n      if (datatype === 'file' && !(this.props.data||{})[attribute]) {\n        return (\n          <FileElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.files[this.props.object[attribute]]}\n          />\n        );\n      }\n    });\n\n    return (\n      <div>\n        {attributeFields}\n      </div>\n    );\n  }\n}\n\nCustomFields.propTypes = {\n  fields: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  object: React.PropTypes.object.isRequired,\n  setData: React.PropTypes.func.isRequired,\n}\n\nexport default CustomFields;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/customFields.js","import CustomFields from './customFields';\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = (\n            <CustomFields\n              fields={specimenProtocolFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.preparation.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","import CustomFields from './customFields';\n\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    if (value instanceof File) {\n      data[name] = value.name;\n      this.props.setFiles(name, value);\n    } else {\n      data[name] = value;\n      this.setAnalysis('data', data);\n    }\n  }\n\n  render() {\n    let submitButton;\n    if (this.props.data.specimen.analysis) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = (\n            <CustomFields\n              fields={specimenMethodFieldsObject}\n              files={this.props.files}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.analysis.data}\n              data={(((this.props.data||{}).specimen||{}).analysis||{}).data}\n              setData={this.setData}\n            />\n          );  \n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        fileUpload={true}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      formErrors: {},\n      candidateId: null,\n      sessionId: null,\n      centerId: null,\n      barcodeList: {1: {specimen: {collection: {}}, container: {}}},\n      count: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.addBarcode = this.addBarcode.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyBarcode = this.copyBarcode.bind(this);\n    this.removeBarcode = this.removeBarcode.bind(this);\n    this.saveBarcodeList = this.saveBarcodeList.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveBarcodeList() {\n    let barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let barcode in barcodeList) {\n      //set container values\n      let container = barcodeList[barcode].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.locationId = this.state.centerId;\n      container.originId = this.state.centerId;\n\n      //set specimen values\n      let specimen = barcodeList[barcode].specimen;\n      specimen.candidateId = this.state.candidateId;\n      specimen.sessionId = this.state.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.locationId = this.state.centerId;\n      if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n        specimen.fTCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: these will eventually be higher level states.\n      if (this.props.data) {\n        specimen.candidateId = this.props.data.candidate.CandID;\n        specimen.sessionId = this.props.data.session.ID;\n        specimen.parentSpecimenId = this.props.data.specimen.id;\n        specimen.collection.locationId = this.props.data.container.locationId;\n        container.locationId = this.props.data.container.locationId;\n        container.originId = this.props.data.container.locationId;\n      }\n    \n      barcodeList[barcode].container = container;\n      barcodeList[barcode].specimen = specimen;\n    }\n\n    this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(\n      () => {this.props.refreshParent();}\n    );\n  }\n\n  setSpecimen(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let centerId = this.state.centerId;\n    let candidateId = this.state.candidateId;\n    let sessionId = this.state.sessionId;\n    let barcodeList = this.state.barcodeList;\n\n    if (name === 'candidateId') {\n      candidateId = value;\n    } else if (name === 'sessionId') {\n      sessionId = value;\n      centerId = this.props.sessionCenters[sessionId].centerId;\n    } else {\n      //this is eliminate values if specimen type is changed\n      if (name === 'typeId') {\n        barcodeList[key].specimen = {collection:{}};\n      }\n      barcodeList[key].specimen[name] = value;\n    }\n\n    this.setState({barcodeList, centerId, candidateId, sessionId})\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let barcodeList = this.state.barcodeList;\n    barcodeList[key].container[name] = value;\n    this.setState({barcodeList});\n  }\n\n  addBarcode() {\n    let barcodeList = this.state.barcodeList;\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n\n    barcodeList[count+1] = {specimen: {}, container: {collection:{}}}; \n    collapsed[count+1] = true;\n    count = count+1\n\n    this.setState({barcodeList, collapsed, count});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyBarcode(key) {\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n    let nextKey = count+1;\n    let barcodeList = this.state.barcodeList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key])); \n      delete barcodeList[nextKey].container.barcode;\n      collapsed[nextKey] = true;\n      nextKey++;\n    }\n\n    this.setState({\n      barcodeList: barcodeList,\n      count: nextKey,\n      collapsed: collapsed,\n    });\n  }\n\n  removeBarcode(key) {\n    let barcodeList = this.state.barcodeList;\n    delete barcodeList[key];\n    this.setState({barcodeList: barcodeList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          container={this.state.barcodeList[key].container || null}\n          specimen={this.state.barcodeList[key].specimen || null}\n          removeBarcode={barcodeListArray.length !== 1 ?\n            () => this.removeBarcode(key) : null}\n          addBarcode={i == barcodeListArray.length ? this.addBarcode : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyBarcode={i == barcodeListArray.length && this.state.barcodeList[key] ? \n            this.copyBarcode : null}\n          setContainer={this.setContainer}\n          setSpecimen={this.setSpecimen}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimenData}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimenData}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.state.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.candidateId}\n            placeHolder='Search for a PSCID'\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.sessionId}\n            disabled={this.state.candidateId ? false : true}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={() => {\n          this.saveBarcodeList();\n          this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()}}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimen(name, value, this.props.barcodeKey);\n  }\n\n  copy() {\n    this.props.copyBarcode(this.props.copyMultiplier);\n  }\n\n  render() {\n    let addBarcodeButton;\n    let addBarcodeText;\n    let copyBarcodeButton;\n    let copyBarcodeText;\n    if (this.props.addBarcode) {\n      addBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcode}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcode) {\n      copyBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeButton;\n    if (this.props.removeBarcode) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcode}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => this.props.toggleCollapse(this.props.barcodeKey)}\n            />\n            {removeBarcodeButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                setSpecimenData={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainerData={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeButton}\n              {addBarcodeText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeButton}\n              {copyBarcodeText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\n//TODO: revise this component once Shipments are enabled.\nclass LifeCycle extends React.Component {\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n      });\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n    // Create Collection Node\n    let collectionNode;\n    if ((this.props.specimen||{}).collection || this.props.container) {\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    // Create Preparation Node\n    let preparationNode;\n    if ((this.props.specimen||{}).preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    // Create Analysis Node\n    let analysisNode;\n    if ((this.props.specimen||{}).analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'>\n             <div className='letter'>A</div>\n           </div>\n        </div>\n      );\n    }\n\n    // Create Lines\n    let line;\n    let nodes = 0;\n    for (let i in this.props.specimen) {\n      if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n        nodes++;\n      }\n    }\n    let lineWidth = nodes > 1 ? 60/(nodes-1) : 0;\n    let lineStyle = {width: lineWidth+'%'}\n    line = (<div className='lifecycle-line' style={lineStyle}/>);\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode ? line : null}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainer('parentContainerId', null);\n    this.props.setContainer('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankContainer */\n\nimport Loader from 'Loader';\nimport Globals from './globals';\nimport LifeCycle from './lifeCycle.js';\nimport BarcodePath from './barcodePath.js';\nimport ContainerDisplay from './containerDisplay.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Container\n *\n * Fetches data corresponding to a given Container from Loris backend and\n * displays a page allowing viewing of meta information of the container\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.drag = this.drag.bind(this);\n  }\n\n  drag(e) {\n    let container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n    e.dataTransfer.setData(\"text/plain\", container);\n  }\n\n  render() {\n    let globals = ( \n      <Globals\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );  \n\n    let barcodePath = (\n      <BarcodePath\n        container={this.props.data.container}\n        parentContainers={this.props.data.parentContainers}\n        loadContainer={this.props.loadContainer}\n      />\n    );\n\n    let display;\n    if (this.props.data.container.dimensionId) {  \n      display = (\n        <ContainerDisplay \n          children={this.props.data.childContainers}\n          types={this.props.options.containerTypes}\n          dimensions={this.props.options.containerDimensions[this.props.data.container.dimensionId]}\n          coordinates={this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null}\n          containerTypes={this.props.options.containerTypes}\n          containerStati={this.props.options.containerStati}\n          loadSpecimen={this.props.loadSpecimen}\n          loadContainer={this.props.loadContainer}\n          saveChildContainer={this.props.saveChildContainer}\n        />\n      );\n    }\n\n    let listAssigned = [];\n    let listUnassigned = [];\n    if (this.props.data.childContainers) {\n      let children = this.props.data.childContainers;\n      for (let child in children) {\n        let load;\n        if (this.props.options.containerTypes[children[child].typeId].primary) {\n          load = this.props.loadSpecimen;\n          //url = loris.BaseURL+\"/biobank/specimen/?barcode=\"+children[child].barcode;\n        } else {\n          load = this.props.loadContainer;\n          //url = loris.BaseURL+\"/biobank/container/?barcode=\"+children[child].barcode;\n        }\n\n        if (children[child].coordinate) {\n          listAssigned.push(\n            <div>\n              <a onClick={()=>load(children[child].barcode)}>\n                {children[child].barcode}\n              </a>\n              at {children[child].coordinate}\n            </div>\n          );    \n        } else {\n          listUnassigned.push(\n            <a \n              onClick={()=>load(children[child].barcode)}\n              id={children[child].id} \n              draggable={true}\n              onDragStart={this.drag}\n            >\n              {children[child].barcode}\n            </a>\n          );\n        }\n      }     \n    }\n\n    return (\n      <div id='container-page'> \n        <div className=\"container-header\"> \n          <div className='container-title'> \n            <div className='barcode'> \n              Barcode \n              <div className='value'> \n                <strong>{this.props.data.container.barcode}</strong> \n              </div> \n            </div> \n          </div> \n          <ContainerCheckout \n            container={this.props.container}\n            setContainer={this.props.setContainer}\n            saveContainer={this.props.saveContainer}\n          />\n          <LifeCycle\n            container={this.props.data.container}\n            centers={this.props.options.centers}\n          />\n        </div> \n        <div className='summary'> \n          {globals} \n          <div className='display-container'>\n            {display} \n            {barcodePath}\n          </div>\n          <div className='container-list'>\n            <div className='title'>\n              {listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null}\n            </div>\n            <div className='title'>\n              {listAssigned.length !== 0 ? 'Assigned Containers' : null}\n            </div>\n              {listAssigned}\n              {listAssigned.length !==0 ? <br/> : null}\n            <div className='title'>\n              {listUnassigned.length !== 0 ? 'Unassigned Containers' : null}\n            </div>\n            {listUnassigned}\n          </div>\n        </div> \n      </div> \n    ); \n  }\n}\n\nBiobankContainer.propTypes = {\n  containerPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankContainer = React.createFactory(BiobankContainer);\n\nwindow.BiobankContainer = BiobankContainer;\nwindow.RBiobankContainer = RBiobankContainer;\n\nexport default BiobankContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/container.js","/**\n * Container Path\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass BarcodePath extends React.Component {\n\n  render() {\n\n    let path = [];\n    let pathLength = this.props.parentContainers.length - 1;\n    let containerURL = loris.BaseURL+'/biobank/container/?barcode=';\n    for (let i=pathLength; i>=0; i--) {\n      path.push(\n        <span className='barcodePath'> \n          {'/'}\n          <a onClick={()=>this.props.loadContainer(this.props.parentContainers[i].barcode)}>\n            {this.props.parentContainers[i].barcode}\n          </a>\n        </span>\n      );\n    }\n    path.push(\n      <span className='barcodePath'> \n        {'/'}\n        <a onClick={()=>this.props.loadContainer(this.props.container.barcode)}>\n          {this.props.container.barcode}\n        </a>\n      </span>\n    );\n\n    return (\n      <div>\n        {path}\n      </div>\n    );\n  }\n}\n\nBarcodePath.propTypes = {\n}\n\nexport default BarcodePath;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodePath.js"],"sourceRoot":""}