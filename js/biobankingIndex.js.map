{"version":3,"sources":["webpack:///modules/biobanking/js/biobankingIndex.js","webpack:///webpack/bootstrap 615feeda3904c6af4b8f?e01e******","webpack:///./modules/biobanking/jsx/biobankingIndex.js","webpack:///./jsx/FilterForm.js","webpack:///./jsx/Panel.js","webpack:///./jsx/Tabs.js","webpack:///./modules/biobanking/jsx/columnFormatter.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_FilterForm","_FilterForm2","_Tabs","_columnFormatter","_columnFormatter2","BiobankingIndex","_React$Component","this","_this","getPrototypeOf","loris","hiddenHeaders","state","isLoaded","filter","fetchData","bind","updateFilter","resetFilters","$","ajax","DataURL","method","dataType","success","data","setState","Data","error","console","refs","biobankingFilter","clearFilter","React","createElement","className","uploadTab","tabList","label","Tabs","tabs","defaultTab","updateURL","TabPane","TabId","Module","name","ref","columns","formElements","form","onUpdate","ButtonElement","type","onUserInput","StaticDataTable","Headers","Filter","getFormattedCell","freezeColumn","Component","biobankingIndex","BaseURL","ReactDOM","render","document","getElementById","_Panel","_Panel2","FilterForm","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","keys","forEach","filterKey","exactMatch","clear","formChildren","Children","children","child","isValidElement","callbackFunc","callbackName","elementName","displayName","queryFieldName","filterValue","push","cloneElement","JSON","parse","stringify","fieldName","fieldValue","set","height","title","FormElement","defaultProps","warn","propTypes","PropTypes","string","isRequired","object","func","Panel","collapsed","initCollapsed","panelClass","toggleCollapsed","glyphClass","panelHeading","onClick","data-toggle","data-target","style","cursor","role","hash","window","location","activeTab","substr","handleClick","getTabs","getTabPanes","tabId","e","onTabChange","scrollDistance","scrollTop","map","tab","tabClass","href","tabID","tabPanes","tabStyle","marginLeft","marginBottom","array","bool","_React$Component2","apply","arguments","classList","Title","formatColumn","column","cell","rowData","rowHeaders","indexOf","row","header","index"],"mappings":"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","file":"./modules/biobanking/js/biobankingIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(1);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _Tabs = __webpack_require__(3);\n\t\n\tvar _columnFormatter = __webpack_require__(4);\n\t\n\tvar _columnFormatter2 = _interopRequireDefault(_columnFormatter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// import MediaUploadForm from './uploadForm';\n\t\n\t\n\tvar BiobankingIndex = function (_React$Component) {\n\t    _inherits(BiobankingIndex, _React$Component);\n\t\n\t    function BiobankingIndex(props) {\n\t        _classCallCheck(this, BiobankingIndex);\n\t\n\t        var _this = _possibleConstructorReturn(this, (BiobankingIndex.__proto__ || Object.getPrototypeOf(BiobankingIndex)).call(this, props));\n\t\n\t        loris.hiddenHeaders = ['Cand IDds', 'Session ID', 'Hide File', 'File Type'];\n\t\n\t        _this.state = {\n\t            isLoaded: false,\n\t            filter: {}\n\t        };\n\t\n\t        // Bind component instance to custom methods\n\t        _this.fetchData = _this.fetchData.bind(_this);\n\t        _this.updateFilter = _this.updateFilter.bind(_this);\n\t        _this.resetFilters = _this.resetFilters.bind(_this);\n\t        return _this;\n\t    }\n\t\n\t    _createClass(BiobankingIndex, [{\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            this.fetchData();\n\t        }\n\t\n\t        /**\n\t         * Retrive data from the provided URL and save it in state\n\t         * Additionaly add hiddenHeaders to global loris vairable\n\t         * for easy access by columnFormatter.\n\t         */\n\t\n\t    }, {\n\t        key: 'fetchData',\n\t        value: function fetchData() {\n\t            $.ajax(this.props.DataURL, {\n\t                method: \"GET\",\n\t                dataType: 'json',\n\t                success: function (data) {\n\t                    this.setState({\n\t                        Data: data,\n\t                        isLoaded: true\n\t                    });\n\t                }.bind(this),\n\t                error: function error(_error) {\n\t                    console.error(_error);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateFilter',\n\t        value: function updateFilter(filter) {\n\t            this.setState({ filter: filter });\n\t        }\n\t    }, {\n\t        key: 'resetFilters',\n\t        value: function resetFilters() {\n\t            this.refs.biobankingFilter.clearFilter();\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            // Waiting for async data to load\n\t            if (!this.state.isLoaded) {\n\t                return React.createElement(\n\t                    'button',\n\t                    { className: 'btn-info has-spinner' },\n\t                    'Loading',\n\t                    React.createElement('span', {\n\t                        className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate' })\n\t                );\n\t            }\n\t\n\t            var uploadTab = void 0;\n\t            var tabList = [{ id: \"browse\", label: \"Browse\" }];\n\t\n\t            // if (loris.userHasPermission('media_write')) {\n\t            //     tabList.push({id: \"upload\", label: \"Upload\"});\n\t            //     uploadTab = (\n\t            //         <TabPane TabId={tabList[1].id}>\n\t            //             <biobankingUploadForm\n\t            //                 DataURL={`${loris.BaseURL}/biobanking/ajax/FileUpload.php?action=getData`}\n\t            //                 action={`${loris.BaseURL}/biobanking/ajax/FileUpload.php?action=upload`}\n\t            //             />\n\t            //         </TabPane>\n\t            //     );\n\t            // }\n\t            return React.createElement(\n\t                _Tabs.Tabs,\n\t                { tabs: tabList, defaultTab: 'browse', updateURL: true },\n\t                React.createElement(\n\t                    _Tabs.TabPane,\n\t                    { TabId: tabList[0].id },\n\t                    React.createElement(\n\t                        _FilterForm2.default,\n\t                        {\n\t                            Module: 'biobanking',\n\t                            name: 'biobanking_filter',\n\t                            id: 'biobanking_filter_form',\n\t                            ref: 'biobankingFilter',\n\t                            columns: 3,\n\t                            formElements: this.state.Data.form,\n\t                            onUpdate: this.updateFilter,\n\t                            filter: this.state.filter\n\t                        },\n\t                        React.createElement('br', null),\n\t                        React.createElement(ButtonElement, { label: 'Clear Filters', type: 'reset', onUserInput: this.resetFilters })\n\t                    ),\n\t                    React.createElement(StaticDataTable, {\n\t                        Data: this.state.Data.Data,\n\t                        Headers: this.state.Data.Headers,\n\t                        Filter: this.state.filter,\n\t                        getFormattedCell: _columnFormatter2.default,\n\t                        freezeColumn: 'File Name'\n\t                    })\n\t                ),\n\t                uploadTab\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return BiobankingIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t    var biobankingIndex = React.createElement(\n\t        'div',\n\t        { className: 'page-biobanking' },\n\t        React.createElement(BiobankingIndex, { DataURL: loris.BaseURL + '/biobanking/?format=json' })\n\t    );\n\t\n\t    ReactDOM.render(biobankingIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(2);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t\n\t      if (key && value) {\n\t        filter[key] = {};\n\t        filter[key].value = value;\n\t        filter[key].exactMatch = type === \"SelectElement\";\n\t      } else if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure both key/value are string before sending them to querystring\n\t      if (typeof fieldName !== \"string\" || typeof fieldValue !== \"string\") {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        _Panel2.default,\n\t        {\n\t          id: this.props.id,\n\t          height: this.props.height,\n\t          title: this.props.title\n\t        },\n\t        React.createElement(\n\t          FormElement,\n\t          this.props,\n\t          formChildren\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\",\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        },\n\t        this.props.title,\n\t        React.createElement(\"span\", { className: glyphClass })\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  updateURL: false\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component2) {\n\t  _inherits(TabPane, _React$Component2);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.TabPane = TabPane;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * Modify behaviour of specified column cells in the Data Table component\n\t * @param {string} column - column name\n\t * @param {string} cell - cell content\n\t * @param {arrray} rowData - array of cell contents for a specific row\n\t * @param {arrray} rowHeaders - array of table headers (column names)\n\t * @return {*} a formated table cell for a given column\n\t */\n\tfunction formatColumn(column, cell, rowData, rowHeaders) {\n\t    // If a column if set as hidden, don't display it\n\t    if (loris.hiddenHeaders.indexOf(column) > -1) {\n\t        return null;\n\t    }\n\t\n\t    // Create the mapping between rowHeaders and rowData in a row object.\n\t    var row = {};\n\t    rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t    }, this);\n\t\n\t    // // create array of classes to be added to td tag\n\t    // var classes = [];\n\t    // if (row['Hide File'] === '1') {\n\t    //     classes.push(\"bg-danger\");\n\t    // }\n\t    // // convert array to string, with blank space separator\n\t    // classes = classes.join(\" \");\n\t    //\n\t    // const hasWritePermission = loris.userHasPermission('media_write');\n\t    // if (column === 'File Name' && hasWritePermission === true) {\n\t    //     var downloadURL = loris.BaseURL + \"/biobanking/ajax/FileDownload.php?File=\" + row['File Name'];\n\t    //     return (\n\t    //         <td className= {classes}>\n\t    //             <a href={downloadURL} target=\"_blank\" download={row['File Name']}>\n\t    //                 {cell}\n\t    //             </a>\n\t    //         </td>\n\t    //     );\n\t    // }\n\t    //\n\t    // if (column === 'Visit Label') {\n\t    //     if (row[\"Cand ID\"] !== null && row[\"Session ID\"]) {\n\t    //         var sessionURL = loris.BaseURL + \"/instrument_list/?candID=\" +\n\t    //             row[\"Cand ID\"] + \"&sessionID=\" + row[\"Session ID\"];\n\t    //         return <td className={classes}><a href={sessionURL}>{cell}</a></td>;\n\t    //     }\n\t    // }\n\t    //\n\t    // if (column === 'Edit Metadata') {\n\t    //     var editURL = loris.BaseURL + \"/biobanking/edit/?id=\" + row['Edit Metadata'];\n\t    //     return <td className={classes}><a href={editURL}>Edit</a></td>;\n\t    // }\n\t\n\t    return React.createElement(\n\t        \"td\",\n\t        null,\n\t        cell\n\t    );\n\t}\n\t\n\texports.default = formatColumn;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobanking/js/biobankingIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 615feeda3904c6af4b8f","import FilterForm from 'FilterForm';\nimport {Tabs, TabPane} from 'Tabs';\n\n// import MediaUploadForm from './uploadForm';\nimport formatColumn from './columnFormatter';\n\nclass BiobankingIndex extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        loris.hiddenHeaders = ['Cand IDds', 'Session ID', 'Hide File', 'File Type'];\n\n        this.state = {\n            isLoaded: false,\n            filter: {}\n        };\n\n        // Bind component instance to custom methods\n        this.fetchData = this.fetchData.bind(this);\n        this.updateFilter = this.updateFilter.bind(this);\n        this.resetFilters = this.resetFilters.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    /**\n     * Retrive data from the provided URL and save it in state\n     * Additionaly add hiddenHeaders to global loris vairable\n     * for easy access by columnFormatter.\n     */\n    fetchData() {\n        $.ajax(this.props.DataURL, {\n            method: \"GET\",\n            dataType: 'json',\n            success: function(data) {\n                this.setState({\n                    Data: data,\n                    isLoaded: true\n                });\n            }.bind(this),\n            error: function(error) {\n                console.error(error);\n            }\n        });\n    }\n\n    updateFilter(filter) {\n        this.setState({filter});\n    }\n\n    resetFilters() {\n        this.refs.biobankingFilter.clearFilter();\n    }\n\n    render() {\n        // Waiting for async data to load\n        if (!this.state.isLoaded) {\n            return (\n                <button className=\"btn-info has-spinner\">\n                    Loading\n                    <span\n                        className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n          </span>\n                </button>\n            );\n        }\n\n        let uploadTab;\n        let tabList = [\n            {id: \"browse\", label: \"Browse\"}\n        ];\n\n        // if (loris.userHasPermission('media_write')) {\n        //     tabList.push({id: \"upload\", label: \"Upload\"});\n        //     uploadTab = (\n        //         <TabPane TabId={tabList[1].id}>\n        //             <biobankingUploadForm\n        //                 DataURL={`${loris.BaseURL}/biobanking/ajax/FileUpload.php?action=getData`}\n        //                 action={`${loris.BaseURL}/biobanking/ajax/FileUpload.php?action=upload`}\n        //             />\n        //         </TabPane>\n        //     );\n        // }\n        return (\n            <Tabs tabs={tabList} defaultTab=\"browse\" updateURL={true}>\n                <TabPane TabId={tabList[0].id}>\n                    <FilterForm\n                        Module=\"biobanking\"\n                        name=\"biobanking_filter\"\n                        id=\"biobanking_filter_form\"\n                        ref=\"biobankingFilter\"\n                        columns={3}\n                        formElements={this.state.Data.form}\n                        onUpdate={this.updateFilter}\n                        filter={this.state.filter}\n                    >\n                        <br/>\n                        <ButtonElement label=\"Clear Filters\" type=\"reset\" onUserInput={this.resetFilters}/>\n                    </FilterForm>\n                    <StaticDataTable\n                        Data={this.state.Data.Data}\n                        Headers={this.state.Data.Headers}\n                        Filter={this.state.filter}\n                        getFormattedCell={formatColumn}\n                        freezeColumn=\"File Name\"\n                    />\n                </TabPane>\n                {uploadTab}\n            </Tabs>\n        );\n    }\n}\n\n$(function() {\n    const biobankingIndex = (\n        <div className=\"page-biobanking\">\n            <BiobankingIndex DataURL={`${loris.BaseURL}/biobanking/?format=json`} />\n        </div>\n    );\n\n    ReactDOM.render(biobankingIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobanking/jsx/biobankingIndex.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n\n    if (key && value) {\n      filter[key] = {};\n      filter[key].value = value;\n      filter[key].exactMatch = (type === \"SelectElement\");\n    } else if (filter && key && value === '') {\n      delete filter[key];\n    }\n\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure both key/value are string before sending them to querystring\n    if (typeof fieldName !== \"string\" || typeof fieldValue !== \"string\") {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <Panel\n        id={this.props.id}\n        height={this.props.height}\n        title={this.props.title}\n      >\n        <FormElement {...this.props}>\n          {formChildren}\n        </FormElement>\n      </Panel>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n        onClick={this.toggleCollapsed}\n        data-toggle=\"collapse\"\n        data-target={'#' + this.props.id}\n        style={{cursor: 'pointer'}}\n      >\n        {this.props.title}\n        <span className={glyphClass}></span>\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  updateURL: false\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nexport {\n  Tabs,\n  TabPane\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/**\n * Modify behaviour of specified column cells in the Data Table component\n * @param {string} column - column name\n * @param {string} cell - cell content\n * @param {arrray} rowData - array of cell contents for a specific row\n * @param {arrray} rowHeaders - array of table headers (column names)\n * @return {*} a formated table cell for a given column\n */\nfunction formatColumn(column, cell, rowData, rowHeaders) {\n    // If a column if set as hidden, don't display it\n    if (loris.hiddenHeaders.indexOf(column) > -1) {\n        return null;\n    }\n\n    // Create the mapping between rowHeaders and rowData in a row object.\n    var row = {};\n    rowHeaders.forEach(function(header, index) {\n        row[header] = rowData[index];\n    }, this);\n\n    // // create array of classes to be added to td tag\n    // var classes = [];\n    // if (row['Hide File'] === '1') {\n    //     classes.push(\"bg-danger\");\n    // }\n    // // convert array to string, with blank space separator\n    // classes = classes.join(\" \");\n    //\n    // const hasWritePermission = loris.userHasPermission('media_write');\n    // if (column === 'File Name' && hasWritePermission === true) {\n    //     var downloadURL = loris.BaseURL + \"/biobanking/ajax/FileDownload.php?File=\" + row['File Name'];\n    //     return (\n    //         <td className= {classes}>\n    //             <a href={downloadURL} target=\"_blank\" download={row['File Name']}>\n    //                 {cell}\n    //             </a>\n    //         </td>\n    //     );\n    // }\n    //\n    // if (column === 'Visit Label') {\n    //     if (row[\"Cand ID\"] !== null && row[\"Session ID\"]) {\n    //         var sessionURL = loris.BaseURL + \"/instrument_list/?candID=\" +\n    //             row[\"Cand ID\"] + \"&sessionID=\" + row[\"Session ID\"];\n    //         return <td className={classes}><a href={sessionURL}>{cell}</a></td>;\n    //     }\n    // }\n    //\n    // if (column === 'Edit Metadata') {\n    //     var editURL = loris.BaseURL + \"/biobanking/edit/?id=\" + row['Edit Metadata'];\n    //     return <td className={classes}><a href={editURL}>Edit</a></td>;\n    // }\n\n    return <td>{cell}</td>;\n}\n\nexport default formatColumn;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobanking/jsx/columnFormatter.js"],"sourceRoot":""}