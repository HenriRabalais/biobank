!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _specimen=__webpack_require__(7),_specimen2=_interopRequireDefault(_specimen),args=QueryString.get(document.currentScript.src);$(function(){var biobankSpecimen=React.createElement("div",{className:"page-specimen-form"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-md-9 col-lg-12"},React.createElement(_specimen2.default,{DataURL:loris.BaseURL+"/biobank/ajax/FileUpload.php?action=getSpecimenData&barcode="+args.barcode,action:loris.BaseURL+"/biobank/ajax/FileUpload.php?action=specimen"}))));ReactDOM.render(biobankSpecimen,document.getElementById("lorisworkspace"))})},,function(module,exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),Panel=function(_React$Component){function Panel(props){_classCallCheck(this,Panel);var _this=_possibleConstructorReturn(this,(Panel.__proto__||Object.getPrototypeOf(Panel)).call(this,props));return _this.state={collapsed:_this.props.initCollapsed},_this.panelClass=_this.props.initCollapsed?"panel-collapse collapse":"panel-collapse collapse in",_this.toggleCollapsed=_this.toggleCollapsed.bind(_this),_this}return _inherits(Panel,_React$Component),_createClass(Panel,[{key:"toggleCollapsed",value:function(){this.setState({collapsed:!this.state.collapsed})}},{key:"render",value:function(){var glyphClass=this.state.collapsed?"glyphicon pull-right glyphicon-chevron-down":"glyphicon pull-right glyphicon-chevron-up",panelHeading=this.props.title?React.createElement("div",{className:"panel-heading",onClick:this.toggleCollapsed,"data-toggle":"collapse","data-target":"#"+this.props.id,style:{cursor:"pointer"}},this.props.title,React.createElement("span",{className:glyphClass})):"";return React.createElement("div",{className:"panel panel-primary"},panelHeading,React.createElement("div",{id:this.props.id,className:this.panelClass,role:"tabpanel"},React.createElement("div",{className:"panel-body",style:{height:this.props.height}},this.props.children)))}}]),Panel}(React.Component);Panel.propTypes={id:React.PropTypes.string,height:React.PropTypes.string,title:React.PropTypes.string},Panel.defaultProps={initCollapsed:!1,id:"default-panel",height:"100%"},exports.default=Panel},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_barcodeForm=__webpack_require__(4),_barcodeForm2=_interopRequireDefault(_barcodeForm),BiobankSpecimenForm=function(_React$Component){function BiobankSpecimenForm(props){_classCallCheck(this,BiobankSpecimenForm);var _this=_possibleConstructorReturn(this,(BiobankSpecimenForm.__proto__||Object.getPrototypeOf(BiobankSpecimenForm)).call(this,props));return _this.state={Data:{},formData:{},barcodeFormList:{},errorMessage:null,isLoaded:!1,formErrors:{},countBarcodeForms:[1]},_this.handleSubmit=_this.handleSubmit.bind(_this),_this.validateForm=_this.validateForm.bind(_this),_this.setFormData=_this.setFormData.bind(_this),_this.specimenSubmit=_this.specimenSubmit.bind(_this),_this.addBarcodeForm=_this.addBarcodeForm.bind(_this),_this.setBarcodeFormData=_this.setBarcodeFormData.bind(_this),_this}return _inherits(BiobankSpecimenForm,_React$Component),_createClass(BiobankSpecimenForm,[{key:"componentDidMount",value:function(){var self=this;if($.ajax(this.props.DataURL,{dataType:"json",success:function(data){self.setState({Data:data,isLoaded:!0})},error:function(data,errorCode,errorMsg){console.error(data,errorCode,errorMsg),self.setState({error:"An error occurred when loading the form!"})}}),this.props.child){var formData=this.state.formData;formData.parentSpecimen=this.props.specimenId,formData.pscid=this.props.candidateId,formData.visitLabel=this.props.sessionId,this.setState({formData:formData})}}},{key:"render",value:function(){var _this2=this;if(void 0!==this.state.error)return React.createElement("div",{className:"alert alert-danger text-center"},React.createElement("strong",null,this.state.error));if(!this.state.isLoaded)return React.createElement("button",{className:"btn-info has-spinner"},"Loading",React.createElement("span",{className:"glyphicon glyphicon-refresh glyphicon-refresh-animate"}));for(var glyphStyle={color:"#D3D3D3",margin:"auto"},buttonStyle={appearance:"none",outline:"none",boxShadow:"none",borderColor:"transparent",backgroundColor:"transparent"},barcodeForms=[],_loop=function(i){barcodeForms.push(React.createElement(_barcodeForm2.default,{setSpecimenFormData:_this2.setBarcodeFormData,id:_this2.state.countBarcodeForms[i],specimenTypes:_this2.state.Data.specimenTypes,containerTypesPrimary:_this2.state.Data.containerTypesPrimary,containerBarcodesNonPrimary:_this2.state.Data.containerBarcodesNonPrimary,specimenTypeAttributes:_this2.state.Data.specimenTypeAttributes,attributeDatatypes:_this2.state.Data.attributeDatatypes,capacities:_this2.state.Data.capacities,units:_this2.state.Data.units,button:i+1===_this2.state.countBarcodeForms.length?React.createElement("button",{type:"button",className:"btn btn-success btn-sm",onClick:_this2.addBarcodeForm},React.createElement("span",{className:"glyphicon glyphicon-plus"})):React.createElement("button",{type:"button",className:"btn btn-primary-outline btn-sm",style:buttonStyle,onClick:function(){return _this2.removeBarcodeForm(i)}},React.createElement("span",{className:"glyphicon glyphicon-remove",style:glyphStyle}))}))},i=0;i<this.state.countBarcodeForms.length;i++)_loop(i);var staticFields=void 0,selectFields=void 0;return this.props.child?staticFields=React.createElement("div",null,React.createElement(StaticElement,{label:"Parent Specimen",text:this.props.barcode}),React.createElement(StaticElement,{label:"PSCID",text:this.state.Data.PSCIDs[this.props.candidateId]}),React.createElement(StaticElement,{label:"Visit Label",text:this.state.Data.sessionData[this.state.Data.PSCIDs[this.props.candidateId]].visits[this.props.sessionId]})):selectFields=React.createElement("div",null,React.createElement(SelectElement,{name:"pscid",label:"PSCID",options:this.state.Data.PSCIDs,onUserInput:this.setFormData,ref:"pscid",required:!0,value:this.state.formData.pscid}),React.createElement(SelectElement,{name:"visitLabel",label:"Visit Label",options:this.state.Data.visits,onUserInput:this.setFormData,ref:"visitLabel",required:!0,value:this.state.formData.visitLabel})),React.createElement(FormElement,{name:"biobankSpecimen",onSubmit:this.handleSubmit,ref:"form"},React.createElement("h3",null,React.createElement("b",null,"Add New Specimen",this.state.countBarcodeForms>1?"s":"")),React.createElement("br",null),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-xs-11"},staticFields,selectFields,React.createElement(DateElement,{name:"timeCollect",label:"Collection Time",minYear:"2000",maxYear:"2017",onUserInput:this.setFormData,ref:"timeCollect",required:!0,value:this.state.formData.timeCollect}))),barcodeForms,React.createElement("div",{className:"row"},React.createElement("div",{className:"col-xs-9"}),React.createElement("div",{className:"col-xs-3"},React.createElement(ButtonElement,{label:"Submit"}))))}},{key:"validateForm",value:function(formElement,value){var _this3=this,formErrors=this.state.formErrors;"barcode"===formElement&&""!==value&&(/^hello/.test(this.state.formData.barcode)?formErrors.barcode=!1:formErrors.barcode=!0),"quantity"===formElement&&""!==value&&(isNaN(value)||value>this.state.Data.capacities[this.state.currentContainerType]?formErrors.quantity=!0:formErrors.quantity=!1);var specimenTypeFieldsObject=this.state.Data.specimenTypeAttributes[this.state.currentSpecimenType];Object.keys(specimenTypeFieldsObject).map(function(attribute){var datatype=_this3.state.Data.attributeDatatypes[specimenTypeFieldsObject[attribute].datatypeId].datatype;"number"===datatype&&formElement===attribute&&(isNaN(value)&&""!==value?formErrors[attribute]=!0:formErrors[attribute]=!1)});this.setState({formErrors:formErrors})}},{key:"handleSubmit",value:function(e){e.preventDefault();var formData=this.state.formData,barcodeFormList=this.state.barcodeFormList,formRefs=this.refs;this.isValidForm(formRefs,formData)&&(formData.barcodeFormList=JSON.stringify(barcodeFormList),this.setState({formData:formData}),this.specimenSubmit())}},{key:"specimenSubmit",value:function(){var formData=this.state.formData,formObj=new FormData;for(var key in formData)""!==formData[key]&&formObj.append(key,formData[key]);$.ajax({type:"POST",url:this.props.action,data:formObj,cache:!1,contentType:!1,processData:!1,xhr:function(){var xhr=new window.XMLHttpRequest;return xhr}.bind(this),success:function(){var event=new CustomEvent("update-datatable");window.dispatchEvent(event),this.setState({formData:{},barcodeFormList:{}}),swal("Specimen Submission Successful!","","success")}.bind(this),error:function(err){console.error(err);var msg=err.responseJSON?err.responseJSON.message:"Specimen error!";this.setState({errorMessage:msg}),swal(msg,"","error")}.bind(this)})}},{key:"isValidForm",value:function isValidForm(formRefs,formData){var isValidForm=!0,requiredFields={pscid:null,visitLabel:null};return Object.keys(requiredFields).map(function(field){formData[field]?requiredFields[field]=formData[field]:formRefs[field]&&(formRefs[field].props.hasError=!0,isValidForm=!1)}),this.forceUpdate(),isValidForm}},{key:"setFormData",value:function(formElement,value){"pscid"===formElement&&""!==value&&(this.state.Data.visits=this.state.Data.sessionData[this.state.Data.PSCIDs[value]].visits);var formData=this.state.formData;formData[formElement]=value,this.setState({formData:formData})}},{key:"setBarcodeFormData",value:function(barcodeFormData,barcodeId){var formData=this.state.formData,barcodeFormList=this.state.barcodeFormList;barcodeFormList[barcodeId]=barcodeFormData,formData.barcodeFormList=barcodeFormList,this.setState({formData:formData})}},{key:"addBarcodeForm",value:function(){var countBarcodeForms=this.state.countBarcodeForms;countBarcodeForms.push(countBarcodeForms[countBarcodeForms.length-1]+1),this.setState({countBarcodeForms:countBarcodeForms})}},{key:"removeBarcodeForm",value:function(index){var countBarcodeForms=this.state.countBarcodeForms;countBarcodeForms.splice(index,1),this.setState({countBarcodeForms:countBarcodeForms})}}]),BiobankSpecimenForm}(React.Component);BiobankSpecimenForm.propTypes={DataURL:React.PropTypes.string.isRequired,action:React.PropTypes.string.isRequired,barcode:React.PropTypes.string},exports.default=BiobankSpecimenForm},function(module,exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),BiobankBarcodeForm=function(_React$Component){function BiobankBarcodeForm(props){_classCallCheck(this,BiobankBarcodeForm);var _this=_possibleConstructorReturn(this,(BiobankBarcodeForm.__proto__||Object.getPrototypeOf(BiobankBarcodeForm)).call(this,props));return _this.state={formData:{},currentSpecimenType:null,currentContainerType:null,formErrors:{}},_this.setFormData=_this.setFormData.bind(_this),_this.getSpecimenTypeFields=_this.getSpecimenTypeFields.bind(_this),_this}return _inherits(BiobankBarcodeForm,_React$Component),_createClass(BiobankBarcodeForm,[{key:"render",value:function(){var specimenFields,specimenTypeFields=this.getSpecimenTypeFields();return this.state.currentSpecimenType&&(specimenFields=React.createElement("div",null,React.createElement(SelectElement,{name:"containerType",label:"Container Type",options:this.props.containerTypesPrimary,onUserInput:this.setFormData,ref:"containerType",required:!0,value:this.state.formData.containerType}),React.createElement(SelectElement,{name:"parentContainer",label:"Parent Container Barcode",options:this.props.containerBarcodesNonPrimary,onUserInput:this.setFormData,ref:"parentContainer",required:!1,value:this.state.formData.parentContainer}),React.createElement(TextboxElement,{name:"quantity",label:"Quantity"+(this.state.currentContainerType?" ("+this.props.units[this.state.currentContainerType]+")":""),onUserInput:this.setFormData,ref:"quantity",required:!0,value:this.state.formData.quantity,hasError:this.state.formErrors.quantity}),specimenTypeFields,React.createElement(TextareaElement,{name:"notes",label:"Notes",onUserInput:this.setFormData,ref:"notes",value:this.state.formData.notes}))),React.createElement(FormElement,{name:"biobankBarcode"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-xs-11"},React.createElement("div",{"data-toggle":"collapse","data-target":"#"+this.props.id,color:"blue"},React.createElement(TextboxElement,{name:"barcode",label:"Barcode "+this.props.id,onUserInput:this.setFormData,ref:"barcode",required:!0,value:this.state.formData.barcode,hasError:this.state.formErrors.barcode,errorMessage:"Incorrect Barcode format for this Specimen and Container Type"}))),React.createElement("div",{className:"col-xs-1"},this.props.button)),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-xs-2"}),React.createElement("div",{className:"col-xs-9"},React.createElement("div",{id:this.props.id,className:"collapse"},React.createElement(SelectElement,{name:"specimenType",label:"Specimen Type",options:this.props.specimenTypes,onUserInput:this.setFormData,ref:"specimenType",required:!0,value:this.state.formData.specimenType}),specimenFields))))}},{key:"setFormData",value:function(formElement,value){"specimenType"===formElement&&""!==value&&this.setState({currentSpecimenType:value}),"containerType"===formElement&&""!==value&&this.setState({currentContainerType:value});var formData=this.state.formData;formData[formElement]=value,this.setState({formData:formData}),this.props.setSpecimenFormData(this.state.formData,this.props.id)}},{key:"getSpecimenTypeFields",value:function(){var _this2=this;if(this.state.currentSpecimenType){var specimenTypeFieldsObject=this.props.specimenTypeAttributes[this.state.currentSpecimenType];if(specimenTypeFieldsObject){var specimenTypeFields=Object.keys(specimenTypeFieldsObject).map(function(attribute){var datatype=_this2.props.attributeDatatypes[specimenTypeFieldsObject[attribute].datatypeId].datatype;if("text"===datatype||"number"===datatype){if(null==specimenTypeFieldsObject[attribute].refTableId)return React.createElement(TextboxElement,{name:attribute,label:specimenTypeFieldsObject[attribute].name,onUserInput:_this2.setFormData,ref:attribute,required:specimenTypeFieldsObject[attribute].required,value:_this2.state.formData[attribute],hasError:_this2.state.formErrors[attribute],errorMessage:"This is a "+datatype+" field."});if(null!==specimenTypeFieldsObject[attribute].refTableId)return React.createElement(SelectElement,{name:attribute,label:specimenTypeFieldsObject[attribute].name,options:"",onUserInput:_this2.setFormData,ref:attribute,required:_this2.state.formData[attribute],value:_this2.state.formData[attribute]})}if("datetime"===datatype)return React.createElement(DateElement,{name:attribute,label:specimenTypeFieldsObject[attribute].name,onUserInput:_this2.setFormData,ref:attribute,required:specimenTypeFieldsObject[attribute].required,value:_this2.state.formData[attribute]})});return specimenTypeFields}}}}]),BiobankBarcodeForm}(React.Component);BiobankBarcodeForm.propTypes={id:React.PropTypes.string,specimenTypes:React.PropTypes.object.isRequired,containerTypesPrimary:React.PropTypes.object.isRequired,specimenTypeAttributes:React.PropTypes.object.isRequired,attributeDatatypes:React.PropTypes.object.isRequired,capacities:React.PropTypes.object.isRequired,units:React.PropTypes.object.isRequired},exports.default=BiobankBarcodeForm},function(module,exports){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),Tabs=function(_React$Component){function Tabs(props){_classCallCheck(this,Tabs);var _this=_possibleConstructorReturn(this,(Tabs.__proto__||Object.getPrototypeOf(Tabs)).call(this,props)),hash=window.location.hash,activeTab="";return _this.props.updateURL&&hash?activeTab=hash.substr(1):_this.props.defaultTab?activeTab=_this.props.defaultTab:_this.props.tabs.length>0&&(activeTab=_this.props.tabs[0].id),_this.state={activeTab:activeTab},_this.handleClick=_this.handleClick.bind(_this),_this.getTabs=_this.getTabs.bind(_this),_this.getTabPanes=_this.getTabPanes.bind(_this),_this}return _inherits(Tabs,_React$Component),_createClass(Tabs,[{key:"handleClick",value:function(tabId,e){if(this.setState({activeTab:tabId}),this.props.onTabChange(tabId),this.props.updateURL){var scrollDistance=$("body").scrollTop()||$("html").scrollTop();window.location.hash=e.target.hash,$("html,body").scrollTop(scrollDistance)}}},{key:"getTabs",value:function(){var tabs=this.props.tabs.map(function(tab){var tabClass=this.state.activeTab===tab.id?"active":null,href="#"+tab.id,tabID="tab-"+tab.id;return React.createElement("li",{role:"presentation",className:tabClass,key:tab.id},React.createElement("a",{id:tabID,href:href,role:"tab","data-toggle":"tab",onClick:this.handleClick.bind(null,tab.id)},tab.label))}.bind(this));return tabs}},{key:"getTabPanes",value:function(){var tabPanes=React.Children.map(this.props.children,function(child,key){if(child)return React.cloneElement(child,{activeTab:this.state.activeTab,key:key})}.bind(this));return tabPanes}},{key:"render",value:function(){var tabs=this.getTabs(),tabPanes=this.getTabPanes(),tabStyle={marginLeft:0,marginBottom:"5px"};return React.createElement("div",null,React.createElement("ul",{className:"nav nav-tabs",role:"tablist",style:tabStyle},tabs),React.createElement("div",{className:"tab-content"},tabPanes))}}]),Tabs}(React.Component);Tabs.propTypes={tabs:React.PropTypes.array.isRequired,defaultTab:React.PropTypes.string,updateURL:React.PropTypes.bool},Tabs.defaultProps={onTabChange:function(){},updateURL:!1};var TabPane=function(_React$Component2){function TabPane(){return _classCallCheck(this,TabPane),_possibleConstructorReturn(this,(TabPane.__proto__||Object.getPrototypeOf(TabPane)).apply(this,arguments))}return _inherits(TabPane,_React$Component2),_createClass(TabPane,[{key:"render",value:function(){var classList="tab-pane",title=void 0;return this.props.TabId===this.props.activeTab&&(classList+=" active"),this.props.Title&&(title=React.createElement("h1",null,this.props.Title)),React.createElement("div",{role:"tabpanel",className:classList,id:this.props.TabId},title,this.props.children)}}]),TabPane}(React.Component);TabPane.propTypes={TabId:React.PropTypes.string.isRequired,Title:React.PropTypes.string,activeTab:React.PropTypes.string};var Modal=function(_React$Component3){function Modal(){return _classCallCheck(this,Modal),_possibleConstructorReturn(this,(Modal.__proto__||Object.getPrototypeOf(Modal)).apply(this,arguments))}return _inherits(Modal,_React$Component3),_createClass(Modal,[{key:"render",value:function(){if(!this.props.show)return null;var modalStyle={position:"relative",maxWidth:1e3,maxHeight:"100%",margin:"0 auto",backgroundColor:"#fff",padding:30,borderRadius:10,overflowY:"auto",zIndex:9999},backdropStyle={position:"fixed",zIndex:9998,top:0,bottom:0,left:0,right:0,backgroundColor:"rgba(0,0,0,0.3)",padding:50};return React.createElement("div",{style:backdropStyle,onClick:this.props.onClose},React.createElement("div",{style:modalStyle,onClick:function(e){e.stopPropagation()}},this.props.children))}}]),Modal}(React.Component);Modal.propTypes={onClose:React.PropTypes.func.isRequired,show:React.PropTypes.bool,children:React.PropTypes.node},exports.Tabs=Tabs,exports.TabPane=TabPane,exports.Modal=Modal},,function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_specimenForm=__webpack_require__(3),_specimenForm2=_interopRequireDefault(_specimenForm),_Tabs=__webpack_require__(5),_Panel=__webpack_require__(2),_Panel2=_interopRequireDefault(_Panel),BiobankSpecimen=function(_React$Component){function BiobankSpecimen(props){_classCallCheck(this,BiobankSpecimen);var _this=_possibleConstructorReturn(this,(BiobankSpecimen.__proto__||Object.getPrototypeOf(BiobankSpecimen)).call(this,props));return _this.state={Data:{},collectionData:{},uploadResult:null,isLoaded:!1,loadedData:0},_this.handleSubmit=_this.handleSubmit.bind(_this),_this.setCollectionData=_this.setCollectionData.bind(_this),_this.showAlertMessage=_this.showAlertMessage.bind(_this),_this.toggleModal=_this.toggleModal.bind(_this),_this}return _inherits(BiobankSpecimen,_React$Component),_createClass(BiobankSpecimen,[{key:"componentDidMount",value:function(){var self=this;$.ajax(this.props.DataURL,{dataType:"json",success:function(data){var collectionData={specimen:data.specimenData,container:data.containerData,parentSpecimenBarcode:data.parentSpecimenBarcode,parentContainerBarcode:data.parentContainerBarcode};({specimenTypes:data.specimenTypes,containerTypesPrimary:data.containerTypesPrimary});self.setState({Data:data,isLoaded:!0,collectionData:collectionData})},error:function(_error,errorCode,errorMsg){console.error(_error,errorCode,errorMsg),self.setState({error:"An error occurred when loading the form!"})}})}},{key:"toggleModal",value:function(){this.setState({isOpen:!this.state.isOpen})}},{key:"render",value:function(){if(void 0!==this.state.error)return React.createElement("div",{className:"alert alert-danger text-center"},React.createElement("strong",null,this.state.error));if(!this.state.isLoaded)return React.createElement("button",{className:"btn-info has-spinner"},"Loading",React.createElement("span",{className:"glyphicon glyphicon-refresh glyphicon-refresh-animate"}));var alertMessage="",alertClass="alert text-center hide",backURL=loris.BaseURL.concat("/biobank/");if(this.state.uploadResult&&("success"===this.state.uploadResult?(alertClass="alert alert-success text-center",alertMessage="Update Successful!"):"error"===this.state.uploadResult&&(alertClass="alert alert-danger text-center",alertMessage="Failed to update the file")),this.state.collectionData.parentSpecimenBarcode)var specimenURL=loris.BaseURL+"/biobank/specimen/?barcode=",parentSpecimenBarcode=React.createElement(LinkElement,{label:"Parent Specimen",text:this.state.collectionData.parentSpecimenBarcode,href:specimenURL+this.state.collectionData.parentSpecimenBarcode});if(this.state.collectionData.parentContainerBarcode)var containerURL=loris.BaseURL+"/biobank/container/?barcode=",parentContainerBarcode=React.createElement(LinkElement,{label:"Parent Container",text:this.state.collectionData.parentContainerBarcode,href:containerURL+this.state.collectionData.parentContainerBarcode});if(this.state.collectionData.specimen.data)var dataObject=this.state.collectionData.specimen.data,dataArray=Object.keys(dataObject).map(function(key){return React.createElement(StaticElement,{label:key,text:dataObject[key]})});var location;location=this.state.Data.containerLoci[this.state.collectionData.container.locusId].location_id?React.createElement(StaticElement,{label:"Location ",text:this.state.Data.siteInfo[this.state.Data.containerLoci[this.state.collectionData.container.locusId].location_id].Name}):React.createElement(StaticElement,{label:"Destination ",text:this.state.Data.siteInfo[this.state.Data.containerLoci[this.state.collectionData.container.locusId].destination_id].Name+" (In Transit)"});var addSpecimenButton=void 0,specimenForm=void 0;return loris.userHasPermission("biobank_write")&&(addSpecimenButton=React.createElement(ButtonElement,{buttonClass:"btn btn-success",columnSize:"col-sm-2",onUserInput:this.toggleModal,label:"Add Children",type:"button"}),specimenForm=React.createElement(_Tabs.Modal,{show:this.state.isOpen,onClose:this.toggleModal},React.createElement(_specimenForm2.default,{DataURL:loris.BaseURL+"/biobank/ajax/FileUpload.php?action=getFormData",action:loris.BaseURL+"/biobank/ajax/FileUpload.php?action=submitSpecimen",child:"true",specimenId:this.state.collectionData.specimen.id,barcode:this.state.collectionData.container.barcode,candidateId:this.state.Data.candidateInfo[""].ID,sessionId:this.state.Data.sessionInfo[""].ID}))),React.createElement("div",null,React.createElement("div",{className:alertClass,role:"alert",ref:"alert-message"},alertMessage),"success"===this.state.uploadResult?React.createElement("a",{className:"btn btn-primary",href:backURL},"Back to biobank"):null,React.createElement("h3",null,"Specimen ",React.createElement("strong",null,this.state.collectionData.container.barcode)),addSpecimenButton,React.createElement(FormElement,{columns:4},React.createElement(LinkElement,{label:"PSCID",text:this.state.Data.candidateInfo[""].PSCID,href:loris.BaseURL+"/"+this.state.Data.candidateInfo[""].CandID}),React.createElement(LinkElement,{label:"Visit Label",text:this.state.Data.sessionInfo[""].Visit_label,href:loris.BaseURL+"/instrument_list/?candID="+this.state.Data.candidateInfo[""].CandID+"&sessionID="+this.state.Data.sessionInfo[""].ID}),React.createElement(StaticElement,{label:"Status",
text:this.state.Data.containerStati[this.state.collectionData.container.statusId].label}),location,parentSpecimenBarcode,parentContainerBarcode),React.createElement(FormElement,{columns:3},React.createElement(_Panel2.default,{id:"collection-panel",title:"Collection"},React.createElement(FormElement,{name:"biobankSpecimen",onSubmit:this.handleSubmit,ref:"form"},React.createElement(StaticElement,{label:"Type",text:this.state.Data.specimenTypes[this.state.collectionData.specimen.typeId].label}),React.createElement(StaticElement,{label:"Quantity",text:this.state.collectionData.specimen.quantity+" "+this.state.Data.containerUnits[this.state.Data.containerCapacities[this.state.Data.containerTypesPrimary[this.state.collectionData.container.typeId].capacity_id].unit_id].unit}),React.createElement(StaticElement,{label:"Container Type",text:this.state.Data.containerTypesPrimary[this.state.collectionData.container.typeId].label}),React.createElement(StaticElement,{label:"Site",text:this.state.Data.siteInfo[this.state.Data.containerLoci[this.state.collectionData.container.locusId].origin_id].Name}),React.createElement(StaticElement,{label:"Collection Time",text:this.state.collectionData.specimen.timeCollect}),dataArray,React.createElement(StaticElement,{label:"Notes",text:this.state.collectionData.specimen.notes}))),React.createElement(_Panel2.default,{id:"preparation-panel",title:"Preparation"}),React.createElement(_Panel2.default,{id:"analysis-panel",title:"Analysis"})),specimenForm)}},{key:"handleSubmit",value:function(e){e.preventDefault();var self=this,myCollectionData=this.state.formData;$("#biobankSpecimenEl").hide(),$("#file-progress").removeClass("hide"),$.ajax({type:"POST",url:self.props.action,data:JSON.stringify(myCollectionData),cache:!1,contentType:!1,processData:!1,xhr:function xhr(){var xhr=new window.XMLHttpRequest;return xhr.upload.addEventListener("progress",function(evt){if(evt.lengthComputable){var progressbar=$("#progressbar"),progresslabel=$("#progresslabel"),percent=Math.round(evt.loaded/evt.total*100);$(progressbar).width(percent+"%"),$(progresslabel).html(percent+"%"),progressbar.attr("aria-valuenow",percent)}},!1),xhr},success:function(data){$("#file-progress").addClass("hide"),self.setState({uploadResult:"success"}),self.showAlertMessage()},error:function(err){console.error(err),self.setState({uploadResult:"error"}),self.showAlertMessage()}})}},{key:"setCollectionData",value:function(formElement,value){var collectionData=this.state.collectionData;""===value?collectionData[formElement]=null:collectionData[formElement]=value,this.setState({collectionData:collectionData})}},{key:"showAlertMessage",value:function(){var self=this;if(null!==this.refs["alert-message"]){var alertMsg=this.refs["alert-message"];$(alertMsg).fadeTo(2e3,500).delay(3e3).slideUp(500,function(){self.setState({uploadResult:null})})}}}]),BiobankSpecimen}(React.Component);BiobankSpecimen.propTypes={DataURL:React.PropTypes.string.isRequired,action:React.PropTypes.string.isRequired};var RBiobankSpecimen=React.createFactory(BiobankSpecimen);window.BiobankSpecimen=BiobankSpecimen,window.RBiobankSpecimen=RBiobankSpecimen,exports.default=BiobankSpecimen}]);
//# sourceMappingURL=specimenIndex.js.map