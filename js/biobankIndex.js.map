{"version":3,"sources":["webpack:///modules/biobank/js/biobankIndex.js","webpack:///webpack/bootstrap 0e3588f28124eb33f63d?d54f*******","webpack:///./modules/biobank/jsx/biobankIndex.js","webpack:///./jsx/Loader.js","webpack:///./modules/biobank/jsx/filter.js","webpack:///./jsx/FilterForm.js","webpack:///./jsx/Panel.js","webpack:///./modules/biobank/jsx/specimenForm.js","webpack:///./modules/biobank/jsx/barcodeForm.js","webpack:///./modules/biobank/jsx/collectionForm.js","webpack:///./modules/biobank/jsx/customFields.js","webpack:///./modules/biobank/jsx/containerParentForm.js","webpack:///./modules/biobank/jsx/containerDisplay.js","webpack:///./jsx/Modal.js","webpack:///./modules/biobank/jsx/poolSpecimenForm.js","webpack:///./modules/biobank/jsx/preparationForm.js","webpack:///./modules/biobank/jsx/containerForm.js","webpack:///./modules/biobank/jsx/containerBarcodeForm.js","webpack:///./jsx/Tabs.js","webpack:///./modules/biobank/jsx/specimen.js","webpack:///./modules/biobank/jsx/globals.js","webpack:///./modules/biobank/jsx/quantityField.js","webpack:///./modules/biobank/jsx/temperatureField.js","webpack:///./modules/biobank/jsx/statusField.js","webpack:///./modules/biobank/jsx/locationField.js","webpack:///./modules/biobank/jsx/analysisForm.js","webpack:///./modules/biobank/jsx/lifeCycle.js","webpack:///./modules/biobank/jsx/containerCheckout.js","webpack:///./modules/biobank/jsx/container.js","webpack:///./modules/biobank/jsx/barcodePath.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_Loader","_Loader2","_filter","_filter2","_specimen","_specimen2","_container","_container2","BiobankIndex","_React$Component","_this$state","this","_this","getPrototypeOf","state","specimenFilter","containerDataTable","containerFilter","specimenForm","containerForm","aliquotForm","containerParentForm","barcode","temperature","quantity","status","location","collection","preparation","analysis","fetch","bind","loadFilters","loadSpecimenDataTable","loadContainerDataTable","loadOptions","loadContainer","loadSpecimen","updateSpecimenFilter","updateContainerFilter","clone","mapFormOptions","edit","close","setSpecimen","revertSpecimen","setContainer","revertContainer","setCoordinate","setSequential","setFiles","addPreparation","addAnalysis","saveSpecimen","saveContainer","saveChildContainer","save","_this2","then","setState","isLoaded","_this3","Promise","resolve","page","_this4","specimenFilterDataURL","data","specimenDataTable","_this5","containerFilterDataURL","_this6","optionsURL","options","_this7","containerDataURL","container","_this8","specimenDataURL","specimen","url","$","ajax","dataType","success","error","errorCode","errorMsg","console","object","JSON","parse","stringify","attribute","stateKey","_this9","editable","_this10","name","coordinate","coordinates","sequential","files","locationId","_this11","saveSpecimenURL","_this12","saveContainerURL","_this13","childContainers","message","_this14","dataObject","FormData","file","append","type","cache","contentType","processData","swal","textStatus","errorThrown","responseJSON","undefined","React","createElement","className","display","saveBarcodeListURL","Component","request","loris","BaseURL","submit","biobankIndex","ReactDOM","render","document","getElementById","Loader","apply","arguments","style","width","size","height","propTypes","PropTypes","int","defaultProps","_BiobankFilter$propTy","_FilterForm","_FilterForm2","_specimenForm","_specimenForm2","_poolSpecimenForm","_poolSpecimenForm2","_containerForm","_containerForm2","_Tabs","_Modal","_Modal2","BiobankFilter","resetFilters","formatSpecimenColumns","formatContainerColumns","refs","biobankFilter","clearFilter","column","cell","rowData","rowHeaders","row","forEach","header","index","onClick","cursor","pscidURL","href","visitLabelURL","color","addSpecimenButton","poolSpecimenButton","addContainerButton","containerTypesPrimary","containerStati","candidates","sessions","title","show","closeModal","candidateSessions","sessionCenters","specimenTypes","specimenTypeUnits","specimenTypeAttributes","attributeOptions","attributeDatatypes","containersNonPrimary","containerDimensions","containerCoordinates","barcodesPrimary","containersPrimary","searchSpecimenButton","searchSpecimen","SearchableDropdown","label","onUserInput","placeHolder","autoFocus","barcodesNonPrimary","searchContainerButton","searchContainer","poolSpecimenForm","specimenProtocols","specimenProtocolAttributes","capacities","specimenUnits","specimenRequest","containerTypesNonPrimary","centers","tabList","Tabs","tabs","defaultTab","updateURL","TabPane","TabId","marginTop","formElements","form","onUpdate","filter","ButtonElement","StaticDataTable","Data","Headers","Filter","getFormattedCell","isRequired","func","string","_typeof","Symbol","iterator","_Panel","FilterForm","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","keys","filterKey","exactMatch","clear","Module","formChildren","Children","children","child","isValidElement","callbackFunc","callbackName","elementName","displayName","queryFieldName","filterValue","push","cloneElement","fieldName","fieldValue","set","FormElement","warn","Panel","collapsed","initCollapsed","panelClass","toggleCollapsed","glyphClass","pencilGlyph","marginRight","plusGlyph","add","removeGlyph","cancel","panelHeading","data-toggle","data-target","role","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","formErrors","candidateId","sessionId","centerId","barcodeList","1","count","copyMultiplier","toggleCollapse","addBarcode","setCopyMultiplier","copyBarcode","removeBarcode","saveBarcodeList","availableId","find","statusId","originId","unitId","typeId","freezeThaw","fTCycle","candidate","CandID","session","ID","parentSpecimenId","onChange","Function","e","nextKey","multiplier","barcodeListArray","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","barcodeKey","units","_iterator","next","done","err","return","globalFields","remainingQuantityFields","StaticElement","text","PSCID","Visit_label","TextboxElement","required","SelectElement","emptyOption","disabled","onSubmit","ref","columnSize","_collectionForm","_collectionForm2","_containerParentForm","_containerParentForm2","SpecimenBarcodeForm","copy","addBarcodeButton","addBarcodeText","copyBarcodeButton","copyBarcodeText","min","max","removeBarcodeButton","glyphStyle","marginLeft","fontSize","parentTypeId","paddingLeft","position","right","_customFields","_customFields2","SpecimenCollectionForm","setCollection","addData","setData","updateButton","specimenTypeFields","unit","specimenTypeFieldsObject","fields","specimenFields","DateElement","minYear","maxYear","date","TimeElement","time","TextareaElement","comments","CustomFields","attributeFields","map","datatype","DataElement","FileElement","_containerDisplay","_containerDisplay2","ContainerParentForm","parentContainerId","recursive","containerDisplay","containerBarcodesNonPrimary","parentContainerField","dimensionId","dimensions","coordinatesTotal","dimension","containerTypes","select","selectedCoordinate","ContainerDisplay","redirectURL","drag","drop","tooltip","load","types","primary","preventDefault","dataTransfer","getData","newCoordinate","parseInt","containerId","containers","increaseCoordinate","barcodeField","throwWarning","CheckboxElement","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","data-html","data-placement","data-original-title","rowHeight","rowStyle","Modal","showCancelButton","confirmButtonText","cancelButtonText","backdropStyle","zIndex","top","bottom","left","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","borderTopRightRadius","bodyStyle","modal","stopPropagation","bool","_preparationForm","_preparationForm2","PoolSpecimenForm","formData","errorMessage","barcodeCount","step","handleSubmit","validateForm","setFormData","setPreparationFormData","setSpecimenFormData","submitForm","setBarcodeCount","previous","removePreparation","validate","formSwitch","preparationSwitch","runAjax","poolData","responseText","inputData","reject","method","field","inputForm","preparationButton","preparationForm","setParentFormData","insertAction","NumericElement","pscid","pSCIDs","visit","sessionData","visits","barcodesArray","values","barcodesString","join","parentSpecimenBarcodes","parentSpecimenIds","specimenIds","action","refreshParent","formElement","test","isNaN","currentContainerType","currentSpecimenType","log","formObj","xhr","window","XMLHttpRequest","onSuccess","msg","isValidForm","formRefs","requiredFields","visitLabel","hasError","forceUpdate","preparationFormData","specimenFormData","DataURL","refreshTable","SpecimenPreparationForm","setPreparation","submitButton","specimenProtocolFields","protocolId","specimenProtocolFieldsObject","_containerBarcodeForm","_containerBarcodeForm2","BiobankContainerForm","containerList","countContainers","addContainer","copyContainer","removeContainer","saveContainerList","siteId","containerListArray","containerKey","ContainerBarcodeForm","addContainerText","copyContainerButton","copyContainerText","removeContainerButton","hash","activeTab","substr","handleClick","getTabs","getTabPanes","tabId","onTabChange","scrollDistance","scrollTop","tab","tabClass","tabID","tabPanes","tabStyle","marginBottom","array","VerticalTabs","_React$Component2","_React$Component3","classList","Title","_globals","_globals2","_analysisForm","_analysisForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","addAliquotForm","collectionPanel","collectionPanelForm","cancelEditCollectionButton","collectionData","preparationPanel","cancelEditPreparationButton","protocol","preparationData","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","analysisData","methodId","datatypeId","LinkElement","download","globals","returnToFilter","specimenPageDataURL","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","Globals","increaseCycle","decreaseCycle","cycle","specimenTypeField","containerTypeField","quantityField","fTCycleField","temperatureField","statusField","stati","locationField","originField","parentSpecimenField","dateTimeCreate","parentSpecimenContainer","parentSpecimenFieldValue","parentContainerBarcodeValue","candidateSessionField","fieldList","QuantityField","flexGrow","inputClass","TemperatureField","StatusField","LocationField","labelClass","centerIds","SpecimenAnalysisForm","setAnalysis","File","specimenMethodFields","specimenMethodFieldsObject","fileUpload","LifeCycle","css","border","box-shadow","collectionNode","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","line","nodes","lineWidth","lineStyle","ContainerCheckout","checkoutContainer","checkoutButton","_barcodePath","_barcodePath2","BiobankContainer","barcodePath","parentContainers","listAssigned","coordinateList","listUnassigned","containerPageDataURL","BarcodePath","path","pathLength"],"mappings":"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","file":"./modules/biobank/js/biobankIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _filter = __webpack_require__(2);\n\t\n\tvar _filter2 = _interopRequireDefault(_filter);\n\t\n\tvar _specimen = __webpack_require__(17);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tvar _container = __webpack_require__(26);\n\t\n\tvar _container2 = _interopRequireDefault(_container);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global ReactDOM */\n\t\n\tvar BiobankIndex = function (_React$Component) {\n\t  _inherits(BiobankIndex, _React$Component);\n\t\n\t  function BiobankIndex() {\n\t    var _this$state;\n\t\n\t    _classCallCheck(this, BiobankIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankIndex.__proto__ || Object.getPrototypeOf(BiobankIndex)).call(this));\n\t\n\t    _this.state = (_this$state = {\n\t      specimenFilter: {},\n\t      containerDataTable: {},\n\t      containerFilter: {}\n\t    }, _defineProperty(_this$state, 'containerDataTable', {}), _defineProperty(_this$state, 'data', {}), _defineProperty(_this$state, 'specimen', {}), _defineProperty(_this$state, 'container', {}), _defineProperty(_this$state, 'options', {}), _defineProperty(_this$state, 'files', {}), _defineProperty(_this$state, 'coordinate', null), _defineProperty(_this$state, 'sequential', false), _defineProperty(_this$state, 'page', ''), _defineProperty(_this$state, 'isLoaded', false), _defineProperty(_this$state, 'editable', {\n\t      specimenForm: false,\n\t      containerForm: false,\n\t      aliquotForm: false,\n\t      containerParentForm: false,\n\t      barcode: false,\n\t      temperature: false,\n\t      quantity: false,\n\t      status: false,\n\t      location: false,\n\t      collection: false,\n\t      preparation: false,\n\t      analysis: false\n\t    }), _this$state);\n\t\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.loadFilters = _this.loadFilters.bind(_this);\n\t    _this.loadSpecimenDataTable = _this.loadSpecimenDataTable.bind(_this);\n\t    _this.loadContainerDataTable = _this.loadContainerDataTable.bind(_this);\n\t    _this.loadOptions = _this.loadOptions.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.loadSpecimen = _this.loadSpecimen.bind(_this);\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.updateSpecimenFilter = _this.updateSpecimenFilter.bind(_this);\n\t    _this.updateContainerFilter = _this.updateContainerFilter.bind(_this);\n\t    _this.clone = _this.clone.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.edit = _this.edit.bind(_this);\n\t    _this.close = _this.close.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.revertSpecimen = _this.revertSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.revertContainer = _this.revertContainer.bind(_this);\n\t    _this.setCoordinate = _this.setCoordinate.bind(_this);\n\t    _this.setSequential = _this.setSequential.bind(_this);\n\t    _this.setFiles = _this.setFiles.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.addAnalysis = _this.addAnalysis.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveChildContainer = _this.saveChildContainer.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankIndex, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _this2 = this;\n\t\n\t      this.loadFilters().then(function () {\n\t        return _this2.loadOptions().then(function () {\n\t          return _this2.setState({ isLoaded: true });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadFilters',\n\t    value: function loadFilters() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this3.loadContainerDataTable().then(function () {\n\t          return _this3.loadSpecimenDataTable().then(function () {\n\t            _this3.setState({ page: 'filter' }, resolve());\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimenDataTable',\n\t    value: function loadSpecimenDataTable() {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this4.fetch(_this4.props.specimenFilterDataURL).then(function (data) {\n\t          var specimenDataTable = data;\n\t          _this4.setState({ specimenDataTable: specimenDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainerDataTable',\n\t    value: function loadContainerDataTable() {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this5.fetch(_this5.props.containerFilterDataURL).then(function (data) {\n\t          var containerDataTable = data;\n\t          _this5.setState({ containerDataTable: containerDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadOptions',\n\t    value: function loadOptions() {\n\t      var _this6 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this6.fetch(_this6.props.optionsURL).then(function (data) {\n\t          var options = data;\n\t          _this6.setState({ options: options }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(barcode) {\n\t      var _this7 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this7.fetch(_this7.props.containerDataURL + barcode).then(function (data) {\n\t          var container = _this7.clone(data.container);\n\t          var page = 'container';\n\t          _this7.setState({ data: data, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimen',\n\t    value: function loadSpecimen(barcode) {\n\t      var _this8 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this8.fetch(_this8.props.specimenDataURL + barcode).then(function (data) {\n\t          var specimen = _this8.clone(data.specimen);\n\t          var container = _this8.clone(data.container);\n\t          var page = 'specimen';\n\t          _this8.setState({ data: data, specimen: specimen, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetch',\n\t    value: function fetch(url) {\n\t      return new Promise(function (resolve) {\n\t        $.ajax(url, {\n\t          dataType: 'json',\n\t          success: function success(data) {\n\t            return resolve(data);\n\t          },\n\t          error: function error(_error, errorCode, errorMsg) {\n\t            return console.error(_error, errorCode, errorMsg);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateSpecimenFilter',\n\t    value: function updateSpecimenFilter(specimenFilter) {\n\t      this.setState({ specimenFilter: specimenFilter });\n\t    }\n\t  }, {\n\t    key: 'updateContainerFilter',\n\t    value: function updateContainerFilter(containerFilter) {\n\t      this.setState({ containerFilter: containerFilter });\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone(object) {\n\t      return JSON.parse(JSON.stringify(object));\n\t    }\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(object, attribute) {\n\t      var data = {};\n\t      for (var id in object) {\n\t        data[id] = object[id][attribute];\n\t      }\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'edit',\n\t    value: function edit(stateKey) {\n\t      var _this9 = this;\n\t\n\t      this.close().then(function () {\n\t        var editable = _this9.state.editable;\n\t        editable[stateKey] = true;\n\t        _this9.setState({ editable: editable });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var _this10 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var editable = _this10.state.editable;\n\t        for (var key in editable) {\n\t          editable[key] = false;\n\t        }\n\t        _this10.state.data.specimen && _this10.revertSpecimen();\n\t        _this10.state.data.container && _this10.revertContainer();\n\t        _this10.setState({ editable: editable }, resolve());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimen',\n\t    value: function revertSpecimen() {\n\t      var specimen = this.state.specimen;\n\t      specimen = this.clone(this.state.data.specimen);\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.state.container;\n\t      value ? container[name] = value : delete container[name];\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainer',\n\t    value: function revertContainer() {\n\t      var container = this.state.container;\n\t      container = this.clone(this.state.data.container);\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setCoordinate',\n\t    value: function setCoordinate(value) {\n\t      var coordinate = this.state.coordinates;\n\t      coordinate = value;\n\t      this.setState({ coordinate: coordinate });\n\t    }\n\t  }, {\n\t    key: 'setSequential',\n\t    value: function setSequential(name, value) {\n\t      var sequential = this.state.sequential;\n\t      sequential = value;\n\t      this.setState({ sequential: sequential });\n\t    }\n\t  }, {\n\t    key: 'setFiles',\n\t    value: function setFiles(name, value) {\n\t      var files = this.state.files;\n\t      files[value.name] = value;\n\t      this.setState({ files: files });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addAnalysis',\n\t    value: function addAnalysis() {\n\t      var specimen = this.state.specimen;\n\t      specimen.analysis = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this11 = this;\n\t\n\t      var specimen = this.state.specimen;\n\t      this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(function () {\n\t        var data = _this11.state.data;\n\t        data.specimen = _this11.clone(_this11.state.specimen);\n\t        _this11.setState({ data: data }, _this11.close());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this12 = this;\n\t\n\t      var container = this.state.container;\n\t      this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(function () {\n\t        var data = _this12.state.data;\n\t        data.container = _this12.clone(_this12.state.container);\n\t        _this12.setState({ data: data }, _this12.close());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveChildContainer',\n\t    value: function saveChildContainer(container) {\n\t      var _this13 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this13.save(container, _this13.props.saveContainerURL).then(function () {\n\t          var data = _this13.state.data;\n\t          data.childContainers[container.id] = _this13.clone(container);\n\t          _this13.setState({ data: data }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(data, url, message) {\n\t      var _this14 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var dataObject = new FormData();\n\t        for (var file in _this14.state.files) {\n\t          dataObject.append(_this14.state.files[file].name, _this14.state.files[file]);\n\t        }\n\t        dataObject.append('data', JSON.stringify(data));\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: dataObject,\n\t          cache: false,\n\t          contentType: false,\n\t          processData: false,\n\t          success: function success() {\n\t            resolve();\n\t            _this14.loadOptions();\n\t            message && swal(message, '', 'success');\n\t          },\n\t          error: function error(_error2, textStatus, errorThrown) {\n\t            var message = (_error2.responseJSON || {}).message || 'Submission error!';\n\t            swal(message, '', 'error');\n\t            console.error(_error2, textStatus, errorThrown);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(_Loader2.default, null);\n\t      }\n\t\n\t      var display = void 0;\n\t      switch (this.state.page) {\n\t        case 'container':\n\t          display = React.createElement(_container2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            coordinate: this.state.coordinate,\n\t            sequential: this.state.sequential,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            loadFilters: this.loadFilters,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setCoordinate: this.setCoordinate,\n\t            setSequential: this.setSequential,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t        case 'specimen':\n\t          display = React.createElement(\n\t            'div',\n\t            { className: 'barcode-page' },\n\t            React.createElement(_specimen2.default, {\n\t              data: this.state.data,\n\t              options: this.state.options,\n\t              container: this.state.container,\n\t              specimen: this.state.specimen,\n\t              files: this.state.files,\n\t              editable: this.state.editable,\n\t              loadContainer: this.loadContainer,\n\t              loadSpecimen: this.loadSpecimen,\n\t              loadFilters: this.loadFilters,\n\t              loadOptions: this.loadOptions,\n\t              mapFormOptions: this.mapFormOptions,\n\t              setContainer: this.setContainer,\n\t              revertContainer: this.revertContainer,\n\t              saveContainer: this.saveContainer,\n\t              setSpecimen: this.setSpecimen,\n\t              revertSpecimen: this.revertSpecimen,\n\t              saveSpecimen: this.saveSpecimen,\n\t              addPreparation: this.addPreparation,\n\t              addAnalysis: this.addAnalysis,\n\t              setFiles: this.setFiles,\n\t              saveChildContainer: this.saveChildContainer,\n\t              saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t              edit: this.edit,\n\t              close: this.close,\n\t              save: this.save\n\t            })\n\t          );\n\t          break;\n\t        case 'filter':\n\t          display = React.createElement(_filter2.default, {\n\t            specimenFilter: this.state.specimenFilter,\n\t            specimenDataTable: this.state.specimenDataTable,\n\t            containerFilter: this.state.containerFilter,\n\t            containerDataTable: this.state.containerDataTable,\n\t            options: this.state.options,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            updateSpecimenFilter: this.updateSpecimenFilter,\n\t            updateContainerFilter: this.updateContainerFilter,\n\t            mapFormOptions: this.mapFormOptions,\n\t            edit: this.edit,\n\t            close: this.close,\n\t            loadFilters: this.loadFilters,\n\t            loadOptions: this.loadOptions,\n\t            save: this.save,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL\n\t          });\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'biobank-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            display\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t  var request = loris.BaseURL + '/biobank/ajax/requestData.php?';\n\t  var submit = loris.BaseURL + '/biobank/ajax/submitData.php?';\n\t  var biobankIndex = React.createElement(\n\t    'div',\n\t    { className: 'page=biobank' },\n\t    React.createElement(BiobankIndex, {\n\t      specimenFilterDataURL: loris.BaseURL + '/biobank/?format=json',\n\t      containerFilterDataURL: request + 'action=getContainerFilterData',\n\t      specimenDataURL: request + 'action=getSpecimenData&barcode=',\n\t      containerDataURL: request + 'action=getContainerData&barcode=',\n\t      optionsURL: request + 'action=getFormOptions',\n\t      saveContainerURL: submit + 'action=saveContainer',\n\t      saveSpecimenURL: submit + 'action=saveSpecimen',\n\t      saveBarcodeListURL: submit + 'action=saveBarcodeList'\n\t    })\n\t  );\n\t  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains the React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\"div\", {\n\t        className: \"loader\",\n\t        style: { width: this.props.size, height: this.props.size }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\tLoader.propTypes = { size: React.PropTypes.int };\n\tLoader.defaultProps = { size: 120 };\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _BiobankFilter$propTy;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(3);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _poolSpecimenForm = __webpack_require__(12);\n\t\n\tvar _poolSpecimenForm2 = _interopRequireDefault(_poolSpecimenForm);\n\t\n\tvar _containerForm = __webpack_require__(14);\n\t\n\tvar _containerForm2 = _interopRequireDefault(_containerForm);\n\t\n\tvar _Tabs = __webpack_require__(16);\n\t\n\tvar _Modal = __webpack_require__(11);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BiobankFilter = function (_React$Component) {\n\t  _inherits(BiobankFilter, _React$Component);\n\t\n\t  function BiobankFilter() {\n\t    _classCallCheck(this, BiobankFilter);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankFilter.__proto__ || Object.getPrototypeOf(BiobankFilter)).call(this));\n\t\n\t    _this.resetFilters = _this.resetFilters.bind(_this);\n\t    _this.formatSpecimenColumns = _this.formatSpecimenColumns.bind(_this);\n\t    _this.formatContainerColumns = _this.formatContainerColumns.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankFilter, [{\n\t    key: 'resetFilters',\n\t    value: function resetFilters() {\n\t      this.refs.biobankFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'formatSpecimenColumns',\n\t    value: function formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n\t      var _this2 = this;\n\t\n\t      var row = {};\n\t      var barcode = void 0;\n\t\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      switch (column) {\n\t        case 'Barcode':\n\t          barcode = row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                }, style: { cursor: 'pointer' } },\n\t              cell\n\t            )\n\t          );\n\t        case 'Parent Barcode':\n\t          barcode = row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'Container Barcode':\n\t          barcode = row['Container Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this2.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'PSCID':\n\t          var pscidURL = loris.BaseURL + '/' + row['PSCID'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: pscidURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Visit Label':\n\t          var visitLabelURL = loris.BaseURL + '/instrument_list/?candID=' + row['PSCID'] + '&sessionID=' + row['Visit Label'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: visitLabelURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Status':\n\t          switch (cell) {\n\t            case 'Available':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'green' } },\n\t                cell\n\t              );\n\t            case 'Reserved':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'orange' } },\n\t                cell\n\t              );\n\t            case 'Dispensed':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'red' } },\n\t                cell\n\t              );\n\t          }\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'formatContainerColumns',\n\t    value: function formatContainerColumns(column, cell, rowData, rowHeaders) {\n\t      var _this3 = this;\n\t\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      var row = {};\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      var barcode = void 0;\n\t      switch (column) {\n\t        case 'Barcode':\n\t          barcode = row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this3.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'Parent Barcode':\n\t          barcode = row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this3.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      var addSpecimenButton = void 0;\n\t      var poolSpecimenButton = void 0;\n\t      var addContainerButton = void 0;\n\t\n\t      /**\n\t       * Map Options for Form Select Elements of Specimen Form\n\t       */\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      addSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Add Specimen' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button add', onClick: function onClick() {\n\t              _this4.props.edit('specimenForm');\n\t            } },\n\t          '+'\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Specimen',\n\t            show: this.props.editable.specimenForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            candidateSessions: this.props.options.candidateSessions,\n\t            sessionCenters: this.props.options.sessionCenters,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            close: this.props.close,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      //TODO: turn the following into components to avoid duplication\n\t      //TODO: should there be a general search, or one for specimen and one for containers?\n\t      var barcodesPrimary = this.props.mapFormOptions(this.props.options.containersPrimary, 'barcode');\n\t      var searchSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Go To Specimen' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button search', onClick: function onClick() {\n\t              _this4.props.edit('searchSpecimen');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-search' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Go To Specimen',\n\t            show: this.props.editable.searchSpecimen,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'barcode',\n\t            label: 'Barcode',\n\t            options: barcodesPrimary,\n\t            onUserInput: function onUserInput(name, value) {\n\t              _this4.props.loadSpecimen(barcodesPrimary[value]).then(function () {\n\t                return _this4.props.close();\n\t              });\n\t            },\n\t            placeHolder: 'Please Scan or Select Barcode',\n\t            autoFocus: true\n\t          })\n\t        )\n\t      );\n\t\n\t      var barcodesNonPrimary = this.props.mapFormOptions(this.props.options.containersNonPrimary, 'barcode');\n\t      var searchContainerButton = void 0;\n\t      searchContainerButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Go To Container' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button search', onClick: function onClick() {\n\t              _this4.props.edit('searchContainer');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-search' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Go To Barcode',\n\t            show: this.props.editable.searchContainer,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'barcode',\n\t            label: 'Barcode',\n\t            options: barcodesNonPrimary,\n\t            onUserInput: function onUserInput(name, value) {\n\t              _this4.props.loadContainer(barcodesNonPrimary[value]).then(function () {\n\t                return _this4.props.close();\n\t              });\n\t            },\n\t            placeHolder: 'Please Scan or Select Barcode',\n\t            autoFocus: true\n\t          })\n\t        )\n\t      );\n\t\n\t      poolSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Pool Specimens' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button pool', onClick: function onClick() {\n\t              _this4.props.edit('poolSpecimenForm');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-resize-small' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Pool Specimens',\n\t            show: this.props.editable.poolSpecimenForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_poolSpecimenForm2.default, {\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            specimenProtocols: this.props.options.specimenProtocols,\n\t            specimenProtocolAttributes: this.props.options.specimenProtocolAttributes,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            capacities: this.props.options.capacities,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenUnits: this.props.options.specimenUnits,\n\t            candidates: candidates,\n\t            candidateSessions: this.props.options.candidateSessions,\n\t            sessionCenters: this.props.options.sessionCenters,\n\t            specimenRequest: loris.BaseURL + '/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode',\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveSpecimen: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveSpecimen',\n\t            saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer'\n\t          })\n\t        )\n\t      );\n\t\n\t      var containerTypesNonPrimary = this.props.mapFormOptions(this.props.options.containerTypesNonPrimary, 'label');\n\t\n\t      addContainerButton = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Add Container'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this4.props.edit('containerForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Container',\n\t            show: this.props.editable.containerForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_containerForm2.default, {\n\t            containerTypesNonPrimary: containerTypesNonPrimary,\n\t            centers: this.props.options.centers,\n\t            containerStati: containerStati,\n\t            saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer',\n\t            close: this.props.close,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      var tabList = [{ id: \"specimens\", label: \"Specimens\" }, { id: \"containers\", label: \"Containers\" }];\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'biobank-page' },\n\t        React.createElement(\n\t          _Tabs.Tabs,\n\t          { tabs: tabList, defaultTab: 'specimens', updateURL: true },\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[0].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row', style: { marginTop: 20 } },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-3' },\n\t                React.createElement(\n\t                  'div',\n\t                  { className: 'filter' },\n\t                  React.createElement(\n\t                    _FilterForm2.default,\n\t                    {\n\t                      formElements: this.props.specimenDataTable.form,\n\t                      onUpdate: this.props.updateSpecimenFilter,\n\t                      filter: this.props.specimenFilter\n\t                    },\n\t                    React.createElement(ButtonElement, {\n\t                      label: 'Clear Filters',\n\t                      type: 'reset',\n\t                      onUserInput: this.resetFilters\n\t                    }),\n\t                    React.createElement(\n\t                      'div',\n\t                      { className: 'align-row' },\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        searchSpecimenButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        addSpecimenButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        poolSpecimenButton\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-9' },\n\t                React.createElement(StaticDataTable, {\n\t                  Data: this.props.specimenDataTable.Data,\n\t                  Headers: this.props.specimenDataTable.Headers,\n\t                  Filter: this.props.specimenFilter,\n\t                  getFormattedCell: this.formatSpecimenColumns\n\t                })\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[1].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row', style: { marginTop: 20 } },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-3' },\n\t                React.createElement(\n\t                  'div',\n\t                  { className: 'filter' },\n\t                  React.createElement(\n\t                    _FilterForm2.default,\n\t                    {\n\t                      formElements: this.props.containerDataTable.form,\n\t                      onUpdate: this.props.updateContainerFilter,\n\t                      filter: this.props.containerFilter\n\t                    },\n\t                    React.createElement(ButtonElement, {\n\t                      label: 'Clear Filters',\n\t                      type: 'reset',\n\t                      onUserInput: this.resetFilters\n\t                    }),\n\t                    React.createElement(\n\t                      'div',\n\t                      { className: 'align-row' },\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        searchContainerButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        addContainerButton\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-9' },\n\t                React.createElement(StaticDataTable, {\n\t                  Data: this.props.containerDataTable.Data,\n\t                  Headers: this.props.containerDataTable.Headers,\n\t                  Filter: this.props.containerFilter,\n\t                  getFormattedCell: this.formatContainerColumns\n\t                })\n\t              )\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankFilter;\n\t}(React.Component);\n\t\n\tBiobankFilter.propTypes = (_BiobankFilter$propTy = {\n\t  specimenFilter: React.PropTypes.object.isRequired,\n\t  specimenDataTable: React.PropTypes.object.isRequired,\n\t  containerFilter: React.PropTypes.object.isRequired,\n\t  containerDataTable: React.PropTypes.object.isRequired,\n\t  options: React.PropTypes.object.isRequired,\n\t  editable: React.PropTypes.object.isRequired,\n\t  loadContainer: React.PropTypes.func.isRequired,\n\t  loadSpecimen: React.PropTypes.func.isRequired,\n\t  updateSpecimenFilter: React.PropTypes.func.isRequired,\n\t  updateContainerFilter: React.PropTypes.func.isRequired,\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  edit: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired\n\t}, _defineProperty(_BiobankFilter$propTy, 'close', React.PropTypes.func.isRequired), _defineProperty(_BiobankFilter$propTy, 'save', React.PropTypes.func.isRequired), _defineProperty(_BiobankFilter$propTy, 'saveBarcodeListURL', React.PropTypes.string.isRequired), _BiobankFilter$propTy);\n\t\n\texports.default = BiobankFilter;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(4);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t      if (key) {\n\t        filter[key] = {};\n\t        if (value) {\n\t          // all defined/non-null values must have some length, else empty string\n\t          filter[key].value = Object.keys(value).length > 0 ? value : '';\n\t        } else {\n\t          // null and undefined handled here\n\t          filter[key].value = '';\n\t        }\n\t        filter[key].exactMatch = type === \"SelectElement\";\n\t      } else if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure key is of string type and value is of string or object type\n\t      // before sending them to querystring\n\t      if (typeof fieldName !== 'string' || typeof fieldValue !== 'string' && (typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        this.props,\n\t        formChildren\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      var pencilGlyph = void 0;\n\t      if (this.props.edit) {\n\t        pencilGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-pencil\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.edit\n\t        });\n\t      }\n\t\n\t      var plusGlyph = void 0;\n\t      if (this.props.add) {\n\t        plusGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-plus\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.add\n\t        });\n\t      }\n\t\n\t      var removeGlyph = void 0;\n\t      if (this.props.cancel) {\n\t        removeGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-remove\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.cancel\n\t        });\n\t      }\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\"\n\t        },\n\t        React.createElement(\"span\", {\n\t          className: glyphClass,\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        }),\n\t        pencilGlyph,\n\t        plusGlyph,\n\t        removeGlyph,\n\t        this.props.title\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  edit: React.PropTypes.func,\n\t  add: React.PropTypes.func\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(6);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      candidateId: null,\n\t      sessionId: null,\n\t      centerId: null,\n\t      barcodeList: { 1: { specimen: { collection: {} }, container: {} } },\n\t      count: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.addBarcode = _this.addBarcode.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyBarcode = _this.copyBarcode.bind(_this);\n\t    _this.removeBarcode = _this.removeBarcode.bind(_this);\n\t    _this.saveBarcodeList = _this.saveBarcodeList.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveBarcodeList',\n\t    value: function saveBarcodeList() {\n\t      var _this2 = this;\n\t\n\t      var barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var barcode in barcodeList) {\n\t        //set container values\n\t        var container = barcodeList[barcode].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.locationId = this.state.centerId;\n\t        container.originId = this.state.centerId;\n\t\n\t        //set specimen values\n\t        var specimen = barcodeList[barcode].specimen;\n\t        specimen.candidateId = this.state.candidateId;\n\t        specimen.sessionId = this.state.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.locationId = this.state.centerId;\n\t        if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n\t          specimen.fTCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: these will eventually be higher level states.\n\t        if (this.props.data) {\n\t          specimen.candidateId = this.props.data.candidate.CandID;\n\t          specimen.sessionId = this.props.data.session.ID;\n\t          specimen.parentSpecimenId = this.props.data.specimen.id;\n\t          specimen.collection.locationId = this.props.data.container.locationId;\n\t          container.locationId = this.props.data.container.locationId;\n\t          container.originId = this.props.data.container.locationId;\n\t        }\n\t\n\t        barcodeList[barcode].container = container;\n\t        barcodeList[barcode].specimen = specimen;\n\t      }\n\t\n\t      this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(function () {\n\t        _this2.props.close();_this2.props.loadFilters();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var centerId = this.state.centerId;\n\t      var candidateId = this.state.candidateId;\n\t      var sessionId = this.state.sessionId;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      if (name === 'candidateId') {\n\t        candidateId = value;\n\t      } else if (name === 'sessionId') {\n\t        sessionId = value;\n\t        centerId = this.props.sessionCenters[sessionId].centerId;\n\t      } else {\n\t        //this is eliminate values if specimen type is changed\n\t        if (name === 'typeId') {\n\t          barcodeList[key].specimen = { collection: {} };\n\t        }\n\t        barcodeList[key].specimen[name] = value;\n\t      }\n\t\n\t      this.setState({ barcodeList: barcodeList, centerId: centerId, candidateId: candidateId, sessionId: sessionId });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var barcodeList = this.state.barcodeList;\n\t      barcodeList[key].container[name] = value;\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'addBarcode',\n\t    value: function addBarcode() {\n\t      var barcodeList = this.state.barcodeList;\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t\n\t      barcodeList[count + 1] = { specimen: {}, container: { collection: {} } };\n\t      collapsed[count + 1] = true;\n\t      count = count + 1;\n\t\n\t      this.setState({ barcodeList: barcodeList, collapsed: collapsed, count: count });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyBarcode',\n\t    value: function copyBarcode(key) {\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t      var nextKey = count + 1;\n\t      var barcodeList = this.state.barcodeList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key]));\n\t        delete barcodeList[nextKey].container.barcode;\n\t        collapsed[nextKey] = true;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList,\n\t        count: nextKey,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeBarcode',\n\t    value: function removeBarcode(key) {\n\t      var barcodeList = this.state.barcodeList;\n\t      delete barcodeList[key];\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(_barcodeForm2.default, {\n\t            data: _this3.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this3.state.collapsed[key],\n\t            toggleCollapse: _this3.toggleCollapse,\n\t            mapFormOptions: _this3.props.mapFormOptions,\n\t            container: _this3.state.barcodeList[key].container || null,\n\t            specimen: _this3.state.barcodeList[key].specimen || null,\n\t            removeBarcode: barcodeListArray.length !== 1 ? function () {\n\t              return _this3.removeBarcode(key);\n\t            } : null,\n\t            addBarcode: i == barcodeListArray.length ? _this3.addBarcode : null,\n\t            setCopyMultiplier: _this3.setCopyMultiplier,\n\t            copyMultiplier: _this3.state.copyMultiplier,\n\t            copyBarcode: i == barcodeListArray.length && _this3.state.barcodeList[key] ? _this3.copyBarcode : null,\n\t            setContainer: _this3.setContainer,\n\t            setSpecimen: _this3.setSpecimen,\n\t            onChange: _this3.props.onChange,\n\t            specimenTypes: _this3.props.specimenTypes,\n\t            containerTypesPrimary: _this3.props.containerTypesPrimary,\n\t            containersNonPrimary: _this3.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this3.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this3.props.attributeDatatypes,\n\t            attributeOptions: _this3.props.attributeOptions,\n\t            capacities: _this3.props.capacities,\n\t            containerDimensions: _this3.props.containerDimensions,\n\t            containerCoordinates: _this3.props.containerCoordinates,\n\t            specimenTypeUnits: _this3.props.specimenTypeUnits,\n\t            units: _this3.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimen,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimen,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.state.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.candidateId,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.sessionId,\n\t            disabled: this.state.candidateId ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: function onSubmit() {\n\t            _this3.saveBarcodeList();\n\t            //this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()\n\t          },\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(7);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimen(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyBarcode(this.props.copyMultiplier);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var addBarcodeButton = void 0;\n\t      var addBarcodeText = void 0;\n\t      var copyBarcodeButton = void 0;\n\t      var copyBarcodeText = void 0;\n\t      if (this.props.addBarcode) {\n\t        addBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcode\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcode) {\n\t        copyBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeButton = void 0;\n\t      if (this.props.removeBarcode) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcode,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeBarcodeButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                setSpecimen: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainer: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeButton,\n\t              addBarcodeText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeButton,\n\t              copyBarcodeText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(8);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.setCollection = _this.setCollection.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollection',\n\t    value: function setCollection(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollection('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = React.createElement(_customFields2.default, {\n\t              fields: specimenTypeFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.collection.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollection,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimen: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Custom Attribute Fields\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\tvar CustomFields = function (_React$Component) {\n\t  _inherits(CustomFields, _React$Component);\n\t\n\t  function CustomFields() {\n\t    _classCallCheck(this, CustomFields);\n\t\n\t    return _possibleConstructorReturn(this, (CustomFields.__proto__ || Object.getPrototypeOf(CustomFields)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CustomFields, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var fields = this.props.fields;\n\t      var attributeFields = Object.keys(fields).map(function (attribute) {\n\t\n\t        var datatype = _this2.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n\t        if (datatype === 'text' || datatype === 'number') {\n\t          if (fields[attribute]['refTableId'] === null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t\n\t          if (fields[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fields[attribute]['refTableId']],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === 'datetime') {\n\t          return React.createElement(DataElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.object[attribute]\n\t          });\n\t        }\n\t\n\t        // Do not present the possibility of uploading if file is already set\n\t        // File must instead be deleted or overwritten.\n\t        if (datatype === 'file' && !(_this2.props.data || {})[attribute]) {\n\t          return React.createElement(FileElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.files[_this2.props.object[attribute]]\n\t          });\n\t        }\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        attributeFields\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CustomFields;\n\t}(React.Component);\n\t\n\tCustomFields.propTypes = {\n\t  fields: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  object: React.PropTypes.object.isRequired,\n\t  setData: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = CustomFields;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.setContainer('temperature', this.props.containersNonPrimary[this.props.container.parentContainerId].temperature);\n\t      this.props.setContainer('locationId', this.props.containersNonPrimary[this.props.container.parentContainerId].locationId);\n\t      this.props.setContainer('statusId', this.props.containersNonPrimary[this.props.container.parentContainerId].statusId);\n\t    }\n\t  }, {\n\t    key: 'recursive',\n\t    value: function recursive(object, id) {\n\t      for (var key in this.props.containersNonPrimary) {\n\t        if (id == this.props.containersNonPrimary[key].parentContainerId) {\n\t          object = this.recursive(object, key);\n\t          delete object[key];\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      if (this.props.data) {\n\t        containerBarcodesNonPrimary = this.recursive(containerBarcodesNonPrimary, this.props.data.container.id);\n\t        delete containerBarcodesNonPrimary[this.props.data.container.id];\n\t      }\n\t\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.setContainer,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainer: this.props.setContainer\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(11);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var load = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\t\n\t        load(this.props.children[this.props.coordinates[coordinate]].barcode);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      this.props.saveChildContainer(container);\n\t    }\n\t  }, {\n\t    key: 'increaseCoordinate',\n\t    value: function increaseCoordinate(coordinate) {\n\t      coordinate++;\n\t      for (var c in this.props.coordinates) {\n\t        if (c == coordinate) {\n\t          this.props.close();\n\t        }\n\t      }\n\t      return coordinate;\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(name, value) {\n\t      var _this2 = this;\n\t\n\t      if (value) {\n\t        ;\n\t        var containerId = value;\n\t        var container = this.props.containers[containerId];\n\t        container.parentContainerId = this.props.container.id;\n\t        container.coordinate = this.props.coordinate;\n\t\n\t        this.props.saveChildContainer(container).then(function () {\n\t          if (_this2.props.sequential) {\n\t            _this2.props.edit('barcode');\n\t            var coordinate = _this2.increaseCoordinate(_this2.props.coordinate);\n\t            _this2.props.setCoordinate(coordinate);\n\t          } else {\n\t            _this2.props.close();\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      //TODO: This is eventually need to be reworked and cleaned up\n\t\n\t      var barcodeField = void 0;\n\t\n\t      if ((this.props.editable || {}).barcode) {\n\t        barcodeField = React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Load Container',\n\t            show: this.props.editable.barcode,\n\t            closeModal: this.props.close,\n\t            throwWarning: false\n\t          },\n\t          React.createElement(StaticElement, {\n\t            name: 'coordinate',\n\t            label: 'Coordinate',\n\t            text: this.props.coordinate\n\t          }),\n\t          React.createElement(CheckboxElement, {\n\t            name: 'sequential',\n\t            label: 'Sequential Loading',\n\t            value: this.props.sequential,\n\t            onUserInput: this.props.setSequential\n\t          }),\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'barcode',\n\t            label: 'Barcode',\n\t            options: this.props.barcodes,\n\t            onUserInput: this.loadContainer,\n\t            placeHolder: 'Please Scan or Select Barcode',\n\t            autoFocus: true\n\t          })\n\t        );\n\t      }\n\t\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var title = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = null;\n\t\n\t            if (!this.props.select) {\n\t              // This double if statement doesn't sound great\n\t              if ((this.props.coordinates || {})[coordinate]) {\n\t                nodeClass = 'node occupied';\n\t                dataHtml = 'true';\n\t                dataToggle = 'tooltip';\n\t                dataPlacement = 'top';\n\t                tooltipTitle = '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                draggable = 'true';\n\t                onDragStart = this.drag;\n\t                onDragOver = null;\n\t                onDrop = null;\n\t                onClick = this.redirectURL;\n\t              } else {\n\t                nodeClass = 'node load';\n\t                title = 'Load...';\n\t                onClick = function onClick(e) {\n\t                  _this3.props.setCoordinate(e.target.id);_this3.props.edit('barcode');\n\t                };\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this3.props.setContainer('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this3.props.setContainer('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  // TODO: --- This is currently not working ---\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                title: title,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            {\n\t              className: 'row',\n\t              style: rowStyle\n\t            },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'display' },\n\t        barcodeField,\n\t        display\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      var _this2 = this;\n\t\n\t      if (this.props.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          _this2.props.closeModal();\n\t        });\n\t      } else {\n\t        this.props.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 850,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '50px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          \"div\",\n\t          { style: backdropStyle, onClick: this.closeModal },\n\t          React.createElement(\n\t            \"div\",\n\t            { style: modalStyle, onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              } },\n\t            React.createElement(\n\t              \"div\",\n\t              { style: titleStyle },\n\t              this.props.title,\n\t              React.createElement(\n\t                \"span\",\n\t                { style: glyphStyle, onClick: this.closeModal },\n\t                \"\\xD7\"\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { style: bodyStyle },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(6);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _preparationForm = __webpack_require__(13);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Pool Specimen Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\tvar PoolSpecimenForm = function (_React$Component) {\n\t  _inherits(PoolSpecimenForm, _React$Component);\n\t\n\t  function PoolSpecimenForm(props) {\n\t    _classCallCheck(this, PoolSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (PoolSpecimenForm.__proto__ || Object.getPrototypeOf(PoolSpecimenForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      barcodeList: {},\n\t      errorMessage: null,\n\t      formErrors: {},\n\t      barcodeCount: 2,\n\t      preparation: false,\n\t      step: 1\n\t    };\n\t\n\t    _this.handleSubmit = _this.handleSubmit.bind(_this);\n\t    _this.validateForm = _this.validateForm.bind(_this);\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.setPreparationFormData = _this.setPreparationFormData.bind(_this);\n\t    _this.setSpecimenFormData = _this.setSpecimenFormData.bind(_this);\n\t    _this.submitForm = _this.submitForm.bind(_this);\n\t    _this.setBarcodeCount = _this.setBarcodeCount.bind(_this);\n\t    _this.next = _this.next.bind(_this);\n\t    _this.previous = _this.previous.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.removePreparation = _this.removePreparation.bind(_this);\n\t    _this.validate = _this.validate.bind(_this);\n\t    _this.formSwitch = _this.formSwitch.bind(_this);\n\t    _this.preparationSwitch = _this.preparationSwitch.bind(_this);\n\t    _this.runAjax = _this.runAjax.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(PoolSpecimenForm, [{\n\t    key: 'next',\n\t    value: function next() {\n\t      var _this2 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this2.setState({\n\t          poolData: data,\n\t          step: _this2.state.step + 1\n\t        });\n\t      }, function (error) {\n\t        swal(\"Oops!\", error.responseText, \"error\");\n\t      });\n\t    }\n\t  }, {\n\t    key: 'previous',\n\t    value: function previous() {\n\t      this.setState({\n\t        step: this.state.step - 1\n\t      });\n\t    }\n\t  }, {\n\t    key: 'validate',\n\t    value: function validate() {\n\t      return this.runAjax(this.props.specimenRequest, { barcodeList: this.state.barcodeList });\n\t    }\n\t  }, {\n\t    key: 'runAjax',\n\t    value: function runAjax(url, inputData) {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        $.ajax(url, {\n\t          method: \"GET\",\n\t          dataType: 'json',\n\t          data: inputData,\n\t          success: function (data) {\n\t            resolve(data);\n\t          }.bind(_this3),\n\t          error: function error(_error, textStatus, errorThrown) {\n\t            reject(_error);\n\t            console.error(_error);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setBarcodeCount',\n\t    value: function setBarcodeCount(field, value) {\n\t      var barcodeCount = value;\n\t      var barcodeList = this.state.barcodeList;\n\t      for (var barcode in barcodeList) {\n\t        if (barcode > barcodeCount) {\n\t          delete barcodeList[barcode];\n\t        }\n\t      }\n\t\n\t      this.setState({ barcodeCount: barcodeCount, barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'formSwitch',\n\t    value: function formSwitch(inputForm, specimenForm) {\n\t      switch (this.state.step) {\n\t        case 1:\n\t          return inputForm;\n\t        case 2:\n\t          return specimenForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'preparationSwitch',\n\t    value: function preparationSwitch(preparationButton, preparationForm) {\n\t      switch (this.state.preparation) {\n\t        case false:\n\t          return preparationButton;\n\t        case true:\n\t          return preparationForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var _this4 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this4.setState({\n\t          poolData: data,\n\t          preparation: true\n\t        });\n\t      }, function (error) {\n\t        swal('Oh no!', error.responseText, 'error');\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removePreparation',\n\t    value: function removePreparation() {\n\t      var formData = this.state.formData;\n\t      //TODO: is it better to set it to empty, or delete it?\n\t      formData.preparationForm = {};\n\t      this.setState({\n\t        preparation: false,\n\t        formData: formData\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      //Generates barcodes\n\t      var barcodes = [];\n\t      for (var i = 1; i <= this.state.barcodeCount; i++) {\n\t        barcodes.push(React.createElement(TextboxElement, {\n\t          name: i,\n\t          label: 'Barcode ' + i,\n\t          onUserInput: this.setFormData,\n\t          required: true,\n\t          value: this.state.barcodeList[i],\n\t          errorMessage: this.state.formErrors[i]\n\t        }));\n\t      }\n\t\n\t      var preparationButton = React.createElement(\n\t        'div',\n\t        { className: 'row' },\n\t        React.createElement('div', { className: 'col-xs-4' }),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs 4 action' },\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button add',\n\t                onClick: this.addPreparation\n\t              },\n\t              '+'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Add Preparation'\n\t          )\n\t        )\n\t      );\n\t\n\t      var preparationForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        var specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId];\n\t\n\t        var specimenProtocols = {};\n\t        for (var id in specimenProtocolAttributes) {\n\t          specimenProtocols[id] = this.props.specimenProtocols[id];\n\t        }\n\t        specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\t\n\t        preparationForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(_preparationForm2.default, {\n\t              formData: this.state.formData.preparationForm,\n\t              specimenProtocols: specimenProtocols,\n\t              specimenProtocolAttributes: specimenProtocolAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              setParentFormData: this.setPreparationFormData,\n\t              insertAction: loris.BaseURL + '/biobank/ajax/submitData.php?action=insertSpecimenPreparation'\n\t            }),\n\t            React.createElement(\n\t              'a',\n\t              { className: 'pull-right', style: { cursor: 'pointer' }, onClick: this.removePreparation },\n\t              'Cancel Preparation'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var inputForm = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(StaticElement, {\n\t              label: 'Pooling Note',\n\t              text: 'Select or Scan the specimens to be pooled. Please ensure that they are the same type, and share the same PSCID and Visit Label'\n\t            }),\n\t            React.createElement(NumericElement, {\n\t              label: '\\u2116 of Specimens',\n\t              min: '2',\n\t              max: '100',\n\t              value: this.state.barcodeCount,\n\t              onUserInput: this.setBarcodeCount\n\t            }),\n\t            barcodes\n\t          )\n\t        ),\n\t        this.preparationSwitch(preparationButton, preparationForm),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-sm-3 col-xs-offset-9 action' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Next'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.next\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        )\n\t      );\n\t\n\t      //TODO: Things here need to be in the proper order!!!\n\t      var specimenForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        // This is to provide the options for the output specimens\n\t        var specimenTypes = {};\n\t        if (this.state.poolData.typeId) {\n\t          specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n\t        }\n\t\n\t        var pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n\t        var visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\t\n\t        var barcodesArray = Object.values(this.state.barcodeList);\n\t        var barcodesString = barcodesArray.join(', ');\n\t\n\t        // TODO: rather than all specimen units this should really be specific to the\n\t        // type\n\t        var specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\t\n\t        specimenForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            React.createElement(_specimenForm2.default, {\n\t              formData: this.state.formData.specimenForm,\n\t              candidateId: this.state.poolData.candidateId,\n\t              pscid: pscid,\n\t              sessionId: this.state.poolData.sessionId,\n\t              visit: visit,\n\t              parentSpecimenBarcodes: barcodesString,\n\t              parentSpecimenIds: this.state.poolData.specimenIds,\n\t              specimenTypes: specimenTypes,\n\t              specimenTypeUnits: this.props.specimenTypeUnits,\n\t              specimenUnits: specimenUnits,\n\t              containerTypesPrimary: this.props.containerTypesPrimary,\n\t              containersNonPrimary: this.props.containersNonPrimary,\n\t              specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              capacities: this.props.capacities,\n\t              containerDimensions: this.props.containerDimensions,\n\t              containerCoordinates: this.props.containerCoordinates,\n\t              setParentFormData: this.setSpecimenFormData,\n\t              action: loris.BaseURL + '/biobank/ajax/submitData.php?action=submitSpecimen',\n\t              refreshParent: this.props.refreshParent\n\t            }),\n\t            React.createElement(ButtonElement, {\n\t              label: 'Submit'\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-3 col-xs-offset-2 action' },\n\t            React.createElement(\n\t              'span',\n\t              { className: 'action' },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: this.previous\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'action-title' },\n\t              'Previous'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'poolSpecimenForm',\n\t          id: 'poolSpecimenForm',\n\t          onSubmit: this.handleSubmit,\n\t          ref: 'form'\n\t        },\n\t        this.formSwitch(inputForm, specimenForm)\n\t      );\n\t    }\n\t\n\t    /** *******************************************************************************\n\t     *                      ******     Helper methods     *******\n\t     *********************************************************************************/\n\t\n\t  }, {\n\t    key: 'validateForm',\n\t    value: function validateForm(formElement, value) {\n\t      var _this5 = this;\n\t\n\t      var formErrors = this.state.formErrors;\n\t\n\t      //validate barcode regex\n\t      if (formElement === \"barcode\" && value !== \"\") {\n\t        if (!/^hello/.test(this.state.formData.barcode)) {\n\t          formErrors.barcode = true;\n\t        } else {\n\t          formErrors.barcode = false;\n\t        }\n\t      }\n\t\n\t      //validate that quantity is a number and less than capacity\n\t      if (formElement === \"quantity\" && value !== \"\") {\n\t        if (isNaN(value) || value > this.props.capacities[this.state.currentContainerType]) {\n\t          formErrors.quantity = true;\n\t        } else {\n\t          formErrors.quantity = false;\n\t        }\n\t      }\n\t\n\t      //validate datatypes and regex of generated type attributes\n\t      var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n\t      var specimenTypeFields = Object.keys(specimenTypeFieldsObject).map(function (attribute) {\n\t\n\t        var datatype = _this5.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"number\") {\n\t          if (formElement === attribute) {\n\t            if (isNaN(value) && value !== \"\") {\n\t              formErrors[attribute] = true;\n\t            } else {\n\t              formErrors[attribute] = false;\n\t            }\n\t          }\n\t        }\n\t      });\n\t\n\t      this.setState({\n\t        formErrors: formErrors\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Handle form submission\n\t     * @param {object} e - Form submission event\n\t     */\n\t\n\t  }, {\n\t    key: 'handleSubmit',\n\t    value: function handleSubmit(e) {\n\t      e.preventDefault();\n\t\n\t      this.submitForm();\n\t    }\n\t\n\t    /*\n\t     * Uploads the file to the server\n\t     */\n\t\n\t  }, {\n\t    key: 'submitForm',\n\t    value: function submitForm() {\n\t      // Set form data and specimen the biobank file\n\t      var formData = this.state.formData;\n\t      var preparationForm = this.state.formData.preparationForm;\n\t      var specimenForm = this.state.formData.specimenForm;\n\t      formData['preparationForm'] = JSON.stringify(preparationForm);\n\t      formData['specimenForm'] = JSON.stringify(specimenForm);\n\t\n\t      console.log(formData.specimenForm);\n\t      console.log(formData.preparationForm);\n\t\n\t      var formObj = new FormData();\n\t      for (var key in formData) {\n\t        if (formData[key] !== \"\") {\n\t          formObj.append(key, formData[key]);\n\t        }\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: this.props.action,\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function () {\n\t          //this.props.refreshParent();\n\t          swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n\t          this.props.onSuccess();\n\t        }.bind(this),\n\t        error: function (err) {\n\t          console.error(err);\n\t          var msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\t          this.setState({\n\t            errorMessage: msg\n\t          });\n\t          swal(msg, \"\", \"error\");\n\t        }.bind(this)\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Checks if the inputted file name is valid\n\t     *\n\t     * @param {string} requiredFileName - Required file name\n\t     * @param {string} fileName - Provided file name\n\t     * @return {boolean} - true if fileName starts with requiredFileName, false\n\t     *   otherwise\n\t     */\n\t    //  isValidFileName(requiredFileName, fileName) {\n\t    //    if (fileName === null || requiredFileName === null) {\n\t    //      return false;\n\t    //    }\n\t    //\n\t    //    return (fileName.indexOf(requiredFileName) === 0);\n\t    //  }\n\t\n\t    /**\n\t     * Validate the form\n\t     *\n\t     * @param {object} formRefs - Object containing references to React form elements\n\t     * @param {object} formData - Object containing form data inputed by user\n\t     * @return {boolean} - true if all required fields are filled, false otherwise\n\t     */\n\t\n\t  }, {\n\t    key: 'isValidForm',\n\t    value: function isValidForm(formRefs, formData) {\n\t      var isValidForm = true;\n\t\n\t      var requiredFields = {\n\t        pscid: null,\n\t        visitLabel: null\n\t      };\n\t\n\t      Object.keys(requiredFields).map(function (field) {\n\t        if (formData[field]) {\n\t          requiredFields[field] = formData[field];\n\t        } else if (formRefs[field]) {\n\t          formRefs[field].props.hasError = true;\n\t          isValidForm = false;\n\t        }\n\t      });\n\t      this.forceUpdate();\n\t\n\t      return isValidForm;\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      // This lets the modal window know that there is formData\n\t      // and will cause a warning to be thrown of the modal window\n\t      // is exited\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t\n\t      if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n\t        this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n\t      }\n\t\n\t      var formData = this.state.formData;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      //TODO: there must be a better way to do this\n\t      if (isNaN(formElement)) {\n\t        formData[formElement] = value;\n\t      } else {\n\t        barcodeList[formElement] = value;\n\t      }\n\t\n\t      this.setState({\n\t        formData: formData,\n\t        barcodeList: barcodeList\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setPreparationFormData',\n\t    value: function setPreparationFormData(preparationFormData) {\n\t      var formData = this.state.formData;\n\t      formData.preparationForm = preparationFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenFormData',\n\t    value: function setSpecimenFormData(specimenFormData) {\n\t      var formData = this.state.formData;\n\t      formData.specimenForm = specimenFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }]);\n\t\n\t  return PoolSpecimenForm;\n\t}(React.Component);\n\t\n\tPoolSpecimenForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  action: React.PropTypes.string.isRequired,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\texports.default = PoolSpecimenForm;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(8);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = React.createElement(_customFields2.default, {\n\t              fields: specimenProtocolFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.preparation.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerBarcodeForm = __webpack_require__(15);\n\t\n\tvar _containerBarcodeForm2 = _interopRequireDefault(_containerBarcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainerForm = function (_React$Component) {\n\t  _inherits(BiobankContainerForm, _React$Component);\n\t\n\t  function BiobankContainerForm(props) {\n\t    _classCallCheck(this, BiobankContainerForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainerForm.__proto__ || Object.getPrototypeOf(BiobankContainerForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      errorMessage: null,\n\t      containerList: { 1: {} },\n\t      countContainers: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.addContainer = _this.addContainer.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyContainer = _this.copyContainer.bind(_this);\n\t    _this.removeContainer = _this.removeContainer.bind(_this);\n\t    _this.saveContainerList = _this.saveContainerList.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainerForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveContainerList',\n\t    value: function saveContainerList() {\n\t      var _this2 = this;\n\t\n\t      var containerList = this.state.containerList;\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var container in containerList) {\n\t        containerList[container].statusId = availableId;\n\t        containerList[container].temperature = 20;\n\t        this.props.save(containerList[container], this.props.saveContainer, 'Container Creation Successful!').then(function () {\n\t          _this2.props.close();_this2.props.loadFilters();_this2.props.loadOptions();\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var siteId = this.state.siteId;\n\t      var containerList = this.state.containerList;\n\t      if (name === 'siteId') {\n\t        siteId = value;\n\t        for (var container in containerList) {\n\t          containerList[container].originId = siteId;\n\t          containerList[container].locationId = siteId;\n\t        }\n\t      } else {\n\t        containerList[key][name] = value;\n\t      }\n\t      this.setState({ containerList: containerList, siteId: siteId });\n\t    }\n\t  }, {\n\t    key: 'addContainer',\n\t    value: function addContainer() {\n\t      var _this3 = this;\n\t\n\t      var containerList = this.state.containerList;\n\t      var count = this.state.countContainers;\n\t      var collapsed = this.state.collapsed;\n\t      var siteId = this.state.siteId;\n\t      var temperature = 20;\n\t\n\t      // get Id of available status\n\t      var statusId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this3.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      containerList[count + 1] = {\n\t        statusId: statusId,\n\t        originId: siteId,\n\t        locationId: siteId,\n\t        temperature: temperature\n\t      };\n\t\n\t      collapsed[count + 1] = true;\n\t\n\t      this.setState({\n\t        containerList: containerList,\n\t        countContainers: count + 1,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyContainer',\n\t    value: function copyContainer(key) {\n\t      var count = this.state.countContainers;\n\t      var collapsed = this.state.collapsed;\n\t      var nextKey = count + 1;\n\t      var containerList = this.state.containerList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        containerList[nextKey] = JSON.parse(JSON.stringify(containerList[key]));\n\t        delete containerList[nextKey].barcode;\n\t        collapsed[nextKey] = true;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        containerList: containerList,\n\t        countContainers: nextKey,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeContainer',\n\t    value: function removeContainer(key) {\n\t      var containerList = this.state.containerList;\n\t      delete containerList[key];\n\t      this.setState({ containerList: containerList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      //Generates new Barcode Form everytime the addContainer button is pressed\n\t      var containerListArray = Object.keys(this.state.containerList);\n\t      var containers = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          containers.push(React.createElement(_containerBarcodeForm2.default, {\n\t            key: key,\n\t            containerKey: key,\n\t            id: i,\n\t            collapsed: _this4.state.collapsed[key],\n\t            toggleCollapse: _this4.toggleCollapse,\n\t            container: _this4.state.containerList[key] || null,\n\t            removeContainer: containerListArray.length !== 1 ? function () {\n\t              return _this4.removeContainer(key);\n\t            } : null,\n\t            addContainer: i == containerListArray.length ? _this4.addContainer : null,\n\t            setCopyMultiplier: _this4.setCopyMultiplier,\n\t            copyMultiplier: _this4.state.copyMultiplier,\n\t            copyContainer: i == containerListArray.length && _this4.state.containerList[key] ? _this4.copyContainer : null,\n\t            setContainer: _this4.setContainer,\n\t            onChange: _this4.props.onChange,\n\t            containerTypesNonPrimary: _this4.props.containerTypesNonPrimary,\n\t            containerBarcodesNonPrimary: _this4.props.containerBarcodesNonPrimary\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = containerListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'containerForm',\n\t          onSubmit: this.saveContainerList,\n\t          ref: 'form'\n\t        },\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement(SelectElement, {\n\t              name: 'siteId',\n\t              label: 'Site',\n\t              options: this.props.centers,\n\t              onUserInput: this.setContainer,\n\t              required: true,\n\t              value: this.state.siteId\n\t            })\n\t          )\n\t        ),\n\t        containers,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3 col-xs-offset-9' },\n\t          React.createElement(ButtonElement, { label: 'Submit' })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainerForm;\n\t}(React.Component);\n\t\n\tBiobankContainerForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  barcode: React.PropTypes.string,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\texports.default = BiobankContainerForm;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Barcode Form\n\t *\n\t * Acts a subform for ContainerForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerBarcodeForm = function (_React$Component) {\n\t  _inherits(ContainerBarcodeForm, _React$Component);\n\t\n\t  function ContainerBarcodeForm() {\n\t    _classCallCheck(this, ContainerBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerBarcodeForm.__proto__ || Object.getPrototypeOf(ContainerBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerBarcodeForm, [{\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyContainer(this.props.containerKey);\n\t    }\n\t\n\t    //TODO: change form.js so this isn't necessary\n\t\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.containerKey);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // HR TODO: All this CSS should eventually be moved\n\t      var addContainerButton = void 0;\n\t      var addContainerText = void 0;\n\t      var copyContainerButton = void 0;\n\t      var copyContainerText = void 0;\n\t      if (this.props.addContainer) {\n\t        addContainerButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addContainer\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addContainerText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyContainer) {\n\t        copyContainerButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyContainerText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeContainerButton = void 0;\n\t      if (this.props.removeContainer) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeContainerButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeContainer,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'container'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                ref: 'barcode',\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.containerKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.containerKey);\n\t              }\n\t            }),\n\t            removeContainerButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.containerKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesNonPrimary,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-3' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-4 action' },\n\t              addContainerButton,\n\t              addContainerText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-4 action' },\n\t              copyContainerButton,\n\t              copyContainerText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerBarcodeForm;\n\t}(React.Component);\n\t\n\tContainerBarcodeForm.propTypes = {};\n\t\n\texports.default = ContainerBarcodeForm;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/**\n\t * Allows to dynamically render vertical tabs corresponding to tab panes.\n\t */\n\t\n\tvar VerticalTabs = function (_React$Component2) {\n\t  _inherits(VerticalTabs, _React$Component2);\n\t\n\t  function VerticalTabs(props) {\n\t    _classCallCheck(this, VerticalTabs);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, (VerticalTabs.__proto__ || Object.getPrototypeOf(VerticalTabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this2.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this2.props.defaultTab) {\n\t      activeTab = _this2.props.defaultTab;\n\t    } else if (_this2.props.tabs.length > 0) {\n\t      activeTab = _this2.props.tabs[0].id;\n\t    }\n\t\n\t    _this2.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this2.handleClick = _this2.handleClick.bind(_this2);\n\t    _this2.getTabs = _this2.getTabs.bind(_this2);\n\t    _this2.getTabPanes = _this2.getTabPanes.bind(_this2);\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(VerticalTabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tabbable col-md-3 col-sm-3' },\n\t          React.createElement(\n\t            'ul',\n\t            { className: 'nav nav-pills nav-stacked', role: 'tablist', style: tabStyle },\n\t            tabs\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content col-md-9 col-sm-9' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return VerticalTabs;\n\t}(React.Component);\n\t\n\tVerticalTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tVerticalTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component3) {\n\t  _inherits(TabPane, _React$Component3);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.VerticalTabs = VerticalTabs;\n\texports.TabPane = TabPane;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(11);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _globals = __webpack_require__(18);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(7);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(13);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(23);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(24);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(25);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Map Options for Form Select Elements\n\t      var specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      var addAliquotForm = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Make Aliquots'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this2.props.edit('aliquotForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            closeModal: this.props.close,\n\t            show: this.props.editable.aliquotForm\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.props.data,\n\t            specimen: this.props.specimen,\n\t            setSpecimen: this.props.setSpecimen,\n\t            saveSpecimen: this.props.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            close: this.props.close,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.props.editable.collection) {\n\t        var _containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t        var specimenTypeAttributes = void 0;\n\t        //loops through data object to produce static elements\n\t        if (this.props.data.specimen.collection.data) {\n\t          var collectionData = this.props.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(collectionData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenTypeAttributes[_this2.props.data.specimen.typeId][key].name,\n\t              text: collectionData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.props.data.specimen.collection.quantity + ' ' + this.props.options.specimenUnits[this.props.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel specimen-panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.props.editable.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.props.editable.collection ? null : function () {\n\t              _this2.props.edit('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.props.options.specimenProtocols) {\n\t        if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation Does Exist and the form is not in an edit state\n\t      if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        if (this.props.data.specimen.preparation.data) {\n\t          var preparationData = this.props.data.specimen.preparation.data;\n\t          specimenProtocolAttributes = Object.keys(preparationData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenProtocolAttributes[_this2.props.data.specimen.preparation.protocolId][key].name,\n\t              text: preparationData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel specimen-panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('preparation');_this2.props.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel specimen-panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.preparation ? null : function () {\n\t                _this2.props.edit('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.props.options.specimenMethods) {\n\t        if (this.props.options.specimenMethods[_id].typeId === this.props.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.props.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.props.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          files: this.props.files,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          setFiles: this.props.setFiles,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        //TODO: Make the below a separate component\n\t        if (this.props.data.specimen.analysis.data) {\n\t          var analysisData = this.props.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.keys(analysisData).map(function (key) {\n\t            if (_this2.props.options.attributeDatatypes[_this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].datatypeId].datatype === 'file') {\n\t              return React.createElement(LinkElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key],\n\t                href: loris.BaseURL + '/biobank/ajax/requestData.php?action=downloadFile&file=' + analysisData[key],\n\t                target: '_blank',\n\t                download: analysisData[key]\n\t              });\n\t            } else {\n\t              return React.createElement(StaticElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key]\n\t              });\n\t            }\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.analysis.locationId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel specimen-panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('analysis');_this2.props.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel specimen-panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.analysis ? null : function () {\n\t                _this2.props.edit('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.props.specimen,\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        setSpecimen: this.props.setSpecimen,\n\t        saveSpecimen: this.props.saveSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      //TODO: this can maybe become its own component...?\n\t      var returnToFilter = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: this.props.loadFilters\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-title' },\n\t          'Return to Filter'\n\t        )\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.data.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            specimen: this.props.data.specimen,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        ),\n\t        returnToFilter\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(11);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _quantityField = __webpack_require__(19);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(20);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(21);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(22);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.editable.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.edit('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                specimen: this.props.specimen,\n\t                units: units,\n\t                close: this.props.close,\n\t                setSpecimen: this.props.setSpecimen,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if ((this.props.data.specimen || {}).fTCycle !== undefined) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.editable.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  _this2.props.edit('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              container: this.props.container,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.editable.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              container: this.props.container,\n\t              stati: stati,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.editable.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              container: this.props.container,\n\t              centers: this.props.options.centers,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var barcode = this.props.data.parentSpecimenContainer.barcode;\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t              return _this2.props.loadSpecimen(barcode);\n\t            } },\n\t          barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var _barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode;\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t                return _this2.props.loadContainer(_barcode);\n\t              } },\n\t            _barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerParentForm');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t          ),\n\t          React.createElement(\n\t            _Modal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              closeModal: this.props.close,\n\t              show: this.props.editable.containerParentForm\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            inputClass: 'col-xs-11',\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.quantity\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'unit',\n\t            inputClass: 'col-xs-11',\n\t            options: this.props.units,\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveSpecimen,\n\t            columnSize: 'col-xs-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimen: React.PropTypes.func,\n\t  close: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.centers,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: this.props.close\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(8);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      if (value instanceof File) {\n\t        data[name] = value.name;\n\t        this.props.setFiles(name, value);\n\t      } else {\n\t        data[name] = value;\n\t        this.setAnalysis('data', data);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var submitButton = void 0;\n\t      submitButton = this.props.data.specimen.analysis ? React.createElement(ButtonElement, { label: 'Update' }) : React.createElement(ButtonElement, { label: 'Submit' });\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = React.createElement(_customFields2.default, {\n\t              fields: specimenMethodFieldsObject,\n\t              files: this.props.files,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.analysis.data,\n\t              data: (((this.props.data || {}).specimen || {}).analysis || {}).data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          fileUpload: true,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\t//TODO: revise this component once Shipments are enabled.\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle() {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    return _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // Create Collection Node\n\t      var collectionNode = void 0;\n\t      if ((this.props.specimen || {}).collection || this.props.container) {\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Preparation Node\n\t      var preparationNode = void 0;\n\t      if ((this.props.specimen || {}).preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Analysis Node\n\t      var analysisNode = void 0;\n\t      if ((this.props.specimen || {}).analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'A'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Lines\n\t      var line = void 0;\n\t      var nodes = 0;\n\t      for (var i in this.props.specimen) {\n\t        if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n\t          nodes++;\n\t        }\n\t      }\n\t      var lineWidth = nodes > 1 ? 60 / (nodes - 1) : 0;\n\t      var lineStyle = { width: lineWidth + '%' };\n\t      line = React.createElement('div', { className: 'lifecycle-line', style: lineStyle });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode ? line : null,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainer('parentContainerId', null);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(18);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _lifeCycle = __webpack_require__(24);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _barcodePath = __webpack_require__(27);\n\t\n\tvar _barcodePath2 = _interopRequireDefault(_barcodePath);\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tvar _containerCheckout = __webpack_require__(25);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankContainer */\n\t\n\t/**\n\t * Biobank Container\n\t *\n\t * Fetches data corresponding to a given Container from Loris backend and\n\t * displays a page allowing viewing of meta information of the container\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainer = function (_React$Component) {\n\t  _inherits(BiobankContainer, _React$Component);\n\t\n\t  function BiobankContainer() {\n\t    _classCallCheck(this, BiobankContainer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainer.__proto__ || Object.getPrototypeOf(BiobankContainer)).call(this));\n\t\n\t    _this.drag = _this.drag.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainer, [{\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      var barcodePath = React.createElement(_barcodePath2.default, {\n\t        container: this.props.data.container,\n\t        parentContainers: this.props.data.parentContainers,\n\t        loadContainer: this.props.loadContainer\n\t      });\n\t\n\t      var display = void 0;\n\t      if (this.props.data.container.dimensionId) {\n\t        var barcodes = this.props.mapFormOptions(this.props.options.containers, 'barcode');\n\t        //delete values that are parents of the container\n\t        if (this.props.data.parentContainers) {\n\t          for (var key in this.props.data.parentContainers) {\n\t            delete barcodes[this.props.data.parentContainers[key].id];\n\t          }\n\t        }\n\t        delete barcodes[this.props.data.container.id];\n\t\n\t        display = React.createElement(_containerDisplay2.default, {\n\t          barcodes: barcodes,\n\t          container: this.props.container,\n\t          coordinate: this.props.coordinate,\n\t          sequential: this.props.sequential,\n\t          containers: this.props.options.containers,\n\t          children: this.props.data.childContainers,\n\t          types: this.props.options.containerTypes,\n\t          dimensions: this.props.options.containerDimensions[this.props.data.container.dimensionId],\n\t          coordinates: this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null,\n\t          containerTypes: this.props.options.containerTypes,\n\t          containerStati: this.props.options.containerStati,\n\t          editable: this.props.editable,\n\t          edit: this.props.edit,\n\t          close: this.props.close,\n\t          setCoordinate: this.props.setCoordinate,\n\t          setSequential: this.props.setSequential,\n\t          loadSpecimen: this.props.loadSpecimen,\n\t          loadContainer: this.props.loadContainer,\n\t          saveChildContainer: this.props.saveChildContainer\n\t        });\n\t      }\n\t\n\t      var listAssigned = [];\n\t      var coordinateList = [];\n\t      var listUnassigned = [];\n\t      if (this.props.data.childContainers) {\n\t        (function () {\n\t          var children = _this2.props.data.childContainers;\n\t\n\t          var _loop = function _loop(child) {\n\t            var load = void 0;\n\t            if (_this2.props.options.containerTypes[children[child].typeId].primary) {\n\t              load = _this2.props.loadSpecimen;\n\t            } else {\n\t              load = _this2.props.loadContainer;\n\t            }\n\t\n\t            if (children[child].coordinate) {\n\t              listAssigned.push(React.createElement(\n\t                'div',\n\t                null,\n\t                React.createElement(\n\t                  'a',\n\t                  { onClick: function onClick() {\n\t                      return load(children[child].barcode);\n\t                    }, style: { cursor: 'pointer' } },\n\t                  children[child].barcode\n\t                )\n\t              ));\n\t              coordinateList.push(React.createElement(\n\t                'div',\n\t                null,\n\t                'at ',\n\t                children[child].coordinate\n\t              ));\n\t            } else {\n\t              listUnassigned.push(React.createElement(\n\t                'a',\n\t                {\n\t                  onClick: function onClick() {\n\t                    return load(children[child].barcode);\n\t                  },\n\t                  style: { cursor: 'pointer' },\n\t                  id: children[child].id,\n\t                  draggable: true,\n\t                  onDragStart: _this2.drag\n\t                },\n\t                children[child].barcode\n\t              ));\n\t            }\n\t          };\n\t\n\t          for (var child in children) {\n\t            _loop(child);\n\t          }\n\t        })();\n\t      }\n\t\n\t      //TODO: this can maybe become it's own component..?\n\t      var returnToFilter = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: this.props.loadFilters\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-title' },\n\t          'Return to Filter'\n\t        )\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'container-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(_containerCheckout2.default, {\n\t            container: this.props.data.container,\n\t            setContainer: this.props.setContainer,\n\t            saveContainer: this.props.saveContainer\n\t          }),\n\t          React.createElement(_lifeCycle2.default, {\n\t            container: this.props.data.container,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'display-container' },\n\t            display,\n\t            barcodePath\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-list' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length !== 0 ? 'Assigned Containers' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'container-coordinate' },\n\t              React.createElement(\n\t                'div',\n\t                null,\n\t                listAssigned\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                null,\n\t                coordinateList\n\t              )\n\t            ),\n\t            listAssigned.length !== 0 ? React.createElement('br', null) : null,\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listUnassigned.length !== 0 ? 'Unassigned Containers' : null\n\t            ),\n\t            listUnassigned\n\t          )\n\t        ),\n\t        returnToFilter\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainer;\n\t}(React.Component);\n\t\n\tBiobankContainer.propTypes = {\n\t  containerPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = BiobankContainer;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Path\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar BarcodePath = function (_React$Component) {\n\t  _inherits(BarcodePath, _React$Component);\n\t\n\t  function BarcodePath() {\n\t    _classCallCheck(this, BarcodePath);\n\t\n\t    return _possibleConstructorReturn(this, (BarcodePath.__proto__ || Object.getPrototypeOf(BarcodePath)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BarcodePath, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var path = [];\n\t      var pathLength = this.props.parentContainers.length - 1;\n\t      var containerURL = loris.BaseURL + '/biobank/container/?barcode=';\n\t\n\t      var _loop = function _loop(i) {\n\t        path.push(React.createElement(\n\t          'span',\n\t          { className: 'barcodePath' },\n\t          '/',\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                return _this2.props.loadContainer(_this2.props.parentContainers[i].barcode);\n\t              },\n\t              style: { cursor: 'pointer' }\n\t            },\n\t            _this2.props.parentContainers[i].barcode\n\t          )\n\t        ));\n\t      };\n\t\n\t      for (var i = pathLength; i >= 0; i--) {\n\t        _loop(i);\n\t      }\n\t      path.push(React.createElement(\n\t        'span',\n\t        { className: 'barcodePath' },\n\t        '/',\n\t        React.createElement(\n\t          'a',\n\t          {\n\t            onClick: function onClick() {\n\t              return _this2.props.loadContainer(_this2.props.container.barcode);\n\t            },\n\t            style: { cursor: 'pointer' }\n\t          },\n\t          this.props.container.barcode\n\t        )\n\t      ));\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        path\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodePath;\n\t}(React.Component);\n\t\n\tBarcodePath.propTypes = {};\n\t\n\texports.default = BarcodePath;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/biobankIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0e3588f28124eb33f63d","/* global ReactDOM */\n\nimport Loader from 'Loader';\nimport BiobankFilter from './filter';\nimport BiobankSpecimen from './specimen';\nimport BiobankContainer from './container';\n\nclass BiobankIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      specimenFilter: {},\n      containerDataTable: {},\n      containerFilter: {},\n      containerDataTable: {},\n      data: {},\n      specimen: {},\n      container: {},\n      options: {},\n      files: {},\n      coordinate: null,\n      sequential: false,\n      page: '',\n      isLoaded: false,\n      editable: {\n        specimenForm: false,\n        containerForm: false,\n        aliquotForm: false,\n        containerParentForm: false,\n        barcode: false,\n        temperature: false,\n        quantity: false,\n        status: false,\n        location: false,\n        collection: false,\n        preparation: false,\n        analysis: false,\n      }\n    };\n\n    this.fetch                    = this.fetch.bind(this);\n    this.loadFilters              = this.loadFilters.bind(this);\n    this.loadSpecimenDataTable    = this.loadSpecimenDataTable.bind(this);\n    this.loadContainerDataTable   = this.loadContainerDataTable.bind(this);\n    this.loadOptions              = this.loadOptions.bind(this);\n    this.loadContainer            = this.loadContainer.bind(this);\n    this.loadSpecimen             = this.loadSpecimen.bind(this);\n    this.fetch                    = this.fetch.bind(this);\n    this.updateSpecimenFilter     = this.updateSpecimenFilter.bind(this);\n    this.updateContainerFilter    = this.updateContainerFilter.bind(this);\n    this.clone                    = this.clone.bind(this);\n    this.mapFormOptions           = this.mapFormOptions.bind(this);\n    this.edit                     = this.edit.bind(this);\n    this.close                    = this.close.bind(this);\n    this.setSpecimen              = this.setSpecimen.bind(this);\n    this.revertSpecimen           = this.revertSpecimen.bind(this);\n    this.setContainer             = this.setContainer.bind(this);\n    this.revertContainer          = this.revertContainer.bind(this);\n    this.setCoordinate            = this.setCoordinate.bind(this);\n    this.setSequential            = this.setSequential.bind(this);\n    this.setFiles                 = this.setFiles.bind(this)\n    this.addPreparation           = this.addPreparation.bind(this);\n    this.addAnalysis              = this.addAnalysis.bind(this);\n    this.saveSpecimen             = this.saveSpecimen.bind(this);\n    this.saveContainer            = this.saveContainer.bind(this);\n    this.saveChildContainer       = this.saveChildContainer.bind(this);\n    this.save                     = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadFilters().then(() =>\n      this.loadOptions().then(() =>\n        this.setState({isLoaded: true})\n      )\n    );\n  }\n\n  loadFilters() {\n    return new Promise(resolve => {\n      this.loadContainerDataTable().then(() =>\n        this.loadSpecimenDataTable().then(() =>  {\n          this.setState({page: 'filter'}, resolve());\n        })\n      )\n    });\n  }\n\n  loadSpecimenDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenFilterDataURL).then(data => {\n        let specimenDataTable = data;\n        this.setState({specimenDataTable}, resolve());\n      });\n    });\n  }\n\n  loadContainerDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerFilterDataURL).then(data => {\n        let containerDataTable = data;\n        this.setState({containerDataTable}, resolve());\n      });\n    });\n  }\n\n  loadOptions() {\n    return new Promise(resolve => {\n      this.fetch(this.props.optionsURL).then(data => {\n        let options = data;\n        this.setState({options}, resolve());\n      });\n    });\n  }\n\n  loadContainer(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerDataURL+barcode).then(data => {\n        let container = this.clone(data.container);\n        let page = 'container';\n        this.setState({data, container, page}, resolve());\n      });\n    });\n  }\n\n  loadSpecimen(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenDataURL+barcode).then(data => {\n        let specimen = this.clone(data.specimen);\n        let container = this.clone(data.container);\n        let page = 'specimen';\n        this.setState({data, specimen, container, page}, resolve());\n      });\n    });\n  }\n\n  fetch(url) {\n    return new Promise(resolve => {\n      $.ajax(url, {\n        dataType: 'json',\n        success: data => resolve(data),\n        error: (error, errorCode, errorMsg) => console.error(error, errorCode, errorMsg)\n      });\n    });\n  }\n\n  updateSpecimenFilter(specimenFilter) {\n    this.setState({specimenFilter});\n  }\n\n  updateContainerFilter(containerFilter) {\n    this.setState({containerFilter});\n  }\n\n  clone(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  mapFormOptions(object, attribute) {\n    let data = {};\n    for (let id in object) {\n      data[id] = object[id][attribute];\n    }\n    return data;\n  }\n\n  edit(stateKey) {\n    this.close().then(() => {\n      let editable = this.state.editable;\n      editable[stateKey] = true;\n      this.setState({editable});\n    });\n  }\n\n  close() {\n    return new Promise(resolve => {\n    let editable = this.state.editable;\n    for (let key in editable) {\n      editable[key] = false;\n    }\n    this.state.data.specimen && this.revertSpecimen();\n    this.state.data.container && this.revertContainer();\n    this.setState({editable}, resolve());\n    });\n  }\n\n  setSpecimen(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  revertSpecimen() {\n    let specimen = this.state.specimen;\n    specimen = this.clone(this.state.data.specimen);\n    this.setState({specimen});\n  }\n\n  setContainer(name, value) {\n    let container = this.state.container;\n    value ? container[name] = value : delete container[name]; \n    this.setState({container});\n  }\n\n  revertContainer() {\n    let container = this.state.container;\n    container = this.clone(this.state.data.container);\n    this.setState({container});\n  }\n\n  setCoordinate(value) {\n    let coordinate = this.state.coordinates;\n    coordinate = value;\n    this.setState({coordinate});\n  }\n\n  setSequential(name, value) {\n    let sequential = this.state.sequential;\n    sequential = value;\n    this.setState({sequential});\n  }\n\n  setFiles(name, value) {\n    let files = this.state.files;\n    files[value.name] = value;\n    this.setState({files});\n  }\n  \n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  addAnalysis() {\n    let specimen = this.state.specimen;\n    specimen.analysis = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  saveSpecimen() {\n    let specimen = this.state.specimen;\n    this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.specimen = this.clone(this.state.specimen);\n        this.setState({data}, this.close());\n      }\n    );\n  }\n\n  saveContainer() {\n    let container = this.state.container;\n    this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.container = this.clone(this.state.container);\n        this.setState({data}, this.close());\n      }\n    );\n  }\n  \n  saveChildContainer(container) {\n    return new Promise(resolve => {\n      this.save(container, this.props.saveContainerURL).then(() => {\n        let data = this.state.data;\n        data.childContainers[container.id] = this.clone(container);\n        this.setState({data}, resolve());\n        }\n      )\n    });\n  }\n\n  save(data, url, message) {\n    return new Promise(resolve => {\n      let dataObject = new FormData();\n      for (let file in this.state.files) {\n        dataObject.append(this.state.files[file].name, this.state.files[file]);\n      }\n      dataObject.append('data', JSON.stringify(data));\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: dataObject,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: () => {\n          resolve();\n          this.loadOptions();\n          message && swal(message, '', 'success');\n        },\n        error: (error, textStatus, errorThrown) => {\n          let message = (error.responseJSON||{}).message || 'Submission error!';\n          swal(message, '', 'error');\n          console.error(error, textStatus, errorThrown);\n        }\n      });\n    });\n  }\n\n  render() {\n    if (this.state.error !== undefined) {\n      return (\n        <div className='alert alert-danger text-center'>\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    if (!this.state.isLoaded) {\n      return (\n        <Loader/>\n      );\n    }\n\n    let display;\n    switch (this.state.page) {\n      case 'container':\n          display = (\n            <BiobankContainer\n              data={this.state.data}\n              options={this.state.options}\n              container={this.state.container}\n              coordinate={this.state.coordinate}\n              sequential={this.state.sequential}\n              editable={this.state.editable}\n              loadContainer={this.loadContainer}\n              loadSpecimen={this.loadSpecimen}\n              loadFilters={this.loadFilters}\n              mapFormOptions={this.mapFormOptions}\n              setContainer={this.setContainer}\n              revertContainer={this.revertContainer}\n              saveContainer={this.saveContainer}\n              setCoordinate={this.setCoordinate}\n              setSequential={this.setSequential}\n              saveChildContainer={this.saveChildContainer}\n              edit={this.edit}\n              close={this.close}\n            />\n          );\n        break;\n      case 'specimen': \n        display = (\n          <div className='barcode-page'>\n            <BiobankSpecimen\n              data={this.state.data}\n              options={this.state.options}\n              container={this.state.container}\n              specimen={this.state.specimen}\n              files={this.state.files}\n              editable={this.state.editable}\n              loadContainer={this.loadContainer}\n              loadSpecimen={this.loadSpecimen}\n              loadFilters={this.loadFilters}\n              loadOptions={this.loadOptions}\n              mapFormOptions={this.mapFormOptions}\n              setContainer={this.setContainer}\n              revertContainer={this.revertContainer}\n              saveContainer={this.saveContainer}\n              setSpecimen={this.setSpecimen}\n              revertSpecimen={this.revertSpecimen}\n              saveSpecimen={this.saveSpecimen}\n              addPreparation={this.addPreparation}\n              addAnalysis={this.addAnalysis}\n              setFiles={this.setFiles}\n              saveChildContainer={this.saveChildContainer}\n              saveBarcodeListURL={this.props.saveBarcodeListURL}\n              edit={this.edit}\n              close={this.close}\n              save={this.save}\n            />\n          </div>\n        );\n        break;\n      case 'filter':\n        display = (\n          <BiobankFilter\n            specimenFilter={this.state.specimenFilter}\n            specimenDataTable={this.state.specimenDataTable}\n            containerFilter={this.state.containerFilter}\n            containerDataTable={this.state.containerDataTable}\n            options={this.state.options}\n            editable={this.state.editable}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            updateSpecimenFilter={this.updateSpecimenFilter}\n            updateContainerFilter={this.updateContainerFilter}\n            mapFormOptions={this.mapFormOptions}\n            edit={this.edit}\n            close={this.close}\n            loadFilters={this.loadFilters}\n            loadOptions={this.loadOptions}\n            save={this.save}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n          />\n        );\n    }\n\n    return (\n      <div className=\"biobank-page\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            {display}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n$(function() {\n  const request = `${loris.BaseURL}/biobank/ajax/requestData.php?`;\n  const submit = `${loris.BaseURL}/biobank/ajax/submitData.php?`;\n  const biobankIndex = (\n    <div className='page=biobank'>\n      <BiobankIndex\n        specimenFilterDataURL={`${loris.BaseURL}/biobank/?format=json`}\n        containerFilterDataURL={`${request}action=getContainerFilterData`}\n        specimenDataURL={`${request}action=getSpecimenData&barcode=`}\n        containerDataURL={`${request}action=getContainerData&barcode=`}\n        optionsURL={`${request}action=getFormOptions`}\n        saveContainerURL={`${submit}action=saveContainer`}\n        saveSpecimenURL={`${submit}action=saveSpecimen`}\n        saveBarcodeListURL={`${submit}action=saveBarcodeList`}\n      />\n    </div>\n  );\n  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/biobankIndex.js","/**\n * This file contains the React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  render() {\n    return (\n        <div\n          className=\"loader\"\n          style={{width: this.props.size, height: this.props.size}}\n        />\n    );\n  }\n}\n\nLoader.propTypes = {size: React.PropTypes.int}\nLoader.defaultProps = {size: 120}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","import FilterForm from 'FilterForm';\nimport BiobankSpecimenForm from './specimenForm';\nimport PoolSpecimenForm from './poolSpecimenForm';\nimport BiobankContainerForm from './containerForm';\nimport {Tabs, TabPane} from 'Tabs';\nimport Modal from 'Modal';\nimport Loader from 'Loader';\n\nclass BiobankFilter extends React.Component {\n  constructor() {\n    super();\n\n    this.resetFilters = this.resetFilters.bind(this);\n    this.formatSpecimenColumns = this.formatSpecimenColumns.bind(this);\n    this.formatContainerColumns = this.formatContainerColumns.bind(this);\n  }\n\n  resetFilters() {\n    this.refs.biobankFilter.clearFilter();\n  }\n\n  formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n    let row = {};\n    let barcode;\n\n    // Create the mapping between rowHeaders and rowData in a row object.\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    switch (column) {\n      case 'Barcode':\n        barcode = row['Barcode'];\n        return (\n          <td>\n            <a onClick={()=>{this.props.loadSpecimen(barcode)}} style={{cursor:'pointer'}}>\n              {cell}\n            </a>\n          </td>\n        );\n      case 'Parent Barcode':\n        barcode = row['Parent Barcode'];\n        return (\n          <td>\n            <a \n              onClick={()=>{this.props.loadSpecimen(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td> \n        );\n      case 'Container Barcode':\n        barcode = row['Container Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td>\n        );\n      case 'PSCID':\n        let pscidURL = loris.BaseURL + '/' + row['PSCID'];\n        return <td><a href={pscidURL}>{cell}</a></td>;\n      case 'Visit Label':\n        let visitLabelURL = loris.BaseURL+'/instrument_list/?candID='+row['PSCID']+\n          '&sessionID='+row['Visit Label'];\n        return <td><a href={visitLabelURL}>{cell}</a></td>;\n      case 'Status':\n        switch (cell) {\n          case 'Available':\n            return <td style={{color: 'green'}}>{cell}</td>;\n          case 'Reserved':\n            return <td style={{color: 'orange'}}>{cell}</td>\n          case 'Dispensed':\n            return <td style={{color: 'red'}}>{cell}</td>\n        }\n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  formatContainerColumns(column, cell, rowData, rowHeaders) {\n    // Create the mapping between rowHeaders and rowData in a row object.\n    let row = {};\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    let barcode;\n    switch (column) {\n      case 'Barcode':\n        barcode = row['Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td>\n        );\n      case 'Parent Barcode':\n        barcode = row['Parent Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td> \n        );\n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  render() {\n    let addSpecimenButton;\n    let poolSpecimenButton;\n    let addContainerButton;\n\n    /**\n     * Map Options for Form Select Elements of Specimen Form\n     */\n    let containerTypesPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesPrimary, 'label'\n    );\n    let containerStati = this.props.mapFormOptions(\n      this.props.options.containerStati, 'status'\n    );\n    let candidates = this.props.mapFormOptions(\n      this.props.options.candidates, 'pscid'\n    );\n    let sessions = this.props.mapFormOptions(\n      this.props.options.sessions, 'label'\n    );\n\n    addSpecimenButton = (\n      <div className='action' title='Add Specimen'>\n        <div className='action-button add' onClick={()=>{this.props.edit('specimenForm')}}>\n          +\n        </div>\n        <Modal\n          title='Add New Specimen'\n          show={this.props.editable.specimenForm}\n          closeModal={this.props.close}\n        >\n          <BiobankSpecimenForm\n            candidates={candidates}\n            sessions={sessions}\n            candidateSessions={this.props.options.candidateSessions}\n            sessionCenters={this.props.options.sessionCenters}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            close={this.props.close}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n\n    //TODO: turn the following into components to avoid duplication\n    //TODO: should there be a general search, or one for specimen and one for containers?\n    let barcodesPrimary = this.props.mapFormOptions(this.props.options.containersPrimary, 'barcode');\n    let searchSpecimenButton = (\n      <div className='action' title='Go To Specimen'>\n        <div className='action-button search' onClick={()=>{this.props.edit('searchSpecimen')}}>\n          <span className='glyphicon glyphicon-search'/>\n        </div>\n        <Modal\n          title='Go To Specimen'\n          show={this.props.editable.searchSpecimen}\n          closeModal={this.props.close}\n        >\n          <SearchableDropdown\n            name='barcode'\n            label='Barcode'\n            options={barcodesPrimary}\n            onUserInput={(name, value)=>{this.props.loadSpecimen(barcodesPrimary[value]).then(()=>this.props.close())}}\n            placeHolder='Please Scan or Select Barcode'\n            autoFocus={true}\n          />\n        </Modal>\n      </div>\n    );\n\n    let barcodesNonPrimary = this.props.mapFormOptions(this.props.options.containersNonPrimary, 'barcode');\n    let searchContainerButton;\n    searchContainerButton = (\n      <div className='action' title='Go To Container'>\n        <div className='action-button search' onClick={()=>{this.props.edit('searchContainer')}}>\n          <span className='glyphicon glyphicon-search'/>\n        </div>\n        <Modal\n          title='Go To Barcode'\n          show={this.props.editable.searchContainer}\n          closeModal={this.props.close}\n        >\n          <SearchableDropdown\n            name='barcode'\n            label='Barcode'\n            options={barcodesNonPrimary}\n            onUserInput={(name, value)=>{this.props.loadContainer(barcodesNonPrimary[value]).then(()=>this.props.close())}}\n            placeHolder='Please Scan or Select Barcode'\n            autoFocus={true}\n          />\n        </Modal>\n      </div>\n    );\n\n\n    poolSpecimenButton = (\n      <div className='action' title='Pool Specimens'>\n        <div className='action-button pool' onClick={()=>{this.props.edit('poolSpecimenForm')}}>\n          <span className='glyphicon glyphicon-resize-small'/>\n        </div>\n        <Modal\n          title='Pool Specimens'\n          show={this.props.editable.poolSpecimenForm}\n          closeModal={this.props.close}\n        >\n          <PoolSpecimenForm\n            specimenTypes={this.props.options.specimenTypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            specimenProtocols={this.props.options.specimenProtocols}\n            specimenProtocolAttributes={this.props.options.specimenProtocolAttributes}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            attributeOptions={this.props.options.attributeOptions}\n            capacities={this.props.options.capacities}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenUnits={this.props.options.specimenUnits}\n            candidates={candidates}\n            candidateSessions={this.props.options.candidateSessions}\n            sessionCenters={this.props.options.sessionCenters}\n            specimenRequest={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode`}\n            mapFormOptions={this.props.mapFormOptions}\n            saveSpecimen={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveSpecimen`}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n          />\n        </Modal>\n      </div>\n    );\n\n    let containerTypesNonPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesNonPrimary, 'label'\n    );\n\n    addContainerButton = (\n      <div\n        className='action'\n        title='Add Container'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('containerForm')}}\n        >\n          <span>+</span>\n        </div>\n        <Modal\n          title='Add New Container'\n          show={this.props.editable.containerForm}\n          closeModal={this.props.close}\n        >\n          <BiobankContainerForm\n            containerTypesNonPrimary={containerTypesNonPrimary}\n            centers={this.props.options.centers}\n            containerStati={containerStati}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n            close={this.props.close}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    ); \n    \n\n    let tabList = [\n      {id: \"specimens\", label: \"Specimens\"},\n      {id: \"containers\", label: \"Containers\"}\n    ];\n\n    return (\n      <div id='biobank-page'>\n        <Tabs tabs={tabList} defaultTab=\"specimens\" updateURL={true}>\n          <TabPane TabId={tabList[0].id}>\n            <div className='row' style={{marginTop:20}}>\n              <div className='col-lg-3'>\n                <div className='filter'>\n                  <FilterForm\n                    formElements={this.props.specimenDataTable.form}\n                    onUpdate={this.props.updateSpecimenFilter}\n                    filter={this.props.specimenFilter}\n                  >\n                    <ButtonElement\n                      label=\"Clear Filters\"\n                      type=\"reset\" \n                      onUserInput={this.resetFilters}\n                    />\n                    <div className='align-row'>\n                      <span className='action'>\n                        {searchSpecimenButton}\n                      </span>\n                      <span className='action'>\n                        {addSpecimenButton}\n                      </span>\n                      <span className='action'>\n                        {poolSpecimenButton}\n                      </span>\n                    </div>\n                  </FilterForm>\n                </div>\n              </div>\n              <div className='col-lg-9'>\n                <StaticDataTable\n                  Data={this.props.specimenDataTable.Data}\n                  Headers={this.props.specimenDataTable.Headers}\n                  Filter={this.props.specimenFilter}\n                  getFormattedCell={this.formatSpecimenColumns}\n                />\n              </div>\n            </div>\n          </TabPane>\n          <TabPane TabId={tabList[1].id}>\n            <div className='row' style={{marginTop:20}}>\n              <div className='col-lg-3'>\n                <div className='filter'>\n                  <FilterForm\n                    formElements={this.props.containerDataTable.form}\n                    onUpdate={this.props.updateContainerFilter}\n                    filter={this.props.containerFilter}\n\t\t              >\n                    <ButtonElement\n                      label=\"Clear Filters\"\n                      type=\"reset\"\n                      onUserInput={this.resetFilters}\n                    />\n                    <div className='align-row'>\n                      <span className='action'>\n                        {searchContainerButton}\n                      </span>\n                      <span className='action'>\n                        {addContainerButton}\n                      </span>\n                    </div>\n                  </FilterForm>\t\t\t\n                </div>\n              </div>\n              <div className='col-lg-9'>\n                <StaticDataTable\n                  Data={this.props.containerDataTable.Data}\n                  Headers={this.props.containerDataTable.Headers}\n                  Filter={this.props.containerFilter}\n                  getFormattedCell={this.formatContainerColumns}\n                />\n              </div>\n            </div>\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nBiobankFilter.propTypes = {\n  specimenFilter: React.PropTypes.object.isRequired,\n  specimenDataTable: React.PropTypes.object.isRequired,\n  containerFilter: React.PropTypes.object.isRequired,\n  containerDataTable: React.PropTypes.object.isRequired,\n  options: React.PropTypes.object.isRequired,\n  editable: React.PropTypes.object.isRequired,\n  loadContainer: React.PropTypes.func.isRequired,\n  loadSpecimen: React.PropTypes.func.isRequired,\n  updateSpecimenFilter: React.PropTypes.func.isRequired,\n  updateContainerFilter: React.PropTypes.func.isRequired,\n  mapFormOptions: React.PropTypes.func.isRequired,\n  edit: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  save: React.PropTypes.func.isRequired,\n  saveBarcodeListURL: React.PropTypes.string.isRequired,\n}\n\nexport default BiobankFilter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/filter.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n    if (key) {\n      filter[key] = {};\n      if (value) {     // all defined/non-null values must have some length, else empty string\n        filter[key].value = Object.keys(value).length > 0 ? value : '';\n      } else {         // null and undefined handled here\n        filter[key].value = '';\n      }\n      filter[key].exactMatch = (type === \"SelectElement\");\n    } else if (filter && key && value === '') {\n      delete filter[key];\n    }\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure key is of string type and value is of string or object type\n    // before sending them to querystring\n    if (typeof fieldName !== 'string' ||\n        (typeof fieldValue !== 'string' && typeof fieldValue !== 'object')) {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <FormElement {...this.props}>\n        {formChildren}\n      </FormElement>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    let pencilGlyph;\n    if (this.props.edit) {\n      pencilGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-pencil\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.edit}\n        /> \n      );\n    } \n\n    let plusGlyph;\n    if (this.props.add) {\n      plusGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-plus\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.add}\n        />\n      );\n    }\n\n    let removeGlyph;\n    if (this.props.cancel) {\n      removeGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-remove\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.cancel}\n        />\n      );\n    }\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n      >\n        <span \n          className={glyphClass}\n          onClick={this.toggleCollapsed}\n          data-toggle=\"collapse\"\n          data-target={'#' + this.props.id}\n          style={{cursor: 'pointer'}}\n        />\n        {pencilGlyph}\n        {plusGlyph}\n        {removeGlyph}\n        {this.props.title}\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  edit: React.PropTypes.func,\n  add: React.PropTypes.func\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      formErrors: {},\n      candidateId: null,\n      sessionId: null,\n      centerId: null,\n      barcodeList: {1: {specimen: {collection: {}}, container: {}}},\n      count: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.addBarcode = this.addBarcode.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyBarcode = this.copyBarcode.bind(this);\n    this.removeBarcode = this.removeBarcode.bind(this);\n    this.saveBarcodeList = this.saveBarcodeList.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveBarcodeList() {\n    let barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let barcode in barcodeList) {\n      //set container values\n      let container = barcodeList[barcode].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.locationId = this.state.centerId;\n      container.originId = this.state.centerId;\n\n      //set specimen values\n      let specimen = barcodeList[barcode].specimen;\n      specimen.candidateId = this.state.candidateId;\n      specimen.sessionId = this.state.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.locationId = this.state.centerId;\n      if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n        specimen.fTCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: these will eventually be higher level states.\n      if (this.props.data) {\n        specimen.candidateId = this.props.data.candidate.CandID;\n        specimen.sessionId = this.props.data.session.ID;\n        specimen.parentSpecimenId = this.props.data.specimen.id;\n        specimen.collection.locationId = this.props.data.container.locationId;\n        container.locationId = this.props.data.container.locationId;\n        container.originId = this.props.data.container.locationId;\n      }\n    \n      barcodeList[barcode].container = container;\n      barcodeList[barcode].specimen = specimen;\n    }\n\n    this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(\n      () => {this.props.close(); this.props.loadFilters()}\n    );\n  }\n\n  setSpecimen(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let centerId = this.state.centerId;\n    let candidateId = this.state.candidateId;\n    let sessionId = this.state.sessionId;\n    let barcodeList = this.state.barcodeList;\n\n    if (name === 'candidateId') {\n      candidateId = value;\n    } else if (name === 'sessionId') {\n      sessionId = value;\n      centerId = this.props.sessionCenters[sessionId].centerId;\n    } else {\n      //this is eliminate values if specimen type is changed\n      if (name === 'typeId') {\n        barcodeList[key].specimen = {collection:{}};\n      }\n      barcodeList[key].specimen[name] = value;\n    }\n\n    this.setState({barcodeList, centerId, candidateId, sessionId})\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let barcodeList = this.state.barcodeList;\n    barcodeList[key].container[name] = value;\n    this.setState({barcodeList});\n  }\n\n  addBarcode() {\n    let barcodeList = this.state.barcodeList;\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n\n    barcodeList[count+1] = {specimen: {}, container: {collection:{}}}; \n    collapsed[count+1] = true;\n    count = count+1\n\n    this.setState({barcodeList, collapsed, count});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyBarcode(key) {\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n    let nextKey = count+1;\n    let barcodeList = this.state.barcodeList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key])); \n      delete barcodeList[nextKey].container.barcode;\n      collapsed[nextKey] = true;\n      nextKey++;\n    }\n\n    this.setState({\n      barcodeList: barcodeList,\n      count: nextKey,\n      collapsed: collapsed,\n    });\n  }\n\n  removeBarcode(key) {\n    let barcodeList = this.state.barcodeList;\n    delete barcodeList[key];\n    this.setState({barcodeList: barcodeList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          container={this.state.barcodeList[key].container || null}\n          specimen={this.state.barcodeList[key].specimen || null}\n          removeBarcode={barcodeListArray.length !== 1 ?\n            () => this.removeBarcode(key) : null}\n          addBarcode={i == barcodeListArray.length ? this.addBarcode : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyBarcode={i == barcodeListArray.length && this.state.barcodeList[key] ? \n            this.copyBarcode : null}\n          setContainer={this.setContainer}\n          setSpecimen={this.setSpecimen}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimen}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimen}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.state.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.candidateId}\n            placeHolder='Search for a PSCID'\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.sessionId}\n            disabled={this.state.candidateId ? false : true}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={() => {\n          this.saveBarcodeList();\n          //this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()\n        }}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimen(name, value, this.props.barcodeKey);\n  }\n\n  copy() {\n    this.props.copyBarcode(this.props.copyMultiplier);\n  }\n\n  render() {\n    let addBarcodeButton;\n    let addBarcodeText;\n    let copyBarcodeButton;\n    let copyBarcodeText;\n    if (this.props.addBarcode) {\n      addBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcode}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcode) {\n      copyBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeButton;\n    if (this.props.removeBarcode) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcode}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => this.props.toggleCollapse(this.props.barcodeKey)}\n            />\n            {removeBarcodeButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                setSpecimen={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainer={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeButton}\n              {addBarcodeText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeButton}\n              {copyBarcodeText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","import CustomFields from './customFields'\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.setCollection = this.setCollection.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollection(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimen('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimen('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollection('data', data);\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = (\n            <CustomFields\n              fields={specimenTypeFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.collection.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollection}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimen: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Custom Attribute Fields\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\nclass CustomFields extends React.Component {\n  render() {\n    let fields = this.props.fields;\n    let attributeFields = Object.keys(fields).map(attribute => {\n\n      let datatype = this.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n      if (datatype === 'text' || datatype === 'number') {\n        if (fields[attribute]['refTableId'] === null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n\n        if (fields[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              options={this.props.attributeOptions[fields[attribute]['refTableId']]}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === 'datetime') {\n        return (\n          <DataElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.object[attribute]}\n          />\n        );\n      }\n\n      // Do not present the possibility of uploading if file is already set\n      // File must instead be deleted or overwritten.\n      if (datatype === 'file' && !(this.props.data||{})[attribute]) {\n        return (\n          <FileElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.files[this.props.object[attribute]]}\n          />\n        );\n      }\n    });\n\n    return (\n      <div>\n        {attributeFields}\n      </div>\n    );\n  }\n}\n\nCustomFields.propTypes = {\n  fields: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  object: React.PropTypes.object.isRequired,\n  setData: React.PropTypes.func.isRequired,\n}\n\nexport default CustomFields;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/customFields.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainer(name, value);\n    this.props.setContainer('coordinate', null);\n    this.props.setContainer('temperature', this.props.containersNonPrimary[this.props.container.parentContainerId].temperature);\n    this.props.setContainer('locationId', this.props.containersNonPrimary[this.props.container.parentContainerId].locationId);\n    this.props.setContainer('statusId', this.props.containersNonPrimary[this.props.container.parentContainerId].statusId);\n  }\n\n  recursive(object, id) {\n    for (let key in this.props.containersNonPrimary) {\n      if (id == this.props.containersNonPrimary[key].parentContainerId) {\n        object = this.recursive(object, key);\n        delete object[key];\n      }\n    }\n    return object;\n  }\n\n  render() {\n    let containerDisplay;\n\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    if (this.props.data) {\n      containerBarcodesNonPrimary = this.recursive(containerBarcodesNonPrimary, this.props.data.container.id);\n      delete containerBarcodesNonPrimary[this.props.data.container.id];\n    }\n\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.setContainer}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions = {\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates = {\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes = {this.props.containerTypes}\n            containerStati = {this.props.containerStati} \n            select = {true}\n            selectedCoordinate = {this.props.container.coordinate}\n            setContainer = {this.props.setContainer}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","import Modal from 'Modal'\n\n/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n    this.loadContainer = this.loadContainer.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let load = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\n      load(this.props.children[this.props.coordinates[coordinate]].barcode);\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    this.props.saveChildContainer(container);\n  }\n\n  increaseCoordinate(coordinate) {\n    coordinate++;\n    for (let c in this.props.coordinates) {\n      if (c == coordinate) {\n        this.props.close();\n      }\n    }\n    return coordinate;\n  }\n\n  loadContainer(name, value) {\n    if (value) {;\n      let containerId = value;\n      let container = this.props.containers[containerId];\n      container.parentContainerId = this.props.container.id;\n      container.coordinate = this.props.coordinate;\n\n      this.props.saveChildContainer(container).then(() => {\n        if (this.props.sequential) {\n          this.props.edit('barcode');\n          let coordinate = this.increaseCoordinate(this.props.coordinate);\n          this.props.setCoordinate(coordinate);\n        } else {\n          this.props.close();\n        }\n      });\n    }\n  }\n\n  render() {\n  //TODO: This is eventually need to be reworked and cleaned up\n  \n  let barcodeField;\n  \n  if ((this.props.editable||{}).barcode) {\n    barcodeField = (\n      <Modal\n        title='Load Container'\n        show={this.props.editable.barcode}\n        closeModal={this.props.close}\n        throwWarning={false}\n      >\n        <StaticElement\n          name='coordinate'\n          label='Coordinate'\n          text={this.props.coordinate}\n        />\n        <CheckboxElement\n          name='sequential'\n          label='Sequential Loading'\n          value={this.props.sequential}\n          onUserInput={this.props.setSequential}\n        />\n        <SearchableDropdown\n          name='barcode'\n          label='Barcode'\n          options={this.props.barcodes}\n          onUserInput={this.loadContainer}\n          placeHolder='Please Scan or Select Barcode'\n          autoFocus={true}\n        />\n      </Modal>\n    );\n  }\n  \n\n  let column = [];\n  let row = [];\n  let display;\n  var coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let title = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = null;\n\n        if (!this.props.select) {\n          // This double if statement doesn't sound great\n          if ((this.props.coordinates||{})[coordinate]) {\n            nodeClass = 'node occupied';\n            dataHtml = 'true';\n            dataToggle = 'tooltip';\n            dataPlacement = 'top';\n            tooltipTitle = \n              '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n              '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n              '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            draggable = 'true';\n            onDragStart = this.drag;\n            onDragOver = null;\n            onDrop = null;\n            onClick = this.redirectURL;\n          } else {\n            nodeClass = 'node load';\n            title = 'Load...';\n            onClick = (e) => {this.props.setCoordinate(e.target.id); this.props.edit('barcode');};\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n              onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            // TODO: --- This is currently not working ---\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            title={title}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div\n          className='row'\n          style={rowStyle} \n        >\n          {column}\n        </div>\n      )\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div className='display'>\n        {barcodeField}\n        {display}\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    if (this.props.throwWarning) {                                              \n      swal({                                                                    \n        title: \"Are You Sure?\",                                                 \n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",                                                        \n        showCancelButton: true,                                                 \n        confirmButtonText: 'Proceed',                                           \n        cancelButtonText: 'Cancel',                                             \n      },                                                                        \n      () => {                                                              \n        this.props.closeModal();                                                        \n      });                                                            \n    } else {                                                                    \n      this.props.closeModal();\n    }                                                                           \n  }   \n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 850,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '50px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.closeModal}>\n          <div style={modalStyle} onClick={e => {e.stopPropagation()}}>\n            <div style={titleStyle}>\n              {this.props.title}\n              <span style={glyphStyle} onClick={this.closeModal}>\n                ×\n              </span>\n            </div>\n            <div style={bodyStyle}>\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nModal.defaultProps = {\n  throwWarning: true,\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","import SpecimenBarcodeForm from './barcodeForm';\nimport BiobankSpecimenForm from './specimenForm';\nimport SpecimenPreparationForm from './preparationForm';\n\n/**\n * Biobank Pool Specimen Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\nclass PoolSpecimenForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formData: {},\n      barcodeList: {},\n      errorMessage: null,\n      formErrors: {},\n      barcodeCount: 2,\n      preparation: false,\n      step: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.setPreparationFormData = this.setPreparationFormData.bind(this);\n    this.setSpecimenFormData = this.setSpecimenFormData.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.setBarcodeCount = this.setBarcodeCount.bind(this);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.addPreparation = this.addPreparation.bind(this);\n    this.removePreparation = this.removePreparation.bind(this);\n    this.validate = this.validate.bind(this);\n    this.formSwitch = this.formSwitch.bind(this);\n    this.preparationSwitch = this.preparationSwitch.bind(this);\n    this.runAjax = this.runAjax.bind(this);\n  }\n\n  next() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          step: this.state.step+1\n        });\n      }, \n      error => {\n        swal(\"Oops!\", error.responseText, \"error\");\n      }\n    );\n  }\n\n  previous() {\n    this.setState({\n      step: this.state.step-1\n    });\n  }\n\n  validate() {\n    return this.runAjax(this.props.specimenRequest, {barcodeList: this.state.barcodeList});\n  }\n\n  runAjax(url, inputData) {\n    return new Promise((resolve, reject) => {\n      $.ajax(url, {\n        method: \"GET\",\n        dataType: 'json',\n        data: inputData,\n        success: function(data) {\n          resolve(data);\n        }.bind(this),\n        error: function(error, textStatus, errorThrown) {\n          reject(error);\n          console.error(error);\n        }\n      });  \n    })\n  }\n\n  setBarcodeCount(field, value) {\n    let barcodeCount = value;\n    let barcodeList = this.state.barcodeList;\n    for (let barcode in barcodeList) {\n      if (barcode > barcodeCount) {\n        delete barcodeList[barcode];\n      }\n    }\n\n    this.setState({barcodeCount, barcodeList});\n  }\n\n  formSwitch(inputForm, specimenForm) {\n    switch(this.state.step) {\n      case 1:\n        return inputForm;\n      case 2:\n        return specimenForm;\n    }\n  }\n\n  preparationSwitch(preparationButton, preparationForm) {\n    switch(this.state.preparation) {\n      case false:\n        return preparationButton;\n      case true:\n        return preparationForm;\n    }\n  }\n\n  addPreparation() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          preparation: true\n        });\n      },\n      error => {\n        swal('Oh no!', error.responseText, 'error');\n      }\n    );\n  }\n\n  removePreparation() {\n    let formData = this.state.formData;\n    //TODO: is it better to set it to empty, or delete it?\n    formData.preparationForm = {};\n    this.setState({\n      preparation: false,\n      formData\n    });\n  }\n\n  render() {\n    //Generates barcodes\n    let barcodes = [];\n    for (let i=1; i<=this.state.barcodeCount; i++) {\n      barcodes.push(\n        <TextboxElement\n          name={i}\n          label={'Barcode ' + i}\n          onUserInput={this.setFormData}\n          required={true}\n          value={this.state.barcodeList[i]}\n          errorMessage={this.state.formErrors[i]}\n        />\n      )\n    }\n    \n    let preparationButton = ( \n      <div className='row'>\n        <div className='col-xs-4'/>\n        <div className='col-xs 4 action'>\n            <span className='action'>\n            <div \n              className='action-button add'\n              onClick={this.addPreparation}\n            >\n              +\n            </div>\n            </span>\n            <div className='action-title'>\n              Add Preparation\n            </div>\n        </div>\n      </div>\n    );\n\n    let preparationForm;\n    if (this.state.poolData) {\n\n      const specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId]\n \n      let specimenProtocols = {};\n      for (let id in specimenProtocolAttributes) {\n        specimenProtocols[id] = this.props.specimenProtocols[id];\n      }\n      specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\n      preparationForm = (\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <SpecimenPreparationForm\n              formData={this.state.formData.preparationForm}\n              specimenProtocols={specimenProtocols}\n              specimenProtocolAttributes={specimenProtocolAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              setParentFormData={this.setPreparationFormData}\n              insertAction={`${loris.BaseURL}/biobank/ajax/submitData.php?action=insertSpecimenPreparation`}\n            />\n            <a className='pull-right' style={{cursor:'pointer'}} onClick={this.removePreparation}>Cancel Preparation</a>\n          </div>\n        </div>\n      );\n    }\n\n    let inputForm = (\n      <div>\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <StaticElement\n              label='Pooling Note'\n              text='Select or Scan the specimens to be pooled. Please ensure that they\n                    are the same type, and share the same PSCID and Visit Label'\n            />\n            <NumericElement\n              label='№ of Specimens'\n              min='2'\n              max='100'\n              value={this.state.barcodeCount}\n              onUserInput={this.setBarcodeCount}\n            />\n            {barcodes}\n          </div>\n        </div>\n        {this.preparationSwitch(preparationButton, preparationForm)}\n        <div className='col-sm-3 col-xs-offset-9 action'>\n          <div className='action-title'>\n            Next\n          </div>\n          <span className='action'>\n            <div \n              className='action-button update'\n              onClick={this.next}\n            >\n              <span className='glyphicon glyphicon-chevron-right'/>\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n\n    //TODO: Things here need to be in the proper order!!!\n    let specimenForm;\n    if (this.state.poolData) {\n\n      // This is to provide the options for the output specimens\n      let specimenTypes = {};\n      if (this.state.poolData.typeId) {\n        specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n      }\n  \n      let pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n      let visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\n      let barcodesArray = Object.values(this.state.barcodeList); \n      let barcodesString = barcodesArray.join(', ');  \n\n      // TODO: rather than all specimen units this should really be specific to the\n      // type\n      let specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\n      specimenForm = (\n        <div className='row'>\n          <div className='col-xs-12'>\n            <BiobankSpecimenForm\n              formData={this.state.formData.specimenForm}\n              candidateId={this.state.poolData.candidateId}\n              pscid={pscid}\n              sessionId={this.state.poolData.sessionId}\n              visit={visit}\n              parentSpecimenBarcodes={barcodesString}\n              parentSpecimenIds={this.state.poolData.specimenIds}\n              specimenTypes={specimenTypes}\n              specimenTypeUnits={this.props.specimenTypeUnits}\n              specimenUnits={specimenUnits}\n              containerTypesPrimary={this.props.containerTypesPrimary}\n              containersNonPrimary={this.props.containersNonPrimary}\n              specimenTypeAttributes={this.props.specimenTypeAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              capacities={this.props.capacities}\n              containerDimensions={this.props.containerDimensions}\n              containerCoordinates={this.props.containerCoordinates}\n              setParentFormData={this.setSpecimenFormData}\n              action={`${loris.BaseURL}/biobank/ajax/submitData.php?action=submitSpecimen`}\n              refreshParent={this.props.refreshParent}\n            />\n            <ButtonElement\n              label='Submit'\n            />\n          </div>\n          <div className='col-sm-3 col-xs-offset-2 action'>\n            <span className='action'>\n              <div \n                className='action-button update'\n                onClick={this.previous}\n              >\n                <span className='glyphicon glyphicon-chevron-left'/>\n              </div>\n            </span>\n            <div className='action-title'>\n              Previous\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"poolSpecimenForm\"\n        id='poolSpecimenForm'\n        onSubmit={this.handleSubmit}\n        ref=\"form\"\n      >\n        {this.formSwitch(inputForm, specimenForm)}\n      </FormElement>\n    );\n  }\n\n/** *******************************************************************************\n *                      ******     Helper methods     *******\n *********************************************************************************/\n\n\n  validateForm(formElement, value) {\n    let formErrors = this.state.formErrors;\n\n    //validate barcode regex\n    if (formElement === \"barcode\" && value !== \"\") {\n      if (!(/^hello/.test(this.state.formData.barcode))) {\n        formErrors.barcode = true;\n      } else {\n        formErrors.barcode = false;\n      }\n    }\n\n    //validate that quantity is a number and less than capacity\n    if (formElement === \"quantity\" && value !== \"\") {\n      if (isNaN(value) || (value > this.props.capacities[this.state.currentContainerType])) {\n        formErrors.quantity = true;\n      } else {\n        formErrors.quantity = false;\n      }\n    }\n\n    //validate datatypes and regex of generated type attributes\n    let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n    let specimenTypeFields = Object.keys(specimenTypeFieldsObject).map((attribute) => {\n\n      let datatype = this.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"number\") {\n        if (formElement === attribute) {\n          if (isNaN(value) && value !== \"\") {\n            formErrors[attribute] = true;\n          } else {\n            formErrors[attribute] = false;\n          }\n        }\n      }\n    })\n\n    this.setState({\n      formErrors: formErrors\n    });\n  }\n\n\n  /**\n   * Handle form submission\n   * @param {object} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.submitForm();\n  }\n\n  /*\n   * Uploads the file to the server\n   */\n  submitForm() {\n    // Set form data and specimen the biobank file\n    let formData = this.state.formData;\n    let preparationForm = this.state.formData.preparationForm;\n    let specimenForm = this.state.formData.specimenForm;\n    formData['preparationForm'] = JSON.stringify(preparationForm);\n    formData['specimenForm'] = JSON.stringify(specimenForm);\n\n    console.log(formData.specimenForm);\n    console.log(formData.preparationForm);\n\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        let xhr = new window.XMLHttpRequest();\n        return xhr;\n      }.bind(this),\n      success: function() {\n        //this.props.refreshParent();\n        swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n        this.props.onSuccess();\n      }.bind(this),\n      error: function(err) {\n        console.error(err);\n        let msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n        this.setState({\n          errorMessage: msg,\n        });\n        swal(msg, \"\", \"error\");\n      }.bind(this)\n    });\n  }\n\n  /**\n   * Checks if the inputted file name is valid\n   *\n   * @param {string} requiredFileName - Required file name\n   * @param {string} fileName - Provided file name\n   * @return {boolean} - true if fileName starts with requiredFileName, false\n   *   otherwise\n   */\n//  isValidFileName(requiredFileName, fileName) {\n//    if (fileName === null || requiredFileName === null) {\n//      return false;\n//    }\n//\n//    return (fileName.indexOf(requiredFileName) === 0);\n//  }\n\n  /**\n   * Validate the form\n   *\n   * @param {object} formRefs - Object containing references to React form elements\n   * @param {object} formData - Object containing form data inputed by user\n   * @return {boolean} - true if all required fields are filled, false otherwise\n   */\n  isValidForm(formRefs, formData) {\n    let isValidForm = true;\n\n    let requiredFields = {\n      pscid: null,\n      visitLabel: null,\n    };\n\n    Object.keys(requiredFields).map(function(field) {\n      if (formData[field]) {\n        requiredFields[field] = formData[field];\n      } else if (formRefs[field]) {\n        formRefs[field].props.hasError = true;\n        isValidForm = false;\n      }\n    });\n    this.forceUpdate();\n\n    return isValidForm;\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    // This lets the modal window know that there is formData\n    // and will cause a warning to be thrown of the modal window\n    // is exited\n    this.props.onChange instanceof Function && this.props.onChange();\n  \n    if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n      this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n    }\n\n    let formData = this.state.formData;\n    let barcodeList = this.state.barcodeList;\n \n    //TODO: there must be a better way to do this\n    if (isNaN(formElement)) {\n      formData[formElement] = value;\n    } else {\n      barcodeList[formElement] = value;\n    }\n\n    this.setState({\n      formData,\n      barcodeList\n    });\n  }\n\n  setPreparationFormData(preparationFormData) {\n    let formData = this.state.formData;\n    formData.preparationForm = preparationFormData;\n    \n    this.setState({formData});\n  }\n\n  setSpecimenFormData(specimenFormData) {\n    let formData = this.state.formData;\n    formData.specimenForm = specimenFormData;\n  \n    this.setState({formData});\n  }\n}\n\nPoolSpecimenForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  action: React.PropTypes.string.isRequired,\n  refreshTable: React.PropTypes.func\n};\n\nexport default PoolSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/poolSpecimenForm.js","import CustomFields from './customFields';\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = (\n            <CustomFields\n              fields={specimenProtocolFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.preparation.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","import ContainerBarcodeForm from './containerBarcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainerForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formErrors: {},\n      errorMessage: null,\n      containerList: {1: {}},\n      countContainers: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.addContainer = this.addContainer.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyContainer = this.copyContainer.bind(this);\n    this.removeContainer = this.removeContainer.bind(this);\n    this.saveContainerList = this.saveContainerList.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveContainerList() {\n    let containerList = this.state.containerList;\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let container in containerList) {\n      containerList[container].statusId = availableId;\n      containerList[container].temperature = 20;\n      this.props.save(containerList[container], this.props.saveContainer, 'Container Creation Successful!').then(\n        () => {this.props.close(); this.props.loadFilters(); this.props.loadOptions();}\n      );\n    }\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let siteId = this.state.siteId;\n    let containerList = this.state.containerList;\n    if (name === 'siteId') {\n       siteId = value;\n       for (let container in containerList) {\n         containerList[container].originId = siteId;\n         containerList[container].locationId = siteId;\n       }\n    } else {\n      containerList[key][name] = value;\n    }\n    this.setState({containerList, siteId});\n  }\n\n  addContainer() {\n    let containerList = this.state.containerList;\n    let count = this.state.countContainers;\n    let collapsed = this.state.collapsed;\n    let siteId = this.state.siteId;\n    let temperature = 20;\n\n    // get Id of available status\n    let statusId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    containerList[count+1] = {\n      statusId: statusId,\n      originId: siteId,\n      locationId: siteId,\n      temperature: temperature\n    };\n\n    collapsed[count+1] = true;  \n\n    this.setState({\n      containerList: containerList,\n      countContainers: count + 1,\n      collapsed: collapsed,\n    });\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyContainer(key) {\n    let count = this.state.countContainers;\n    let collapsed = this.state.collapsed;\n    let nextKey = count+1;\n    let containerList = this.state.containerList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      containerList[nextKey] = JSON.parse(JSON.stringify(containerList[key]));\n      delete containerList[nextKey].barcode;\n      collapsed[nextKey] = true;\n      nextKey++;\n    }    \n\n    this.setState({\n      containerList: containerList,\n      countContainers: nextKey,\n      collapsed: collapsed\n    });\n  }\n\n  removeContainer(key) {\n    let containerList = this.state.containerList;\n    delete containerList[key];\n    this.setState({containerList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addContainer button is pressed\n    let containerListArray = Object.keys(this.state.containerList);\n    let containers = [];\n    let i = 1;\n    for (let key of containerListArray) {\n      containers.push(\n        <ContainerBarcodeForm\n          key={key}\n          containerKey={key}\n          id={i}\n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          container={this.state.containerList[key] || null}\n          removeContainer={containerListArray.length !== 1 ? () => this.removeContainer(key) : null}\n          addContainer={i == containerListArray.length ? this.addContainer : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyContainer={i == containerListArray.length && this.state.containerList[key] ? this.copyContainer : null}\n          setContainer={this.setContainer}\n          onChange={this.props.onChange}\n          containerTypesNonPrimary={this.props.containerTypesNonPrimary}\n          containerBarcodesNonPrimary={this.props.containerBarcodesNonPrimary}\n        />\n      );\n     \n      i++;\n    }\n\n    return (\n      <FormElement\n        name=\"containerForm\"\n        onSubmit={this.saveContainerList}\n        ref=\"form\"\n      >\n        <br/>\n        <div className=\"row\">\n          <div className=\"col-xs-11\">\n            <SelectElement\n              name=\"siteId\"\n              label=\"Site\"\n              options={this.props.centers}\n              onUserInput={this.setContainer}\n              required={true}\n              value={this.state.siteId}\n            />\n          </div>\n        </div>\n        {containers}\n          <div className=\"col-xs-3 col-xs-offset-9\">\n            <ButtonElement label=\"Submit\"/>\n          </div>\n      </FormElement>\n    );\n  }\n}\n\nBiobankContainerForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  barcode: React.PropTypes.string,\n  refreshTable: React.PropTypes.func\n};\n\nexport default BiobankContainerForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerForm.js","/**\n * Container Barcode Form\n *\n * Acts a subform for ContainerForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerBarcodeForm extends React.Component {\n  constructor() {\n    super();\n   \n    this.setContainer = this.setContainer.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  copy() {\n    this.props.copyContainer(this.props.containerKey);\n  }\n\n  //TODO: change form.js so this isn't necessary\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.containerKey);\n  }\n\n  render() {\n    // HR TODO: All this CSS should eventually be moved\n    let addContainerButton;\n    let addContainerText;\n    let copyContainerButton;\n    let copyContainerText;\n    if (this.props.addContainer) {\n      addContainerButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addContainer}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addContainerText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }   \n    \n    if (this.props.copyContainer) {\n      copyContainerButton = ( \n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >   \n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );  \n      copyContainerText = ( \n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />  \n          Copies\n        </span>\n      );  \n    }   \n\n    let removeContainerButton;\n    if (this.props.removeContainer) {\n      const glyphStyle = { \n        color: '#DDDDDD',\n        marginLeft: 10, \n        cursor: 'pointer',\n        fontSize: 15\n      }   \n\n      removeContainerButton = ( \n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeContainer}\n          style={glyphStyle}\n        />\n      );  \n    }\n\n    return (\n      <FormElement\n        name='container'\n      >\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div>\n            <TextboxElement\n              name='barcode'\n              label={'Barcode ' + this.props.id}\n              onUserInput={this.setContainer}\n              ref='barcode'\n              required={true}\n              value={this.props.container.barcode}\n            />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span\n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse'\n              data-target={'#item-' + this.props.containerKey}\n              onClick={() => this.props.toggleCollapse(this.props.containerKey)}\n            />\n            {removeContainerButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-9'>\n            <div id={'item-' + this.props.containerKey} className='collapse'>\n              <SelectElement\n                name='typeId'\n                label='Container Type'\n                options={this.props.containerTypesNonPrimary}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.typeId}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-3'/>\n            <div className='col-xs-4 action'>\n              {addContainerButton}\n              {addContainerText}\n            </div>\n            <div className='col-xs-4 action'>\n              {copyContainerButton}\n              {copyContainerText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nContainerBarcodeForm.propTypes = {\n}\n\nexport default ContainerBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerBarcodeForm.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/**\n * Allows to dynamically render vertical tabs corresponding to tab panes.\n */\n\nclass VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <div className=\"tabbable col-md-3 col-sm-3\">\n          <ul className=\"nav nav-pills nav-stacked\" role=\"tablist\" style={tabStyle}>\n            {tabs}\n          </ul>\n        </div>\n        <div className=\"tab-content col-md-9 col-sm-9\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nVerticalTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nVerticalTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nexport {\n  Tabs,\n  VerticalTabs,\n  TabPane\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/* exported RBiobankSpecimen */\n\nimport Modal from 'Modal';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n\n  render() {\n\n    //Map Options for Form Select Elements\n    let specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n    let containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n    let candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n    let sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\n    let addAliquotForm = (\n      <div\n        className='action'\n        title='Make Aliquots'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('aliquotForm')}}\n        >\n          <span>+</span>  \n        </div>\n        <Modal\n          title=\"Add Aliquots\"\n          closeModal={this.props.close}\n          show={this.props.editable.aliquotForm}\n        >\n          <BiobankSpecimenForm\n            data={this.props.data}\n            specimen={this.props.specimen}\n            setSpecimen={this.props.setSpecimen}\n            saveSpecimen={this.props.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            close={this.props.close}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.props.editable.collection) {\n      let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.props.options.specimenTypeUnits}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    } else {\n      let specimenTypeAttributes;\n      //loops through data object to produce static elements\n      if (this.props.data.specimen.collection.data) {\n        let collectionData = this.props.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(collectionData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenTypeAttributes[this.props.data.specimen.typeId][key].name}\n              text={collectionData[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.props.data.specimen.collection.quantity+' '+\n              this.props.options.specimenUnits[\n                this.props.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.collection.locationId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel specimen-panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.props.editable.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.props.editable.collection ? null : () => {this.props.edit('collection')}}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.props.options.specimenProtocols) {\n      if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n        specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.props.editable.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation Does Exist and the form is not in an edit state\n    if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      if (this.props.data.specimen.preparation.data) {\n        let preparationData = this.props.data.specimen.preparation.data;\n        specimenProtocolAttributes = Object.keys(preparationData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenProtocolAttributes[this.props.data.specimen.preparation.protocolId][key].name}\n              text={preparationData[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      preparationPanel = (\n        <div\n          className='panel specimen-panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('preparation'); this.props.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n      preparationPanel = (\n        <div className='panel specimen-panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.preparation ? null : () => {this.props.edit('preparation')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.props.options.specimenMethods) {\n      if (this.props.options.specimenMethods[id].typeId === this.props.data.specimen.typeId) {\n        specimenMethods[id] = this.props.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.props.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.props.editable.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          files={this.props.files}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          setFiles={this.props.setFiles}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      //TODO: Make the below a separate component\n      if (this.props.data.specimen.analysis.data) {\n      let analysisData = this.props.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.keys(analysisData).map((key) => {\n          if (this.props.options.attributeDatatypes[\n            this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].datatypeId\n          ].datatype === 'file') {\n            return (\n              <LinkElement\n               label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n               text={analysisData[key]}\n               href={loris.BaseURL+'/biobank/ajax/requestData.php?action=downloadFile&file='+analysisData[key]}\n               target={'_blank'}\n               download={analysisData[key]}\n              />\n            );\n          } else {\n            return ( \n              <StaticElement\n                label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n                text={analysisData[key]}\n              />\n            );\n          }\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.analysis.locationId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel specimen-panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('analysis'); this.props.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n      analysisPanel = (\n        <div className='panel specimen-panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.analysis ? null : () => {this.props.edit('analysis')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.props.specimen}\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        setSpecimen={this.props.setSpecimen}\n        saveSpecimen={this.props.saveSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );\n\n    //TODO: this can maybe become its own component...?\n    let returnToFilter = (\n      <div>\n        <br/>\n        <span className='action'>\n          <div\n            className='action-button update'\n            onClick={this.props.loadFilters}\n          >\n            <span className='glyphicon glyphicon-chevron-left'/>\n          </div>\n        </span>\n        <div className='action-title'>\n          Return to Filter\n        </div>\n      </div>\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.props.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.props.data.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            specimen={this.props.data.specimen}\n            centers={this.props.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n        {returnToFilter}\n      </div>\n    ); \n  }\n}\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","import Modal from 'Modal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.editable.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.edit('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                specimen={this.props.specimen}\n                units={units}\n                close={this.props.close}\n                setSpecimen={this.props.setSpecimen}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if ((this.props.data.specimen||{}).fTCycle !== undefined) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.editable.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => {this.props.edit('temperature')}}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              container={this.props.container}                                  \n              close={this.props.close}                     \n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.editable.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              container={this.props.container}                                  \n              stati={stati}\n              close={this.props.close}\n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.editable.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              container={this.props.container}\n              centers={this.props.options.centers}\n              close={this.props.close}                        \n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let barcode = this.props.data.parentSpecimenContainer.barcode;\n      let parentSpecimenFieldValue = (\n        <a style={{cursor: 'pointer'}} onClick={()=>this.props.loadSpecimen(barcode)}>\n          {barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a style={{cursor:'pointer'}} onClick={()=>this.props.loadContainer(barcode)}>\n            {barcode}\n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <span                                                               \n            className='action-button update'                                  \n            onClick={() => {this.props.edit('containerParentForm')}}\n          >                                                                   \n            <span className='glyphicon glyphicon-chevron-right'/>             \n          </span>                                                             \n          <Modal                                                              \n            title='Update Parent Container'                                       \n            closeModal={this.props.close}\n            show={this.props.editable.containerParentForm}\n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainer={this.props.setContainer}                            \n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </Modal>                                                            \n        </div>                                                                \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow: 2}}>\n          <TextboxElement\n            name='quantity'\n            inputClass='col-xs-11'\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.quantity}\n          />\n        </div>\n        <div style={{flexGrow: 2}}>\n          <SelectElement\n            name='unit'\n            inputClass='col-xs-11'\n            options={this.props.units}\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveSpecimen}\n            columnSize= 'col-xs-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <a onClick={this.props.close} style={{cursor: 'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimen: React.PropTypes.func,\n  close: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <TextboxElement\n              name='temperature'\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.temperature}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.statusId}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow:1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='locationId'\n              options={this.props.centers}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.locationId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={this.props.close}\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","import CustomFields from './customFields';\n\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    if (value instanceof File) {\n      data[name] = value.name;\n      this.props.setFiles(name, value);\n    } else {\n      data[name] = value;\n      this.setAnalysis('data', data);\n    }\n  }\n\n  render() {\n    let submitButton;\n    submitButton = this.props.data.specimen.analysis ? <ButtonElement label=\"Update\"/>\n      : <ButtonElement label=\"Submit\"/>;\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = (\n            <CustomFields\n              fields={specimenMethodFieldsObject}\n              files={this.props.files}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.analysis.data}\n              data={(((this.props.data||{}).specimen||{}).analysis||{}).data}\n              setData={this.setData}\n            />\n          );  \n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        fileUpload={true}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\n//TODO: revise this component once Shipments are enabled.\nclass LifeCycle extends React.Component {\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n      });\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n    // Create Collection Node\n    let collectionNode;\n    if ((this.props.specimen||{}).collection || this.props.container) {\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    // Create Preparation Node\n    let preparationNode;\n    if ((this.props.specimen||{}).preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    // Create Analysis Node\n    let analysisNode;\n    if ((this.props.specimen||{}).analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'>\n             <div className='letter'>A</div>\n           </div>\n        </div>\n      );\n    }\n\n    // Create Lines\n    let line;\n    let nodes = 0;\n    for (let i in this.props.specimen) {\n      if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n        nodes++;\n      }\n    }\n    let lineWidth = nodes > 1 ? 60/(nodes-1) : 0;\n    let lineStyle = {width: lineWidth+'%'}\n    line = (<div className='lifecycle-line' style={lineStyle}/>);\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode ? line : null}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainer('parentContainerId', null);\n    this.props.setContainer('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankContainer */\n\nimport Loader from 'Loader';\nimport Globals from './globals';\nimport LifeCycle from './lifeCycle.js';\nimport BarcodePath from './barcodePath.js';\nimport ContainerDisplay from './containerDisplay.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Container\n *\n * Fetches data corresponding to a given Container from Loris backend and\n * displays a page allowing viewing of meta information of the container\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainer extends React.Component {\n  constructor() {\n    super();\n    this.drag = this.drag.bind(this);\n  }\n\n  drag(e) {\n    let container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n    e.dataTransfer.setData(\"text/plain\", container);\n  }\n\n  render() {\n    let globals = ( \n      <Globals\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );  \n\n    let barcodePath = (\n      <BarcodePath\n        container={this.props.data.container}\n        parentContainers={this.props.data.parentContainers}\n        loadContainer={this.props.loadContainer}\n      />\n    );\n\n    let display;\n    if (this.props.data.container.dimensionId) {  \n      let barcodes = this.props.mapFormOptions(this.props.options.containers, 'barcode');\n      //delete values that are parents of the container\n      if (this.props.data.parentContainers) {\n        for (let key in this.props.data.parentContainers) {\n          delete barcodes[this.props.data.parentContainers[key].id];\n        }\n      }\n      delete barcodes[this.props.data.container.id];\n\n      display = (\n        <ContainerDisplay \n          barcodes={barcodes}\n          container={this.props.container}\n          coordinate={this.props.coordinate}\n          sequential={this.props.sequential}\n          containers={this.props.options.containers}\n          children={this.props.data.childContainers}\n          types={this.props.options.containerTypes}\n          dimensions={this.props.options.containerDimensions[this.props.data.container.dimensionId]}\n          coordinates={this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null}\n          containerTypes={this.props.options.containerTypes}\n          containerStati={this.props.options.containerStati}\n          editable={this.props.editable}\n          edit={this.props.edit}\n          close={this.props.close}\n          setCoordinate={this.props.setCoordinate}\n          setSequential={this.props.setSequential}\n          loadSpecimen={this.props.loadSpecimen}\n          loadContainer={this.props.loadContainer}\n          saveChildContainer={this.props.saveChildContainer}\n        />\n      );\n    }\n\n    let listAssigned = [];\n    let coordinateList = [];\n    let listUnassigned = [];\n    if (this.props.data.childContainers) {\n      let children = this.props.data.childContainers;\n      for (let child in children) {\n        let load;\n        if (this.props.options.containerTypes[children[child].typeId].primary) {\n          load = this.props.loadSpecimen;\n        } else {\n          load = this.props.loadContainer;\n        }\n\n        if (children[child].coordinate) {\n          listAssigned.push(\n            <div>\n              <a onClick={()=>load(children[child].barcode)} style={{cursor:'pointer'}}>\n                {children[child].barcode}\n              </a>\n            </div>\n          ); \n          coordinateList.push(\n            <div>\n              at {children[child].coordinate}\n            </div>\n\n          );\n        } else {\n          listUnassigned.push(\n            <a \n              onClick={()=>load(children[child].barcode)}\n              style={{cursor:'pointer'}}\n              id={children[child].id} \n              draggable={true}\n              onDragStart={this.drag}\n            >\n              {children[child].barcode}\n            </a>\n          );\n        }\n      }     \n    }\n\n    //TODO: this can maybe become it's own component..?\n    let returnToFilter = (\n      <div>\n        <br/>\n        <span className='action'>\n          <div\n            className='action-button update'\n            onClick={this.props.loadFilters}\n          >\n            <span className='glyphicon glyphicon-chevron-left'/>\n          </div>\n        </span>\n        <div className='action-title'>\n          Return to Filter\n        </div>\n      </div>\n    );\n\n    return (\n      <div id='container-page'> \n        <div className=\"container-header\"> \n          <div className='container-title'> \n            <div className='barcode'> \n              Barcode \n              <div className='value'> \n                <strong>{this.props.data.container.barcode}</strong> \n              </div> \n            </div> \n          </div> \n          <ContainerCheckout \n            container={this.props.data.container}\n            setContainer={this.props.setContainer}\n            saveContainer={this.props.saveContainer}\n          />\n          <LifeCycle\n            container={this.props.data.container}\n            centers={this.props.options.centers}\n          />\n        </div> \n        <div className='summary'> \n          {globals} \n          <div className='display-container'>\n            {display} \n            {barcodePath}\n          </div>\n          <div className='container-list'>\n            <div className='title'>\n              {listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null}\n            </div>\n            <div className='title'>\n              {listAssigned.length !== 0 ? 'Assigned Containers' : null}\n            </div>\n            <div className='container-coordinate'>\n              <div>{listAssigned}</div>\n              <div>{coordinateList}</div>\n            </div>\n              {listAssigned.length !==0 ? <br/> : null}\n            <div className='title'>\n              {listUnassigned.length !== 0 ? 'Unassigned Containers' : null}\n            </div>\n            {listUnassigned}\n          </div>\n        </div> \n        {returnToFilter}\n      </div> \n    ); \n  }\n}\n\nBiobankContainer.propTypes = {\n  containerPageDataURL: React.PropTypes.string.isRequired,\n};\n\nexport default BiobankContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/container.js","/**\n * Container Path\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass BarcodePath extends React.Component {\n\n  render() {\n\n    let path = [];\n    let pathLength = this.props.parentContainers.length - 1;\n    let containerURL = loris.BaseURL+'/biobank/container/?barcode=';\n    for (let i=pathLength; i>=0; i--) {\n      path.push(\n        <span className='barcodePath'> \n          {'/'}\n          <a\n            onClick={()=>this.props.loadContainer(this.props.parentContainers[i].barcode)}\n            style={{cursor:'pointer'}}\n          >\n            {this.props.parentContainers[i].barcode}\n          </a>\n        </span>\n      );\n    }\n    path.push(\n      <span className='barcodePath'> \n        {'/'}\n        <a\n          onClick={()=>this.props.loadContainer(this.props.container.barcode)}\n          style={{cursor:'pointer'}}\n        >\n          {this.props.container.barcode}\n        </a>\n      </span>\n    );\n\n    return (\n      <div>\n        {path}\n      </div>\n    );\n  }\n}\n\nBarcodePath.propTypes = {\n}\n\nexport default BarcodePath;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodePath.js"],"sourceRoot":""}