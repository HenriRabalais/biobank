{"version":3,"sources":["webpack:///modules/biobank/js/biobankIndex.js","webpack:///webpack/bootstrap 9bab09ec3b3aa1f3553b?5c41*******","webpack:///./modules/biobank/jsx/biobankIndex.js","webpack:///./jsx/Loader.js","webpack:///./modules/biobank/jsx/filter.js","webpack:///./jsx/FilterForm.js","webpack:///./jsx/Panel.js","webpack:///./modules/biobank/jsx/specimenForm.js","webpack:///./modules/biobank/jsx/collectionForm.js","webpack:///./modules/biobank/jsx/customFields.js","webpack:///./modules/biobank/jsx/containerParentForm.js","webpack:///./modules/biobank/jsx/containerDisplay.js","webpack:///./jsx/Modal.js","webpack:///./modules/biobank/jsx/poolSpecimenForm.js","webpack:///./modules/biobank/jsx/preparationForm.js","webpack:///./modules/biobank/jsx/containerForm.js","webpack:///./jsx/Tabs.js","webpack:///./modules/biobank/jsx/specimen.js","webpack:///./modules/biobank/jsx/globals.js","webpack:///./modules/biobank/jsx/quantityField.js","webpack:///./modules/biobank/jsx/temperatureField.js","webpack:///./modules/biobank/jsx/statusField.js","webpack:///./modules/biobank/jsx/centerField.js","webpack:///./modules/biobank/jsx/analysisForm.js","webpack:///./modules/biobank/jsx/lifeCycle.js","webpack:///./modules/biobank/jsx/containerCheckout.js","webpack:///./modules/biobank/jsx/container.js","webpack:///./modules/biobank/jsx/barcodePath.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_Loader","_Loader2","_filter","_filter2","_specimen","_specimen2","_container","_container2","BiobankIndex","_React$Component","_this$state","this","_this","getPrototypeOf","state","isLoaded","page","options","specimenFilter","containerDataTable","containerFilter","container","specimen","list","specimenForm","containerForm","aliquotForm","containerParentForm","barcode","containerCheckout","temperature","quantity","status","center","collection","preparation","analysis","fetch","bind","loadFilters","loadSpecimenDataTable","loadContainerDataTable","loadOptions","loadContainer","loadSpecimen","updateSpecimenFilter","updateContainerFilter","clone","mapFormOptions","toggleCollapse","edit","close","revertParameters","setSpecimenList","addListItem","copyListItem","removeListItem","saveSpecimenList","setSpecimen","revertSpecimen","setContainerList","setContainer","revertContainer","setCopyMultiplier","setCenterId","setSessionId","setCandidateId","setCoordinate","setSequential","setCheckoutList","setFiles","addPreparation","addAnalysis","saveSpecimen","saveContainer","saveChildContainer","saveContainerList","validateContainer","validateSpecimen","save","_this2","then","setState","_this3","Promise","resolve","_this4","specimenFilterDataURL","data","specimenDataTable","_this5","containerFilterDataURL","_this6","optionsURL","_this7","containerDataURL","_this8","specimenDataURL","url","$","ajax","dataType","success","error","errorCode","errorMsg","console","object","JSON","parse","stringify","attribute","collapsed","stateKey","_this9","editable","_this10","coordinate","sequential","checkoutList","count","1","copyMultiplier","centerId","errors","name","item","_this11","multiplier","current","e","candidateId","sessionId","sessionCenters","coordinates","files","_this12","saveSpecimenURL","_this13","specimenList","availableId","keys","containerStati","find","specimenListValidation","statusId","originId","unitId","specimenTypes","typeId","freezeThaw","ftCycle","ALIQUOT","candidate","CandId","session","ID","parentSpecimenId","all","saveBarcodeListURL","catch","_this14","saveContainerURL","_this15","parentContainerId","childContainers","_this16","containerList","containerListValidation","entries","map","_ref","_ref2","saveContainerListURL","message","_this17","dataObject","FormData","file","append","type","cache","contentType","processData","swal","textStatus","errorThrown","responseJSON","_this18","reject","required","float","field","isNaN","values","containers","_this19","_React$createElement","React","createElement","style","height","display","className","Component","request","loris","BaseURL","submit","biobankIndex","ReactDOM","render","document","getElementById","Loader","apply","arguments","width","size","propTypes","PropTypes","int","defaultProps","_FilterForm","_FilterForm2","_specimenForm","_specimenForm2","_poolSpecimenForm","_poolSpecimenForm2","_containerForm","_containerForm2","_Tabs","_Modal","_Modal2","BiobankFilter","resetSpecimenFilters","resetContainerFilters","formatSpecimenColumns","formatContainerColumns","refs","clearFilter","column","cell","rowData","rowHeaders","row","forEach","header","index","onClick","cursor","pscidURL","href","visitLabelURL","color","addSpecimenButton","poolSpecimenButton","addContainerButton","containerTypesPrimary","candidates","sessions","title","show","closeModal","candidateSessions","specimenTypeUnits","specimenTypeAttributes","attributeOptions","attributeDatatypes","containersNonPrimary","containerDimensions","containerCoordinates","barcodesPrimary","containersPrimary","searchSpecimenButton","searchSpecimen","SearchableDropdown","label","onUserInput","placeHolder","autoFocus","barcodesNonPrimary","searchContainerButton","searchContainer","poolSpecimenForm","specimenProtocols","specimenProtocolAttributes","capacities","specimenUnits","specimenRequest","containerTypesNonPrimary","centers","tabList","Tabs","tabs","defaultTab","updateURL","TabPane","TabId","marginTop","Module","ref","formElements","form","onUpdate","filter","ButtonElement","StaticDataTable","Data","Headers","Filter","getFormattedCell","isRequired","func","loadTransfer","_typeof","_Panel","FilterForm","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","filterKey","exactMatch","clear","formChildren","Children","children","child","isValidElement","callbackFunc","callbackName","elementName","displayName","queryFieldName","filterValue","cloneElement","fieldName","fieldValue","set","FormElement","warn","string","Panel","initCollapsed","panelClass","toggleCollapsed","glyphClass","pencilGlyph","marginRight","plusGlyph","add","removeGlyph","cancel","panelHeading","data-toggle","data-target","role","_collectionForm","_collectionForm2","_containerParentForm","_containerParentForm2","BiobankSpecimenForm","specimenListArray","log","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","SpecimenBarcodeForm","barcodeKey","removeSpecimen","addSpecimen","copySpecimen","units","_iterator","return","globalFields","remainingQuantityFields","StaticElement","text","PSCID","Visit_label","TextboxElement","SelectElement","emptyOption","errorMessage","disabled","onSubmit","columnSize","_React$Component2","copy","addSpecimenText","copySpecimenButton","copySpecimenText","min","max","onChange","removeSpecimenButton","glyphStyle","marginLeft","fontSize","parentTypeId","paddingLeft","position","right","_customFields","_customFields2","SpecimenCollectionForm","setCollection","addData","setData","updateButton","specimenTypeFields","unit","specimenTypeFieldsObject","fields","specimenFields","DateElement","minYear","maxYear","date","TimeElement","time","TextareaElement","comments","CustomFields","attributeFields","datatype","DataElement","FileElement","_containerDisplay","_containerDisplay2","ContainerParentForm","recursive","containerDisplay","containerBarcodesNonPrimary","parentContainerField","dimensionId","dimensions","coordinatesTotal","dimension","containerTypes","select","selectedCoordinate","ContainerDisplay","redirectURL","drag","drop","checkoutContainers","tooltip","load","types","primary","preventDefault","dataTransfer","getData","newCoordinate","parseInt","node","containerId","increaseCoordinate","barcodeField","CheckboxElement","checkout","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","data-html","data-placement","data-original-title","rowHeight","rowStyle","Modal","throwWarning","showCancelButton","confirmButtonText","cancelButtonText","backdropStyle","zIndex","top","bottom","left","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","borderTopRightRadius","bodyStyle","modal","stopPropagation","bool","_preparationForm","_preparationForm2","PoolSpecimenForm","formData","barcodeList","formErrors","barcodeCount","step","handleSubmit","validateForm","setFormData","setPreparationFormData","setSpecimenFormData","submitForm","setBarcodeCount","previous","removePreparation","validate","formSwitch","preparationSwitch","runAjax","poolData","responseText","inputData","method","inputForm","preparationButton","preparationForm","setParentFormData","insertAction","NumericElement","pscid","pSCIDs","visit","sessionData","visits","barcodesArray","barcodesString","join","parentSpecimenBarcodes","parentSpecimenIds","specimenIds","action","refreshParent","formElement","test","currentContainerType","currentSpecimenType","formObj","xhr","window","XMLHttpRequest","onSuccess","msg","isValidForm","formRefs","requiredFields","visitLabel","hasError","forceUpdate","Function","preparationFormData","specimenFormData","DataURL","refreshTable","SpecimenPreparationForm","setPreparation","submitButton","specimenProtocolFields","protocolId","specimenProtocolFieldsObject","BiobankContainerForm","containerListArray","ContainerBarcodeForm","containerKey","removeContainer","addContainer","copyContainer","addContainerText","copyContainerButton","copyContainerText","removeContainerButton","hash","location","activeTab","substr","handleClick","getTabs","getTabPanes","tabId","onTabChange","scrollDistance","scrollTop","tab","tabClass","tabID","tabPanes","tabStyle","marginBottom","array","VerticalTabs","_React$Component3","classList","Title","_globals","_globals2","_analysisForm","_analysisForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","addAliquotForm","collectionPanel","collectionPanelForm","cancelEditCollectionButton","collectionData","preparationPanel","cancelEditPreparationButton","protocol","preparationData","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","analysisData","methodId","datatypeId","LinkElement","download","globals","returnToFilter","specimenPageDataURL","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_centerField","_centerField2","Globals","increaseCycle","decreaseCycle","cycle","fTCycle","specimenTypeField","containerTypeField","quantityField","fTCycleField","temperatureField","statusField","stati","centerField","originField","parentSpecimenField","dateTimeCreate","parentSpecimenContainer","parentSpecimenFieldValue","parentContainerBarcodeValue","candidateSessionField","fieldList","QuantityField","flex","minWidth","inputClass","TemperatureField","StatusField","CenterField","centerIds","SpecimenAnalysisForm","setAnalysis","File","specimenMethodFields","specimenMethodFieldsObject","fileUpload","LifeCycle","css","border","box-shadow","collectionNode","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","line","nodes","lineWidth","lineStyle","ContainerCheckout","checkoutContainer","checkoutButton","_barcodePath","_barcodePath2","BiobankContainer","barcodePath","parentContainers","listAssigned","coordinateList","listUnassigned","containerPageDataURL","BarcodePath","path","pathLength"],"mappings":"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","file":"./modules/biobank/js/biobankIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _filter = __webpack_require__(2);\n\t\n\tvar _filter2 = _interopRequireDefault(_filter);\n\t\n\tvar _specimen = __webpack_require__(15);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tvar _container = __webpack_require__(24);\n\t\n\tvar _container2 = _interopRequireDefault(_container);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global ReactDOM */\n\t\n\tvar BiobankIndex = function (_React$Component) {\n\t  _inherits(BiobankIndex, _React$Component);\n\t\n\t  function BiobankIndex() {\n\t    var _this$state;\n\t\n\t    _classCallCheck(this, BiobankIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankIndex.__proto__ || Object.getPrototypeOf(BiobankIndex)).call(this));\n\t\n\t    _this.state = (_this$state = {\n\t      isLoaded: false,\n\t      page: '',\n\t      options: {},\n\t      specimenFilter: {},\n\t      containerDataTable: {},\n\t      containerFilter: {}\n\t    }, _defineProperty(_this$state, 'containerDataTable', {}), _defineProperty(_this$state, 'data', {}), _defineProperty(_this$state, 'specimen', {}), _defineProperty(_this$state, 'container', {}), _defineProperty(_this$state, 'files', {}), _defineProperty(_this$state, 'list', {}), _defineProperty(_this$state, 'count', 0), _defineProperty(_this$state, 'collapsed', {}), _defineProperty(_this$state, 'copyMultiplier', 1), _defineProperty(_this$state, 'coordinate', null), _defineProperty(_this$state, 'sequential', false), _defineProperty(_this$state, 'checkoutList', {}), _defineProperty(_this$state, 'candidateId', null), _defineProperty(_this$state, 'centerId', null), _defineProperty(_this$state, 'sessionId', null), _defineProperty(_this$state, 'errors', {\n\t      container: {},\n\t      specimen: {},\n\t      list: {}\n\t    }), _defineProperty(_this$state, 'editable', {\n\t      specimenForm: false,\n\t      containerForm: false,\n\t      aliquotForm: false,\n\t      containerParentForm: false,\n\t      barcode: false,\n\t      containerCheckout: false,\n\t      temperature: false,\n\t      quantity: false,\n\t      status: false,\n\t      center: false,\n\t      collection: false,\n\t      preparation: false,\n\t      analysis: false\n\t    }), _this$state);\n\t\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.loadFilters = _this.loadFilters.bind(_this);\n\t    _this.loadSpecimenDataTable = _this.loadSpecimenDataTable.bind(_this);\n\t    _this.loadContainerDataTable = _this.loadContainerDataTable.bind(_this);\n\t    _this.loadOptions = _this.loadOptions.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.loadSpecimen = _this.loadSpecimen.bind(_this);\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.updateSpecimenFilter = _this.updateSpecimenFilter.bind(_this);\n\t    _this.updateContainerFilter = _this.updateContainerFilter.bind(_this);\n\t    _this.clone = _this.clone.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.edit = _this.edit.bind(_this);\n\t    _this.close = _this.close.bind(_this);\n\t    _this.revertParameters = _this.revertParameters.bind(_this);\n\t    _this.setSpecimenList = _this.setSpecimenList.bind(_this);\n\t    _this.addListItem = _this.addListItem.bind(_this);\n\t    _this.copyListItem = _this.copyListItem.bind(_this);\n\t    _this.removeListItem = _this.removeListItem.bind(_this);\n\t    _this.saveSpecimenList = _this.saveSpecimenList.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.revertSpecimen = _this.revertSpecimen.bind(_this);\n\t    _this.setContainerList = _this.setContainerList.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.revertContainer = _this.revertContainer.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.setCenterId = _this.setCenterId.bind(_this);\n\t    _this.setSessionId = _this.setSessionId.bind(_this);\n\t    _this.setCandidateId = _this.setCandidateId.bind(_this);\n\t    _this.setCoordinate = _this.setCoordinate.bind(_this);\n\t    _this.setSequential = _this.setSequential.bind(_this);\n\t    _this.setCheckoutList = _this.setCheckoutList.bind(_this);\n\t    _this.setFiles = _this.setFiles.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.addAnalysis = _this.addAnalysis.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveChildContainer = _this.saveChildContainer.bind(_this);\n\t    _this.saveContainerList = _this.saveContainerList.bind(_this);\n\t    _this.validateContainer = _this.validateContainer.bind(_this);\n\t    _this.validateSpecimen = _this.validateSpecimen.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankIndex, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _this2 = this;\n\t\n\t      this.loadFilters().then(function () {\n\t        return _this2.loadOptions().then(function () {\n\t          return _this2.setState({ isLoaded: true });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadFilters',\n\t    value: function loadFilters() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this3.loadContainerDataTable().then(function () {\n\t          return _this3.loadSpecimenDataTable().then(function () {\n\t            _this3.setState({ page: 'filter' }, resolve());\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimenDataTable',\n\t    value: function loadSpecimenDataTable() {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this4.fetch(_this4.props.specimenFilterDataURL).then(function (data) {\n\t          var specimenDataTable = data;\n\t          _this4.setState({ specimenDataTable: specimenDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainerDataTable',\n\t    value: function loadContainerDataTable() {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this5.fetch(_this5.props.containerFilterDataURL).then(function (data) {\n\t          var containerDataTable = data;\n\t          _this5.setState({ containerDataTable: containerDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadOptions',\n\t    value: function loadOptions() {\n\t      var _this6 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this6.fetch(_this6.props.optionsURL).then(function (data) {\n\t          var options = data;\n\t          _this6.setState({ options: options }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(barcode) {\n\t      var _this7 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this7.fetch(_this7.props.containerDataURL + barcode).then(function (data) {\n\t          var container = _this7.clone(data.container);\n\t          var page = 'container';\n\t          _this7.close();\n\t          _this7.revertParameters();\n\t          _this7.setState({ data: data, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimen',\n\t    value: function loadSpecimen(barcode) {\n\t      var _this8 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this8.fetch(_this8.props.specimenDataURL + barcode).then(function (data) {\n\t          var specimen = _this8.clone(data.specimen);\n\t          var container = _this8.clone(data.container);\n\t          var page = 'specimen';\n\t          _this8.setState({ data: data, specimen: specimen, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetch',\n\t    value: function fetch(url) {\n\t      return new Promise(function (resolve) {\n\t        $.ajax(url, {\n\t          dataType: 'json',\n\t          success: function success(data) {\n\t            return resolve(data);\n\t          },\n\t          error: function error(_error, errorCode, errorMsg) {\n\t            return console.error(_error, errorCode, errorMsg);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateSpecimenFilter',\n\t    value: function updateSpecimenFilter(specimenFilter) {\n\t      this.setState({ specimenFilter: specimenFilter });\n\t    }\n\t  }, {\n\t    key: 'updateContainerFilter',\n\t    value: function updateContainerFilter(containerFilter) {\n\t      this.setState({ containerFilter: containerFilter });\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone(object) {\n\t      return JSON.parse(JSON.stringify(object));\n\t    }\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(object, attribute) {\n\t      var data = {};\n\t      for (var id in object) {\n\t        data[id] = object[id][attribute];\n\t      }\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'edit',\n\t    value: function edit(stateKey) {\n\t      var _this9 = this;\n\t\n\t      this.close().then(function () {\n\t        var editable = _this9.state.editable;\n\t        editable[stateKey] = true;\n\t        _this9.setState({ editable: editable });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var _this10 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var editable = _this10.state.editable;\n\t        for (var key in editable) {\n\t          editable[key] = false;\n\t        }\n\t\n\t        _this10.state.data.specimen && _this10.revertSpecimen();\n\t        _this10.state.data.container && _this10.revertContainer();\n\t        //this.revertParameters();\n\t        _this10.setState({ editable: editable }, resolve());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'revertParameters',\n\t    value: function revertParameters() {\n\t      //TODO: these should be moved to another function\n\t      var coordinate = this.state.coordinate;\n\t      coordinate = null;\n\t      var sequential = this.state.sequential;\n\t      sequential = false;\n\t      var checkoutList = this.state.checkoutList;\n\t      checkoutList = {};\n\t      var list = this.state.list;\n\t      list = {};\n\t      var count = this.state.count;\n\t      count = 1;\n\t      var collapsed = this.state.collapsed;\n\t      collapsed = { 1: true };\n\t      var copyMultiplier = this.state.copyMultiplier;\n\t      copyMultiplier = 1;\n\t      var centerId = this.state.centerId;\n\t      centerId = null;\n\t      var errors = this.state.errors;\n\t      errors = { container: {}, specimen: {}, list: {} };\n\t\n\t      this.setState({\n\t        coordinate: coordinate,\n\t        sequential: sequential,\n\t        checkoutList: checkoutList,\n\t        list: list,\n\t        count: count,\n\t        collapsed: collapsed,\n\t        copyMultiplier: copyMultiplier,\n\t        centerId: centerId,\n\t        errors: errors\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenList',\n\t    value: function setSpecimenList(name, value, key) {\n\t      var list = this.state.list;\n\t      list[key].specimen[name] = value;\n\t      this.setState({ list: list });\n\t    }\n\t  }, {\n\t    key: 'setContainerList',\n\t    value: function setContainerList(name, value, key) {\n\t      var list = this.state.list;\n\t      list[key].container[name] = value;\n\t      this.setState({ list: list });\n\t    }\n\t  }, {\n\t    key: 'addListItem',\n\t    value: function addListItem(item) {\n\t      var _this11 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var list = _this11.state.list;\n\t        var count = _this11.state.count;\n\t        var collapsed = _this11.state.collapsed;\n\t\n\t        count++;\n\t        collapsed[count] = true;\n\t        switch (item) {\n\t          case 'specimen':\n\t            list[count] = { specimen: { collection: {} }, container: {} };\n\t            break;\n\t          case 'container':\n\t            list[count] = { container: {} };\n\t            break;\n\t        }\n\t\n\t        _this11.setState({ list: list, count: count, collapsed: collapsed }, resolve());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'copyListItem',\n\t    value: function copyListItem(key) {\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t      var list = this.state.list;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        count++;\n\t        list[count] = this.clone(list[key]);\n\t        list[count].container.barcode && delete list[count].container.barcode;\n\t        collapsed[count] = true;\n\t      }\n\t\n\t      this.setState({ list: list, count: count, collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'removeListItem',\n\t    value: function removeListItem(key) {\n\t      var list = this.state.list;\n\t      delete list[key];\n\t      this.setState({ list: list });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimen',\n\t    value: function revertSpecimen() {\n\t      var specimen = this.state.specimen;\n\t      specimen = this.clone(this.state.data.specimen);\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.state.container;\n\t      value ? container[name] = value : delete container[name];\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainer',\n\t    value: function revertContainer() {\n\t      var container = this.state.container;\n\t      container = this.clone(this.state.data.container);\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setCurrent',\n\t    value: function setCurrent(name, value) {\n\t      var current = this.state.current;\n\t      current[name] = value;\n\t      this.setState({ current: current });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = this.state.copyMultiplier;\n\t      copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'setCandidateId',\n\t    value: function setCandidateId(name, value) {\n\t      var candidateId = this.state.candidateId;\n\t      candidateId = value;\n\t      this.setState({ candidateId: candidateId });\n\t    }\n\t  }, {\n\t    key: 'setCenterId',\n\t    value: function setCenterId(name, value) {\n\t      var centerId = this.state.centerId;\n\t      centerId = value;\n\t      this.setState({ centerId: centerId });\n\t    }\n\t  }, {\n\t    key: 'setSessionId',\n\t    value: function setSessionId(name, value) {\n\t      var sessionId = this.state.sessionId;\n\t      sessionId = value;\n\t      //TODO: there must be a better way to do this.\n\t      this.setCenterId('centerId', this.state.options.sessionCenters[sessionId].centerId);\n\t      this.setState({ sessionId: sessionId });\n\t    }\n\t  }, {\n\t    key: 'setCoordinate',\n\t    value: function setCoordinate(value) {\n\t      var coordinate = this.state.coordinates;\n\t      coordinate = value;\n\t      this.setState({ coordinate: coordinate });\n\t    }\n\t  }, {\n\t    key: 'setSequential',\n\t    value: function setSequential(name, value) {\n\t      var sequential = this.state.sequential;\n\t      sequential = value;\n\t      this.setState({ sequential: sequential });\n\t    }\n\t  }, {\n\t    key: 'setFiles',\n\t    value: function setFiles(name, value) {\n\t      var files = this.state.files;\n\t      files[value.name] = value;\n\t      this.setState({ files: files });\n\t    }\n\t  }, {\n\t    key: 'setCheckoutList',\n\t    value: function setCheckoutList(container) {\n\t      var checkoutList = this.state.checkoutList;\n\t      checkoutList[container.coordinate] = container;\n\t      this.setState({ checkoutList: checkoutList });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { centerId: this.state.data.container.centerId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addAnalysis',\n\t    value: function addAnalysis() {\n\t      var specimen = this.state.specimen;\n\t      specimen.analysis = { centerId: this.state.data.container.centerId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this12 = this;\n\t\n\t      var specimen = this.state.specimen;\n\t      this.validateSpecimen(specimen).then(function () {\n\t        _this12.save(specimen, _this12.props.saveSpecimenURL, 'Specimen Save Successful!').then(function () {\n\t          var data = _this12.state.data;\n\t          data.specimen = _this12.clone(_this12.state.specimen);\n\t          _this12.setState({ data: data }, function () {\n\t            _this12.close();\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimenList',\n\t    value: function saveSpecimenList() {\n\t      var _this13 = this;\n\t\n\t      var specimenList = this.clone(this.state.list);\n\t      var availableId = Object.keys(this.state.options.containerStati).find(function (key) {\n\t        return _this13.state.options.containerStati[key].status === 'Available';\n\t      });\n\t      var specimenListValidation = [];\n\t\n\t      for (var key in specimenList) {\n\t        //set container values\n\t        var container = specimenList[key].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.centerId = this.state.centerId;\n\t        container.originId = this.state.centerId;\n\t\n\t        //set specimen values\n\t        var specimen = specimenList[key].specimen;\n\t        specimen.candidateId = this.state.candidateId;\n\t        specimen.sessionId = this.state.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.centerId = this.state.centerId;\n\t        if ((this.state.options.specimenTypes[specimen.typeId] || {}).freezeThaw == 1) {\n\t          specimen.ftCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: fix this later\n\t        if (this.state.ALIQUOT) {\n\t          specimen.candidateId = this.state.data.candidate.CandId;\n\t          specimen.sessionId = this.state.data.session.ID;\n\t          specimen.parentSpecimenId = this.state.data.specimen.id;\n\t          specimen.collection.centerId = this.props.data.container.centerId;\n\t          container.centerId = this.props.data.container.centerId;\n\t          container.originId = this.props.data.container.centerId;\n\t        }\n\t\n\t        specimenList[key].container = container;\n\t        specimenList[key].specimen = specimen;\n\t\n\t        specimenListValidation.push(this.validateContainer(container, key));\n\t        specimenListValidation.push(this.validateSpecimen(specimen, key));\n\t      }\n\t\n\t      Promise.all(specimenListValidation).then(function () {\n\t        _this13.save(specimenList, _this13.props.saveBarcodeListURL, 'Save Successful!').then(function () {\n\t          _this13.close();_this13.loadFilters();\n\t        });\n\t      }).catch(function () {});\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this14 = this;\n\t\n\t      var container = this.state.container;\n\t      this.validateContainer(container).then(function () {\n\t        _this14.save(container, _this14.props.saveContainerURL, 'Container Save Successful!').then(function () {\n\t          var data = _this14.state.data;\n\t          data.container = _this14.clone(_this14.state.container);\n\t          _this14.setState({ data: data }, function () {\n\t            _this14.close();\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveChildContainer',\n\t    value: function saveChildContainer(container) {\n\t      var _this15 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this15.save(container, _this15.props.saveContainerURL).then(function () {\n\t          var data = _this15.state.data;\n\t          if (container.parentContainerId === null) {\n\t            delete data.childContainers[container.id];\n\t          } else {\n\t            data.childContainers[container.id] = _this15.clone(container);\n\t          }\n\t          _this15.setState({ data: data }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainerList',\n\t    value: function saveContainerList() {\n\t      var _this16 = this;\n\t\n\t      var containerList = this.state.list;\n\t      var availableId = Object.keys(this.state.options.containerStati).find(function (key) {\n\t        return _this16.state.options.containerStati[key].status === 'Available';\n\t      });\n\t      var containerListValidation = [];\n\t\n\t      Object.entries(containerList).map(function (_ref) {\n\t        var _ref2 = _slicedToArray(_ref, 2),\n\t            key = _ref2[0],\n\t            container = _ref2[1];\n\t\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.originId = _this16.state.centerId;\n\t        container.centerId = _this16.state.centerId;\n\t\n\t        containerListValidation.push(_this16.validateContainer(container, key));\n\t      });\n\t\n\t      Promise.all(containerListValidation).then(function () {\n\t        _this16.save(containerList, _this16.props.saveContainerListURL, 'Container Creation Successful!').then(function () {\n\t          _this16.close();_this16.loadFilters();_this16.loadOptions();\n\t        });\n\t      }).catch(function () {});\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(data, url, message) {\n\t      var _this17 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var dataObject = new FormData();\n\t        for (var file in _this17.state.files) {\n\t          dataObject.append(_this17.state.files[file].name, _this17.state.files[file]);\n\t        }\n\t        dataObject.append('data', JSON.stringify(data));\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: dataObject,\n\t          cache: false,\n\t          contentType: false,\n\t          processData: false,\n\t          success: function success() {\n\t            resolve();\n\t            _this17.loadOptions();\n\t            message && swal(message, '', 'success');\n\t          },\n\t          error: function error(_error2, textStatus, errorThrown) {\n\t            var message = (_error2.responseJSON || {}).message || 'Submission error!';\n\t            swal('Error', message, 'error');\n\t            console.error(_error2, textStatus, errorThrown);\n\t          }\n\t        });\n\t      });\n\t    }\n\t\n\t    //TODO: validation might be more effective within 1 function.\n\t\n\t  }, {\n\t    key: 'validateContainer',\n\t    value: function validateContainer(container, key) {\n\t      var _this18 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var errors = _this18.state.errors;\n\t        errors.container = {};\n\t\n\t        var required = ['barcode', 'typeId', 'temperature', 'statusId', 'centerId'];\n\t\n\t        var float = ['temperature'];\n\t\n\t        required.map(function (field) {\n\t          if (!container[field]) {\n\t            errors.container[field] = 'This field is required! ';\n\t          }\n\t        });\n\t\n\t        float.map(function (field) {\n\t          if (isNaN(container[field])) {\n\t            errors.container[field] = 'This field must be a number! ';\n\t          }\n\t        });\n\t\n\t        Object.values(_this18.state.options.containers).map(function (c) {\n\t          if (container.barcode === c.barcode && container.id !== c.id) {\n\t            errors.container.barcode = 'Barcode must be unique';\n\t          }\n\t        });\n\t\n\t        //TODO: Regex check will go here\n\t        //TODO: Date validation will go here\n\t        //TODO: Time validation will go here\n\t        //TODO: Comments validation will go here\n\t        //TODO: Custom Field validation will go here\n\t\n\t        if (key) {\n\t          errors.list[key] = errors.list[key] || {};\n\t          errors.list[key].container = errors.container;\n\t        }\n\t\n\t        if (Object.keys(errors.container).length == 0) {\n\t          _this18.setState({ errors: errors }, resolve());\n\t        } else {\n\t          _this18.setState({ errors: errors }, reject());\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'validateSpecimen',\n\t    value: function validateSpecimen(specimen, key) {\n\t      var _this19 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var errors = _this19.state.errors;\n\t        errors.specimen = {};\n\t\n\t        var required = ['typeId', 'quantity', 'unitId', 'candidateId', 'sessionId', 'collection'];\n\t\n\t        var float = ['quantity'];\n\t\n\t        required.map(function (field) {\n\t          if (!specimen[field]) {\n\t            errors.specimen[field] = 'This field is required! ';\n\t          }\n\t        });\n\t\n\t        float.map(function (field) {\n\t          if (isNaN(specimen[field])) {\n\t            errors.specimen[field] = 'This field must be a number! ';\n\t          }\n\t        });\n\t\n\t        if (key) {\n\t          errors.list[key] = errors.list[key] || {};\n\t          errors.list[key].specimen = errors.specimen;\n\t        }\n\t\n\t        if (Object.keys(errors.specimen).length == 0) {\n\t          _this19.setState({ errors: errors }, resolve());\n\t        } else {\n\t          _this19.setState({ errors: errors }, reject());\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _React$createElement;\n\t\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'div',\n\t          { style: { height: 500 } },\n\t          React.createElement(_Loader2.default, null)\n\t        );\n\t      }\n\t\n\t      var display = void 0;\n\t      switch (this.state.page) {\n\t        case 'container':\n\t          display = React.createElement(_container2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            errors: this.state.errors,\n\t            coordinate: this.state.coordinate,\n\t            sequential: this.state.sequential,\n\t            checkoutList: this.state.checkoutList,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            loadFilters: this.loadFilters,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setCoordinate: this.setCoordinate,\n\t            setSequential: this.setSequential,\n\t            setCheckoutList: this.setCheckoutList,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t        case 'specimen':\n\t          display = React.createElement(_specimen2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            specimen: this.state.specimen,\n\t            errors: this.state.errors,\n\t            files: this.state.files,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            loadFilters: this.loadFilters,\n\t            loadOptions: this.loadOptions,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setSpecimen: this.setSpecimen,\n\t            revertSpecimen: this.revertSpecimen,\n\t            saveSpecimen: this.saveSpecimen,\n\t            addPreparation: this.addPreparation,\n\t            addAnalysis: this.addAnalysis,\n\t            setFiles: this.setFiles,\n\t            saveChildContainer: this.saveChildContainer,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            edit: this.edit,\n\t            close: this.close,\n\t            save: this.save\n\t          });\n\t          break;\n\t        case 'filter':\n\t          display = React.createElement(_filter2.default, (_React$createElement = {\n\t            specimenFilter: this.state.specimenFilter,\n\t            specimenDataTable: this.state.specimenDataTable,\n\t            containerFilter: this.state.containerFilter,\n\t            containerDataTable: this.state.containerDataTable,\n\t            options: this.state.options,\n\t            errors: this.state.errors,\n\t            collapsed: this.state.collapsed,\n\t            editable: this.state.editable,\n\t            candidateId: this.state.candidateId,\n\t            sessionId: this.state.sessionId,\n\t            centerId: this.state.centerId,\n\t            list: this.state.list,\n\t            copyMultiplier: this.state.copyMultiplier,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            updateSpecimenFilter: this.updateSpecimenFilter,\n\t            updateContainerFilter: this.updateContainerFilter,\n\t            mapFormOptions: this.mapFormOptions,\n\t            edit: this.edit,\n\t            close: this.close,\n\t            toggleCollapse: this.toggleCollapse,\n\t            loadFilters: this.loadFilters,\n\t            loadOptions: this.loadOptions,\n\t            setCopyMultiplier: this.setCopyMultiplier,\n\t            setCandidateId: this.setCandidateId,\n\t            setCenterId: this.setCenterId,\n\t            setSessionId: this.setSessionId,\n\t            setContainerList: this.setContainerList,\n\t            setSpecimenList: this.setSpecimenList\n\t          }, _defineProperty(_React$createElement, 'setContainerList', this.setContainerList), _defineProperty(_React$createElement, 'addListItem', this.addListItem), _defineProperty(_React$createElement, 'copyListItem', this.copyListItem), _defineProperty(_React$createElement, 'removeListItem', this.removeListItem), _defineProperty(_React$createElement, 'saveContainerList', this.saveContainerList), _defineProperty(_React$createElement, 'saveSpecimenList', this.saveSpecimenList), _React$createElement));\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'biobank-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            display\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t  var request = loris.BaseURL + '/biobank/ajax/requestData.php?';\n\t  var submit = loris.BaseURL + '/biobank/ajax/submitData.php?';\n\t  var biobankIndex = React.createElement(\n\t    'div',\n\t    { className: 'page=biobank' },\n\t    React.createElement(BiobankIndex, {\n\t      specimenFilterDataURL: loris.BaseURL + '/biobank/?format=json',\n\t      containerFilterDataURL: request + 'action=getContainerFilterData',\n\t      specimenDataURL: request + 'action=getSpecimenData&barcode=',\n\t      containerDataURL: request + 'action=getContainerData&barcode=',\n\t      optionsURL: request + 'action=getFormOptions',\n\t      saveContainerURL: submit + 'action=saveContainer',\n\t      saveSpecimenURL: submit + 'action=saveSpecimen',\n\t      saveContainerListURL: submit + 'action=saveContainerList',\n\t      saveBarcodeListURL: submit + 'action=saveBarcodeList'\n\t    })\n\t  );\n\t  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains the React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\"div\", {\n\t        className: \"loader\",\n\t        style: { width: this.props.size, height: this.props.size }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\tLoader.propTypes = { size: React.PropTypes.int };\n\tLoader.defaultProps = { size: 120 };\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(3);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _poolSpecimenForm = __webpack_require__(11);\n\t\n\tvar _poolSpecimenForm2 = _interopRequireDefault(_poolSpecimenForm);\n\t\n\tvar _containerForm = __webpack_require__(13);\n\t\n\tvar _containerForm2 = _interopRequireDefault(_containerForm);\n\t\n\tvar _Tabs = __webpack_require__(14);\n\t\n\tvar _Modal = __webpack_require__(10);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BiobankFilter = function (_React$Component) {\n\t  _inherits(BiobankFilter, _React$Component);\n\t\n\t  function BiobankFilter() {\n\t    _classCallCheck(this, BiobankFilter);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankFilter.__proto__ || Object.getPrototypeOf(BiobankFilter)).call(this));\n\t\n\t    _this.resetSpecimenFilters = _this.resetSpecimenFilters.bind(_this);\n\t    _this.resetContainerFilters = _this.resetContainerFilters.bind(_this);\n\t    _this.formatSpecimenColumns = _this.formatSpecimenColumns.bind(_this);\n\t    _this.formatContainerColumns = _this.formatContainerColumns.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankFilter, [{\n\t    key: 'resetSpecimenFilters',\n\t    value: function resetSpecimenFilters() {\n\t      this.refs.specimenFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'resetContainerFilters',\n\t    value: function resetContainerFilters() {\n\t      this.refs.containerFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'formatSpecimenColumns',\n\t    value: function formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n\t      var _this2 = this;\n\t\n\t      var row = {};\n\t      var barcode = void 0;\n\t\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      switch (column) {\n\t        case 'Barcode':\n\t          barcode = row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                }, style: { cursor: 'pointer' } },\n\t              cell\n\t            )\n\t          );\n\t        case 'Parent Barcode':\n\t          barcode = row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'Container Barcode':\n\t          barcode = row['Container Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this2.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'PSCID':\n\t          var pscidURL = loris.BaseURL + '/' + row['PSCID'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: pscidURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Visit Label':\n\t          var visitLabelURL = loris.BaseURL + '/instrument_list/?candID=' + row['PSCID'] + '&sessionID=' + row['Visit Label'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: visitLabelURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Status':\n\t          switch (cell) {\n\t            case 'Available':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'green' } },\n\t                cell\n\t              );\n\t            case 'Reserved':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'orange' } },\n\t                cell\n\t              );\n\t            case 'Dispensed':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'red' } },\n\t                cell\n\t              );\n\t          }\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'formatContainerColumns',\n\t    value: function formatContainerColumns(column, cell, rowData, rowHeaders) {\n\t      var _this3 = this;\n\t\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      var row = {};\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      var barcode = void 0;\n\t      switch (column) {\n\t        case 'Barcode':\n\t          barcode = row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this3.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'Status':\n\t          switch (cell) {\n\t            case 'Available':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'green' } },\n\t                cell\n\t              );\n\t            case 'Reserved':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'orange' } },\n\t                cell\n\t              );\n\t            case 'Dispensed':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'red' } },\n\t                cell\n\t              );\n\t          }\n\t        case 'Parent Barcode':\n\t          barcode = row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this3.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      var addSpecimenButton = void 0;\n\t      var poolSpecimenButton = void 0;\n\t      var addContainerButton = void 0;\n\t\n\t      /**\n\t       * Map Options for Form Select Elements of Specimen Form\n\t       */\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      addSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Add Specimen' },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this4.props.addListItem('specimen').then(function () {\n\t                _this4.props.edit('specimenForm');\n\t              });\n\t            }\n\t          },\n\t          '+'\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Specimen',\n\t            show: this.props.editable.specimenForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            candidateId: this.props.candidateId,\n\t            centerId: this.props.centerId,\n\t            sessionId: this.props.sessionId,\n\t            specimenList: this.props.list,\n\t            errors: this.props.errors,\n\t            candidateSessions: this.props.options.candidateSessions,\n\t            sessionCenters: this.props.options.sessionCenters,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            collapsed: this.props.collapsed,\n\t            copyMultiplier: this.props.copyMultiplier,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            close: this.props.close,\n\t            toggleCollapse: this.props.toggleCollapse,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            setCopyMultiplier: this.props.setCopyMultiplier,\n\t            setCandidateId: this.props.setCandidateId,\n\t            setSessionId: this.props.setSessionId,\n\t            setSpecimenList: this.props.setSpecimenList,\n\t            setContainerList: this.props.setContainerList,\n\t            addListItem: this.props.addListItem,\n\t            copyListItem: this.props.copyListItem,\n\t            removeListItem: this.props.removeListItem,\n\t            saveSpecimenList: this.props.saveSpecimenList\n\t          })\n\t        )\n\t      );\n\t\n\t      //TODO: turn the following into components to avoid duplication\n\t      //TODO: should there be a general search, or one for specimen and one for containers?\n\t      var barcodesPrimary = this.props.mapFormOptions(this.props.options.containersPrimary, 'barcode');\n\t      var searchSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Go To Specimen' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button search', onClick: function onClick() {\n\t              _this4.props.edit('searchSpecimen');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-search' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Go To Specimen',\n\t            show: this.props.editable.searchSpecimen,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'barcode',\n\t            label: 'Barcode',\n\t            options: barcodesPrimary,\n\t            onUserInput: function onUserInput(name, value) {\n\t              barcodesPrimary[value] && _this4.props.loadSpecimen(barcodesPrimary[value]).then(function () {\n\t                return _this4.props.close();\n\t              });\n\t            },\n\t            placeHolder: 'Please Scan or Select Barcode',\n\t            autoFocus: true\n\t          })\n\t        )\n\t      );\n\t\n\t      var barcodesNonPrimary = this.props.mapFormOptions(this.props.options.containersNonPrimary, 'barcode');\n\t      var searchContainerButton = void 0;\n\t      searchContainerButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Go To Container' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button search', onClick: function onClick() {\n\t              _this4.props.edit('searchContainer');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-search' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Go To Barcode',\n\t            show: this.props.editable.searchContainer,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'barcode',\n\t            label: 'Barcode',\n\t            options: barcodesNonPrimary,\n\t            onUserInput: function onUserInput(name, value) {\n\t              barcodesNonPrimary[value] && _this4.props.loadContainer(barcodesNonPrimary[value]).then(function () {\n\t                return _this4.props.close();\n\t              });\n\t            },\n\t            placeHolder: 'Please Scan or Select Barcode',\n\t            autoFocus: true\n\t          })\n\t        )\n\t      );\n\t\n\t      poolSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Pool Specimens' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button pool', onClick: function onClick() {\n\t              _this4.props.edit('poolSpecimenForm');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-resize-small' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Pool Specimens',\n\t            show: this.props.editable.poolSpecimenForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_poolSpecimenForm2.default, {\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            specimenProtocols: this.props.options.specimenProtocols,\n\t            specimenProtocolAttributes: this.props.options.specimenProtocolAttributes,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            capacities: this.props.options.capacities,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenUnits: this.props.options.specimenUnits,\n\t            candidates: candidates,\n\t            candidateSessions: this.props.options.candidateSessions,\n\t            sessionCenters: this.props.options.sessionCenters,\n\t            specimenRequest: loris.BaseURL + '/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode',\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveSpecimen: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveSpecimen',\n\t            saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer'\n\t          })\n\t        )\n\t      );\n\t\n\t      var containerTypesNonPrimary = this.props.mapFormOptions(this.props.options.containerTypesNonPrimary, 'label');\n\t\n\t      addContainerButton = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Add Container'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this4.props.addListItem('container');_this4.props.edit('containerForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Container',\n\t            show: this.props.editable.containerForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_containerForm2.default, {\n\t            centerId: this.props.centerId,\n\t            containerList: this.props.list,\n\t            errors: this.props.errors.list,\n\t            collapsed: this.props.collapsed,\n\t            copyMultiplier: this.props.copyMultiplier,\n\t            containerTypesNonPrimary: containerTypesNonPrimary,\n\t            centers: this.props.options.centers,\n\t            containerStati: containerStati,\n\t            saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer',\n\t            close: this.props.close,\n\t            toggleCollapse: this.props.toggleCollapse,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            setCopyMultiplier: this.props.setCopyMultiplier,\n\t            setCenterId: this.props.setCenterId,\n\t            setContainerList: this.props.setContainerList,\n\t            addListItem: this.props.addListItem,\n\t            copyListItem: this.props.copyListItem,\n\t            removeListItem: this.props.removeListItem,\n\t            saveContainerList: this.props.saveContainerList\n\t          })\n\t        )\n\t      );\n\t\n\t      var tabList = [{ id: \"specimens\", label: \"Specimens\" }, { id: \"containers\", label: \"Containers\" }];\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'biobank-page' },\n\t        React.createElement(\n\t          _Tabs.Tabs,\n\t          { tabs: tabList, defaultTab: 'specimens', updateURL: true },\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[0].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row', style: { marginTop: 20 } },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-3', style: { marginTop: '10px' } },\n\t                React.createElement(\n\t                  'div',\n\t                  { className: 'filter' },\n\t                  React.createElement(\n\t                    _FilterForm2.default,\n\t                    {\n\t                      Module: 'biobank',\n\t                      ref: 'specimenFilter',\n\t                      formElements: this.props.specimenDataTable.form,\n\t                      onUpdate: this.props.updateSpecimenFilter,\n\t                      filter: this.props.specimenFilter\n\t                    },\n\t                    React.createElement(ButtonElement, {\n\t                      label: 'Clear Filters',\n\t                      type: 'reset',\n\t                      onUserInput: this.resetSpecimenFilters\n\t                    }),\n\t                    React.createElement(\n\t                      'div',\n\t                      { className: 'align-row' },\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        searchSpecimenButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        addSpecimenButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        poolSpecimenButton\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-9', style: { marginTop: '10px' } },\n\t                React.createElement(StaticDataTable, {\n\t                  Data: this.props.specimenDataTable.Data,\n\t                  Headers: this.props.specimenDataTable.Headers,\n\t                  Filter: this.props.specimenFilter,\n\t                  getFormattedCell: this.formatSpecimenColumns\n\t                })\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[1].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-3', style: { marginTop: '10px' } },\n\t                React.createElement(\n\t                  'div',\n\t                  { className: 'filter' },\n\t                  React.createElement(\n\t                    _FilterForm2.default,\n\t                    {\n\t                      Module: 'biobank',\n\t                      ref: 'containerFilter',\n\t                      formElements: this.props.containerDataTable.form,\n\t                      onUpdate: this.props.updateContainerFilter,\n\t                      filter: this.props.containerFilter\n\t                    },\n\t                    React.createElement(ButtonElement, {\n\t                      label: 'Clear Filters',\n\t                      type: 'reset',\n\t                      onUserInput: this.resetContainerFilters\n\t                    }),\n\t                    React.createElement(\n\t                      'div',\n\t                      { className: 'align-row' },\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        searchContainerButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        addContainerButton\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-9', style: { marginTop: '10px' } },\n\t                React.createElement(StaticDataTable, {\n\t                  Data: this.props.containerDataTable.Data,\n\t                  Headers: this.props.containerDataTable.Headers,\n\t                  Filter: this.props.containerFilter,\n\t                  getFormattedCell: this.formatContainerColumns\n\t                })\n\t              )\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankFilter;\n\t}(React.Component);\n\t\n\tBiobankFilter.propTypes = _defineProperty({\n\t  specimenFilter: React.PropTypes.object.isRequired,\n\t  specimenDataTable: React.PropTypes.object.isRequired,\n\t  containerFilter: React.PropTypes.object.isRequired,\n\t  containerDataTable: React.PropTypes.object.isRequired,\n\t  options: React.PropTypes.object.isRequired,\n\t  editable: React.PropTypes.object.isRequired,\n\t  loadContainer: React.PropTypes.func.isRequired,\n\t  loadSpecimen: React.PropTypes.func.isRequired,\n\t  loadTransfer: React.PropTypes.func.isRequired,\n\t  updateSpecimenFilter: React.PropTypes.func.isRequired,\n\t  updateContainerFilter: React.PropTypes.func.isRequired,\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  edit: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired\n\t}, 'close', React.PropTypes.func.isRequired);\n\t\n\texports.default = BiobankFilter;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(4);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t      if (key) {\n\t        filter[key] = {};\n\t        if (value) {\n\t          // all defined/non-null values must have some length, else empty string\n\t          filter[key].value = Object.keys(value).length > 0 ? value : '';\n\t        } else {\n\t          // null and undefined handled here\n\t          filter[key].value = '';\n\t        }\n\t        filter[key].exactMatch = type === \"SelectElement\";\n\t      } else if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure key is of string type and value is of string or object type\n\t      // before sending them to querystring\n\t      if (typeof fieldName !== 'string' || typeof fieldValue !== 'string' && (typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        this.props,\n\t        formChildren\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      var pencilGlyph = void 0;\n\t      if (this.props.edit) {\n\t        pencilGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-pencil\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.edit\n\t        });\n\t      }\n\t\n\t      var plusGlyph = void 0;\n\t      if (this.props.add) {\n\t        plusGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-plus\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.add\n\t        });\n\t      }\n\t\n\t      var removeGlyph = void 0;\n\t      if (this.props.cancel) {\n\t        removeGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-remove\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.cancel\n\t        });\n\t      }\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\"\n\t        },\n\t        React.createElement(\"span\", {\n\t          className: glyphClass,\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        }),\n\t        pencilGlyph,\n\t        plusGlyph,\n\t        removeGlyph,\n\t        this.props.title\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  edit: React.PropTypes.func,\n\t  add: React.PropTypes.func\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(6);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(8);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var specimenListArray = Object.keys(this.props.specimenList);\n\t      console.log(this.props.specimenList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(SpecimenBarcodeForm, {\n\t            data: _this2.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this2.props.collapsed[key],\n\t            toggleCollapse: _this2.props.toggleCollapse,\n\t            mapFormOptions: _this2.props.mapFormOptions,\n\t            container: _this2.props.specimenList[key].container || null,\n\t            specimen: _this2.props.specimenList[key].specimen || null,\n\t            errors: _this2.props.errors.list[key] || {},\n\t            removeSpecimen: specimenListArray.length !== 1 ? function () {\n\t              return _this2.props.removeListItem(key);\n\t            } : null,\n\t            addSpecimen: i == specimenListArray.length ? function () {\n\t              _this2.props.addListItem('specimen');\n\t            } : null,\n\t            setCopyMultiplier: _this2.props.setCopyMultiplier,\n\t            copyMultiplier: _this2.props.copyMultiplier,\n\t            copySpecimen: i == specimenListArray.length && _this2.props.specimenList[key] ? _this2.props.copyListItem : null,\n\t            setContainerList: _this2.props.setContainerList,\n\t            setSpecimenList: _this2.props.setSpecimenList,\n\t            specimenTypes: _this2.props.specimenTypes,\n\t            containerTypesPrimary: _this2.props.containerTypesPrimary,\n\t            containersNonPrimary: _this2.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this2.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this2.props.attributeDatatypes,\n\t            attributeOptions: _this2.props.attributeOptions,\n\t            capacities: _this2.props.capacities,\n\t            containerDimensions: _this2.props.containerDimensions,\n\t            containerCoordinates: _this2.props.containerCoordinates,\n\t            specimenTypeUnits: _this2.props.specimenTypeUnits,\n\t            units: _this2.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = specimenListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimen,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimen,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.props.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.props.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.props.setCandidateId,\n\t            required: true,\n\t            value: this.props.candidateId,\n\t            placeHolder: 'Search for a PSCID',\n\t            errorMessage: this.props.errors.specimen.candidateId\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.props.setSessionId,\n\t            required: true,\n\t            value: this.props.sessionId,\n\t            disabled: this.props.candidateId ? false : true,\n\t            errorMessage: this.props.errors.specimen.sessionId\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: this.props.saveSpecimenList,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\tBiobankSpecimenForm.defaultProps = {};\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component2) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component2);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this3.setContainer = _this3.setContainer.bind(_this3);\n\t    _this3.setSpecimen = _this3.setSpecimen.bind(_this3);\n\t    _this3.copy = _this3.copy.bind(_this3);\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainerList(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimenList(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copySpecimen(this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      var addSpecimenButton = void 0;\n\t      var addSpecimenText = void 0;\n\t      var copySpecimenButton = void 0;\n\t      var copySpecimenText = void 0;\n\t      if (this.props.addSpecimen) {\n\t        addSpecimenButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addSpecimen\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addSpecimenText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copySpecimen) {\n\t        copySpecimenButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copySpecimenText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeSpecimenButton = void 0;\n\t      if (this.props.removeSpecimen) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeSpecimenButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeSpecimen,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode,\n\t                errorMessage: (this.props.errors.container || {}).barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                return _this4.props.toggleCollapse(_this4.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeSpecimenButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId,\n\t                errorMessage: (this.props.errors.specimen || {}).typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId,\n\t                errorMessage: (this.props.errors.container || {}).typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                errors: this.props.errors.specimen,\n\t                setSpecimen: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainer: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addSpecimenButton,\n\t              addSpecimenText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copySpecimenButton,\n\t              copySpecimenText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\tSpecimenBarcodeForm.defaultProps = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(7);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.setCollection = _this.setCollection.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollection',\n\t    value: function setCollection(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollection('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = React.createElement(_customFields2.default, {\n\t              object: this.props.specimen.collection.data,\n\t              fields: specimenTypeFieldsObject,\n\t              errors: this.props.errors.data,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity,\n\t            errorMessage: this.props.errors.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId,\n\t            errorMessage: this.props.errors.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.date,\n\t            errorMessage: this.props.errors.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.time,\n\t            errorMessage: this.props.errors.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollection,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments,\n\t            errorMessage: this.props.errors.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimen: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\tSpecimenCollectionForm.defaultProps = {\n\t  errors: {}\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Custom Attribute Fields\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\tvar CustomFields = function (_React$Component) {\n\t  _inherits(CustomFields, _React$Component);\n\t\n\t  function CustomFields() {\n\t    _classCallCheck(this, CustomFields);\n\t\n\t    return _possibleConstructorReturn(this, (CustomFields.__proto__ || Object.getPrototypeOf(CustomFields)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CustomFields, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var fields = this.props.fields;\n\t      var attributeFields = Object.keys(fields).map(function (attribute) {\n\t\n\t        var datatype = _this2.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n\t        if (datatype === 'text' || datatype === 'number') {\n\t          if (fields[attribute]['refTableId'] === null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t\n\t          if (fields[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fields[attribute]['refTableId']],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === 'datetime') {\n\t          return React.createElement(DataElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.object[attribute]\n\t          });\n\t        }\n\t\n\t        // Do not present the possibility of uploading if file is already set\n\t        // File must instead be deleted or overwritten.\n\t        if (datatype === 'file' && !(_this2.props.data || {})[attribute]) {\n\t          return React.createElement(FileElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.files[_this2.props.object[attribute]]\n\t          });\n\t        }\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        attributeFields\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CustomFields;\n\t}(React.Component);\n\t\n\tCustomFields.propTypes = {\n\t  fields: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  object: React.PropTypes.object.isRequired,\n\t  setData: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = CustomFields;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(9);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.props.containersNonPrimary[this.props.container.parentContainerId];\n\t      this.props.setContainer(name, value);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.setContainer('temperature', container.temperature);\n\t      this.props.setContainer('centerId', container.centerId);\n\t      this.props.setContainer('statusId', container.statusId);\n\t    }\n\t  }, {\n\t    key: 'recursive',\n\t    value: function recursive(object, id) {\n\t      for (var key in this.props.containersNonPrimary) {\n\t        if (id == this.props.containersNonPrimary[key].parentContainerId) {\n\t          object = this.recursive(object, key);\n\t          delete object[key];\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      if (this.props.data) {\n\t        containerBarcodesNonPrimary = this.recursive(containerBarcodesNonPrimary, this.props.data.container.id);\n\t        delete containerBarcodesNonPrimary[this.props.data.container.id];\n\t      }\n\t\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.setContainer,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainer: this.props.setContainer\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(10);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.state = {\n\t      coordinate: null\n\t    };\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.checkoutContainers = _this.checkoutContainers.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var load = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary == 1 ? this.props.loadSpecimen : this.props.loadContainer;\n\t\n\t        load(this.props.children[this.props.coordinates[coordinate]].barcode);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      var _this2 = this;\n\t\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      var node = e.target;\n\t      this.props.saveChildContainer(container).then(function () {\n\t        _this2.setState({ coordinate: node.id });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'increaseCoordinate',\n\t    value: function increaseCoordinate() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var coordinate = _this3.props.coordinate;\n\t        coordinate++;\n\t        for (var c in _this3.props.coordinates) {\n\t          if (c == coordinate) {\n\t            _this3.props.close();\n\t            reject();\n\t          }\n\t        }\n\t        _this3.props.setCoordinate(coordinate);\n\t        resolve();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(name, value) {\n\t      var _this4 = this;\n\t\n\t      if (value) {\n\t        var containerId = value;\n\t        var container = this.props.containers[containerId];\n\t        container.parentContainerId = this.props.container.id;\n\t        container.coordinate = this.props.coordinate;\n\t\n\t        this.props.saveChildContainer(container).then(function () {\n\t          var node = document.getElementById(container.coordinate);\n\t          _this4.setState({ coordinate: node.id });\n\t          if (_this4.props.sequential) {\n\t            _this4.increaseCoordinate().then(function () {\n\t              _this4.props.edit('barcode');\n\t            });\n\t          } else {\n\t            _this4.props.close();\n\t          }\n\t        });\n\t      }\n\t    }\n\t\n\t    //TODO: this is the same as the containerList in the container form\n\t    //These functions should be combined in biobankIndex.js\n\t\n\t  }, {\n\t    key: 'checkoutContainers',\n\t    value: function checkoutContainers() {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function () {\n\t        var checkoutList = _this5.props.checkoutList;\n\t        for (var coordinate in checkoutList) {\n\t          checkoutList[coordinate].parentContainerId = null;\n\t          checkoutList[coordinate].coordinate = null;\n\t          _this5.props.saveChildContainer(checkoutList[coordinate]);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this6 = this;\n\t\n\t      var barcodeField = void 0;\n\t      if ((this.props.editable || {}).barcode) {\n\t        barcodeField = React.createElement(SearchableDropdown, {\n\t          name: 'barcode',\n\t          label: 'Barcode',\n\t          options: this.props.barcodes,\n\t          onUserInput: this.loadContainer,\n\t          placeHolder: 'Please Scan or Select Barcode',\n\t          autoFocus: true\n\t        });\n\t      }\n\t\n\t      var load = React.createElement(\n\t        'div',\n\t        { className: (this.props.editable || {}).barcode ? 'open' : 'closed' },\n\t        React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Note',\n\t            text: 'Select or Scan Containers to be Loaded. If Sequential is Checked, the Coordinate will Auto-Increment after each Load.'\n\t          }),\n\t          React.createElement(CheckboxElement, {\n\t            name: 'sequential',\n\t            label: 'Sequential',\n\t            value: this.props.sequential,\n\t            onUserInput: this.props.setSequential\n\t          }),\n\t          barcodeField,\n\t          React.createElement(ButtonElement, {\n\t            label: 'Done',\n\t            onUserInput: this.props.close\n\t          })\n\t        )\n\t      );\n\t\n\t      if ((this.props.editable || {}).containerCheckout) {\n\t        var barcodes = this.props.mapFormOptions(this.props.children, 'barcode');\n\t        barcodeField = React.createElement(SearchableDropdown, {\n\t          name: 'barcode',\n\t          label: 'Barcode',\n\t          options: barcodes,\n\t          onUserInput: function onUserInput(name, value) {\n\t            return _this6.props.setCheckoutList(_this6.props.children[value]);\n\t          },\n\t          placeHolder: 'Please Scan or Select Barcode',\n\t          autoFocus: true\n\t        });\n\t      }\n\t\n\t      var checkout = React.createElement(\n\t        'div',\n\t        { className: (this.props.editable || {}).containerCheckout ? 'open' : 'closed' },\n\t        React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Note',\n\t            text: 'Click, Select or Scan Containers to be Unloaded and Press \\'Confirm\\''\n\t          }),\n\t          barcodeField,\n\t          React.createElement(ButtonElement, {\n\t            label: 'Confirm',\n\t            onUserInput: function onUserInput() {\n\t              _this6.checkoutContainers();_this6.props.close();\n\t            }\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            text: React.createElement(\n\t              'a',\n\t              { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t              'Cancel'\n\t            )\n\t          })\n\t        )\n\t      );\n\t\n\t      //TODO: This will eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var title = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = this.redirectURL;\n\t\n\t            if (!this.props.select) {\n\t              if ((this.props.coordinates || {})[coordinate]) {\n\t                if (coordinate in this.props.checkoutList) {\n\t                  nodeClass = 'node checkout';\n\t                } else if (coordinate == this.state.coordinate) {\n\t                  nodeClass = 'node new';\n\t                } else {\n\t                  nodeClass = 'node occupied';\n\t                }\n\t                dataHtml = 'true';\n\t                dataToggle = 'tooltip';\n\t                dataPlacement = 'top';\n\t                //tooltipTitle = \n\t                //  '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                //  '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                //  '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                draggable = this.props.editable.barcode ? 'false' : 'true';\n\t                onDragStart = this.drag;\n\t                onDragOver = null;\n\t                onDrop = null;\n\t                if (this.props.editable.containerCheckout) {\n\t                  onClick = function onClick(e) {\n\t                    var container = _this6.props.containers[_this6.props.coordinates[e.target.id]];\n\t                    _this6.props.setCheckoutList(container);\n\t                  };\n\t                }\n\t                if (this.props.editable.barcode) {\n\t                  onClick = null;\n\t                }\n\t              } else if (!this.props.editable.containerCheckout) {\n\t                nodeClass = coordinate == this.props.coordinate ? 'node selected' : 'node load';\n\t                title = 'Load...';\n\t                onClick = function onClick(e) {\n\t                  _this6.props.setCoordinate(e.target.id);_this6.props.edit('barcode');\n\t                };\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this6.props.setContainer('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this6.props.setContainer('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                title: title,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            { className: 'row', style: rowStyle },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { style: { width: 500 } },\n\t          checkout,\n\t          load\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'display' },\n\t          display\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      var _this2 = this;\n\t\n\t      if (this.props.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          _this2.props.closeModal();\n\t        });\n\t      } else {\n\t        this.props.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 850,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '50px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          \"div\",\n\t          { style: backdropStyle, onClick: this.closeModal },\n\t          React.createElement(\n\t            \"div\",\n\t            { style: modalStyle, onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              } },\n\t            React.createElement(\n\t              \"div\",\n\t              { style: titleStyle },\n\t              this.props.title,\n\t              React.createElement(\n\t                \"span\",\n\t                { style: glyphStyle, onClick: this.closeModal },\n\t                \"\\xD7\"\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { style: bodyStyle },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _preparationForm = __webpack_require__(12);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Pool Specimen Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\tvar PoolSpecimenForm = function (_React$Component) {\n\t  _inherits(PoolSpecimenForm, _React$Component);\n\t\n\t  function PoolSpecimenForm(props) {\n\t    _classCallCheck(this, PoolSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (PoolSpecimenForm.__proto__ || Object.getPrototypeOf(PoolSpecimenForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      barcodeList: {},\n\t      errorMessage: null,\n\t      formErrors: {},\n\t      barcodeCount: 2,\n\t      preparation: false,\n\t      step: 1\n\t    };\n\t\n\t    _this.handleSubmit = _this.handleSubmit.bind(_this);\n\t    _this.validateForm = _this.validateForm.bind(_this);\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.setPreparationFormData = _this.setPreparationFormData.bind(_this);\n\t    _this.setSpecimenFormData = _this.setSpecimenFormData.bind(_this);\n\t    _this.submitForm = _this.submitForm.bind(_this);\n\t    _this.setBarcodeCount = _this.setBarcodeCount.bind(_this);\n\t    _this.next = _this.next.bind(_this);\n\t    _this.previous = _this.previous.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.removePreparation = _this.removePreparation.bind(_this);\n\t    _this.validate = _this.validate.bind(_this);\n\t    _this.formSwitch = _this.formSwitch.bind(_this);\n\t    _this.preparationSwitch = _this.preparationSwitch.bind(_this);\n\t    _this.runAjax = _this.runAjax.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(PoolSpecimenForm, [{\n\t    key: 'next',\n\t    value: function next() {\n\t      var _this2 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this2.setState({\n\t          poolData: data,\n\t          step: _this2.state.step + 1\n\t        });\n\t      }, function (error) {\n\t        swal(\"Oops!\", error.responseText, \"error\");\n\t      });\n\t    }\n\t  }, {\n\t    key: 'previous',\n\t    value: function previous() {\n\t      this.setState({\n\t        step: this.state.step - 1\n\t      });\n\t    }\n\t  }, {\n\t    key: 'validate',\n\t    value: function validate() {\n\t      return this.runAjax(this.props.specimenRequest, { barcodeList: this.state.barcodeList });\n\t    }\n\t  }, {\n\t    key: 'runAjax',\n\t    value: function runAjax(url, inputData) {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        $.ajax(url, {\n\t          method: \"GET\",\n\t          dataType: 'json',\n\t          data: inputData,\n\t          success: function (data) {\n\t            resolve(data);\n\t          }.bind(_this3),\n\t          error: function error(_error, textStatus, errorThrown) {\n\t            reject(_error);\n\t            console.error(_error);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setBarcodeCount',\n\t    value: function setBarcodeCount(field, value) {\n\t      var barcodeCount = value;\n\t      var barcodeList = this.state.barcodeList;\n\t      for (var barcode in barcodeList) {\n\t        if (barcode > barcodeCount) {\n\t          delete barcodeList[barcode];\n\t        }\n\t      }\n\t\n\t      this.setState({ barcodeCount: barcodeCount, barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'formSwitch',\n\t    value: function formSwitch(inputForm, specimenForm) {\n\t      switch (this.state.step) {\n\t        case 1:\n\t          return inputForm;\n\t        case 2:\n\t          return specimenForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'preparationSwitch',\n\t    value: function preparationSwitch(preparationButton, preparationForm) {\n\t      switch (this.state.preparation) {\n\t        case false:\n\t          return preparationButton;\n\t        case true:\n\t          return preparationForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var _this4 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this4.setState({\n\t          poolData: data,\n\t          preparation: true\n\t        });\n\t      }, function (error) {\n\t        swal('Oh no!', error.responseText, 'error');\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removePreparation',\n\t    value: function removePreparation() {\n\t      var formData = this.state.formData;\n\t      //TODO: is it better to set it to empty, or delete it?\n\t      formData.preparationForm = {};\n\t      this.setState({\n\t        preparation: false,\n\t        formData: formData\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      //Generates barcodes\n\t      var barcodes = [];\n\t      for (var i = 1; i <= this.state.barcodeCount; i++) {\n\t        barcodes.push(React.createElement(TextboxElement, {\n\t          name: i,\n\t          label: 'Barcode ' + i,\n\t          onUserInput: this.setFormData,\n\t          required: true,\n\t          value: this.state.barcodeList[i],\n\t          errorMessage: this.state.formErrors[i]\n\t        }));\n\t      }\n\t\n\t      var preparationButton = React.createElement(\n\t        'div',\n\t        { className: 'row' },\n\t        React.createElement('div', { className: 'col-xs-4' }),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs 4 action' },\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button add',\n\t                onClick: this.addPreparation\n\t              },\n\t              '+'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Add Preparation'\n\t          )\n\t        )\n\t      );\n\t\n\t      var preparationForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        var specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId];\n\t\n\t        var specimenProtocols = {};\n\t        for (var id in specimenProtocolAttributes) {\n\t          specimenProtocols[id] = this.props.specimenProtocols[id];\n\t        }\n\t        specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\t\n\t        preparationForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(_preparationForm2.default, {\n\t              formData: this.state.formData.preparationForm,\n\t              specimenProtocols: specimenProtocols,\n\t              specimenProtocolAttributes: specimenProtocolAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              setParentFormData: this.setPreparationFormData,\n\t              insertAction: loris.BaseURL + '/biobank/ajax/submitData.php?action=insertSpecimenPreparation'\n\t            }),\n\t            React.createElement(\n\t              'a',\n\t              { className: 'pull-right', style: { cursor: 'pointer' }, onClick: this.removePreparation },\n\t              'Cancel Preparation'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var inputForm = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(StaticElement, {\n\t              label: 'Pooling Note',\n\t              text: 'Select or Scan the specimens to be pooled. Please ensure that they are the same type, and share the same PSCID and Visit Label'\n\t            }),\n\t            React.createElement(NumericElement, {\n\t              label: '\\u2116 of Specimens',\n\t              min: '2',\n\t              max: '100',\n\t              value: this.state.barcodeCount,\n\t              onUserInput: this.setBarcodeCount\n\t            }),\n\t            barcodes\n\t          )\n\t        ),\n\t        this.preparationSwitch(preparationButton, preparationForm),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-sm-3 col-xs-offset-9 action' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Next'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.next\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        )\n\t      );\n\t\n\t      //TODO: Things here need to be in the proper order!!!\n\t      var specimenForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        // This is to provide the options for the output specimens\n\t        var specimenTypes = {};\n\t        if (this.state.poolData.typeId) {\n\t          specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n\t        }\n\t\n\t        var pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n\t        var visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\t\n\t        var barcodesArray = Object.values(this.state.barcodeList);\n\t        var barcodesString = barcodesArray.join(', ');\n\t\n\t        // TODO: rather than all specimen units this should really be specific to the\n\t        // type\n\t        var specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\t\n\t        specimenForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            React.createElement(_specimenForm2.default, {\n\t              formData: this.state.formData.specimenForm,\n\t              candidateId: this.state.poolData.candidateId,\n\t              pscid: pscid,\n\t              sessionId: this.state.poolData.sessionId,\n\t              visit: visit,\n\t              parentSpecimenBarcodes: barcodesString,\n\t              parentSpecimenIds: this.state.poolData.specimenIds,\n\t              specimenTypes: specimenTypes,\n\t              specimenTypeUnits: this.props.specimenTypeUnits,\n\t              specimenUnits: specimenUnits,\n\t              containerTypesPrimary: this.props.containerTypesPrimary,\n\t              containersNonPrimary: this.props.containersNonPrimary,\n\t              specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              capacities: this.props.capacities,\n\t              containerDimensions: this.props.containerDimensions,\n\t              containerCoordinates: this.props.containerCoordinates,\n\t              setParentFormData: this.setSpecimenFormData,\n\t              action: loris.BaseURL + '/biobank/ajax/submitData.php?action=submitSpecimen',\n\t              refreshParent: this.props.refreshParent\n\t            }),\n\t            React.createElement(ButtonElement, {\n\t              label: 'Submit'\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-3 col-xs-offset-2 action' },\n\t            React.createElement(\n\t              'span',\n\t              { className: 'action' },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: this.previous\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'action-title' },\n\t              'Previous'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'poolSpecimenForm',\n\t          id: 'poolSpecimenForm',\n\t          onSubmit: this.handleSubmit,\n\t          ref: 'form'\n\t        },\n\t        this.formSwitch(inputForm, specimenForm)\n\t      );\n\t    }\n\t\n\t    /** *******************************************************************************\n\t     *                      ******     Helper methods     *******\n\t     *********************************************************************************/\n\t\n\t  }, {\n\t    key: 'validateForm',\n\t    value: function validateForm(formElement, value) {\n\t      var _this5 = this;\n\t\n\t      var formErrors = this.state.formErrors;\n\t\n\t      //validate barcode regex\n\t      if (formElement === \"barcode\" && value !== \"\") {\n\t        if (!/^hello/.test(this.state.formData.barcode)) {\n\t          formErrors.barcode = true;\n\t        } else {\n\t          formErrors.barcode = false;\n\t        }\n\t      }\n\t\n\t      //validate that quantity is a number and less than capacity\n\t      if (formElement === \"quantity\" && value !== \"\") {\n\t        if (isNaN(value) || value > this.props.capacities[this.state.currentContainerType]) {\n\t          formErrors.quantity = true;\n\t        } else {\n\t          formErrors.quantity = false;\n\t        }\n\t      }\n\t\n\t      //validate datatypes and regex of generated type attributes\n\t      var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n\t      var specimenTypeFields = Object.keys(specimenTypeFieldsObject).map(function (attribute) {\n\t\n\t        var datatype = _this5.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"number\") {\n\t          if (formElement === attribute) {\n\t            if (isNaN(value) && value !== \"\") {\n\t              formErrors[attribute] = true;\n\t            } else {\n\t              formErrors[attribute] = false;\n\t            }\n\t          }\n\t        }\n\t      });\n\t\n\t      this.setState({\n\t        formErrors: formErrors\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Handle form submission\n\t     * @param {object} e - Form submission event\n\t     */\n\t\n\t  }, {\n\t    key: 'handleSubmit',\n\t    value: function handleSubmit(e) {\n\t      e.preventDefault();\n\t\n\t      this.submitForm();\n\t    }\n\t\n\t    /*\n\t     * Uploads the file to the server\n\t     */\n\t\n\t  }, {\n\t    key: 'submitForm',\n\t    value: function submitForm() {\n\t      // Set form data and specimen the biobank file\n\t      var formData = this.state.formData;\n\t      var preparationForm = this.state.formData.preparationForm;\n\t      var specimenForm = this.state.formData.specimenForm;\n\t      formData['preparationForm'] = JSON.stringify(preparationForm);\n\t      formData['specimenForm'] = JSON.stringify(specimenForm);\n\t\n\t      console.log(formData.specimenForm);\n\t      console.log(formData.preparationForm);\n\t\n\t      var formObj = new FormData();\n\t      for (var key in formData) {\n\t        if (formData[key] !== \"\") {\n\t          formObj.append(key, formData[key]);\n\t        }\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: this.props.action,\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function () {\n\t          //this.props.refreshParent();\n\t          swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n\t          this.props.onSuccess();\n\t        }.bind(this),\n\t        error: function (err) {\n\t          console.error(err);\n\t          var msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\t          this.setState({\n\t            errorMessage: msg\n\t          });\n\t          swal(msg, \"\", \"error\");\n\t        }.bind(this)\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Checks if the inputted file name is valid\n\t     *\n\t     * @param {string} requiredFileName - Required file name\n\t     * @param {string} fileName - Provided file name\n\t     * @return {boolean} - true if fileName starts with requiredFileName, false\n\t     *   otherwise\n\t     */\n\t    //  isValidFileName(requiredFileName, fileName) {\n\t    //    if (fileName === null || requiredFileName === null) {\n\t    //      return false;\n\t    //    }\n\t    //\n\t    //    return (fileName.indexOf(requiredFileName) === 0);\n\t    //  }\n\t\n\t    /**\n\t     * Validate the form\n\t     *\n\t     * @param {object} formRefs - Object containing references to React form elements\n\t     * @param {object} formData - Object containing form data inputed by user\n\t     * @return {boolean} - true if all required fields are filled, false otherwise\n\t     */\n\t\n\t  }, {\n\t    key: 'isValidForm',\n\t    value: function isValidForm(formRefs, formData) {\n\t      var isValidForm = true;\n\t\n\t      var requiredFields = {\n\t        pscid: null,\n\t        visitLabel: null\n\t      };\n\t\n\t      Object.keys(requiredFields).map(function (field) {\n\t        if (formData[field]) {\n\t          requiredFields[field] = formData[field];\n\t        } else if (formRefs[field]) {\n\t          formRefs[field].props.hasError = true;\n\t          isValidForm = false;\n\t        }\n\t      });\n\t      this.forceUpdate();\n\t\n\t      return isValidForm;\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      // This lets the modal window know that there is formData\n\t      // and will cause a warning to be thrown of the modal window\n\t      // is exited\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t\n\t      if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n\t        this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n\t      }\n\t\n\t      var formData = this.state.formData;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      //TODO: there must be a better way to do this\n\t      if (isNaN(formElement)) {\n\t        formData[formElement] = value;\n\t      } else {\n\t        barcodeList[formElement] = value;\n\t      }\n\t\n\t      this.setState({\n\t        formData: formData,\n\t        barcodeList: barcodeList\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setPreparationFormData',\n\t    value: function setPreparationFormData(preparationFormData) {\n\t      var formData = this.state.formData;\n\t      formData.preparationForm = preparationFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenFormData',\n\t    value: function setSpecimenFormData(specimenFormData) {\n\t      var formData = this.state.formData;\n\t      formData.specimenForm = specimenFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }]);\n\t\n\t  return PoolSpecimenForm;\n\t}(React.Component);\n\t\n\tPoolSpecimenForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  action: React.PropTypes.string.isRequired,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\texports.default = PoolSpecimenForm;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(7);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = React.createElement(_customFields2.default, {\n\t              fields: specimenProtocolFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.preparation.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainerForm = function (_React$Component) {\n\t  _inherits(BiobankContainerForm, _React$Component);\n\t\n\t  function BiobankContainerForm() {\n\t    _classCallCheck(this, BiobankContainerForm);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankContainerForm.__proto__ || Object.getPrototypeOf(BiobankContainerForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankContainerForm, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Generates new Barcode Form everytime the addContainer button is pressed\n\t      var containerListArray = Object.keys(this.props.containerList);\n\t      var containers = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          containers.push(React.createElement(ContainerBarcodeForm, {\n\t            key: key,\n\t            containerKey: key,\n\t            id: i,\n\t            container: _this2.props.containerList[key] || null,\n\t            errors: (_this2.props.errors[key] || {}).container || {},\n\t            collapsed: _this2.props.collapsed[key],\n\t            containerTypesNonPrimary: _this2.props.containerTypesNonPrimary,\n\t            containerBarcodesNonPrimary: _this2.props.containerBarcodesNonPrimary,\n\t            removeContainer: containerListArray.length !== 1 ? function () {\n\t              _this2.props.removeListItem(key);\n\t            } : null,\n\t            addContainer: i == containerListArray.length ? function () {\n\t              _this2.props.addListItem('container');\n\t            } : null,\n\t            setCopyMultiplier: _this2.props.setCopyMultiplier,\n\t            copyMultiplier: _this2.props.copyMultiplier,\n\t            copyContainer: i == containerListArray.length && _this2.props.containerList[key] ? _this2.props.copyListItem : null,\n\t            setContainerList: _this2.props.setContainerList,\n\t            toggleCollapse: _this2.props.toggleCollapse\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = containerListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: \"containerForm\",\n\t          onSubmit: this.props.saveContainerList,\n\t          ref: \"form\"\n\t        },\n\t        React.createElement(\"br\", null),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-11\" },\n\t            React.createElement(SelectElement, {\n\t              name: \"centerId\",\n\t              label: \"Site\",\n\t              options: this.props.centers,\n\t              onUserInput: this.props.setCenterId,\n\t              required: true,\n\t              value: this.props.centerId,\n\t              errorMessage: (this.props.errors.container || {}).centerId\n\t            })\n\t          )\n\t        ),\n\t        containers,\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"col-xs-3 col-xs-offset-9\" },\n\t          React.createElement(ButtonElement, { label: \"Submit\" })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainerForm;\n\t}(React.Component);\n\t\n\tBiobankContainerForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  barcode: React.PropTypes.string,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\t/**\n\t * Container Barcode Form\n\t *\n\t * Acts a subform for ContainerForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerBarcodeForm = function (_React$Component2) {\n\t  _inherits(ContainerBarcodeForm, _React$Component2);\n\t\n\t  function ContainerBarcodeForm() {\n\t    _classCallCheck(this, ContainerBarcodeForm);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, (ContainerBarcodeForm.__proto__ || Object.getPrototypeOf(ContainerBarcodeForm)).call(this));\n\t\n\t    _this3.setContainer = _this3.setContainer.bind(_this3);\n\t    _this3.copy = _this3.copy.bind(_this3);\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(ContainerBarcodeForm, [{\n\t    key: \"copy\",\n\t    value: function copy() {\n\t      this.props.copyContainer(this.props.containerKey);\n\t    }\n\t\n\t    //TODO: change form.js so this isn't necessary\n\t\n\t  }, {\n\t    key: \"setContainer\",\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainerList(name, value, this.props.containerKey);\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      // HR TODO: All this CSS should eventually be moved\n\t      var addContainerButton = void 0;\n\t      var addContainerText = void 0;\n\t      var copyContainerButton = void 0;\n\t      var copyContainerText = void 0;\n\t      if (this.props.addContainer) {\n\t        addContainerButton = React.createElement(\n\t          \"span\",\n\t          { className: \"action\" },\n\t          React.createElement(\n\t            \"div\",\n\t            {\n\t              className: \"action-button add\",\n\t              onClick: this.props.addContainer\n\t            },\n\t            \"+\"\n\t          )\n\t        );\n\t\n\t        addContainerText = React.createElement(\n\t          \"span\",\n\t          { className: \"action-title\" },\n\t          \"New Entry\"\n\t        );\n\t      }\n\t\n\t      if (this.props.copyContainer) {\n\t        copyContainerButton = React.createElement(\n\t          \"span\",\n\t          { className: \"action\" },\n\t          React.createElement(\n\t            \"div\",\n\t            {\n\t              className: \"action-button add\",\n\t              onClick: this.copy\n\t            },\n\t            React.createElement(\"span\", { className: \"glyphicon glyphicon-duplicate\" })\n\t          )\n\t        );\n\t        copyContainerText = React.createElement(\n\t          \"span\",\n\t          { className: \"action-title\" },\n\t          React.createElement(\"input\", {\n\t            className: \"form-control input-sm\",\n\t            type: \"number\",\n\t            min: \"1\",\n\t            max: \"50\",\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          \"Copies\"\n\t        );\n\t      }\n\t\n\t      var removeContainerButton = void 0;\n\t      if (this.props.removeContainer) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeContainerButton = React.createElement(\"span\", {\n\t          className: \"glyphicon glyphicon-remove\",\n\t          onClick: this.props.removeContainer,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: \"container\"\n\t        },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-11\" },\n\t            React.createElement(\n\t              \"div\",\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: \"barcode\",\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                ref: \"barcode\",\n\t                required: true,\n\t                value: this.props.container.barcode,\n\t                errorMessage: this.props.errors.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-1\", style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement(\"span\", {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              \"data-toggle\": \"collapse\",\n\t              \"data-target\": '#item-' + this.props.containerKey,\n\t              onClick: function onClick() {\n\t                return _this4.props.toggleCollapse(_this4.props.containerKey);\n\t              }\n\t            }),\n\t            removeContainerButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\"div\", { className: \"col-xs-2\" }),\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-9\" },\n\t            React.createElement(\n\t              \"div\",\n\t              { id: 'item-' + this.props.containerKey, className: \"collapse\" },\n\t              React.createElement(SelectElement, {\n\t                name: \"typeId\",\n\t                label: \"Container Type\",\n\t                options: this.props.containerTypesNonPrimary,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.typeId,\n\t                errorMessage: this.props.errors.typeId\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-11\" },\n\t            React.createElement(\"div\", { className: \"col-xs-3\" }),\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-xs-4 action\" },\n\t              addContainerButton,\n\t              addContainerText\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-xs-4 action\" },\n\t              copyContainerButton,\n\t              copyContainerText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerBarcodeForm;\n\t}(React.Component);\n\t\n\tContainerBarcodeForm.propTypes = {};\n\t\n\texports.default = BiobankContainerForm;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/**\n\t * Allows to dynamically render vertical tabs corresponding to tab panes.\n\t */\n\t\n\tvar VerticalTabs = function (_React$Component2) {\n\t  _inherits(VerticalTabs, _React$Component2);\n\t\n\t  function VerticalTabs(props) {\n\t    _classCallCheck(this, VerticalTabs);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, (VerticalTabs.__proto__ || Object.getPrototypeOf(VerticalTabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this2.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this2.props.defaultTab) {\n\t      activeTab = _this2.props.defaultTab;\n\t    } else if (_this2.props.tabs.length > 0) {\n\t      activeTab = _this2.props.tabs[0].id;\n\t    }\n\t\n\t    _this2.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this2.handleClick = _this2.handleClick.bind(_this2);\n\t    _this2.getTabs = _this2.getTabs.bind(_this2);\n\t    _this2.getTabPanes = _this2.getTabPanes.bind(_this2);\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(VerticalTabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tabbable col-md-3 col-sm-3' },\n\t          React.createElement(\n\t            'ul',\n\t            { className: 'nav nav-pills nav-stacked', role: 'tablist', style: tabStyle },\n\t            tabs\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content col-md-9 col-sm-9' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return VerticalTabs;\n\t}(React.Component);\n\t\n\tVerticalTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tVerticalTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component3) {\n\t  _inherits(TabPane, _React$Component3);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.VerticalTabs = VerticalTabs;\n\texports.TabPane = TabPane;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(10);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _globals = __webpack_require__(16);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(6);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(12);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(21);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(22);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(23);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Map Options for Form Select Elements\n\t      var specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      var addAliquotForm = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Make Aliquots'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this2.props.edit('aliquotForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            closeModal: this.props.close,\n\t            show: this.props.editable.aliquotForm\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.props.data,\n\t            specimen: this.props.specimen,\n\t            setSpecimen: this.props.setSpecimen,\n\t            saveSpecimen: this.props.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            close: this.props.close,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.props.editable.collection) {\n\t        var _containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t        var specimenTypeAttributes = void 0;\n\t        //loops through data object to produce static elements\n\t        if (this.props.data.specimen.collection.data) {\n\t          var collectionData = this.props.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(collectionData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenTypeAttributes[_this2.props.data.specimen.typeId][key].name,\n\t              text: collectionData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.props.data.specimen.collection.quantity + ' ' + this.props.options.specimenUnits[this.props.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.collection.centerId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel specimen-panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.props.editable.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.props.editable.collection ? null : function () {\n\t              _this2.props.edit('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.props.options.specimenProtocols) {\n\t        if (this.props.options.specimenProtocols[id].typeId == this.props.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation does Exist and the form is not in an edit state\n\t      if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        if (this.props.data.specimen.preparation.data) {\n\t          var preparationData = this.props.data.specimen.preparation.data;\n\t          specimenProtocolAttributes = Object.keys(preparationData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenProtocolAttributes[_this2.props.data.specimen.preparation.protocolId][key].name,\n\t              text: preparationData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.preparation.centerId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel specimen-panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('preparation');_this2.props.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel specimen-panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.preparation ? null : function () {\n\t                _this2.props.edit('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.props.options.specimenMethods) {\n\t        if (this.props.options.specimenMethods[_id].typeId == this.props.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.props.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.props.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          files: this.props.files,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          setFiles: this.props.setFiles,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        //TODO: Make the below a separate component\n\t        if (this.props.data.specimen.analysis.data) {\n\t          var analysisData = this.props.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.keys(analysisData).map(function (key) {\n\t            if (_this2.props.options.attributeDatatypes[_this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].datatypeId].datatype === 'file') {\n\t              return React.createElement(LinkElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key],\n\t                href: loris.BaseURL + '/biobank/ajax/requestData.php?action=downloadFile&file=' + analysisData[key],\n\t                target: '_blank',\n\t                download: analysisData[key]\n\t              });\n\t            } else {\n\t              return React.createElement(StaticElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key]\n\t              });\n\t            }\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.analysis.centerId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel specimen-panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('analysis');_this2.props.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel specimen-panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.analysis ? null : function () {\n\t                _this2.props.edit('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.props.specimen,\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        errors: this.props.errors,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        setSpecimen: this.props.setSpecimen,\n\t        saveSpecimen: this.props.saveSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      //TODO: this can maybe become its own component...?\n\t      var returnToFilter = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: this.props.loadFilters\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-title' },\n\t          'Return to Filter'\n\t        )\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.data.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            specimen: this.props.data.specimen,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        ),\n\t        returnToFilter\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(10);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _quantityField = __webpack_require__(17);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(18);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(19);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _centerField = __webpack_require__(20);\n\t\n\tvar _centerField2 = _interopRequireDefault(_centerField);\n\t\n\tvar _containerParentForm = __webpack_require__(8);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.editable.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.edit('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                specimen: this.props.specimen,\n\t                errors: this.props.errors.specimen,\n\t                units: units,\n\t                close: this.props.close,\n\t                setSpecimen: this.props.setSpecimen,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if (this.props.data.specimen && this.props.options.specimenTypes[this.props.data.specimen.typeId].freezeThaw == 1) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.editable.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  _this2.props.edit('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              container: this.props.container,\n\t              errors: this.props.errors.container,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.editable.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              container: this.props.container,\n\t              errors: this.props.errors.container,\n\t              stati: stati,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var centerField = void 0;\n\t      if (!this.props.editable.center) {\n\t        centerField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.centerId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('center');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        centerField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_centerField2.default, {\n\t              container: this.props.container,\n\t              errors: this.props.errors.container,\n\t              centers: this.props.options.centers,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var barcode = this.props.data.parentSpecimenContainer.barcode;\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t              return _this2.props.loadSpecimen(barcode);\n\t            } },\n\t          barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var _barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode;\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t                return _this2.props.loadContainer(_barcode);\n\t              } },\n\t            _barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerParentForm');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t          ),\n\t          React.createElement(\n\t            _Modal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              closeModal: this.props.close,\n\t              show: this.props.editable.containerParentForm\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        centerField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            inputClass: 'col-xs-11',\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.quantity,\n\t            errorMessage: this.props.errors.quantity\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            inputClass: 'col-xs-11',\n\t            options: this.props.units,\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.unitId,\n\t            errorMessage: this.props.errors.unitId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveSpecimen,\n\t            columnSize: 'col-xs-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimen: React.PropTypes.func,\n\t  close: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.temperature,\n\t            errorMessage: this.props.errors.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.statusId,\n\t            errorMessage: this.props.errors.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Center Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar CenterField = function (_React$Component) {\n\t  _inherits(CenterField, _React$Component);\n\t\n\t  function CenterField() {\n\t    _classCallCheck(this, CenterField);\n\t\n\t    return _possibleConstructorReturn(this, (CenterField.__proto__ || Object.getPrototypeOf(CenterField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CenterField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(SelectElement, {\n\t            name: 'centerId',\n\t            options: this.props.centers,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.centerId,\n\t            errorMessage: this.props.errors.centerId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CenterField;\n\t}(React.Component);\n\t\n\tCenterField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = CenterField;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(7);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      if (value instanceof File) {\n\t        data[name] = value.name;\n\t        this.props.setFiles(name, value);\n\t      } else {\n\t        data[name] = value;\n\t        this.setAnalysis('data', data);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var submitButton = void 0;\n\t      submitButton = this.props.data.specimen.analysis ? React.createElement(ButtonElement, { label: 'Update' }) : React.createElement(ButtonElement, { label: 'Submit' });\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = React.createElement(_customFields2.default, {\n\t              fields: specimenMethodFieldsObject,\n\t              files: this.props.files,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.analysis.data,\n\t              data: (((this.props.data || {}).specimen || {}).analysis || {}).data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          fileUpload: true,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\t//TODO: revise this component once Shipments are enabled.\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle() {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    return _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // Create Collection Node\n\t      var collectionNode = void 0;\n\t      if ((this.props.specimen || {}).collection || this.props.container) {\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Preparation Node\n\t      var preparationNode = void 0;\n\t      if ((this.props.specimen || {}).preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Analysis Node\n\t      var analysisNode = void 0;\n\t      if ((this.props.specimen || {}).analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'A'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Lines\n\t      var line = void 0;\n\t      var nodes = 0;\n\t      for (var i in this.props.specimen) {\n\t        if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n\t          nodes++;\n\t        }\n\t      }\n\t      var lineWidth = nodes > 1 ? 60 / (nodes - 1) : 0;\n\t      var lineStyle = { width: lineWidth + '%' };\n\t      line = React.createElement('div', { className: 'lifecycle-line', style: lineStyle });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode ? line : null,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainer('parentContainerId', null);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(16);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _lifeCycle = __webpack_require__(22);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _barcodePath = __webpack_require__(25);\n\t\n\tvar _barcodePath2 = _interopRequireDefault(_barcodePath);\n\t\n\tvar _containerDisplay = __webpack_require__(9);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tvar _containerCheckout = __webpack_require__(23);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container\n\t *\n\t * Fetches data corresponding to a given Container from Loris backend and\n\t * displays a page allowing viewing of meta information of the container\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainer = function (_React$Component) {\n\t  _inherits(BiobankContainer, _React$Component);\n\t\n\t  function BiobankContainer() {\n\t    _classCallCheck(this, BiobankContainer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainer.__proto__ || Object.getPrototypeOf(BiobankContainer)).call(this));\n\t\n\t    _this.drag = _this.drag.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainer, [{\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        errors: this.props.errors,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      var barcodePath = React.createElement(_barcodePath2.default, {\n\t        container: this.props.data.container,\n\t        parentContainers: this.props.data.parentContainers,\n\t        loadContainer: this.props.loadContainer\n\t      });\n\t\n\t      var checkoutButton = void 0;\n\t      var display = void 0;\n\t      if (this.props.data.container.dimensionId) {\n\t        //TODO: the styling here needs to be redone.\n\t\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          { style: { marginLeft: 'auto', height: '10%', marginRight: '10%' } },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: !this.props.editable.containerCheckout && !this.props.editable.barcode ? 'action-button update open' : 'action-button update closed',\n\t              title: 'Checkout Child Containers',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerCheckout');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t          )\n\t        );\n\t\n\t        var barcodes = this.props.mapFormOptions(this.props.options.containers, 'barcode');\n\t        //delete values that are parents of the container\n\t        if (this.props.data.parentContainers) {\n\t          for (var key in this.props.data.parentContainers) {\n\t            delete barcodes[this.props.data.parentContainers[key].id];\n\t          }\n\t        }\n\t        delete barcodes[this.props.data.container.id];\n\t\n\t        display = React.createElement(_containerDisplay2.default, {\n\t          barcodes: barcodes,\n\t          container: this.props.container,\n\t          coordinate: this.props.coordinate,\n\t          sequential: this.props.sequential,\n\t          checkoutList: this.props.checkoutList,\n\t          containers: this.props.options.containers,\n\t          children: this.props.data.childContainers,\n\t          types: this.props.options.containerTypes,\n\t          dimensions: this.props.options.containerDimensions[this.props.data.container.dimensionId],\n\t          coordinates: this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null,\n\t          containerTypes: this.props.options.containerTypes,\n\t          containerStati: this.props.options.containerStati,\n\t          editable: this.props.editable,\n\t          edit: this.props.edit,\n\t          close: this.props.close,\n\t          setCoordinate: this.props.setCoordinate,\n\t          setSequential: this.props.setSequential,\n\t          setCheckoutList: this.props.setCheckoutList,\n\t          mapFormOptions: this.props.mapFormOptions,\n\t          loadSpecimen: this.props.loadSpecimen,\n\t          loadContainer: this.props.loadContainer,\n\t          saveChildContainer: this.props.saveChildContainer\n\t        });\n\t      }\n\t\n\t      var listAssigned = [];\n\t      var coordinateList = [];\n\t      var listUnassigned = [];\n\t      if (this.props.data.childContainers) {\n\t        (function () {\n\t          var children = _this2.props.data.childContainers;\n\t\n\t          var _loop = function _loop(child) {\n\t            var load = void 0;\n\t            if (_this2.props.options.containerTypes[children[child].typeId].primary) {\n\t              load = _this2.props.loadSpecimen;\n\t            } else {\n\t              load = _this2.props.loadContainer;\n\t            }\n\t\n\t            if (children[child].coordinate) {\n\t              listAssigned.push(React.createElement(\n\t                'div',\n\t                null,\n\t                React.createElement(\n\t                  'a',\n\t                  { onClick: function onClick() {\n\t                      return load(children[child].barcode);\n\t                    }, style: { cursor: 'pointer' } },\n\t                  children[child].barcode\n\t                )\n\t              ));\n\t              coordinateList.push(React.createElement(\n\t                'div',\n\t                null,\n\t                'at ',\n\t                children[child].coordinate\n\t              ));\n\t            } else {\n\t              listUnassigned.push(React.createElement(\n\t                'a',\n\t                {\n\t                  onClick: function onClick() {\n\t                    return load(children[child].barcode);\n\t                  },\n\t                  style: { cursor: 'pointer' },\n\t                  id: children[child].id,\n\t                  draggable: true,\n\t                  onDragStart: _this2.drag\n\t                },\n\t                children[child].barcode\n\t              ));\n\t            }\n\t          };\n\t\n\t          for (var child in children) {\n\t            _loop(child);\n\t          }\n\t        })();\n\t      }\n\t\n\t      //TODO: this can maybe become it's own component..?\n\t      var returnToFilter = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: this.props.loadFilters\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-title' },\n\t          'Return to Filter'\n\t        )\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'container-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.data.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'display-container' },\n\t            !(listAssigned.length === 0 && listUnassigned.length === 0) ? checkoutButton : null,\n\t            display,\n\t            barcodePath\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-list' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length !== 0 ? 'Assigned Containers' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'container-coordinate' },\n\t              React.createElement(\n\t                'div',\n\t                null,\n\t                listAssigned\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { style: { paddingLeft: 10 } },\n\t                coordinateList\n\t              )\n\t            ),\n\t            listAssigned.length !== 0 ? React.createElement('br', null) : null,\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listUnassigned.length !== 0 ? 'Unassigned Containers' : null\n\t            ),\n\t            listUnassigned\n\t          )\n\t        ),\n\t        returnToFilter\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainer;\n\t}(React.Component);\n\t\n\tBiobankContainer.propTypes = {\n\t  containerPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = BiobankContainer;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Path\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar BarcodePath = function (_React$Component) {\n\t  _inherits(BarcodePath, _React$Component);\n\t\n\t  function BarcodePath() {\n\t    _classCallCheck(this, BarcodePath);\n\t\n\t    return _possibleConstructorReturn(this, (BarcodePath.__proto__ || Object.getPrototypeOf(BarcodePath)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BarcodePath, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var path = [];\n\t      var pathLength = this.props.parentContainers.length - 1;\n\t      var containerURL = loris.BaseURL + '/biobank/container/?barcode=';\n\t\n\t      var _loop = function _loop(i) {\n\t        path.push(React.createElement(\n\t          'span',\n\t          { className: 'barcodePath' },\n\t          '/',\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                return _this2.props.loadContainer(_this2.props.parentContainers[i].barcode);\n\t              },\n\t              style: { cursor: 'pointer' }\n\t            },\n\t            _this2.props.parentContainers[i].barcode\n\t          )\n\t        ));\n\t      };\n\t\n\t      for (var i = pathLength; i >= 0; i--) {\n\t        _loop(i);\n\t      }\n\t      path.push(React.createElement(\n\t        'span',\n\t        { className: 'barcodePath' },\n\t        '/',\n\t        React.createElement(\n\t          'a',\n\t          {\n\t            onClick: function onClick() {\n\t              return _this2.props.loadContainer(_this2.props.container.barcode);\n\t            },\n\t            style: { cursor: 'pointer' }\n\t          },\n\t          this.props.container.barcode\n\t        )\n\t      ));\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        path\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodePath;\n\t}(React.Component);\n\t\n\tBarcodePath.propTypes = {};\n\t\n\texports.default = BarcodePath;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/biobankIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9bab09ec3b3aa1f3553b","/* global ReactDOM */\n\nimport Loader from 'Loader';\nimport BiobankFilter from './filter';\nimport BiobankSpecimen from './specimen';\nimport BiobankContainer from './container';\n\nclass BiobankIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoaded: false,\n      page: '',\n      options: {},\n      specimenFilter: {},\n      containerDataTable: {},\n      containerFilter: {},\n      containerDataTable: {},\n      data: {},\n\n      specimen: {},\n      container: {},\n      files: {},\n\n      list: {},\n      count: 0,\n      collapsed: {},\n      copyMultiplier: 1,\n      coordinate: null,\n      sequential: false,\n      checkoutList: {},\n      candidateId: null,\n      centerId: null,\n      sessionId: null,\n\n      errors: {\n        container: {},\n        specimen: {},\n        list: {},\n      },\n      editable: {\n        specimenForm: false,\n        containerForm: false,\n        aliquotForm: false,\n        containerParentForm: false,\n        barcode: false,\n        containerCheckout: false,\n        temperature: false,\n        quantity: false,\n        status: false,\n        center: false,\n        collection: false,\n        preparation: false,\n        analysis: false,\n      }\n    };\n\n    this.fetch                    = this.fetch.bind(this);\n    this.loadFilters              = this.loadFilters.bind(this);\n    this.loadSpecimenDataTable    = this.loadSpecimenDataTable.bind(this);\n    this.loadContainerDataTable   = this.loadContainerDataTable.bind(this);\n    this.loadOptions              = this.loadOptions.bind(this);\n    this.loadContainer            = this.loadContainer.bind(this);\n    this.loadSpecimen             = this.loadSpecimen.bind(this);\n    this.fetch                    = this.fetch.bind(this);\n    this.updateSpecimenFilter     = this.updateSpecimenFilter.bind(this);\n    this.updateContainerFilter    = this.updateContainerFilter.bind(this);\n    this.clone                    = this.clone.bind(this);\n    this.mapFormOptions           = this.mapFormOptions.bind(this);\n    this.toggleCollapse           = this.toggleCollapse.bind(this);\n    this.edit                     = this.edit.bind(this);\n    this.close                    = this.close.bind(this);\n    this.revertParameters         = this.revertParameters.bind(this);\n    this.setSpecimenList          = this.setSpecimenList.bind(this);\n    this.addListItem              = this.addListItem.bind(this);\n    this.copyListItem             = this.copyListItem.bind(this);\n    this.removeListItem           = this.removeListItem.bind(this);\n    this.saveSpecimenList         = this.saveSpecimenList.bind(this);\n    this.setSpecimen              = this.setSpecimen.bind(this);\n    this.revertSpecimen           = this.revertSpecimen.bind(this);\n    this.setContainerList         = this.setContainerList.bind(this);\n    this.setContainer             = this.setContainer.bind(this);\n    this.revertContainer          = this.revertContainer.bind(this);\n    this.setCopyMultiplier        = this.setCopyMultiplier.bind(this);\n    this.setCenterId              = this.setCenterId.bind(this);\n    this.setSessionId             = this.setSessionId.bind(this);\n    this.setCandidateId           = this.setCandidateId.bind(this);\n    this.setCoordinate            = this.setCoordinate.bind(this);\n    this.setSequential            = this.setSequential.bind(this);\n    this.setCheckoutList          = this.setCheckoutList.bind(this);\n    this.setFiles                 = this.setFiles.bind(this)\n    this.addPreparation           = this.addPreparation.bind(this);\n    this.addAnalysis              = this.addAnalysis.bind(this);\n    this.saveSpecimen             = this.saveSpecimen.bind(this);\n    this.saveContainer            = this.saveContainer.bind(this);\n    this.saveChildContainer       = this.saveChildContainer.bind(this);\n    this.saveContainerList        = this.saveContainerList.bind(this);\n    this.validateContainer        = this.validateContainer.bind(this);\n    this.validateSpecimen         = this.validateSpecimen.bind(this);\n    this.save                     = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadFilters().then(() =>\n      this.loadOptions().then(() =>\n        this.setState({isLoaded: true})\n      )\n    );\n  }\n\n  loadFilters() {\n    return new Promise(resolve => {\n      this.loadContainerDataTable().then(() =>\n        this.loadSpecimenDataTable().then(() =>  {\n          this.setState({page: 'filter'}, resolve());\n        })\n      )\n    });\n  }\n\n  loadSpecimenDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenFilterDataURL).then(data => {\n        let specimenDataTable = data;\n        this.setState({specimenDataTable}, resolve());\n      });\n    });\n  }\n\n  loadContainerDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerFilterDataURL).then(data => {\n        let containerDataTable = data;\n        this.setState({containerDataTable}, resolve());\n      });\n    });\n  }\n\n  loadOptions() {\n    return new Promise(resolve => {\n      this.fetch(this.props.optionsURL).then(data => {\n        let options = data;\n        this.setState({options}, resolve());\n      });\n    });\n  }\n\n  loadContainer(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerDataURL+barcode).then(data => {\n        let container = this.clone(data.container);\n        let page = 'container';\n        this.close();\n        this.revertParameters();\n        this.setState({data, container, page}, resolve());\n      });\n    });\n  }\n\n  loadSpecimen(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenDataURL+barcode).then(data => {\n        let specimen = this.clone(data.specimen);\n        let container = this.clone(data.container);\n        let page = 'specimen';\n        this.setState({data, specimen, container, page}, resolve());\n      });\n    });\n  }\n\n  fetch(url) {\n    return new Promise(resolve => {\n      $.ajax(url, {\n        dataType: 'json',\n        success: data => resolve(data),\n        error: (error, errorCode, errorMsg) => console.error(error, errorCode, errorMsg)\n      });\n    });\n  }\n\n  updateSpecimenFilter(specimenFilter) {\n    this.setState({specimenFilter});\n  }\n\n  updateContainerFilter(containerFilter) {\n    this.setState({containerFilter});\n  }\n\n  clone(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  mapFormOptions(object, attribute) {\n    let data = {};\n    for (let id in object) {\n      data[id] = object[id][attribute];\n    }\n    return data;\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  edit(stateKey) {\n    this.close().then(() => {\n      let editable = this.state.editable;\n      editable[stateKey] = true;\n      this.setState({editable});\n    });\n  }\n\n  close() {\n    return new Promise(resolve => {\n      let editable = this.state.editable;\n      for (let key in editable) {\n        editable[key] = false;\n      }\n\n      this.state.data.specimen && this.revertSpecimen();\n      this.state.data.container && this.revertContainer();\n      //this.revertParameters();\n      this.setState({editable}, resolve());\n    });\n  }\n\n  revertParameters() {\n    //TODO: these should be moved to another function\n    let coordinate = this.state.coordinate;\n    coordinate = null;\n    let sequential = this.state.sequential;\n    sequential = false;\n    let checkoutList = this.state.checkoutList;\n    checkoutList = {};\n    let list = this.state.list;\n    list = {};\n    let count = this.state.count;\n    count = 1;\n    let collapsed = this.state.collapsed;\n    collapsed = {1: true};\n    let copyMultiplier = this.state.copyMultiplier;\n    copyMultiplier = 1;\n    let centerId = this.state.centerId;\n    centerId = null;\n    let errors = this.state.errors;\n    errors = {container:{}, specimen:{}, list:{}};\n\n    this.setState({\n      coordinate,\n      sequential,\n      checkoutList,\n      list,\n      count,\n      collapsed,\n      copyMultiplier,\n      centerId,\n      errors\n    });\n  }\n\n  setSpecimenList(name, value, key) {\n    let list = this.state.list;\n    list[key].specimen[name] = value;\n    this.setState({list});\n  }\n\n  setContainerList(name, value, key) {\n    let list = this.state.list;\n    list[key].container[name] = value;\n    this.setState({list});\n  }\n\n  addListItem(item) {\n    return new Promise(resolve => {\n      let list = this.state.list;\n      let count = this.state.count;\n      let collapsed = this.state.collapsed;\n\n      count++;\n      collapsed[count] = true;\n      switch(item) {\n        case 'specimen':\n          list[count] = {specimen: {collection:{}}, container: {}};\n          break;\n        case 'container':\n          list[count] = {container: {}};\n          break;\n      }\n\n      this.setState({list, count, collapsed}, resolve());\n    });\n  }\n\n  copyListItem(key) {\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n    let list = this.state.list;\n    let multiplier = this.state.copyMultiplier;\n\n    for (let i=1; i<=multiplier; i++) {\n      count++;\n      list[count] = this.clone(list[key]);\n      list[count].container.barcode && delete list[count].container.barcode;\n      collapsed[count] = true;\n    }\n\n    this.setState({list, count, collapsed});\n  }\n\n  removeListItem(key) {\n    let list = this.state.list;\n    delete list[key];\n    this.setState({list});\n  }\n\n  setSpecimen(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  revertSpecimen() {\n    let specimen = this.state.specimen;\n    specimen = this.clone(this.state.data.specimen);\n    this.setState({specimen});\n  }\n\n  setContainer(name, value) {\n    let container = this.state.container;\n    value ? container[name] = value : delete container[name]; \n    this.setState({container});\n  }\n\n  revertContainer() {\n    let container = this.state.container;\n    container = this.clone(this.state.data.container);\n    this.setState({container});\n  }\n\n  setCurrent(name, value) {\n    let current = this.state.current;\n    current[name] = value;\n    this.setState({current});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = this.state.copyMultiplier;\n    copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n \n  setCandidateId(name, value) {\n    let candidateId = this.state.candidateId;\n    candidateId = value;\n    this.setState({candidateId});\n  }\n\n  setCenterId(name, value) {\n    let centerId = this.state.centerId;\n    centerId = value;\n    this.setState({centerId});\n  }\n\n  setSessionId(name, value) {\n    let sessionId = this.state.sessionId;\n    sessionId = value;\n    //TODO: there must be a better way to do this.\n    this.setCenterId('centerId', this.state.options.sessionCenters[sessionId].centerId);\n    this.setState({sessionId});\n  }\n\n  setCoordinate(value) {\n    let coordinate = this.state.coordinates;\n    coordinate = value;\n    this.setState({coordinate});\n  }\n\n  setSequential(name, value) {\n    let sequential = this.state.sequential;\n    sequential = value;\n    this.setState({sequential});\n  }\n\n  setFiles(name, value) {\n    let files = this.state.files;\n    files[value.name] = value;\n    this.setState({files});\n  }\n\n  setCheckoutList(container) {\n    let checkoutList = this.state.checkoutList;\n    checkoutList[container.coordinate] = container;\n    this.setState({checkoutList});\n  }\n  \n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {centerId: this.state.data.container.centerId};\n    this.setState({specimen});\n  }\n\n  addAnalysis() {\n    let specimen = this.state.specimen;\n    specimen.analysis = {centerId: this.state.data.container.centerId};\n    this.setState({specimen});\n  }\n\n  saveSpecimen() {\n    let specimen = this.state.specimen;\n    this.validateSpecimen(specimen).then(() => {\n      this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(() => {\n        let data = this.state.data;\n        data.specimen = this.clone(this.state.specimen);\n        this.setState({data}, ()=>{this.close()});\n      }\n      );\n    });\n  }\n\n  saveSpecimenList() {\n    let specimenList = this.clone(this.state.list);\n    let availableId = Object.keys(this.state.options.containerStati).find(\n      key => this.state.options.containerStati[key].status === 'Available'\n    );\n    let specimenListValidation = [];\n\n    for (let key in specimenList) {\n      //set container values\n      let container = specimenList[key].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.centerId = this.state.centerId;\n      container.originId = this.state.centerId;\n\n      //set specimen values\n      let specimen = specimenList[key].specimen;\n      specimen.candidateId = this.state.candidateId;\n      specimen.sessionId = this.state.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.centerId = this.state.centerId;\n      if ((this.state.options.specimenTypes[specimen.typeId]||{}).freezeThaw == 1) {\n        specimen.ftCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: fix this later\n      if (this.state.ALIQUOT) {\n        specimen.candidateId = this.state.data.candidate.CandId;\n        specimen.sessionId = this.state.data.session.ID;\n        specimen.parentSpecimenId = this.state.data.specimen.id;\n        specimen.collection.centerId = this.props.data.container.centerId;\n        container.centerId = this.props.data.container.centerId;\n        container.originId = this.props.data.container.centerId;\n      }\n\n      specimenList[key].container = container;\n      specimenList[key].specimen = specimen;\n\n      specimenListValidation.push(this.validateContainer(container, key));\n      specimenListValidation.push(this.validateSpecimen(specimen, key));\n    }\n\n    Promise.all(specimenListValidation).then(() => {\n      this.save(specimenList, this.props.saveBarcodeListURL, 'Save Successful!').then(\n        () => {this.close(); this.loadFilters()}\n      );\n    }).catch(()=>{});\n  }\n\n  saveContainer() {\n    let container = this.state.container;\n    this.validateContainer(container).then(() => {\n      this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(() => {\n        let data = this.state.data;\n        data.container = this.clone(this.state.container);\n        this.setState({data}, ()=>{this.close()});\n        }\n      );\n    });\n  }\n  \n  saveChildContainer(container) {\n    return new Promise(resolve => {\n      this.save(container, this.props.saveContainerURL).then(() => {\n        let data = this.state.data;\n        if (container.parentContainerId === null) {\n          delete data.childContainers[container.id];\n        } else {\n          data.childContainers[container.id] = this.clone(container);\n        }\n        this.setState({data}, resolve());\n        }\n      )\n    });\n  }\n\n  saveContainerList() {\n    let containerList = this.state.list;\n    let availableId = Object.keys(this.state.options.containerStati).find(\n      key => this.state.options.containerStati[key].status === 'Available'\n    );\n    let containerListValidation = [];\n\n    Object.entries(containerList).map(([key, container]) => {\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.originId = this.state.centerId;\n      container.centerId = this.state.centerId;\n\n      containerListValidation.push(this.validateContainer(container, key));\n    });\n\n    Promise.all(containerListValidation).then(()=> {\n      this.save(containerList, this.props.saveContainerListURL, 'Container Creation Successful!').then(\n        () => {this.close(); this.loadFilters(); this.loadOptions();}\n      );\n    }).catch(()=>{});\n  }\n\n  save(data, url, message) {\n    return new Promise(resolve => {\n      let dataObject = new FormData();\n      for (let file in this.state.files) {\n        dataObject.append(this.state.files[file].name, this.state.files[file]);\n      }\n      dataObject.append('data', JSON.stringify(data));\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: dataObject,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: () => {\n          resolve();\n          this.loadOptions();\n          message && swal(message, '', 'success');\n        },\n        error: (error, textStatus, errorThrown) => {\n          let message = (error.responseJSON||{}).message || 'Submission error!';\n          swal('Error', message, 'error');\n          console.error(error, textStatus, errorThrown);\n        }\n      });\n    });\n  }\n\n  //TODO: validation might be more effective within 1 function.\n  validateContainer(container, key) {\n    return new Promise((resolve, reject) => {\n      let errors = this.state.errors;\n      errors.container = {};\n\n      let required = [\n        'barcode',\n        'typeId',\n        'temperature',\n        'statusId',\n        'centerId',\n      ]\n\n      let float = [\n        'temperature',\n      ]\n\n      required.map(field => {\n        if (!container[field]) {\n          errors.container[field] = 'This field is required! ';\n        }\n      });\n\n      float.map(field => {\n        if (isNaN(container[field])) {\n          errors.container[field] = 'This field must be a number! ';\n        }\n      });\n\n      Object.values(this.state.options.containers).map(c => {\n        if (container.barcode === c.barcode && container.id !== c.id) {\n          errors.container.barcode = 'Barcode must be unique';\n        }\n      });\n\n      //TODO: Regex check will go here\n      //TODO: Date validation will go here\n      //TODO: Time validation will go here\n      //TODO: Comments validation will go here\n      //TODO: Custom Field validation will go here\n\n      if (key) {\n        errors.list[key] = errors.list[key] || {};\n        errors.list[key].container = errors.container;\n      }\n\n      if (Object.keys(errors.container).length == 0) {\n        this.setState({errors}, resolve());\n      } else {\n        this.setState({errors}, reject());\n      }\n    });\n  }\n\n  validateSpecimen(specimen, key) {\n    return new Promise((resolve, reject) => {\n      let errors = this.state.errors;\n      errors.specimen = {};\n\n      let required = [\n        'typeId',\n        'quantity',\n        'unitId',\n        'candidateId',\n        'sessionId',\n        'collection',\n      ]\n\n      let float = [\n        'quantity',\n      ]\n\n      required.map(field => {\n        if (!specimen[field]) {\n          errors.specimen[field] = 'This field is required! ';\n        }\n      });\n\n      float.map(field => {\n        if (isNaN(specimen[field])) {\n          errors.specimen[field] = 'This field must be a number! ';\n        }\n      });\n\n      if (key) {\n        errors.list[key] = errors.list[key] || {};\n        errors.list[key].specimen = errors.specimen;\n      }\n\n      if (Object.keys(errors.specimen).length == 0) {\n        this.setState({errors}, resolve());\n      } else {\n        this.setState({errors}, reject());\n      }\n    });\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (\n        <div style={{height: 500}}><Loader/></div>\n      );\n    }\n\n    let display;\n    switch (this.state.page) {\n      case 'container':\n          display = (\n            <BiobankContainer\n              data={this.state.data}\n              options={this.state.options}\n              container={this.state.container}\n              errors={this.state.errors}\n              coordinate={this.state.coordinate}\n              sequential={this.state.sequential}\n              checkoutList={this.state.checkoutList}\n              editable={this.state.editable}\n              loadContainer={this.loadContainer}\n              loadSpecimen={this.loadSpecimen}\n              loadFilters={this.loadFilters}\n              mapFormOptions={this.mapFormOptions}\n              setContainer={this.setContainer}\n              revertContainer={this.revertContainer}\n              saveContainer={this.saveContainer}\n              setCoordinate={this.setCoordinate}\n              setSequential={this.setSequential}\n              setCheckoutList={this.setCheckoutList}\n              saveChildContainer={this.saveChildContainer}\n              edit={this.edit}\n              close={this.close}\n            />\n          );\n        break;\n      case 'specimen': \n        display = (\n          <BiobankSpecimen\n            data={this.state.data}\n            options={this.state.options}\n            container={this.state.container}\n            specimen={this.state.specimen}\n            errors={this.state.errors}\n            files={this.state.files}\n            editable={this.state.editable}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            loadFilters={this.loadFilters}\n            loadOptions={this.loadOptions}\n            mapFormOptions={this.mapFormOptions}\n            setContainer={this.setContainer}\n            revertContainer={this.revertContainer}\n            saveContainer={this.saveContainer}\n            setSpecimen={this.setSpecimen}\n            revertSpecimen={this.revertSpecimen}\n            saveSpecimen={this.saveSpecimen}\n            addPreparation={this.addPreparation}\n            addAnalysis={this.addAnalysis}\n            setFiles={this.setFiles}\n            saveChildContainer={this.saveChildContainer}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            edit={this.edit}\n            close={this.close}\n            save={this.save}\n          />\n        );\n        break;\n      case 'filter':\n        display = (\n          <BiobankFilter\n            specimenFilter={this.state.specimenFilter}\n            specimenDataTable={this.state.specimenDataTable}\n            containerFilter={this.state.containerFilter}\n            containerDataTable={this.state.containerDataTable}\n            options={this.state.options}\n            errors={this.state.errors}\n            collapsed={this.state.collapsed}\n            editable={this.state.editable}\n            candidateId={this.state.candidateId}\n            sessionId={this.state.sessionId}\n            centerId={this.state.centerId}\n            list={this.state.list}\n            copyMultiplier={this.state.copyMultiplier}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            updateSpecimenFilter={this.updateSpecimenFilter}\n            updateContainerFilter={this.updateContainerFilter}\n            mapFormOptions={this.mapFormOptions}\n            edit={this.edit}\n            close={this.close}\n            toggleCollapse={this.toggleCollapse}\n            loadFilters={this.loadFilters}\n            loadOptions={this.loadOptions}\n            setCopyMultiplier={this.setCopyMultiplier}\n            setCandidateId={this.setCandidateId}\n            setCenterId={this.setCenterId}\n            setSessionId={this.setSessionId}\n            setContainerList={this.setContainerList}\n            setSpecimenList={this.setSpecimenList}\n            setContainerList={this.setContainerList}\n            addListItem={this.addListItem}\n            copyListItem={this.copyListItem}\n            removeListItem={this.removeListItem}\n            saveContainerList={this.saveContainerList}\n            saveSpecimenList={this.saveSpecimenList}\n          />\n        );\n    }\n\n    return (\n      <div className=\"biobank-page\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            {display}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n$(function() {\n  const request = `${loris.BaseURL}/biobank/ajax/requestData.php?`;\n  const submit = `${loris.BaseURL}/biobank/ajax/submitData.php?`;\n  const biobankIndex = (\n    <div className='page=biobank'>\n      <BiobankIndex\n        specimenFilterDataURL={`${loris.BaseURL}/biobank/?format=json`}\n        containerFilterDataURL={`${request}action=getContainerFilterData`}\n        specimenDataURL={`${request}action=getSpecimenData&barcode=`}\n        containerDataURL={`${request}action=getContainerData&barcode=`}\n        optionsURL={`${request}action=getFormOptions`}\n        saveContainerURL={`${submit}action=saveContainer`}\n        saveSpecimenURL={`${submit}action=saveSpecimen`}\n        saveContainerListURL={`${submit}action=saveContainerList`}\n        saveBarcodeListURL={`${submit}action=saveBarcodeList`}\n      />\n    </div>\n  );\n  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/biobankIndex.js","/**\n * This file contains the React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  render() {\n    return (\n        <div\n          className=\"loader\"\n          style={{width: this.props.size, height: this.props.size}}\n        />\n    );\n  }\n}\n\nLoader.propTypes = {size: React.PropTypes.int}\nLoader.defaultProps = {size: 120}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","import FilterForm from 'FilterForm';\nimport BiobankSpecimenForm from './specimenForm';\nimport PoolSpecimenForm from './poolSpecimenForm';\nimport BiobankContainerForm from './containerForm';\nimport {Tabs, TabPane} from 'Tabs';\nimport Modal from 'Modal';\nimport Loader from 'Loader';\n\nclass BiobankFilter extends React.Component {\n  constructor() {\n    super();\n\n    this.resetSpecimenFilters = this.resetSpecimenFilters.bind(this);\n    this.resetContainerFilters = this.resetContainerFilters.bind(this);\n    this.formatSpecimenColumns = this.formatSpecimenColumns.bind(this);\n    this.formatContainerColumns = this.formatContainerColumns.bind(this);\n  }\n\n  resetSpecimenFilters() {\n    this.refs.specimenFilter.clearFilter();\n  }\n  \n  resetContainerFilters() {\n    this.refs.containerFilter.clearFilter();\n  }\n\n  formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n    let row = {};\n    let barcode;\n\n    // Create the mapping between rowHeaders and rowData in a row object.\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    switch (column) {\n      case 'Barcode':\n        barcode = row['Barcode'];\n        return (\n          <td>\n            <a onClick={()=>{this.props.loadSpecimen(barcode)}} style={{cursor:'pointer'}}>\n              {cell}\n            </a>\n          </td>\n        );\n      case 'Parent Barcode':\n        barcode = row['Parent Barcode'];\n        return (\n          <td>\n            <a \n              onClick={()=>{this.props.loadSpecimen(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td> \n        );\n      case 'Container Barcode':\n        barcode = row['Container Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td>\n        );\n      case 'PSCID':\n        let pscidURL = loris.BaseURL + '/' + row['PSCID'];\n        return <td><a href={pscidURL}>{cell}</a></td>;\n      case 'Visit Label':\n        let visitLabelURL = loris.BaseURL+'/instrument_list/?candID='+row['PSCID']+\n          '&sessionID='+row['Visit Label'];\n        return <td><a href={visitLabelURL}>{cell}</a></td>;\n      case 'Status':\n        switch (cell) {\n          case 'Available':\n            return <td style={{color: 'green'}}>{cell}</td>;\n          case 'Reserved':\n            return <td style={{color: 'orange'}}>{cell}</td>\n          case 'Dispensed':\n            return <td style={{color: 'red'}}>{cell}</td>\n        }\n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  formatContainerColumns(column, cell, rowData, rowHeaders) {\n    // Create the mapping between rowHeaders and rowData in a row object.\n    let row = {};\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    let barcode;\n    switch (column) {\n      case 'Barcode':\n        barcode = row['Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td>\n        );\n      case 'Status':\n        switch (cell) {\n          case 'Available':\n            return <td style={{color: 'green'}}>{cell}</td>;\n          case 'Reserved':\n            return <td style={{color: 'orange'}}>{cell}</td>\n          case 'Dispensed':\n            return <td style={{color: 'red'}}>{cell}</td>\n        }\n      case 'Parent Barcode':\n        barcode = row['Parent Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td> \n        );\n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  render() {\n    let addSpecimenButton;\n    let poolSpecimenButton;\n    let addContainerButton;\n\n    /**\n     * Map Options for Form Select Elements of Specimen Form\n     */\n    let containerTypesPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesPrimary, 'label'\n    );\n    let containerStati = this.props.mapFormOptions(\n      this.props.options.containerStati, 'status'\n    );\n    let candidates = this.props.mapFormOptions(\n      this.props.options.candidates, 'pscid'\n    );\n    let sessions = this.props.mapFormOptions(\n      this.props.options.sessions, 'label'\n    );\n\n    addSpecimenButton = (\n      <div className='action' title='Add Specimen'>\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.addListItem('specimen').then(()=>{this.props.edit('specimenForm')});}}\n        >\n          +\n        </div>\n        <Modal\n          title='Add New Specimen'\n          show={this.props.editable.specimenForm}\n          closeModal={this.props.close}\n        >\n          <BiobankSpecimenForm\n            candidates={candidates}\n            sessions={sessions}\n            candidateId={this.props.candidateId}\n            centerId={this.props.centerId}\n            sessionId={this.props.sessionId}\n            specimenList={this.props.list}\n            errors={this.props.errors}\n            candidateSessions={this.props.options.candidateSessions}\n            sessionCenters={this.props.options.sessionCenters}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            collapsed={this.props.collapsed}\n            copyMultiplier={this.props.copyMultiplier}\n            mapFormOptions={this.props.mapFormOptions}\n            close={this.props.close}\n            toggleCollapse={this.props.toggleCollapse}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            setCopyMultiplier={this.props.setCopyMultiplier}\n            setCandidateId={this.props.setCandidateId}\n            setSessionId={this.props.setSessionId}\n            setSpecimenList={this.props.setSpecimenList}\n            setContainerList={this.props.setContainerList}\n            addListItem={this.props.addListItem}\n            copyListItem={this.props.copyListItem}\n            removeListItem={this.props.removeListItem}\n            saveSpecimenList={this.props.saveSpecimenList}\n          />\n        </Modal>\n      </div>\n    );\n\n    //TODO: turn the following into components to avoid duplication\n    //TODO: should there be a general search, or one for specimen and one for containers?\n    let barcodesPrimary = this.props.mapFormOptions(this.props.options.containersPrimary, 'barcode');\n    let searchSpecimenButton = (\n      <div className='action' title='Go To Specimen'>\n        <div className='action-button search' onClick={()=>{this.props.edit('searchSpecimen')}}>\n          <span className='glyphicon glyphicon-search'/>\n        </div>\n        <Modal\n          title='Go To Specimen'\n          show={this.props.editable.searchSpecimen}\n          closeModal={this.props.close}\n        >\n          <SearchableDropdown\n            name='barcode'\n            label='Barcode'\n            options={barcodesPrimary}\n            onUserInput={(name, value) => {\n              barcodesPrimary[value] &&\n              this.props.loadSpecimen(barcodesPrimary[value]).then(()=>this.props.close())\n            }}\n            placeHolder='Please Scan or Select Barcode'\n            autoFocus={true}\n          />\n        </Modal>\n      </div>\n    );\n\n    let barcodesNonPrimary = this.props.mapFormOptions(this.props.options.containersNonPrimary, 'barcode');\n    let searchContainerButton;\n    searchContainerButton = (\n      <div className='action' title='Go To Container'>\n        <div className='action-button search' onClick={()=>{this.props.edit('searchContainer')}}>\n          <span className='glyphicon glyphicon-search'/>\n        </div>\n        <Modal\n          title='Go To Barcode'\n          show={this.props.editable.searchContainer}\n          closeModal={this.props.close}\n        >\n          <SearchableDropdown\n            name='barcode'\n            label='Barcode'\n            options={barcodesNonPrimary}\n            onUserInput={(name, value) => {\n              barcodesNonPrimary[value] &&\n              this.props.loadContainer(barcodesNonPrimary[value]).then(()=>this.props.close())\n            }}\n            placeHolder='Please Scan or Select Barcode'\n            autoFocus={true}\n          />\n        </Modal>\n      </div>\n    );\n\n\n    poolSpecimenButton = (\n      <div className='action' title='Pool Specimens'>\n        <div className='action-button pool' onClick={()=>{this.props.edit('poolSpecimenForm')}}>\n          <span className='glyphicon glyphicon-resize-small'/>\n        </div>\n        <Modal\n          title='Pool Specimens'\n          show={this.props.editable.poolSpecimenForm}\n          closeModal={this.props.close}\n        >\n          <PoolSpecimenForm\n            specimenTypes={this.props.options.specimenTypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            specimenProtocols={this.props.options.specimenProtocols}\n            specimenProtocolAttributes={this.props.options.specimenProtocolAttributes}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            attributeOptions={this.props.options.attributeOptions}\n            capacities={this.props.options.capacities}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenUnits={this.props.options.specimenUnits}\n            candidates={candidates}\n            candidateSessions={this.props.options.candidateSessions}\n            sessionCenters={this.props.options.sessionCenters}\n            specimenRequest={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode`}\n            mapFormOptions={this.props.mapFormOptions}\n            saveSpecimen={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveSpecimen`}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n          />\n        </Modal>\n      </div>\n    );\n\n    let containerTypesNonPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesNonPrimary, 'label'\n    );\n\n    addContainerButton = (\n      <div\n        className='action'\n        title='Add Container'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.addListItem('container'); this.props.edit('containerForm');}}\n        >\n          <span>+</span>\n        </div>\n        <Modal\n          title='Add New Container'\n          show={this.props.editable.containerForm}\n          closeModal={this.props.close}\n        >\n          <BiobankContainerForm\n            centerId={this.props.centerId}\n            containerList={this.props.list}\n            errors={this.props.errors.list}\n            collapsed={this.props.collapsed}\n            copyMultiplier={this.props.copyMultiplier}\n            containerTypesNonPrimary={containerTypesNonPrimary}\n            centers={this.props.options.centers}\n            containerStati={containerStati}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n            close={this.props.close}\n            toggleCollapse={this.props.toggleCollapse}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            setCopyMultiplier={this.props.setCopyMultiplier}\n            setCenterId={this.props.setCenterId}\n            setContainerList={this.props.setContainerList}\n            addListItem={this.props.addListItem}\n            copyListItem={this.props.copyListItem}\n            removeListItem={this.props.removeListItem}\n            saveContainerList={this.props.saveContainerList}\n          />\n        </Modal>\n      </div>\n    ); \n    \n\n    let tabList = [\n      {id: \"specimens\", label: \"Specimens\"},\n      {id: \"containers\", label: \"Containers\"}\n    ];\n\n    return (\n      <div id='biobank-page'>\n        <Tabs tabs={tabList} defaultTab=\"specimens\" updateURL={true}>\n          <TabPane TabId={tabList[0].id}>\n            <div className='row' style={{marginTop:20}}>\n              <div className='col-lg-3' style={{marginTop: '10px'}}>\n                <div className='filter'>\n                  <FilterForm\n                    Module='biobank'\n                    ref='specimenFilter'\n                    formElements={this.props.specimenDataTable.form}\n                    onUpdate={this.props.updateSpecimenFilter}\n                    filter={this.props.specimenFilter}\n                  >\n                    <ButtonElement\n                      label=\"Clear Filters\"\n                      type=\"reset\" \n                      onUserInput={this.resetSpecimenFilters}\n                    />\n                    <div className='align-row'>\n                      <span className='action'>\n                        {searchSpecimenButton}\n                      </span>\n                      <span className='action'>\n                        {addSpecimenButton}\n                      </span>\n                      <span className='action'>\n                        {poolSpecimenButton}\n                      </span>\n                    </div>\n                  </FilterForm>\n                </div>\n              </div>\n              <div className='col-lg-9' style={{marginTop: '10px'}}>\n                <StaticDataTable\n                  Data={this.props.specimenDataTable.Data}\n                  Headers={this.props.specimenDataTable.Headers}\n                  Filter={this.props.specimenFilter}\n                  getFormattedCell={this.formatSpecimenColumns}\n                />\n              </div>\n            </div>\n          </TabPane>\n          <TabPane TabId={tabList[1].id}>\n            <div className='row'>\n              <div className='col-lg-3' style={{marginTop: '10px'}}>\n                <div className='filter'>\n                  <FilterForm\n                    Module='biobank' \n                    ref='containerFilter'\n                    formElements={this.props.containerDataTable.form}\n                    onUpdate={this.props.updateContainerFilter}\n                    filter={this.props.containerFilter}\n\t\t              >\n                    <ButtonElement\n                      label=\"Clear Filters\"\n                      type=\"reset\"\n                      onUserInput={this.resetContainerFilters}\n                    />\n                    <div className='align-row'>\n                      <span className='action'>\n                        {searchContainerButton}\n                      </span>\n                      <span className='action'>\n                        {addContainerButton}\n                      </span>\n                    </div>\n                  </FilterForm>\t\t\t\n                </div>\n              </div>\n              <div className='col-lg-9' style={{marginTop: '10px'}}>\n                <StaticDataTable\n                  Data={this.props.containerDataTable.Data}\n                  Headers={this.props.containerDataTable.Headers}\n                  Filter={this.props.containerFilter}\n                  getFormattedCell={this.formatContainerColumns}\n                />\n              </div>\n            </div>\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nBiobankFilter.propTypes = {\n  specimenFilter: React.PropTypes.object.isRequired,\n  specimenDataTable: React.PropTypes.object.isRequired,\n  containerFilter: React.PropTypes.object.isRequired,\n  containerDataTable: React.PropTypes.object.isRequired,\n  options: React.PropTypes.object.isRequired,\n  editable: React.PropTypes.object.isRequired,\n  loadContainer: React.PropTypes.func.isRequired,\n  loadSpecimen: React.PropTypes.func.isRequired,\n  loadTransfer: React.PropTypes.func.isRequired,\n  updateSpecimenFilter: React.PropTypes.func.isRequired,\n  updateContainerFilter: React.PropTypes.func.isRequired,\n  mapFormOptions: React.PropTypes.func.isRequired,\n  edit: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n}\n\nexport default BiobankFilter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/filter.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n    if (key) {\n      filter[key] = {};\n      if (value) {     // all defined/non-null values must have some length, else empty string\n        filter[key].value = Object.keys(value).length > 0 ? value : '';\n      } else {         // null and undefined handled here\n        filter[key].value = '';\n      }\n      filter[key].exactMatch = (type === \"SelectElement\");\n    } else if (filter && key && value === '') {\n      delete filter[key];\n    }\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure key is of string type and value is of string or object type\n    // before sending them to querystring\n    if (typeof fieldName !== 'string' ||\n        (typeof fieldValue !== 'string' && typeof fieldValue !== 'object')) {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <FormElement {...this.props}>\n        {formChildren}\n      </FormElement>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    let pencilGlyph;\n    if (this.props.edit) {\n      pencilGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-pencil\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.edit}\n        /> \n      );\n    } \n\n    let plusGlyph;\n    if (this.props.add) {\n      plusGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-plus\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.add}\n        />\n      );\n    }\n\n    let removeGlyph;\n    if (this.props.cancel) {\n      removeGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-remove\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.cancel}\n        />\n      );\n    }\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n      >\n        <span \n          className={glyphClass}\n          onClick={this.toggleCollapsed}\n          data-toggle=\"collapse\"\n          data-target={'#' + this.props.id}\n          style={{cursor: 'pointer'}}\n        />\n        {pencilGlyph}\n        {plusGlyph}\n        {removeGlyph}\n        {this.props.title}\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  edit: React.PropTypes.func,\n  add: React.PropTypes.func\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  render() {\n\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let specimenListArray = Object.keys(this.props.specimenList);\n    console.log(this.props.specimenList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of specimenListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.props.collapsed[key]}\n          toggleCollapse={this.props.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          container={this.props.specimenList[key].container || null}\n          specimen={this.props.specimenList[key].specimen || null}\n          errors={this.props.errors.list[key] || {}}\n          removeSpecimen={specimenListArray.length !== 1 ?\n            () => this.props.removeListItem(key) : null}\n          addSpecimen={i == specimenListArray.length ? () => {this.props.addListItem('specimen')} : null}\n          setCopyMultiplier={this.props.setCopyMultiplier}\n          copyMultiplier={this.props.copyMultiplier}\n          copySpecimen={i == specimenListArray.length && this.props.specimenList[key] ? \n            this.props.copyListItem : null}\n          setContainerList={this.props.setContainerList}\n          setSpecimenList={this.props.setSpecimenList}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimen}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimen}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.props.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.props.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.props.setCandidateId}\n            required={true}\n            value={this.props.candidateId}\n            placeHolder='Search for a PSCID'\n            errorMessage={this.props.errors.specimen.candidateId}\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.props.setSessionId}\n            required={true}\n            value={this.props.sessionId}\n            disabled={this.props.candidateId ? false : true}\n            errorMessage={this.props.errors.specimen.sessionId}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={this.props.saveSpecimenList}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nBiobankSpecimenForm.defaultProps = {\n};\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainerList(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimenList(name, value, this.props.barcodeKey);\n  }\n\n  copy() {\n    this.props.copySpecimen(this.props.barcodeKey);\n  }\n\n  render() {\n    let addSpecimenButton;\n    let addSpecimenText;\n    let copySpecimenButton;\n    let copySpecimenText;\n    if (this.props.addSpecimen) {\n      addSpecimenButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addSpecimen}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addSpecimenText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copySpecimen) {\n      copySpecimenButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copySpecimenText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeSpecimenButton;\n    if (this.props.removeSpecimen) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeSpecimenButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeSpecimen}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n                errorMessage={(this.props.errors.container||{}).barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => this.props.toggleCollapse(this.props.barcodeKey)}\n            />\n            {removeSpecimenButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n                errorMessage={(this.props.errors.specimen||{}).typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n                errorMessage={(this.props.errors.container||{}).typeId}\n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                errors={this.props.errors.specimen}\n                setSpecimen={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainer={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addSpecimenButton}\n              {addSpecimenText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copySpecimenButton}\n              {copySpecimenText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n};\n\nSpecimenBarcodeForm.defaultProps = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import CustomFields from './customFields'\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.setCollection = this.setCollection.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollection(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimen('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimen('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollection('data', data);\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = (\n            <CustomFields\n              object={this.props.specimen.collection.data}\n              fields={specimenTypeFieldsObject}\n              errors={this.props.errors.data}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n            errorMessage={this.props.errors.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n            errorMessage={this.props.errors.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.date}\n            errorMessage={this.props.errors.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.time}\n            errorMessage={this.props.errors.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollection}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n            errorMessage={this.props.errors.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimen: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nSpecimenCollectionForm.defaultProps = {\n  errors: {}\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Custom Attribute Fields\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\nclass CustomFields extends React.Component {\n  render() {\n    let fields = this.props.fields;\n    let attributeFields = Object.keys(fields).map(attribute => {\n\n      let datatype = this.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n      if (datatype === 'text' || datatype === 'number') {\n        if (fields[attribute]['refTableId'] === null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n\n        if (fields[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              options={this.props.attributeOptions[fields[attribute]['refTableId']]}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === 'datetime') {\n        return (\n          <DataElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.object[attribute]}\n          />\n        );\n      }\n\n      // Do not present the possibility of uploading if file is already set\n      // File must instead be deleted or overwritten.\n      if (datatype === 'file' && !(this.props.data||{})[attribute]) {\n        return (\n          <FileElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.files[this.props.object[attribute]]}\n          />\n        );\n      }\n    });\n\n    return (\n      <div>\n        {attributeFields}\n      </div>\n    );\n  }\n}\n\nCustomFields.propTypes = {\n  fields: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  object: React.PropTypes.object.isRequired,\n  setData: React.PropTypes.func.isRequired,\n}\n\nexport default CustomFields;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/customFields.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n  }\n\n  setContainer(name, value) {\n    let container = this.props.containersNonPrimary[this.props.container.parentContainerId];\n    this.props.setContainer(name, value);\n    this.props.setContainer('coordinate', null);\n    this.props.setContainer('temperature', container.temperature);\n    this.props.setContainer('centerId', container.centerId);\n    this.props.setContainer('statusId', container.statusId);\n  }\n\n  recursive(object, id) {\n    for (let key in this.props.containersNonPrimary) {\n      if (id == this.props.containersNonPrimary[key].parentContainerId) {\n        object = this.recursive(object, key);\n        delete object[key];\n      }\n    }\n    return object;\n  }\n\n  render() {\n    let containerDisplay;\n\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    if (this.props.data) {\n      containerBarcodesNonPrimary = this.recursive(containerBarcodesNonPrimary, this.props.data.container.id);\n      delete containerBarcodesNonPrimary[this.props.data.container.id];\n    }\n\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.setContainer}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions={\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates={\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes={this.props.containerTypes}\n            containerStati={this.props.containerStati} \n            select={true}\n            selectedCoordinate={this.props.container.coordinate}\n            setContainer={this.props.setContainer}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","import Modal from 'Modal'\n\n/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      coordinate: null,\n    }\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n    this.loadContainer = this.loadContainer.bind(this);\n    this.checkoutContainers = this.checkoutContainers.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let load = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary == 1 ? this.props.loadSpecimen : this.props.loadContainer;\n\n      load(this.props.children[this.props.coordinates[coordinate]].barcode);\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    let node = e.target;\n    this.props.saveChildContainer(container).then(()=>{\n      this.setState({coordinate: node.id});\n    });\n  }\n\n  increaseCoordinate() {\n    return new Promise((resolve, reject) => {\n      let coordinate = this.props.coordinate;\n      coordinate++;\n      for (let c in this.props.coordinates) {\n        if (c == coordinate) {\n          this.props.close();\n          reject();\n        }\n      }\n      this.props.setCoordinate(coordinate);\n      resolve();\n    });\n  }\n\n  loadContainer(name, value) {\n    if (value) {\n      let containerId = value;\n      let container = this.props.containers[containerId];\n      container.parentContainerId = this.props.container.id;\n      container.coordinate = this.props.coordinate;\n\n      this.props.saveChildContainer(container).then(() => {\n        let node = document.getElementById(container.coordinate);\n        this.setState({coordinate: node.id});\n        if (this.props.sequential) {\n          this.increaseCoordinate().then(() => {this.props.edit('barcode')});\n        } else {\n          this.props.close();\n        }\n      });\n    }\n  }\n\n  //TODO: this is the same as the containerList in the container form\n  //These functions should be combined in biobankIndex.js\n  checkoutContainers() {\n    return new Promise(() => {\n      let checkoutList = this.props.checkoutList;\n      for (let coordinate in checkoutList) {\n        checkoutList[coordinate].parentContainerId = null;\n        checkoutList[coordinate].coordinate = null;\n        this.props.saveChildContainer(checkoutList[coordinate]);\n      }\n    });\n  }\n\n  render() {\n  let barcodeField;\n  if ((this.props.editable||{}).barcode) {\n    barcodeField = (\n      <SearchableDropdown\n        name='barcode'\n        label='Barcode'\n        options={this.props.barcodes}\n        onUserInput={this.loadContainer}\n        placeHolder='Please Scan or Select Barcode'\n        autoFocus={true}\n      />\n    );\n  }\n  \n  let load = (\n    <div className={((this.props.editable||{}).barcode) ? 'open' : 'closed'}>\n      <FormElement>\n        <StaticElement\n          label='Note'\n          text='Select or Scan Containers to be Loaded. If Sequential is Checked,\n           the Coordinate will Auto-Increment after each Load.'\n        />\n        <CheckboxElement\n          name='sequential'\n          label='Sequential'\n          value={this.props.sequential}\n          onUserInput={this.props.setSequential}\n        />\n        {barcodeField}\n        <ButtonElement\n          label='Done'\n          onUserInput={this.props.close}\n        />\n      </FormElement>\n    </div>\n  );\n\n  if ((this.props.editable||{}).containerCheckout) {\n    let barcodes = this.props.mapFormOptions(this.props.children, 'barcode');\n    barcodeField = (\n      <SearchableDropdown\n        name='barcode'\n        label='Barcode'\n        options={barcodes}\n        onUserInput={(name, value)=>this.props.setCheckoutList(this.props.children[value])}\n        placeHolder='Please Scan or Select Barcode'\n        autoFocus={true}\n      />\n    );\n  }\n\n  let checkout = (\n    <div className={((this.props.editable||{}).containerCheckout) ? 'open' : 'closed'}>\n      <FormElement>\n        <StaticElement\n          label='Note'\n          text=\"Click, Select or Scan Containers to be Unloaded and Press 'Confirm'\"\n        />\n        {barcodeField}\n        <ButtonElement\n          label='Confirm'\n          onUserInput={()=>{this.checkoutContainers(); this.props.close();}}\n        />\n        <StaticElement\n          text={<a onClick={this.props.close} style={{cursor: 'pointer'}}>Cancel</a>}\n        />\n      </FormElement>\n    </div>\n\n  );\n\n  //TODO: This will eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  let coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let title = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = this.redirectURL;\n\n        if (!this.props.select) {\n          if ((this.props.coordinates||{})[coordinate]) {\n            if (coordinate in this.props.checkoutList) {\n              nodeClass = 'node checkout';\n            } else if (coordinate == this.state.coordinate) {\n              nodeClass = 'node new';\n            } else {\n              nodeClass = 'node occupied'\n            }\n            dataHtml = 'true';\n            dataToggle = 'tooltip';\n            dataPlacement = 'top';\n            //tooltipTitle = \n            //  '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //  '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //  '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            draggable = this.props.editable.barcode ? 'false' : 'true';\n            onDragStart = this.drag;\n            onDragOver = null;\n            onDrop = null;\n            if (this.props.editable.containerCheckout) {\n              onClick = (e)=>{\n                let container = this.props.containers[this.props.coordinates[e.target.id]];\n                this.props.setCheckoutList(container)\n              };\n            }\n            if (this.props.editable.barcode) {\n              onClick = null;\n            }\n          } else if (!this.props.editable.containerCheckout) {\n            nodeClass = coordinate == this.props.coordinate ?\n              'node selected' : 'node load';\n            title = 'Load...';\n            onClick = (e) => {this.props.setCoordinate(e.target.id); this.props.edit('barcode');};\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n              onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            title={title}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div className='row' style={rowStyle}>{column}</div>\n      );\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div>\n        <div style={{width: 500}}>\n          {checkout}\n          {load}\n        </div>\n        <div className='display'>\n          {display}\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    if (this.props.throwWarning) {                                              \n      swal({                                                                    \n        title: \"Are You Sure?\",                                                 \n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",                                                        \n        showCancelButton: true,                                                 \n        confirmButtonText: 'Proceed',                                           \n        cancelButtonText: 'Cancel',                                             \n      },                                                                        \n      () => {                                                              \n        this.props.closeModal();                                                        \n      });                                                            \n    } else {                                                                    \n      this.props.closeModal();\n    }                                                                           \n  }   \n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 850,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '50px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.closeModal}>\n          <div style={modalStyle} onClick={e => {e.stopPropagation()}}>\n            <div style={titleStyle}>\n              {this.props.title}\n              <span style={glyphStyle} onClick={this.closeModal}>\n                ×\n              </span>\n            </div>\n            <div style={bodyStyle}>\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nModal.defaultProps = {\n  throwWarning: true,\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","import BiobankSpecimenForm from './specimenForm';\nimport SpecimenPreparationForm from './preparationForm';\n\n/**\n * Biobank Pool Specimen Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\nclass PoolSpecimenForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formData: {},\n      barcodeList: {},\n      errorMessage: null,\n      formErrors: {},\n      barcodeCount: 2,\n      preparation: false,\n      step: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.setPreparationFormData = this.setPreparationFormData.bind(this);\n    this.setSpecimenFormData = this.setSpecimenFormData.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.setBarcodeCount = this.setBarcodeCount.bind(this);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.addPreparation = this.addPreparation.bind(this);\n    this.removePreparation = this.removePreparation.bind(this);\n    this.validate = this.validate.bind(this);\n    this.formSwitch = this.formSwitch.bind(this);\n    this.preparationSwitch = this.preparationSwitch.bind(this);\n    this.runAjax = this.runAjax.bind(this);\n  }\n\n  next() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          step: this.state.step+1\n        });\n      }, \n      error => {\n        swal(\"Oops!\", error.responseText, \"error\");\n      }\n    );\n  }\n\n  previous() {\n    this.setState({\n      step: this.state.step-1\n    });\n  }\n\n  validate() {\n    return this.runAjax(this.props.specimenRequest, {barcodeList: this.state.barcodeList});\n  }\n\n  runAjax(url, inputData) {\n    return new Promise((resolve, reject) => {\n      $.ajax(url, {\n        method: \"GET\",\n        dataType: 'json',\n        data: inputData,\n        success: function(data) {\n          resolve(data);\n        }.bind(this),\n        error: function(error, textStatus, errorThrown) {\n          reject(error);\n          console.error(error);\n        }\n      });  \n    })\n  }\n\n  setBarcodeCount(field, value) {\n    let barcodeCount = value;\n    let barcodeList = this.state.barcodeList;\n    for (let barcode in barcodeList) {\n      if (barcode > barcodeCount) {\n        delete barcodeList[barcode];\n      }\n    }\n\n    this.setState({barcodeCount, barcodeList});\n  }\n\n  formSwitch(inputForm, specimenForm) {\n    switch(this.state.step) {\n      case 1:\n        return inputForm;\n      case 2:\n        return specimenForm;\n    }\n  }\n\n  preparationSwitch(preparationButton, preparationForm) {\n    switch(this.state.preparation) {\n      case false:\n        return preparationButton;\n      case true:\n        return preparationForm;\n    }\n  }\n\n  addPreparation() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          preparation: true\n        });\n      },\n      error => {\n        swal('Oh no!', error.responseText, 'error');\n      }\n    );\n  }\n\n  removePreparation() {\n    let formData = this.state.formData;\n    //TODO: is it better to set it to empty, or delete it?\n    formData.preparationForm = {};\n    this.setState({\n      preparation: false,\n      formData\n    });\n  }\n\n  render() {\n    //Generates barcodes\n    let barcodes = [];\n    for (let i=1; i<=this.state.barcodeCount; i++) {\n      barcodes.push(\n        <TextboxElement\n          name={i}\n          label={'Barcode ' + i}\n          onUserInput={this.setFormData}\n          required={true}\n          value={this.state.barcodeList[i]}\n          errorMessage={this.state.formErrors[i]}\n        />\n      )\n    }\n    \n    let preparationButton = ( \n      <div className='row'>\n        <div className='col-xs-4'/>\n        <div className='col-xs 4 action'>\n            <span className='action'>\n            <div \n              className='action-button add'\n              onClick={this.addPreparation}\n            >\n              +\n            </div>\n            </span>\n            <div className='action-title'>\n              Add Preparation\n            </div>\n        </div>\n      </div>\n    );\n\n    let preparationForm;\n    if (this.state.poolData) {\n\n      const specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId]\n \n      let specimenProtocols = {};\n      for (let id in specimenProtocolAttributes) {\n        specimenProtocols[id] = this.props.specimenProtocols[id];\n      }\n      specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\n      preparationForm = (\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <SpecimenPreparationForm\n              formData={this.state.formData.preparationForm}\n              specimenProtocols={specimenProtocols}\n              specimenProtocolAttributes={specimenProtocolAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              setParentFormData={this.setPreparationFormData}\n              insertAction={`${loris.BaseURL}/biobank/ajax/submitData.php?action=insertSpecimenPreparation`}\n            />\n            <a className='pull-right' style={{cursor:'pointer'}} onClick={this.removePreparation}>Cancel Preparation</a>\n          </div>\n        </div>\n      );\n    }\n\n    let inputForm = (\n      <div>\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <StaticElement\n              label='Pooling Note'\n              text='Select or Scan the specimens to be pooled. Please ensure that they\n                    are the same type, and share the same PSCID and Visit Label'\n            />\n            <NumericElement\n              label='№ of Specimens'\n              min='2'\n              max='100'\n              value={this.state.barcodeCount}\n              onUserInput={this.setBarcodeCount}\n            />\n            {barcodes}\n          </div>\n        </div>\n        {this.preparationSwitch(preparationButton, preparationForm)}\n        <div className='col-sm-3 col-xs-offset-9 action'>\n          <div className='action-title'>\n            Next\n          </div>\n          <span className='action'>\n            <div \n              className='action-button update'\n              onClick={this.next}\n            >\n              <span className='glyphicon glyphicon-chevron-right'/>\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n\n    //TODO: Things here need to be in the proper order!!!\n    let specimenForm;\n    if (this.state.poolData) {\n\n      // This is to provide the options for the output specimens\n      let specimenTypes = {};\n      if (this.state.poolData.typeId) {\n        specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n      }\n  \n      let pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n      let visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\n      let barcodesArray = Object.values(this.state.barcodeList); \n      let barcodesString = barcodesArray.join(', ');  \n\n      // TODO: rather than all specimen units this should really be specific to the\n      // type\n      let specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\n      specimenForm = (\n        <div className='row'>\n          <div className='col-xs-12'>\n            <BiobankSpecimenForm\n              formData={this.state.formData.specimenForm}\n              candidateId={this.state.poolData.candidateId}\n              pscid={pscid}\n              sessionId={this.state.poolData.sessionId}\n              visit={visit}\n              parentSpecimenBarcodes={barcodesString}\n              parentSpecimenIds={this.state.poolData.specimenIds}\n              specimenTypes={specimenTypes}\n              specimenTypeUnits={this.props.specimenTypeUnits}\n              specimenUnits={specimenUnits}\n              containerTypesPrimary={this.props.containerTypesPrimary}\n              containersNonPrimary={this.props.containersNonPrimary}\n              specimenTypeAttributes={this.props.specimenTypeAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              capacities={this.props.capacities}\n              containerDimensions={this.props.containerDimensions}\n              containerCoordinates={this.props.containerCoordinates}\n              setParentFormData={this.setSpecimenFormData}\n              action={`${loris.BaseURL}/biobank/ajax/submitData.php?action=submitSpecimen`}\n              refreshParent={this.props.refreshParent}\n            />\n            <ButtonElement\n              label='Submit'\n            />\n          </div>\n          <div className='col-sm-3 col-xs-offset-2 action'>\n            <span className='action'>\n              <div \n                className='action-button update'\n                onClick={this.previous}\n              >\n                <span className='glyphicon glyphicon-chevron-left'/>\n              </div>\n            </span>\n            <div className='action-title'>\n              Previous\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"poolSpecimenForm\"\n        id='poolSpecimenForm'\n        onSubmit={this.handleSubmit}\n        ref=\"form\"\n      >\n        {this.formSwitch(inputForm, specimenForm)}\n      </FormElement>\n    );\n  }\n\n/** *******************************************************************************\n *                      ******     Helper methods     *******\n *********************************************************************************/\n\n\n  validateForm(formElement, value) {\n    let formErrors = this.state.formErrors;\n\n    //validate barcode regex\n    if (formElement === \"barcode\" && value !== \"\") {\n      if (!(/^hello/.test(this.state.formData.barcode))) {\n        formErrors.barcode = true;\n      } else {\n        formErrors.barcode = false;\n      }\n    }\n\n    //validate that quantity is a number and less than capacity\n    if (formElement === \"quantity\" && value !== \"\") {\n      if (isNaN(value) || (value > this.props.capacities[this.state.currentContainerType])) {\n        formErrors.quantity = true;\n      } else {\n        formErrors.quantity = false;\n      }\n    }\n\n    //validate datatypes and regex of generated type attributes\n    let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n    let specimenTypeFields = Object.keys(specimenTypeFieldsObject).map((attribute) => {\n\n      let datatype = this.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"number\") {\n        if (formElement === attribute) {\n          if (isNaN(value) && value !== \"\") {\n            formErrors[attribute] = true;\n          } else {\n            formErrors[attribute] = false;\n          }\n        }\n      }\n    })\n\n    this.setState({\n      formErrors: formErrors\n    });\n  }\n\n\n  /**\n   * Handle form submission\n   * @param {object} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.submitForm();\n  }\n\n  /*\n   * Uploads the file to the server\n   */\n  submitForm() {\n    // Set form data and specimen the biobank file\n    let formData = this.state.formData;\n    let preparationForm = this.state.formData.preparationForm;\n    let specimenForm = this.state.formData.specimenForm;\n    formData['preparationForm'] = JSON.stringify(preparationForm);\n    formData['specimenForm'] = JSON.stringify(specimenForm);\n\n    console.log(formData.specimenForm);\n    console.log(formData.preparationForm);\n\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        let xhr = new window.XMLHttpRequest();\n        return xhr;\n      }.bind(this),\n      success: function() {\n        //this.props.refreshParent();\n        swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n        this.props.onSuccess();\n      }.bind(this),\n      error: function(err) {\n        console.error(err);\n        let msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n        this.setState({\n          errorMessage: msg,\n        });\n        swal(msg, \"\", \"error\");\n      }.bind(this)\n    });\n  }\n\n  /**\n   * Checks if the inputted file name is valid\n   *\n   * @param {string} requiredFileName - Required file name\n   * @param {string} fileName - Provided file name\n   * @return {boolean} - true if fileName starts with requiredFileName, false\n   *   otherwise\n   */\n//  isValidFileName(requiredFileName, fileName) {\n//    if (fileName === null || requiredFileName === null) {\n//      return false;\n//    }\n//\n//    return (fileName.indexOf(requiredFileName) === 0);\n//  }\n\n  /**\n   * Validate the form\n   *\n   * @param {object} formRefs - Object containing references to React form elements\n   * @param {object} formData - Object containing form data inputed by user\n   * @return {boolean} - true if all required fields are filled, false otherwise\n   */\n  isValidForm(formRefs, formData) {\n    let isValidForm = true;\n\n    let requiredFields = {\n      pscid: null,\n      visitLabel: null,\n    };\n\n    Object.keys(requiredFields).map(function(field) {\n      if (formData[field]) {\n        requiredFields[field] = formData[field];\n      } else if (formRefs[field]) {\n        formRefs[field].props.hasError = true;\n        isValidForm = false;\n      }\n    });\n    this.forceUpdate();\n\n    return isValidForm;\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    // This lets the modal window know that there is formData\n    // and will cause a warning to be thrown of the modal window\n    // is exited\n    this.props.onChange instanceof Function && this.props.onChange();\n  \n    if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n      this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n    }\n\n    let formData = this.state.formData;\n    let barcodeList = this.state.barcodeList;\n \n    //TODO: there must be a better way to do this\n    if (isNaN(formElement)) {\n      formData[formElement] = value;\n    } else {\n      barcodeList[formElement] = value;\n    }\n\n    this.setState({\n      formData,\n      barcodeList\n    });\n  }\n\n  setPreparationFormData(preparationFormData) {\n    let formData = this.state.formData;\n    formData.preparationForm = preparationFormData;\n    \n    this.setState({formData});\n  }\n\n  setSpecimenFormData(specimenFormData) {\n    let formData = this.state.formData;\n    formData.specimenForm = specimenFormData;\n  \n    this.setState({formData});\n  }\n}\n\nPoolSpecimenForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  action: React.PropTypes.string.isRequired,\n  refreshTable: React.PropTypes.func\n};\n\nexport default PoolSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/poolSpecimenForm.js","import CustomFields from './customFields';\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = (\n            <CustomFields\n              fields={specimenProtocolFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.preparation.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainerForm extends React.Component {\n\n  render() {\n    //Generates new Barcode Form everytime the addContainer button is pressed\n    let containerListArray = Object.keys(this.props.containerList);\n    let containers = [];\n    let i = 1;\n    for (let key of containerListArray) {\n      containers.push(\n        <ContainerBarcodeForm\n          key={key}\n          containerKey={key}\n          id={i}\n          container={this.props.containerList[key] || null}\n          errors={(this.props.errors[key]||{}).container || {}}\n          collapsed={this.props.collapsed[key]}\n          containerTypesNonPrimary={this.props.containerTypesNonPrimary}\n          containerBarcodesNonPrimary={this.props.containerBarcodesNonPrimary}\n          removeContainer={containerListArray.length !== 1 ? () => {this.props.removeListItem(key)} : null}\n          addContainer={i == containerListArray.length ? () => {this.props.addListItem('container')} : null}\n          setCopyMultiplier={this.props.setCopyMultiplier}\n          copyMultiplier={this.props.copyMultiplier}\n          copyContainer={i == containerListArray.length && this.props.containerList[key] ? this.props.copyListItem : null}\n          setContainerList={this.props.setContainerList}\n          toggleCollapse={this.props.toggleCollapse}\n        />\n      );\n     \n      i++;\n    }\n\n    return (\n      <FormElement\n        name=\"containerForm\"\n        onSubmit={this.props.saveContainerList}\n        ref=\"form\"\n      >\n        <br/>\n        <div className=\"row\">\n          <div className=\"col-xs-11\">\n            <SelectElement\n              name=\"centerId\"\n              label=\"Site\"\n              options={this.props.centers}\n              onUserInput={this.props.setCenterId}\n              required={true}\n              value={this.props.centerId}\n              errorMessage={(this.props.errors.container||{}).centerId}\n            />\n          </div>\n        </div>\n        {containers}\n          <div className=\"col-xs-3 col-xs-offset-9\">\n            <ButtonElement label=\"Submit\"/>\n          </div>\n      </FormElement>\n    );\n  }\n}\n\nBiobankContainerForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  barcode: React.PropTypes.string,\n  refreshTable: React.PropTypes.func\n};\n\n\n/**\n * Container Barcode Form\n *\n * Acts a subform for ContainerForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\nclass ContainerBarcodeForm extends React.Component {\n  constructor() {\n    super();\n   \n    this.setContainer = this.setContainer.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  copy() {\n    this.props.copyContainer(this.props.containerKey);\n  }\n\n  //TODO: change form.js so this isn't necessary\n  setContainer(name, value) {\n    this.props.setContainerList(name, value, this.props.containerKey);\n  }\n\n  render() {\n    // HR TODO: All this CSS should eventually be moved\n    let addContainerButton;\n    let addContainerText;\n    let copyContainerButton;\n    let copyContainerText;\n    if (this.props.addContainer) {\n      addContainerButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addContainer}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addContainerText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }   \n    \n    if (this.props.copyContainer) {\n      copyContainerButton = ( \n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >   \n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );  \n      copyContainerText = ( \n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />  \n          Copies\n        </span>\n      );  \n    }   \n\n    let removeContainerButton;\n    if (this.props.removeContainer) {\n      const glyphStyle = { \n        color: '#DDDDDD',\n        marginLeft: 10, \n        cursor: 'pointer',\n        fontSize: 15\n      }   \n\n      removeContainerButton = ( \n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeContainer}\n          style={glyphStyle}\n        />\n      );  \n    }\n\n    return (\n      <FormElement\n        name='container'\n      >\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div>\n            <TextboxElement\n              name='barcode'\n              label={'Barcode ' + this.props.id}\n              onUserInput={this.setContainer}\n              ref='barcode'\n              required={true}\n              value={this.props.container.barcode}\n              errorMessage={this.props.errors.barcode}\n            />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span\n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse'\n              data-target={'#item-' + this.props.containerKey}\n              onClick={() => this.props.toggleCollapse(this.props.containerKey)}\n            />\n            {removeContainerButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-9'>\n            <div id={'item-' + this.props.containerKey} className='collapse'>\n              <SelectElement\n                name='typeId'\n                label='Container Type'\n                options={this.props.containerTypesNonPrimary}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.typeId}\n                errorMessage={this.props.errors.typeId}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-3'/>\n            <div className='col-xs-4 action'>\n              {addContainerButton}\n              {addContainerText}\n            </div>\n            <div className='col-xs-4 action'>\n              {copyContainerButton}\n              {copyContainerText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nContainerBarcodeForm.propTypes = {\n}\n\nexport default BiobankContainerForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerForm.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/**\n * Allows to dynamically render vertical tabs corresponding to tab panes.\n */\n\nclass VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <div className=\"tabbable col-md-3 col-sm-3\">\n          <ul className=\"nav nav-pills nav-stacked\" role=\"tablist\" style={tabStyle}>\n            {tabs}\n          </ul>\n        </div>\n        <div className=\"tab-content col-md-9 col-sm-9\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nVerticalTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nVerticalTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nexport {\n  Tabs,\n  VerticalTabs,\n  TabPane\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/* exported RBiobankSpecimen */\n\nimport Modal from 'Modal';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n\n  render() {\n\n    //Map Options for Form Select Elements\n    let specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n    let containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n    let candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n    let sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\n    let addAliquotForm = (\n      <div\n        className='action'\n        title='Make Aliquots'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('aliquotForm')}}\n        >\n          <span>+</span>  \n        </div>\n        <Modal\n          title=\"Add Aliquots\"\n          closeModal={this.props.close}\n          show={this.props.editable.aliquotForm}\n        >\n          <BiobankSpecimenForm\n            data={this.props.data}\n            specimen={this.props.specimen}\n            setSpecimen={this.props.setSpecimen}\n            saveSpecimen={this.props.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            close={this.props.close}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.props.editable.collection) {\n      let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.props.options.specimenTypeUnits}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    } else {\n      let specimenTypeAttributes;\n      //loops through data object to produce static elements\n      if (this.props.data.specimen.collection.data) {\n        let collectionData = this.props.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(collectionData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenTypeAttributes[this.props.data.specimen.typeId][key].name}\n              text={collectionData[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.props.data.specimen.collection.quantity+' '+\n              this.props.options.specimenUnits[\n                this.props.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.collection.centerId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel specimen-panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.props.editable.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.props.editable.collection ? null : () => {this.props.edit('collection')}}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.props.options.specimenProtocols) {\n      if (this.props.options.specimenProtocols[id].typeId == this.props.data.specimen.typeId) {\n        specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.props.editable.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation does Exist and the form is not in an edit state\n    if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      if (this.props.data.specimen.preparation.data) {\n        let preparationData = this.props.data.specimen.preparation.data;\n        specimenProtocolAttributes = Object.keys(preparationData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenProtocolAttributes[this.props.data.specimen.preparation.protocolId][key].name}\n              text={preparationData[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.preparation.centerId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      preparationPanel = (\n        <div\n          className='panel specimen-panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('preparation'); this.props.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n      preparationPanel = (\n        <div className='panel specimen-panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.preparation ? null : () => {this.props.edit('preparation')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.props.options.specimenMethods) {\n      if (this.props.options.specimenMethods[id].typeId == this.props.data.specimen.typeId) {\n        specimenMethods[id] = this.props.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.props.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.props.editable.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          files={this.props.files}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          setFiles={this.props.setFiles}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      //TODO: Make the below a separate component\n      if (this.props.data.specimen.analysis.data) {\n      let analysisData = this.props.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.keys(analysisData).map((key) => {\n          if (this.props.options.attributeDatatypes[\n            this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].datatypeId\n          ].datatype === 'file') {\n            return (\n              <LinkElement\n               label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n               text={analysisData[key]}\n               href={loris.BaseURL+'/biobank/ajax/requestData.php?action=downloadFile&file='+analysisData[key]}\n               target={'_blank'}\n               download={analysisData[key]}\n              />\n            );\n          } else {\n            return ( \n              <StaticElement\n                label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n                text={analysisData[key]}\n              />\n            );\n          }\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.analysis.centerId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel specimen-panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('analysis'); this.props.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n      analysisPanel = (\n        <div className='panel specimen-panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.analysis ? null : () => {this.props.edit('analysis')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.props.specimen}\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        errors={this.props.errors}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        setSpecimen={this.props.setSpecimen}\n        saveSpecimen={this.props.saveSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );\n\n    //TODO: this can maybe become its own component...?\n    let returnToFilter = (\n      <div>\n        <br/>\n        <span className='action'>\n          <div\n            className='action-button update'\n            onClick={this.props.loadFilters}\n          >\n            <span className='glyphicon glyphicon-chevron-left'/>\n          </div>\n        </span>\n        <div className='action-title'>\n          Return to Filter\n        </div>\n      </div>\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.props.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.props.data.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            specimen={this.props.data.specimen}\n            centers={this.props.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n        {returnToFilter}\n      </div>\n    ); \n  }\n}\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","import Modal from 'Modal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport CenterField from './centerField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.editable.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.edit('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                specimen={this.props.specimen}\n                errors={this.props.errors.specimen}\n                units={units}\n                close={this.props.close}\n                setSpecimen={this.props.setSpecimen}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if (this.props.data.specimen && this.props.options.specimenTypes[\n      this.props.data.specimen.typeId\n    ].freezeThaw == 1) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.editable.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => {this.props.edit('temperature')}}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              container={this.props.container}                                  \n              errors={this.props.errors.container}\n              close={this.props.close}                     \n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.editable.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              container={this.props.container}                                  \n              errors={this.props.errors.container}\n              stati={stati}\n              close={this.props.close}\n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let centerField;                                                           \n    if (!this.props.editable.center) {                                        \n      centerField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.centerId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('center')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      centerField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <CenterField                                                      \n              container={this.props.container}\n              errors={this.props.errors.container}\n              centers={this.props.options.centers}\n              close={this.props.close}                        \n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let barcode = this.props.data.parentSpecimenContainer.barcode;\n      let parentSpecimenFieldValue = (\n        <a style={{cursor: 'pointer'}} onClick={()=>this.props.loadSpecimen(barcode)}>\n          {barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a style={{cursor:'pointer'}} onClick={()=>this.props.loadContainer(barcode)}>\n            {barcode}\n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <span                                                               \n            className='action-button update'                                  \n            onClick={() => {this.props.edit('containerParentForm')}}\n          >                                                                   \n            <span className='glyphicon glyphicon-chevron-right'/>             \n          </span>                                                             \n          <Modal                                                              \n            title='Update Parent Container'                                       \n            closeModal={this.props.close}\n            show={this.props.editable.containerParentForm}\n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainer={this.props.setContainer}                            \n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </Modal>                                                            \n        </div>                                                                \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {centerField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}>\n          <TextboxElement\n            name='quantity'\n            inputClass='col-xs-11'\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.quantity}\n            errorMessage={this.props.errors.quantity}\n          />\n        </div>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}>\n          <SelectElement\n            name='unitId'\n            inputClass='col-xs-11'\n            options={this.props.units}\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.unitId}\n            errorMessage={this.props.errors.unitId}\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}>\n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveSpecimen}\n            columnSize= 'col-xs-11'\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}>\n          <a onClick={this.props.close} style={{cursor: 'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimen: React.PropTypes.func,\n  close: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex:'1 0 25%', minWidth: '90px'}}> \n            <TextboxElement\n              name='temperature'\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.temperature}\n              errorMessage={this.props.errors.temperature}\n            />  \n        </div>\n        <div style={{flex:'0 1 15%', margin: '0 1%'}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-11'\n          />\n        </div>\n        <div style={{flex:'0 1 15%', margin: '0 1%'}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.statusId}\n              errorMessage={this.props.errors.statusId}\n            />  \n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <ButtonElement\n            label='Update'\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-11'\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Center Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass CenterField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}> \n            <SelectElement\n              name='centerId'\n              options={this.props.centers}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.centerId}\n              errorMessage={this.props.errors.centerId}\n            />  \n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-11'\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nCenterField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default CenterField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/centerField.js","import CustomFields from './customFields';\n\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    if (value instanceof File) {\n      data[name] = value.name;\n      this.props.setFiles(name, value);\n    } else {\n      data[name] = value;\n      this.setAnalysis('data', data);\n    }\n  }\n\n  render() {\n    let submitButton;\n    submitButton = this.props.data.specimen.analysis ? <ButtonElement label=\"Update\"/>\n      : <ButtonElement label=\"Submit\"/>;\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = (\n            <CustomFields\n              fields={specimenMethodFieldsObject}\n              files={this.props.files}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.analysis.data}\n              data={(((this.props.data||{}).specimen||{}).analysis||{}).data}\n              setData={this.setData}\n            />\n          );  \n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        fileUpload={true}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\n//TODO: revise this component once Shipments are enabled.\nclass LifeCycle extends React.Component {\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n      });\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n    // Create Collection Node\n    let collectionNode;\n    if ((this.props.specimen||{}).collection || this.props.container) {\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    // Create Preparation Node\n    let preparationNode;\n    if ((this.props.specimen||{}).preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    // Create Analysis Node\n    let analysisNode;\n    if ((this.props.specimen||{}).analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'>\n             <div className='letter'>A</div>\n           </div>\n        </div>\n      );\n    }\n\n    // Create Lines\n    let line;\n    let nodes = 0;\n    for (let i in this.props.specimen) {\n      if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n        nodes++;\n      }\n    }\n    let lineWidth = nodes > 1 ? 60/(nodes-1) : 0;\n    let lineStyle = {width: lineWidth+'%'}\n    line = (<div className='lifecycle-line' style={lineStyle}/>);\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode ? line : null}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainer('parentContainerId', null);\n    this.props.setContainer('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","import Loader from 'Loader';\nimport Globals from './globals';\nimport LifeCycle from './lifeCycle.js';\nimport BarcodePath from './barcodePath.js';\nimport ContainerDisplay from './containerDisplay.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Container\n *\n * Fetches data corresponding to a given Container from Loris backend and\n * displays a page allowing viewing of meta information of the container\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainer extends React.Component {\n  constructor() {\n    super();\n    this.drag = this.drag.bind(this);\n  }\n\n  drag(e) {\n    let container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n    e.dataTransfer.setData(\"text/plain\", container);\n  }\n\n  render() {\n    let globals = ( \n      <Globals\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        errors={this.props.errors}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );  \n\n    let barcodePath = (\n      <BarcodePath\n        container={this.props.data.container}\n        parentContainers={this.props.data.parentContainers}\n        loadContainer={this.props.loadContainer}\n      />\n    );\n\n    let checkoutButton;\n    let display;\n    if (this.props.data.container.dimensionId) {  \n      //TODO: the styling here needs to be redone.\n\n      checkoutButton = (\n        <div style = {{marginLeft: 'auto', height: '10%', marginRight:'10%'}}>\n          <div\n            className={!this.props.editable.containerCheckout && !this.props.editable.barcode ?\n              'action-button update open' : 'action-button update closed'}\n            title='Checkout Child Containers'\n            onClick={()=>{this.props.edit('containerCheckout')}}\n          >\n            <span className='glyphicon glyphicon-share'/>\n          </div>\n        </div>\n      );\n\n      let barcodes = this.props.mapFormOptions(this.props.options.containers, 'barcode');\n      //delete values that are parents of the container\n      if (this.props.data.parentContainers) {\n        for (let key in this.props.data.parentContainers) {\n          delete barcodes[this.props.data.parentContainers[key].id];\n        }\n      }\n      delete barcodes[this.props.data.container.id];\n\n      display = (\n        <ContainerDisplay \n          barcodes={barcodes}\n          container={this.props.container}\n          coordinate={this.props.coordinate}\n          sequential={this.props.sequential}\n          checkoutList={this.props.checkoutList}\n          containers={this.props.options.containers}\n          children={this.props.data.childContainers}\n          types={this.props.options.containerTypes}\n          dimensions={this.props.options.containerDimensions[this.props.data.container.dimensionId]}\n          coordinates={this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null}\n          containerTypes={this.props.options.containerTypes}\n          containerStati={this.props.options.containerStati}\n          editable={this.props.editable}\n          edit={this.props.edit}\n          close={this.props.close}\n          setCoordinate={this.props.setCoordinate}\n          setSequential={this.props.setSequential}\n          setCheckoutList={this.props.setCheckoutList}\n          mapFormOptions={this.props.mapFormOptions}\n          loadSpecimen={this.props.loadSpecimen}\n          loadContainer={this.props.loadContainer}\n          saveChildContainer={this.props.saveChildContainer}\n        />\n      );\n    }\n\n    let listAssigned = [];\n    let coordinateList = [];\n    let listUnassigned = [];\n    if (this.props.data.childContainers) {\n      let children = this.props.data.childContainers;\n      for (let child in children) {\n        let load;\n        if (this.props.options.containerTypes[children[child].typeId].primary) {\n          load = this.props.loadSpecimen;\n        } else {\n          load = this.props.loadContainer;\n        }\n\n        if (children[child].coordinate) {\n          listAssigned.push(\n            <div>\n              <a onClick={()=>load(children[child].barcode)} style={{cursor:'pointer'}}>\n                {children[child].barcode}\n              </a>\n            </div>\n          ); \n          coordinateList.push(\n            <div>\n              at {children[child].coordinate}\n            </div>\n\n          );\n        } else {\n          listUnassigned.push(\n            <a \n              onClick={()=>load(children[child].barcode)}\n              style={{cursor:'pointer'}}\n              id={children[child].id} \n              draggable={true}\n              onDragStart={this.drag}\n            >\n              {children[child].barcode}\n            </a>\n          );\n        }\n      }     \n    }\n\n    //TODO: this can maybe become it's own component..?\n    let returnToFilter = (\n      <div>\n        <br/>\n        <span className='action'>\n          <div\n            className='action-button update'\n            onClick={this.props.loadFilters}\n          >\n            <span className='glyphicon glyphicon-chevron-left'/>\n          </div>\n        </span>\n        <div className='action-title'>\n          Return to Filter\n        </div>\n      </div>\n    );\n\n    return (\n      <div id='container-page'> \n        <div className=\"container-header\"> \n          <div className='container-title'> \n            <div className='barcode'> \n              Barcode \n              <div className='value'> \n                <strong>{this.props.data.container.barcode}</strong> \n              </div> \n            </div> \n            <ContainerCheckout \n              container={this.props.data.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div> \n        </div> \n        <div className='summary'> \n          {globals} \n          <div className='display-container'>\n            {!(listAssigned.length === 0 && listUnassigned.length === 0) ? checkoutButton : null}\n            {display} \n            {barcodePath}\n          </div>\n          <div className='container-list'>\n            <div className='title'>\n              {listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null}\n            </div>\n            <div className='title'>\n              {listAssigned.length !== 0 ? 'Assigned Containers' : null}\n            </div>\n            <div className='container-coordinate'>\n              <div>{listAssigned}</div>\n              <div style={{paddingLeft: 10}}>{coordinateList}</div>\n            </div>\n              {listAssigned.length !==0 ? <br/> : null}\n            <div className='title'>\n              {listUnassigned.length !== 0 ? 'Unassigned Containers' : null}\n            </div>\n            {listUnassigned}\n          </div>\n        </div> \n        {returnToFilter}\n      </div> \n    ); \n  }\n}\n\nBiobankContainer.propTypes = {\n  containerPageDataURL: React.PropTypes.string.isRequired,\n};\n\nexport default BiobankContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/container.js","/**\n * Container Path\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass BarcodePath extends React.Component {\n\n  render() {\n\n    let path = [];\n    let pathLength = this.props.parentContainers.length - 1;\n    let containerURL = loris.BaseURL+'/biobank/container/?barcode=';\n    for (let i=pathLength; i>=0; i--) {\n      path.push(\n        <span className='barcodePath'> \n          {'/'}\n          <a\n            onClick={()=>this.props.loadContainer(this.props.parentContainers[i].barcode)}\n            style={{cursor:'pointer'}}\n          >\n            {this.props.parentContainers[i].barcode}\n          </a>\n        </span>\n      );\n    }\n    path.push(\n      <span className='barcodePath'> \n        {'/'}\n        <a\n          onClick={()=>this.props.loadContainer(this.props.container.barcode)}\n          style={{cursor:'pointer'}}\n        >\n          {this.props.container.barcode}\n        </a>\n      </span>\n    );\n\n    return (\n      <div>\n        {path}\n      </div>\n    );\n  }\n}\n\nBarcodePath.propTypes = {\n}\n\nexport default BarcodePath;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodePath.js"],"sourceRoot":""}