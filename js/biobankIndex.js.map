{"version":3,"sources":["webpack:///modules/biobank/js/biobankIndex.js","webpack:///webpack/bootstrap c34633a76930ed6c2962?dbf9*******","webpack:///./modules/biobank/jsx/biobankIndex.js","webpack:///./jsx/Loader.js","webpack:///./modules/biobank/jsx/filter.js","webpack:///./jsx/FilterForm.js","webpack:///./jsx/Panel.js","webpack:///./modules/biobank/jsx/specimenForm.js","webpack:///./modules/biobank/jsx/barcodeForm.js","webpack:///./modules/biobank/jsx/collectionForm.js","webpack:///./modules/biobank/jsx/customFields.js","webpack:///./modules/biobank/jsx/containerParentForm.js","webpack:///./modules/biobank/jsx/containerDisplay.js","webpack:///./jsx/Modal.js","webpack:///./modules/biobank/jsx/poolSpecimenForm.js","webpack:///./modules/biobank/jsx/preparationForm.js","webpack:///./modules/biobank/jsx/containerForm.js","webpack:///./jsx/Tabs.js","webpack:///./modules/biobank/jsx/specimen.js","webpack:///./modules/biobank/jsx/globals.js","webpack:///./modules/biobank/jsx/quantityField.js","webpack:///./modules/biobank/jsx/temperatureField.js","webpack:///./modules/biobank/jsx/statusField.js","webpack:///./modules/biobank/jsx/locationField.js","webpack:///./modules/biobank/jsx/analysisForm.js","webpack:///./modules/biobank/jsx/lifeCycle.js","webpack:///./modules/biobank/jsx/containerCheckout.js","webpack:///./modules/biobank/jsx/container.js","webpack:///./modules/biobank/jsx/barcodePath.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_Loader","_Loader2","_filter","_filter2","_specimen","_specimen2","_container","_container2","BiobankIndex","_React$Component","_this$state","this","_this","getPrototypeOf","state","isLoaded","page","options","specimenFilter","containerDataTable","containerFilter","1","container","specimen","list","specimenForm","containerForm","aliquotForm","containerParentForm","barcode","containerCheckout","temperature","quantity","status","location","collection","preparation","analysis","fetch","bind","loadFilters","loadSpecimenDataTable","loadContainerDataTable","loadOptions","loadContainer","loadSpecimen","updateSpecimenFilter","updateContainerFilter","clone","mapFormOptions","toggleCollapse","edit","close","revertParameters","setSpecimen","revertSpecimen","setContainerList","addContainer","copyContainer","removeContainer","setContainer","revertContainer","setCopyMultiplier","setSiteId","setCoordinate","setSequential","setCheckoutList","setFiles","addPreparation","addAnalysis","saveSpecimen","saveContainer","saveChildContainer","saveContainerList","validateContainer","validateSpecimen","save","_this2","then","setState","_this3","Promise","resolve","_this4","specimenFilterDataURL","data","specimenDataTable","_this5","containerFilterDataURL","_this6","optionsURL","_this7","containerDataURL","_this8","specimenDataURL","url","$","ajax","dataType","success","error","errorCode","errorMsg","console","object","JSON","parse","stringify","attribute","collapsed","stateKey","_this9","editable","_this10","coordinate","sequential","checkoutList","containerList","countContainers","copyMultiplier","siteId","errors","name","multiplier","e","coordinates","files","locationId","_this11","saveSpecimenURL","_this12","saveContainerURL","_this13","parentContainerId","childContainers","_this14","availableId","keys","containerStati","find","containerListValidation","entries","map","_ref","_ref2","statusId","originId","all","saveContainerListURL","catch","message","_this15","dataObject","FormData","file","append","type","cache","contentType","processData","swal","textStatus","errorThrown","responseJSON","_this16","reject","required","float","field","isNaN","values","containers","_this17","_this18","React","createElement","style","height","display","saveBarcodeListURL","className","Component","request","loris","BaseURL","submit","biobankIndex","ReactDOM","render","document","getElementById","Loader","apply","arguments","width","size","propTypes","PropTypes","int","defaultProps","_BiobankFilter$propTy","_FilterForm","_FilterForm2","_specimenForm","_specimenForm2","_poolSpecimenForm","_poolSpecimenForm2","_containerForm","_containerForm2","_Tabs","_Modal","_Modal2","BiobankFilter","resetSpecimenFilters","resetContainerFilters","formatSpecimenColumns","formatContainerColumns","refs","clearFilter","column","cell","rowData","rowHeaders","row","forEach","header","index","onClick","cursor","pscidURL","href","visitLabelURL","color","addSpecimenButton","poolSpecimenButton","addContainerButton","containerTypesPrimary","candidates","sessions","title","show","closeModal","candidateSessions","sessionCenters","specimenTypes","specimenTypeUnits","specimenTypeAttributes","attributeOptions","attributeDatatypes","containersNonPrimary","containerDimensions","containerCoordinates","barcodesPrimary","containersPrimary","searchSpecimenButton","searchSpecimen","SearchableDropdown","label","onUserInput","placeHolder","autoFocus","barcodesNonPrimary","searchContainerButton","searchContainer","poolSpecimenForm","specimenProtocols","specimenProtocolAttributes","capacities","specimenUnits","specimenRequest","containerTypesNonPrimary","centers","tabList","Tabs","tabs","defaultTab","updateURL","TabPane","TabId","marginTop","Module","ref","formElements","form","onUpdate","filter","ButtonElement","StaticDataTable","Data","Headers","Filter","getFormattedCell","isRequired","func","loadTransfer","string","_typeof","_Panel","FilterForm","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","filterKey","exactMatch","clear","formChildren","Children","children","child","isValidElement","callbackFunc","callbackName","elementName","displayName","queryFieldName","filterValue","cloneElement","fieldName","fieldValue","set","FormElement","warn","Panel","initCollapsed","panelClass","toggleCollapsed","glyphClass","pencilGlyph","marginRight","plusGlyph","add","removeGlyph","cancel","panelHeading","data-toggle","data-target","role","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","formErrors","candidateId","sessionId","centerId","barcodeList","count","addBarcode","copyBarcode","removeBarcode","saveBarcodeList","unitId","typeId","freezeThaw","fTCycle","candidate","CandID","session","ID","parentSpecimenId","onChange","Function","nextKey","barcodeListArray","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","barcodeKey","units","_iterator","return","globalFields","remainingQuantityFields","StaticElement","text","PSCID","Visit_label","TextboxElement","SelectElement","emptyOption","disabled","onSubmit","columnSize","_collectionForm","_collectionForm2","_containerParentForm","_containerParentForm2","SpecimenBarcodeForm","addBarcodeButton","addBarcodeText","copyBarcodeButton","copyBarcodeText","min","max","removeBarcodeButton","glyphStyle","marginLeft","fontSize","parentTypeId","paddingLeft","position","right","_customFields","_customFields2","SpecimenCollectionForm","setCollection","addData","setData","updateButton","specimenTypeFields","unit","specimenTypeFieldsObject","fields","specimenFields","DateElement","minYear","maxYear","date","TimeElement","time","TextareaElement","comments","CustomFields","attributeFields","datatype","DataElement","FileElement","_containerDisplay","_containerDisplay2","ContainerParentForm","recursive","containerDisplay","containerBarcodesNonPrimary","parentContainerField","dimensionId","dimensions","coordinatesTotal","dimension","containerTypes","select","selectedCoordinate","ContainerDisplay","redirectURL","drag","drop","checkoutContainers","tooltip","load","types","primary","preventDefault","dataTransfer","getData","newCoordinate","parseInt","node","containerId","increaseCoordinate","barcodeField","CheckboxElement","checkout","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","data-html","data-placement","data-original-title","rowHeight","rowStyle","Modal","throwWarning","showCancelButton","confirmButtonText","cancelButtonText","backdropStyle","zIndex","top","bottom","left","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","borderTopRightRadius","bodyStyle","modal","stopPropagation","bool","_preparationForm","_preparationForm2","PoolSpecimenForm","formData","errorMessage","barcodeCount","step","handleSubmit","validateForm","setFormData","setPreparationFormData","setSpecimenFormData","submitForm","setBarcodeCount","previous","removePreparation","validate","formSwitch","preparationSwitch","runAjax","poolData","responseText","inputData","method","inputForm","preparationButton","preparationForm","setParentFormData","insertAction","NumericElement","pscid","pSCIDs","visit","sessionData","visits","barcodesArray","barcodesString","join","parentSpecimenBarcodes","parentSpecimenIds","specimenIds","action","refreshParent","formElement","test","currentContainerType","currentSpecimenType","log","formObj","xhr","window","XMLHttpRequest","onSuccess","msg","isValidForm","formRefs","requiredFields","visitLabel","hasError","forceUpdate","preparationFormData","specimenFormData","DataURL","refreshTable","SpecimenPreparationForm","setPreparation","submitButton","specimenProtocolFields","protocolId","specimenProtocolFieldsObject","BiobankContainerForm","containerListArray","ContainerBarcodeForm","containerKey","_React$Component2","copy","addContainerText","copyContainerButton","copyContainerText","removeContainerButton","hash","activeTab","substr","handleClick","getTabs","getTabPanes","tabId","onTabChange","scrollDistance","scrollTop","tab","tabClass","tabID","tabPanes","tabStyle","marginBottom","array","VerticalTabs","_React$Component3","classList","Title","_globals","_globals2","_analysisForm","_analysisForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","addAliquotForm","collectionPanel","collectionPanelForm","cancelEditCollectionButton","collectionData","preparationPanel","cancelEditPreparationButton","protocol","preparationData","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","analysisData","methodId","datatypeId","LinkElement","download","globals","returnToFilter","specimenPageDataURL","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","Globals","increaseCycle","decreaseCycle","cycle","specimenTypeField","containerTypeField","quantityField","fTCycleField","temperatureField","statusField","stati","locationField","originField","parentSpecimenField","dateTimeCreate","parentSpecimenContainer","parentSpecimenFieldValue","parentContainerBarcodeValue","candidateSessionField","fieldList","QuantityField","flex","minWidth","inputClass","TemperatureField","StatusField","LocationField","centerIds","SpecimenAnalysisForm","setAnalysis","File","specimenMethodFields","specimenMethodFieldsObject","fileUpload","LifeCycle","css","border","box-shadow","collectionNode","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","line","nodes","lineWidth","lineStyle","ContainerCheckout","checkoutContainer","checkoutButton","_barcodePath","_barcodePath2","BiobankContainer","barcodePath","parentContainers","listAssigned","coordinateList","listUnassigned","containerPageDataURL","BarcodePath","path","pathLength"],"mappings":"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","file":"./modules/biobank/js/biobankIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _filter = __webpack_require__(2);\n\t\n\tvar _filter2 = _interopRequireDefault(_filter);\n\t\n\tvar _specimen = __webpack_require__(16);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tvar _container = __webpack_require__(25);\n\t\n\tvar _container2 = _interopRequireDefault(_container);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global ReactDOM */\n\t\n\tvar BiobankIndex = function (_React$Component) {\n\t  _inherits(BiobankIndex, _React$Component);\n\t\n\t  function BiobankIndex() {\n\t    var _this$state;\n\t\n\t    _classCallCheck(this, BiobankIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankIndex.__proto__ || Object.getPrototypeOf(BiobankIndex)).call(this));\n\t\n\t    _this.state = (_this$state = {\n\t      isLoaded: false,\n\t      page: '',\n\t      options: {},\n\t      specimenFilter: {},\n\t      containerDataTable: {},\n\t      containerFilter: {}\n\t    }, _defineProperty(_this$state, 'containerDataTable', {}), _defineProperty(_this$state, 'data', {}), _defineProperty(_this$state, 'specimen', {}), _defineProperty(_this$state, 'container', {}), _defineProperty(_this$state, 'files', {}), _defineProperty(_this$state, 'containerList', { 1: {} }), _defineProperty(_this$state, 'countContainers', 1), _defineProperty(_this$state, 'collapsed', { 1: true }), _defineProperty(_this$state, 'copyMultiplier', 1), _defineProperty(_this$state, 'coordinate', null), _defineProperty(_this$state, 'sequential', false), _defineProperty(_this$state, 'checkoutList', {}), _defineProperty(_this$state, 'errors', {\n\t      container: {},\n\t      specimen: {},\n\t      list: {}\n\t    }), _defineProperty(_this$state, 'editable', {\n\t      specimenForm: false,\n\t      containerForm: false,\n\t      aliquotForm: false,\n\t      containerParentForm: false,\n\t      barcode: false,\n\t      containerCheckout: false,\n\t      temperature: false,\n\t      quantity: false,\n\t      status: false,\n\t      location: false,\n\t      collection: false,\n\t      preparation: false,\n\t      analysis: false\n\t    }), _this$state);\n\t\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.loadFilters = _this.loadFilters.bind(_this);\n\t    _this.loadSpecimenDataTable = _this.loadSpecimenDataTable.bind(_this);\n\t    _this.loadContainerDataTable = _this.loadContainerDataTable.bind(_this);\n\t    _this.loadOptions = _this.loadOptions.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.loadSpecimen = _this.loadSpecimen.bind(_this);\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.updateSpecimenFilter = _this.updateSpecimenFilter.bind(_this);\n\t    _this.updateContainerFilter = _this.updateContainerFilter.bind(_this);\n\t    _this.clone = _this.clone.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.edit = _this.edit.bind(_this);\n\t    _this.close = _this.close.bind(_this);\n\t    _this.revertParameters = _this.revertParameters.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.revertSpecimen = _this.revertSpecimen.bind(_this);\n\t    _this.setContainerList = _this.setContainerList.bind(_this);\n\t    _this.addContainer = _this.addContainer.bind(_this);\n\t    _this.copyContainer = _this.copyContainer.bind(_this);\n\t    _this.removeContainer = _this.removeContainer.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.revertContainer = _this.revertContainer.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.setSiteId = _this.setSiteId.bind(_this);\n\t    _this.setCoordinate = _this.setCoordinate.bind(_this);\n\t    _this.setSequential = _this.setSequential.bind(_this);\n\t    _this.setCheckoutList = _this.setCheckoutList.bind(_this);\n\t    _this.setFiles = _this.setFiles.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.addAnalysis = _this.addAnalysis.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveChildContainer = _this.saveChildContainer.bind(_this);\n\t    _this.saveContainerList = _this.saveContainerList.bind(_this);\n\t    _this.validateContainer = _this.validateContainer.bind(_this);\n\t    _this.validateSpecimen = _this.validateSpecimen.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankIndex, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _this2 = this;\n\t\n\t      this.loadFilters().then(function () {\n\t        return _this2.loadOptions().then(function () {\n\t          return _this2.setState({ isLoaded: true });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadFilters',\n\t    value: function loadFilters() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this3.loadContainerDataTable().then(function () {\n\t          return _this3.loadSpecimenDataTable().then(function () {\n\t            _this3.setState({ page: 'filter' }, resolve());\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimenDataTable',\n\t    value: function loadSpecimenDataTable() {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this4.fetch(_this4.props.specimenFilterDataURL).then(function (data) {\n\t          var specimenDataTable = data;\n\t          _this4.setState({ specimenDataTable: specimenDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainerDataTable',\n\t    value: function loadContainerDataTable() {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this5.fetch(_this5.props.containerFilterDataURL).then(function (data) {\n\t          var containerDataTable = data;\n\t          _this5.setState({ containerDataTable: containerDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadOptions',\n\t    value: function loadOptions() {\n\t      var _this6 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this6.fetch(_this6.props.optionsURL).then(function (data) {\n\t          var options = data;\n\t          _this6.setState({ options: options }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(barcode) {\n\t      var _this7 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this7.fetch(_this7.props.containerDataURL + barcode).then(function (data) {\n\t          var container = _this7.clone(data.container);\n\t          var page = 'container';\n\t          _this7.close();\n\t          _this7.revertParameters();\n\t          _this7.setState({ data: data, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimen',\n\t    value: function loadSpecimen(barcode) {\n\t      var _this8 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this8.fetch(_this8.props.specimenDataURL + barcode).then(function (data) {\n\t          var specimen = _this8.clone(data.specimen);\n\t          var container = _this8.clone(data.container);\n\t          var page = 'specimen';\n\t          _this8.setState({ data: data, specimen: specimen, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetch',\n\t    value: function fetch(url) {\n\t      return new Promise(function (resolve) {\n\t        $.ajax(url, {\n\t          dataType: 'json',\n\t          success: function success(data) {\n\t            return resolve(data);\n\t          },\n\t          error: function error(_error, errorCode, errorMsg) {\n\t            return console.error(_error, errorCode, errorMsg);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateSpecimenFilter',\n\t    value: function updateSpecimenFilter(specimenFilter) {\n\t      this.setState({ specimenFilter: specimenFilter });\n\t    }\n\t  }, {\n\t    key: 'updateContainerFilter',\n\t    value: function updateContainerFilter(containerFilter) {\n\t      this.setState({ containerFilter: containerFilter });\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone(object) {\n\t      return JSON.parse(JSON.stringify(object));\n\t    }\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(object, attribute) {\n\t      var data = {};\n\t      for (var id in object) {\n\t        data[id] = object[id][attribute];\n\t      }\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'edit',\n\t    value: function edit(stateKey) {\n\t      var _this9 = this;\n\t\n\t      this.close().then(function () {\n\t        var editable = _this9.state.editable;\n\t        editable[stateKey] = true;\n\t        _this9.setState({ editable: editable });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var _this10 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var editable = _this10.state.editable;\n\t        for (var key in editable) {\n\t          editable[key] = false;\n\t        }\n\t\n\t        _this10.state.data.specimen && _this10.revertSpecimen();\n\t        _this10.state.data.container && _this10.revertContainer();\n\t        _this10.revertParameters();\n\t        _this10.setState({ editable: editable }, resolve());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'revertParameters',\n\t    value: function revertParameters() {\n\t      //TODO: these should be moved to another function\n\t      var coordinate = this.state.coordinate;\n\t      coordinate = null;\n\t      var sequential = this.state.sequential;\n\t      sequential = false;\n\t      var checkoutList = this.state.checkoutList;\n\t      checkoutList = {};\n\t      var containerList = this.state.containerList;\n\t      containerList = { 1: {} };\n\t      var countContainers = this.state.countContainers;\n\t      countContainers = 1;\n\t      var collapsed = this.state.collapsed;\n\t      collapsed = { 1: true };\n\t      var copyMultiplier = this.state.copyMultiplier;\n\t      copyMultiplier = 1;\n\t      var siteId = this.state.siteId;\n\t      siteId = null;\n\t      var errors = this.state.errors;\n\t      errors = { container: {}, specimen: {}, list: {} };\n\t\n\t      this.setState({\n\t        coordinate: coordinate,\n\t        sequential: sequential,\n\t        checkoutList: checkoutList,\n\t        containerList: containerList,\n\t        countContainers: countContainers,\n\t        collapsed: collapsed,\n\t        copyMultiplier: copyMultiplier,\n\t        siteId: siteId,\n\t        errors: errors\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimen',\n\t    value: function revertSpecimen() {\n\t      var specimen = this.state.specimen;\n\t      specimen = this.clone(this.state.data.specimen);\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'setContainerList',\n\t    value: function setContainerList(name, value, key) {\n\t      var containerList = this.state.containerList;\n\t      containerList[key][name] = value;\n\t      this.setState({ containerList: containerList });\n\t    }\n\t  }, {\n\t    key: 'addContainer',\n\t    value: function addContainer() {\n\t      var containerList = this.state.containerList;\n\t      var countContainers = this.state.countContainers;\n\t      var collapsed = this.state.collapsed;\n\t\n\t      countContainers++;\n\t      containerList[countContainers] = {};\n\t      collapsed[countContainers] = true;\n\t\n\t      this.setState({ containerList: containerList, countContainers: countContainers, collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'copyContainer',\n\t    value: function copyContainer(key) {\n\t      var countContainers = this.state.countContainers;\n\t      var collapsed = this.state.collapsed;\n\t      var containerList = this.state.containerList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      countContainers++;\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        containerList[countContainers] = this.clone(containerList[key]);\n\t        delete containerList[countContainers].barcode;\n\t        collapsed[countContainers] = true;\n\t        countContainers++;\n\t      }\n\t\n\t      this.setState({ containerList: containerList, countContainers: countContainers, collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'removeContainer',\n\t    value: function removeContainer(key) {\n\t      var containerList = this.state.containerList;\n\t      delete containerList[key];\n\t      this.setState({ containerList: containerList });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.state.container;\n\t      value ? container[name] = value : delete container[name];\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainer',\n\t    value: function revertContainer() {\n\t      var container = this.state.container;\n\t      container = this.clone(this.state.data.container);\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'setSiteId',\n\t    value: function setSiteId(name, value) {\n\t      var siteId = this.state.siteId;\n\t      siteId = value;\n\t      this.setState({ siteId: siteId });\n\t    }\n\t  }, {\n\t    key: 'setCoordinate',\n\t    value: function setCoordinate(value) {\n\t      var coordinate = this.state.coordinates;\n\t      coordinate = value;\n\t      this.setState({ coordinate: coordinate });\n\t    }\n\t  }, {\n\t    key: 'setSequential',\n\t    value: function setSequential(name, value) {\n\t      var sequential = this.state.sequential;\n\t      sequential = value;\n\t      this.setState({ sequential: sequential });\n\t    }\n\t  }, {\n\t    key: 'setFiles',\n\t    value: function setFiles(name, value) {\n\t      var files = this.state.files;\n\t      files[value.name] = value;\n\t      this.setState({ files: files });\n\t    }\n\t  }, {\n\t    key: 'setCheckoutList',\n\t    value: function setCheckoutList(container) {\n\t      var checkoutList = this.state.checkoutList;\n\t      checkoutList[container.coordinate] = container;\n\t      this.setState({ checkoutList: checkoutList });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addAnalysis',\n\t    value: function addAnalysis() {\n\t      var specimen = this.state.specimen;\n\t      specimen.analysis = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this11 = this;\n\t\n\t      var specimen = this.state.specimen;\n\t      this.validateSpecimen(specimen).then(function () {\n\t        _this11.save(specimen, _this11.props.saveSpecimenURL, 'Specimen Save Successful!').then(function () {\n\t          var data = _this11.state.data;\n\t          data.specimen = _this11.clone(_this11.state.specimen);\n\t          _this11.setState({ data: data }, function () {\n\t            _this11.close();\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this12 = this;\n\t\n\t      var container = this.state.container;\n\t      this.validateContainer(container).then(function () {\n\t        _this12.save(container, _this12.props.saveContainerURL, 'Container Save Successful!').then(function () {\n\t          var data = _this12.state.data;\n\t          data.container = _this12.clone(_this12.state.container);\n\t          _this12.setState({ data: data }, function () {\n\t            _this12.close();\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveChildContainer',\n\t    value: function saveChildContainer(container) {\n\t      var _this13 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this13.save(container, _this13.props.saveContainerURL).then(function () {\n\t          var data = _this13.state.data;\n\t          if (container.parentContainerId === null) {\n\t            delete data.childContainers[container.id];\n\t          } else {\n\t            data.childContainers[container.id] = _this13.clone(container);\n\t          }\n\t          _this13.setState({ data: data }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainerList',\n\t    value: function saveContainerList() {\n\t      var _this14 = this;\n\t\n\t      var containerList = this.state.containerList;\n\t      var availableId = Object.keys(this.state.options.containerStati).find(function (key) {\n\t        return _this14.state.options.containerStati[key].status === 'Available';\n\t      });\n\t      var containerListValidation = [];\n\t\n\t      Object.entries(containerList).map(function (_ref) {\n\t        var _ref2 = _slicedToArray(_ref, 2),\n\t            key = _ref2[0],\n\t            container = _ref2[1];\n\t\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.originId = _this14.state.siteId;\n\t        container.locationId = _this14.state.siteId;\n\t\n\t        containerListValidation.push(_this14.validateContainer(container, key));\n\t      });\n\t\n\t      Promise.all(containerListValidation).then(function () {\n\t        _this14.save(containerList, _this14.props.saveContainerListURL, 'Container Creation Successful!').then(function () {\n\t          _this14.close();_this14.loadFilters();_this14.loadOptions();\n\t        });\n\t      }).catch(function () {});\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(data, url, message) {\n\t      var _this15 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var dataObject = new FormData();\n\t        for (var file in _this15.state.files) {\n\t          dataObject.append(_this15.state.files[file].name, _this15.state.files[file]);\n\t        }\n\t        dataObject.append('data', JSON.stringify(data));\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: dataObject,\n\t          cache: false,\n\t          contentType: false,\n\t          processData: false,\n\t          success: function success() {\n\t            resolve();\n\t            _this15.loadOptions();\n\t            message && swal(message, '', 'success');\n\t          },\n\t          error: function error(_error2, textStatus, errorThrown) {\n\t            var message = (_error2.responseJSON || {}).message || 'Submission error!';\n\t            swal('Error', message, 'error');\n\t            console.error(_error2, textStatus, errorThrown);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'validateContainer',\n\t    value: function validateContainer(container, key) {\n\t      var _this16 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var errors = _this16.state.errors;\n\t        errors.container = {};\n\t\n\t        var required = ['barcode', 'typeId', 'temperature', 'statusId', 'locationId'];\n\t\n\t        var float = ['temperature'];\n\t\n\t        required.map(function (field) {\n\t          if (!container[field]) {\n\t            errors.container[field] = 'This field is required! ';\n\t          }\n\t        });\n\t\n\t        float.map(function (field) {\n\t          if (isNaN(container[field])) {\n\t            errors.container[field] = 'This field must be a number! ';\n\t          }\n\t        });\n\t\n\t        required.map(function (field) {\n\t          if (!container[field]) {\n\t            errors.container[field] = 'This field is required! ';\n\t          }\n\t        });\n\t\n\t        Object.values(_this16.state.options.containers).map(function (c) {\n\t          if (container.barcode === c.barcode) {\n\t            errors.container.barcode = 'Barcode must be unique';\n\t          }\n\t        });\n\t\n\t        if (key) {\n\t          errors.list[key] = {};\n\t          errors.list[key].container = errors.container;\n\t        }\n\t\n\t        if (Object.keys(errors.container).length == 0) {\n\t          _this16.setState({ errors: errors }, resolve());\n\t        } else {\n\t          _this16.setState({ errors: errors }, reject());\n\t        }\n\t      });\n\t    }\n\t\n\t    //TODO: validation might be more effective within 1 function.\n\t\n\t  }, {\n\t    key: 'validateContainer',\n\t    value: function validateContainer(container, key) {\n\t      var _this17 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var errors = _this17.state.errors;\n\t        errors.container = {};\n\t\n\t        var required = ['barcode', 'typeId', 'temperature', 'statusId', 'locationId'];\n\t\n\t        var float = ['temperature'];\n\t\n\t        required.map(function (field) {\n\t          if (!container[field]) {\n\t            errors.container[field] = 'This field is required! ';\n\t          }\n\t        });\n\t\n\t        float.map(function (field) {\n\t          if (isNaN(container[field])) {\n\t            errors.container[field] = 'This field must be a number! ';\n\t          }\n\t        });\n\t\n\t        Object.values(_this17.state.options.containers).map(function (c) {\n\t          if (container.barcode === c.barcode) {\n\t            errors.container.barcode = 'Barcode must be unique';\n\t          }\n\t        });\n\t\n\t        if (key) {\n\t          errors.list[key] = {};\n\t          errors.list[key].container = errors.container;\n\t        }\n\t\n\t        if (Object.keys(errors.container).length == 0) {\n\t          _this17.setState({ errors: errors }, resolve());\n\t        } else {\n\t          _this17.setState({ errors: errors }, reject());\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'validateSpecimen',\n\t    value: function validateSpecimen(specimen, key) {\n\t      var _this18 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var errors = _this18.state.errors;\n\t        errors.specimen = {};\n\t\n\t        var required = ['containerId', 'typeId', 'quantity', 'unitId', 'candidateId', 'sessionId', 'collection'];\n\t\n\t        var float = ['quantity'];\n\t\n\t        required.map(function (field) {\n\t          if (!specimen[field]) {\n\t            errors.specimen[field] = 'This field is required! ';\n\t          }\n\t        });\n\t\n\t        float.map(function (field) {\n\t          if (isNaN(specimen[field])) {\n\t            errors.specimen[field] = 'This field must be a number! ';\n\t          }\n\t        });\n\t\n\t        if (key) {\n\t          errors.list[key] = {};\n\t          errors.list[key].specimen = errors.specimen;\n\t        }\n\t\n\t        if (Object.keys(errors.specimen).length == 0) {\n\t          _this18.setState({ errors: errors }, resolve());\n\t        } else {\n\t          _this18.setState({ errors: errors }, reject());\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'div',\n\t          { style: { height: 500 } },\n\t          React.createElement(_Loader2.default, null)\n\t        );\n\t      }\n\t\n\t      var display = void 0;\n\t      switch (this.state.page) {\n\t        case 'container':\n\t          display = React.createElement(_container2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            errors: this.state.errors,\n\t            coordinate: this.state.coordinate,\n\t            sequential: this.state.sequential,\n\t            checkoutList: this.state.checkoutList,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            loadFilters: this.loadFilters,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setCoordinate: this.setCoordinate,\n\t            setSequential: this.setSequential,\n\t            setCheckoutList: this.setCheckoutList,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t        case 'specimen':\n\t          display = React.createElement(_specimen2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            specimen: this.state.specimen,\n\t            errors: this.state.errors,\n\t            files: this.state.files,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            loadFilters: this.loadFilters,\n\t            loadOptions: this.loadOptions,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setSpecimen: this.setSpecimen,\n\t            revertSpecimen: this.revertSpecimen,\n\t            saveSpecimen: this.saveSpecimen,\n\t            addPreparation: this.addPreparation,\n\t            addAnalysis: this.addAnalysis,\n\t            setFiles: this.setFiles,\n\t            saveChildContainer: this.saveChildContainer,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            edit: this.edit,\n\t            close: this.close,\n\t            save: this.save\n\t          });\n\t          break;\n\t        case 'filter':\n\t          display = React.createElement(_filter2.default, {\n\t            specimenFilter: this.state.specimenFilter,\n\t            specimenDataTable: this.state.specimenDataTable,\n\t            containerFilter: this.state.containerFilter,\n\t            containerDataTable: this.state.containerDataTable,\n\t            options: this.state.options,\n\t            errors: this.state.errors,\n\t            collapsed: this.state.collapsed,\n\t            editable: this.state.editable,\n\t            siteId: this.state.siteId,\n\t            containerList: this.state.containerList,\n\t            copyMultiplier: this.state.copyMultiplier,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            updateSpecimenFilter: this.updateSpecimenFilter,\n\t            updateContainerFilter: this.updateContainerFilter,\n\t            mapFormOptions: this.mapFormOptions,\n\t            clone: this.clone,\n\t            edit: this.edit,\n\t            close: this.close,\n\t            toggleCollapse: this.toggleCollapse,\n\t            loadFilters: this.loadFilters,\n\t            loadOptions: this.loadOptions,\n\t            setCopyMultiplier: this.setCopyMultiplier,\n\t            setSiteId: this.setSiteId,\n\t            setContainerList: this.setContainerList,\n\t            addContainer: this.addContainer,\n\t            copyContainer: this.copyContainer,\n\t            removeContainer: this.removeContainer,\n\t            saveContainerList: this.saveContainerList,\n\t            save: this.save,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            validateContainer: this.validateContainer\n\t          });\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'biobank-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            display\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t  var request = loris.BaseURL + '/biobank/ajax/requestData.php?';\n\t  var submit = loris.BaseURL + '/biobank/ajax/submitData.php?';\n\t  var biobankIndex = React.createElement(\n\t    'div',\n\t    { className: 'page=biobank' },\n\t    React.createElement(BiobankIndex, {\n\t      specimenFilterDataURL: loris.BaseURL + '/biobank/?format=json',\n\t      containerFilterDataURL: request + 'action=getContainerFilterData',\n\t      specimenDataURL: request + 'action=getSpecimenData&barcode=',\n\t      containerDataURL: request + 'action=getContainerData&barcode=',\n\t      optionsURL: request + 'action=getFormOptions',\n\t      saveContainerURL: submit + 'action=saveContainer',\n\t      saveSpecimenURL: submit + 'action=saveSpecimen',\n\t      saveContainerListURL: submit + 'action=saveContainerList',\n\t      saveBarcodeListURL: submit + 'action=saveBarcodeList'\n\t    })\n\t  );\n\t  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains the React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\"div\", {\n\t        className: \"loader\",\n\t        style: { width: this.props.size, height: this.props.size }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\tLoader.propTypes = { size: React.PropTypes.int };\n\tLoader.defaultProps = { size: 120 };\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _BiobankFilter$propTy;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(3);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _poolSpecimenForm = __webpack_require__(12);\n\t\n\tvar _poolSpecimenForm2 = _interopRequireDefault(_poolSpecimenForm);\n\t\n\tvar _containerForm = __webpack_require__(14);\n\t\n\tvar _containerForm2 = _interopRequireDefault(_containerForm);\n\t\n\tvar _Tabs = __webpack_require__(15);\n\t\n\tvar _Modal = __webpack_require__(11);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BiobankFilter = function (_React$Component) {\n\t  _inherits(BiobankFilter, _React$Component);\n\t\n\t  function BiobankFilter() {\n\t    _classCallCheck(this, BiobankFilter);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankFilter.__proto__ || Object.getPrototypeOf(BiobankFilter)).call(this));\n\t\n\t    _this.resetSpecimenFilters = _this.resetSpecimenFilters.bind(_this);\n\t    _this.resetContainerFilters = _this.resetContainerFilters.bind(_this);\n\t    _this.formatSpecimenColumns = _this.formatSpecimenColumns.bind(_this);\n\t    _this.formatContainerColumns = _this.formatContainerColumns.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankFilter, [{\n\t    key: 'resetSpecimenFilters',\n\t    value: function resetSpecimenFilters() {\n\t      this.refs.specimenFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'resetContainerFilters',\n\t    value: function resetContainerFilters() {\n\t      this.refs.containerFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'formatSpecimenColumns',\n\t    value: function formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n\t      var _this2 = this;\n\t\n\t      var row = {};\n\t      var barcode = void 0;\n\t\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      switch (column) {\n\t        case 'Barcode':\n\t          barcode = row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                }, style: { cursor: 'pointer' } },\n\t              cell\n\t            )\n\t          );\n\t        case 'Parent Barcode':\n\t          barcode = row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'Container Barcode':\n\t          barcode = row['Container Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this2.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'PSCID':\n\t          var pscidURL = loris.BaseURL + '/' + row['PSCID'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: pscidURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Visit Label':\n\t          var visitLabelURL = loris.BaseURL + '/instrument_list/?candID=' + row['PSCID'] + '&sessionID=' + row['Visit Label'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: visitLabelURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Status':\n\t          switch (cell) {\n\t            case 'Available':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'green' } },\n\t                cell\n\t              );\n\t            case 'Reserved':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'orange' } },\n\t                cell\n\t              );\n\t            case 'Dispensed':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'red' } },\n\t                cell\n\t              );\n\t          }\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'formatContainerColumns',\n\t    value: function formatContainerColumns(column, cell, rowData, rowHeaders) {\n\t      var _this3 = this;\n\t\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      var row = {};\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      var barcode = void 0;\n\t      switch (column) {\n\t        case 'Barcode':\n\t          barcode = row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this3.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'Status':\n\t          switch (cell) {\n\t            case 'Available':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'green' } },\n\t                cell\n\t              );\n\t            case 'Reserved':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'orange' } },\n\t                cell\n\t              );\n\t            case 'Dispensed':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'red' } },\n\t                cell\n\t              );\n\t          }\n\t        case 'Parent Barcode':\n\t          barcode = row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this3.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      var addSpecimenButton = void 0;\n\t      var poolSpecimenButton = void 0;\n\t      var addContainerButton = void 0;\n\t\n\t      /**\n\t       * Map Options for Form Select Elements of Specimen Form\n\t       */\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      addSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Add Specimen' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button add', onClick: function onClick() {\n\t              _this4.props.edit('specimenForm');\n\t            } },\n\t          '+'\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Specimen',\n\t            show: this.props.editable.specimenForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            candidateSessions: this.props.options.candidateSessions,\n\t            sessionCenters: this.props.options.sessionCenters,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            clone: this.props.clone,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            close: this.props.close,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      //TODO: turn the following into components to avoid duplication\n\t      //TODO: should there be a general search, or one for specimen and one for containers?\n\t      var barcodesPrimary = this.props.mapFormOptions(this.props.options.containersPrimary, 'barcode');\n\t      var searchSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Go To Specimen' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button search', onClick: function onClick() {\n\t              _this4.props.edit('searchSpecimen');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-search' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Go To Specimen',\n\t            show: this.props.editable.searchSpecimen,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'barcode',\n\t            label: 'Barcode',\n\t            options: barcodesPrimary,\n\t            onUserInput: function onUserInput(name, value) {\n\t              barcodesPrimary[value] && _this4.props.loadSpecimen(barcodesPrimary[value]).then(function () {\n\t                return _this4.props.close();\n\t              });\n\t            },\n\t            placeHolder: 'Please Scan or Select Barcode',\n\t            autoFocus: true\n\t          })\n\t        )\n\t      );\n\t\n\t      var barcodesNonPrimary = this.props.mapFormOptions(this.props.options.containersNonPrimary, 'barcode');\n\t      var searchContainerButton = void 0;\n\t      searchContainerButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Go To Container' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button search', onClick: function onClick() {\n\t              _this4.props.edit('searchContainer');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-search' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Go To Barcode',\n\t            show: this.props.editable.searchContainer,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'barcode',\n\t            label: 'Barcode',\n\t            options: barcodesNonPrimary,\n\t            onUserInput: function onUserInput(name, value) {\n\t              barcodesNonPrimary[value] && _this4.props.loadContainer(barcodesNonPrimary[value]).then(function () {\n\t                return _this4.props.close();\n\t              });\n\t            },\n\t            placeHolder: 'Please Scan or Select Barcode',\n\t            autoFocus: true\n\t          })\n\t        )\n\t      );\n\t\n\t      poolSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Pool Specimens' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button pool', onClick: function onClick() {\n\t              _this4.props.edit('poolSpecimenForm');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-resize-small' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Pool Specimens',\n\t            show: this.props.editable.poolSpecimenForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_poolSpecimenForm2.default, {\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            specimenProtocols: this.props.options.specimenProtocols,\n\t            specimenProtocolAttributes: this.props.options.specimenProtocolAttributes,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            capacities: this.props.options.capacities,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenUnits: this.props.options.specimenUnits,\n\t            candidates: candidates,\n\t            candidateSessions: this.props.options.candidateSessions,\n\t            sessionCenters: this.props.options.sessionCenters,\n\t            specimenRequest: loris.BaseURL + '/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode',\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveSpecimen: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveSpecimen',\n\t            saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer'\n\t          })\n\t        )\n\t      );\n\t\n\t      var containerTypesNonPrimary = this.props.mapFormOptions(this.props.options.containerTypesNonPrimary, 'label');\n\t\n\t      addContainerButton = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Add Container'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this4.props.edit('containerForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Container',\n\t            show: this.props.editable.containerForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_containerForm2.default, {\n\t            siteId: this.props.siteId,\n\t            containerList: this.props.containerList,\n\t            errors: this.props.errors.list,\n\t            collapsed: this.props.collapsed,\n\t            copyMultiplier: this.props.copyMultiplier,\n\t            containerTypesNonPrimary: containerTypesNonPrimary,\n\t            centers: this.props.options.centers,\n\t            containerStati: containerStati,\n\t            saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer',\n\t            validateContainer: this.props.validateContainer,\n\t            close: this.props.close,\n\t            toggleCollapse: this.props.toggleCollapse,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            setCopyMultiplier: this.props.setCopyMultiplier,\n\t            setSiteId: this.props.setSiteId,\n\t            setContainerList: this.props.setContainerList,\n\t            addContainer: this.props.addContainer,\n\t            copyContainer: this.props.copyContainer,\n\t            removeContainer: this.props.removeContainer,\n\t            saveContainerList: this.props.saveContainerList,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      var tabList = [{ id: \"specimens\", label: \"Specimens\" }, { id: \"containers\", label: \"Containers\" }];\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'biobank-page' },\n\t        React.createElement(\n\t          _Tabs.Tabs,\n\t          { tabs: tabList, defaultTab: 'specimens', updateURL: true },\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[0].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row', style: { marginTop: 20 } },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-3', style: { marginTop: '10px' } },\n\t                React.createElement(\n\t                  'div',\n\t                  { className: 'filter' },\n\t                  React.createElement(\n\t                    _FilterForm2.default,\n\t                    {\n\t                      Module: 'biobank',\n\t                      ref: 'specimenFilter',\n\t                      formElements: this.props.specimenDataTable.form,\n\t                      onUpdate: this.props.updateSpecimenFilter,\n\t                      filter: this.props.specimenFilter\n\t                    },\n\t                    React.createElement(ButtonElement, {\n\t                      label: 'Clear Filters',\n\t                      type: 'reset',\n\t                      onUserInput: this.resetSpecimenFilters\n\t                    }),\n\t                    React.createElement(\n\t                      'div',\n\t                      { className: 'align-row' },\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        searchSpecimenButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        addSpecimenButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        poolSpecimenButton\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-9', style: { marginTop: '10px' } },\n\t                React.createElement(StaticDataTable, {\n\t                  Data: this.props.specimenDataTable.Data,\n\t                  Headers: this.props.specimenDataTable.Headers,\n\t                  Filter: this.props.specimenFilter,\n\t                  getFormattedCell: this.formatSpecimenColumns\n\t                })\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[1].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-3', style: { marginTop: '10px' } },\n\t                React.createElement(\n\t                  'div',\n\t                  { className: 'filter' },\n\t                  React.createElement(\n\t                    _FilterForm2.default,\n\t                    {\n\t                      Module: 'biobank',\n\t                      ref: 'containerFilter',\n\t                      formElements: this.props.containerDataTable.form,\n\t                      onUpdate: this.props.updateContainerFilter,\n\t                      filter: this.props.containerFilter\n\t                    },\n\t                    React.createElement(ButtonElement, {\n\t                      label: 'Clear Filters',\n\t                      type: 'reset',\n\t                      onUserInput: this.resetContainerFilters\n\t                    }),\n\t                    React.createElement(\n\t                      'div',\n\t                      { className: 'align-row' },\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        searchContainerButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        addContainerButton\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-9', style: { marginTop: '10px' } },\n\t                React.createElement(StaticDataTable, {\n\t                  Data: this.props.containerDataTable.Data,\n\t                  Headers: this.props.containerDataTable.Headers,\n\t                  Filter: this.props.containerFilter,\n\t                  getFormattedCell: this.formatContainerColumns\n\t                })\n\t              )\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankFilter;\n\t}(React.Component);\n\t\n\tBiobankFilter.propTypes = (_BiobankFilter$propTy = {\n\t  specimenFilter: React.PropTypes.object.isRequired,\n\t  specimenDataTable: React.PropTypes.object.isRequired,\n\t  containerFilter: React.PropTypes.object.isRequired,\n\t  containerDataTable: React.PropTypes.object.isRequired,\n\t  options: React.PropTypes.object.isRequired,\n\t  editable: React.PropTypes.object.isRequired,\n\t  loadContainer: React.PropTypes.func.isRequired,\n\t  loadSpecimen: React.PropTypes.func.isRequired,\n\t  loadTransfer: React.PropTypes.func.isRequired,\n\t  updateSpecimenFilter: React.PropTypes.func.isRequired,\n\t  updateContainerFilter: React.PropTypes.func.isRequired,\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  edit: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired\n\t}, _defineProperty(_BiobankFilter$propTy, 'close', React.PropTypes.func.isRequired), _defineProperty(_BiobankFilter$propTy, 'save', React.PropTypes.func.isRequired), _defineProperty(_BiobankFilter$propTy, 'saveBarcodeListURL', React.PropTypes.string.isRequired), _BiobankFilter$propTy);\n\t\n\texports.default = BiobankFilter;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(4);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t      if (key) {\n\t        filter[key] = {};\n\t        if (value) {\n\t          // all defined/non-null values must have some length, else empty string\n\t          filter[key].value = Object.keys(value).length > 0 ? value : '';\n\t        } else {\n\t          // null and undefined handled here\n\t          filter[key].value = '';\n\t        }\n\t        filter[key].exactMatch = type === \"SelectElement\";\n\t      } else if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure key is of string type and value is of string or object type\n\t      // before sending them to querystring\n\t      if (typeof fieldName !== 'string' || typeof fieldValue !== 'string' && (typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        this.props,\n\t        formChildren\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      var pencilGlyph = void 0;\n\t      if (this.props.edit) {\n\t        pencilGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-pencil\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.edit\n\t        });\n\t      }\n\t\n\t      var plusGlyph = void 0;\n\t      if (this.props.add) {\n\t        plusGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-plus\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.add\n\t        });\n\t      }\n\t\n\t      var removeGlyph = void 0;\n\t      if (this.props.cancel) {\n\t        removeGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-remove\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.cancel\n\t        });\n\t      }\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\"\n\t        },\n\t        React.createElement(\"span\", {\n\t          className: glyphClass,\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        }),\n\t        pencilGlyph,\n\t        plusGlyph,\n\t        removeGlyph,\n\t        this.props.title\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  edit: React.PropTypes.func,\n\t  add: React.PropTypes.func\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(6);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      candidateId: null,\n\t      sessionId: null,\n\t      centerId: null,\n\t      barcodeList: { 1: { specimen: { collection: {} }, container: {} } },\n\t      count: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.addBarcode = _this.addBarcode.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyBarcode = _this.copyBarcode.bind(_this);\n\t    _this.removeBarcode = _this.removeBarcode.bind(_this);\n\t    _this.saveBarcodeList = _this.saveBarcodeList.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveBarcodeList',\n\t    value: function saveBarcodeList() {\n\t      var _this2 = this;\n\t\n\t      var barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var barcode in barcodeList) {\n\t        //set container values\n\t        var container = barcodeList[barcode].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.locationId = this.state.centerId;\n\t        container.originId = this.state.centerId;\n\t\n\t        //set specimen values\n\t        var specimen = barcodeList[barcode].specimen;\n\t        specimen.candidateId = this.state.candidateId;\n\t        specimen.sessionId = this.state.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.locationId = this.state.centerId;\n\t        if (this.props.specimenTypes[specimen.typeId].freezeThaw == 1) {\n\t          specimen.fTCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: these will eventually be higher level states.\n\t        if (this.props.data) {\n\t          specimen.candidateId = this.props.data.candidate.CandID;\n\t          specimen.sessionId = this.props.data.session.ID;\n\t          specimen.parentSpecimenId = this.props.data.specimen.id;\n\t          specimen.collection.locationId = this.props.data.container.locationId;\n\t          container.locationId = this.props.data.container.locationId;\n\t          container.originId = this.props.data.container.locationId;\n\t        }\n\t\n\t        barcodeList[barcode].container = container;\n\t        barcodeList[barcode].specimen = specimen;\n\t      }\n\t\n\t      this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(function () {\n\t        _this2.props.close();_this2.props.loadFilters();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var centerId = this.state.centerId;\n\t      var candidateId = this.state.candidateId;\n\t      var sessionId = this.state.sessionId;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      if (name === 'candidateId') {\n\t        candidateId = value;\n\t      } else if (name === 'sessionId') {\n\t        sessionId = value;\n\t        centerId = this.props.sessionCenters[sessionId].centerId;\n\t      } else {\n\t        //this is eliminate values if specimen type is changed\n\t        if (name === 'typeId') {\n\t          barcodeList[key].specimen = { collection: {} };\n\t        }\n\t        barcodeList[key].specimen[name] = value;\n\t      }\n\t\n\t      this.setState({ barcodeList: barcodeList, centerId: centerId, candidateId: candidateId, sessionId: sessionId });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var barcodeList = this.state.barcodeList;\n\t      barcodeList[key].container[name] = value;\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'addBarcode',\n\t    value: function addBarcode() {\n\t      var barcodeList = this.state.barcodeList;\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t\n\t      barcodeList[count + 1] = { specimen: {}, container: { collection: {} } };\n\t      collapsed[count + 1] = true;\n\t      count = count + 1;\n\t\n\t      this.setState({ barcodeList: barcodeList, collapsed: collapsed, count: count });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyBarcode',\n\t    value: function copyBarcode() {\n\t      var key = this.state.count;\n\t      var nextKey = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t      var barcodeList = this.state.barcodeList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        nextKey++;\n\t        barcodeList[nextKey] = this.props.clone(barcodeList[key]);\n\t        barcodeList[nextKey].container.barcode && delete barcodeList[nextKey].container.barcode;\n\t        collapsed[nextKey] = true;\n\t      }\n\t\n\t      this.setState({ barcodeList: barcodeList, count: nextKey, collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'removeBarcode',\n\t    value: function removeBarcode(key) {\n\t      var barcodeList = this.state.barcodeList;\n\t      delete barcodeList[key];\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(_barcodeForm2.default, {\n\t            data: _this3.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this3.state.collapsed[key],\n\t            toggleCollapse: _this3.toggleCollapse,\n\t            mapFormOptions: _this3.props.mapFormOptions,\n\t            container: _this3.state.barcodeList[key].container || null,\n\t            specimen: _this3.state.barcodeList[key].specimen || null,\n\t            removeBarcode: barcodeListArray.length !== 1 ? function () {\n\t              return _this3.removeBarcode(key);\n\t            } : null,\n\t            addBarcode: i == barcodeListArray.length ? _this3.addBarcode : null,\n\t            setCopyMultiplier: _this3.setCopyMultiplier,\n\t            copyMultiplier: _this3.state.copyMultiplier,\n\t            copyBarcode: i == barcodeListArray.length && _this3.state.barcodeList[key] ? _this3.copyBarcode : null,\n\t            setContainer: _this3.setContainer,\n\t            setSpecimen: _this3.setSpecimen,\n\t            onChange: _this3.props.onChange,\n\t            specimenTypes: _this3.props.specimenTypes,\n\t            containerTypesPrimary: _this3.props.containerTypesPrimary,\n\t            containersNonPrimary: _this3.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this3.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this3.props.attributeDatatypes,\n\t            attributeOptions: _this3.props.attributeOptions,\n\t            capacities: _this3.props.capacities,\n\t            containerDimensions: _this3.props.containerDimensions,\n\t            containerCoordinates: _this3.props.containerCoordinates,\n\t            specimenTypeUnits: _this3.props.specimenTypeUnits,\n\t            units: _this3.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimen,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimen,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.state.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.candidateId,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.sessionId,\n\t            disabled: this.state.candidateId ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: function onSubmit() {\n\t            _this3.saveBarcodeList();\n\t            //this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()\n\t          },\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(7);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimen(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var addBarcodeButton = void 0;\n\t      var addBarcodeText = void 0;\n\t      var copyBarcodeButton = void 0;\n\t      var copyBarcodeText = void 0;\n\t      if (this.props.addBarcode) {\n\t        addBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcode\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcode) {\n\t        copyBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.copyBarcode\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeButton = void 0;\n\t      if (this.props.removeBarcode) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcode,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeBarcodeButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                setSpecimen: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainer: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeButton,\n\t              addBarcodeText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeButton,\n\t              copyBarcodeText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(8);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.setCollection = _this.setCollection.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollection',\n\t    value: function setCollection(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollection('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = React.createElement(_customFields2.default, {\n\t              fields: specimenTypeFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.collection.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollection,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimen: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Custom Attribute Fields\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\tvar CustomFields = function (_React$Component) {\n\t  _inherits(CustomFields, _React$Component);\n\t\n\t  function CustomFields() {\n\t    _classCallCheck(this, CustomFields);\n\t\n\t    return _possibleConstructorReturn(this, (CustomFields.__proto__ || Object.getPrototypeOf(CustomFields)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CustomFields, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var fields = this.props.fields;\n\t      var attributeFields = Object.keys(fields).map(function (attribute) {\n\t\n\t        var datatype = _this2.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n\t        if (datatype === 'text' || datatype === 'number') {\n\t          if (fields[attribute]['refTableId'] === null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t\n\t          if (fields[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fields[attribute]['refTableId']],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === 'datetime') {\n\t          return React.createElement(DataElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.object[attribute]\n\t          });\n\t        }\n\t\n\t        // Do not present the possibility of uploading if file is already set\n\t        // File must instead be deleted or overwritten.\n\t        if (datatype === 'file' && !(_this2.props.data || {})[attribute]) {\n\t          return React.createElement(FileElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.files[_this2.props.object[attribute]]\n\t          });\n\t        }\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        attributeFields\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CustomFields;\n\t}(React.Component);\n\t\n\tCustomFields.propTypes = {\n\t  fields: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  object: React.PropTypes.object.isRequired,\n\t  setData: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = CustomFields;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.props.containersNonPrimary[this.props.container.parentContainerId];\n\t      this.props.setContainer(name, value);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.setContainer('temperature', container.temperature);\n\t      this.props.setContainer('locationId', container.locationId);\n\t      this.props.setContainer('statusId', container.statusId);\n\t    }\n\t  }, {\n\t    key: 'recursive',\n\t    value: function recursive(object, id) {\n\t      for (var key in this.props.containersNonPrimary) {\n\t        if (id == this.props.containersNonPrimary[key].parentContainerId) {\n\t          object = this.recursive(object, key);\n\t          delete object[key];\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      if (this.props.data) {\n\t        containerBarcodesNonPrimary = this.recursive(containerBarcodesNonPrimary, this.props.data.container.id);\n\t        delete containerBarcodesNonPrimary[this.props.data.container.id];\n\t      }\n\t\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.setContainer,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainer: this.props.setContainer\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(11);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.state = {\n\t      coordinate: null\n\t    };\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.checkoutContainers = _this.checkoutContainers.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var load = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary == 1 ? this.props.loadSpecimen : this.props.loadContainer;\n\t\n\t        load(this.props.children[this.props.coordinates[coordinate]].barcode);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      var _this2 = this;\n\t\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      var node = e.target;\n\t      this.props.saveChildContainer(container).then(function () {\n\t        _this2.setState({ coordinate: node.id });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'increaseCoordinate',\n\t    value: function increaseCoordinate() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var coordinate = _this3.props.coordinate;\n\t        coordinate++;\n\t        for (var c in _this3.props.coordinates) {\n\t          if (c == coordinate) {\n\t            _this3.props.close();\n\t            reject();\n\t          }\n\t        }\n\t        _this3.props.setCoordinate(coordinate);\n\t        resolve();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(name, value) {\n\t      var _this4 = this;\n\t\n\t      if (value) {\n\t        var containerId = value;\n\t        var container = this.props.containers[containerId];\n\t        container.parentContainerId = this.props.container.id;\n\t        container.coordinate = this.props.coordinate;\n\t\n\t        this.props.saveChildContainer(container).then(function () {\n\t          var node = document.getElementById(container.coordinate);\n\t          _this4.setState({ coordinate: node.id });\n\t          if (_this4.props.sequential) {\n\t            _this4.increaseCoordinate().then(function () {\n\t              _this4.props.edit('barcode');\n\t            });\n\t          } else {\n\t            _this4.props.close();\n\t          }\n\t        });\n\t      }\n\t    }\n\t\n\t    //TODO: this is the same as the containerList in the container form\n\t    //These functions should be combined in biobankIndex.js\n\t\n\t  }, {\n\t    key: 'checkoutContainers',\n\t    value: function checkoutContainers() {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function () {\n\t        var checkoutList = _this5.props.checkoutList;\n\t        for (var coordinate in checkoutList) {\n\t          checkoutList[coordinate].parentContainerId = null;\n\t          checkoutList[coordinate].coordinate = null;\n\t          _this5.props.saveChildContainer(checkoutList[coordinate]);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this6 = this;\n\t\n\t      var barcodeField = void 0;\n\t      if ((this.props.editable || {}).barcode) {\n\t        barcodeField = React.createElement(SearchableDropdown, {\n\t          name: 'barcode',\n\t          label: 'Barcode',\n\t          options: this.props.barcodes,\n\t          onUserInput: this.loadContainer,\n\t          placeHolder: 'Please Scan or Select Barcode',\n\t          autoFocus: true\n\t        });\n\t      }\n\t\n\t      var load = React.createElement(\n\t        'div',\n\t        { className: (this.props.editable || {}).barcode ? 'open' : 'closed' },\n\t        React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Note',\n\t            text: 'Select or Scan Containers to be Loaded. If Sequential is Checked, the Coordinate will Auto-Increment after each Load.'\n\t          }),\n\t          React.createElement(CheckboxElement, {\n\t            name: 'sequential',\n\t            label: 'Sequential',\n\t            value: this.props.sequential,\n\t            onUserInput: this.props.setSequential\n\t          }),\n\t          barcodeField,\n\t          React.createElement(ButtonElement, {\n\t            label: 'Done',\n\t            onUserInput: this.props.close\n\t          })\n\t        )\n\t      );\n\t\n\t      if ((this.props.editable || {}).containerCheckout) {\n\t        var barcodes = this.props.mapFormOptions(this.props.children, 'barcode');\n\t        barcodeField = React.createElement(SearchableDropdown, {\n\t          name: 'barcode',\n\t          label: 'Barcode',\n\t          options: barcodes,\n\t          onUserInput: function onUserInput(name, value) {\n\t            return _this6.props.setCheckoutList(_this6.props.children[value]);\n\t          },\n\t          placeHolder: 'Please Scan or Select Barcode',\n\t          autoFocus: true\n\t        });\n\t      }\n\t\n\t      var checkout = React.createElement(\n\t        'div',\n\t        { className: (this.props.editable || {}).containerCheckout ? 'open' : 'closed' },\n\t        React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Note',\n\t            text: 'Click, Select or Scan Containers to be Unloaded and Press \\'Confirm\\''\n\t          }),\n\t          barcodeField,\n\t          React.createElement(ButtonElement, {\n\t            label: 'Confirm',\n\t            onUserInput: function onUserInput() {\n\t              _this6.checkoutContainers();_this6.props.close();\n\t            }\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            text: React.createElement(\n\t              'a',\n\t              { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t              'Cancel'\n\t            )\n\t          })\n\t        )\n\t      );\n\t\n\t      //TODO: This will eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var title = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = this.redirectURL;\n\t\n\t            if (!this.props.select) {\n\t              if ((this.props.coordinates || {})[coordinate]) {\n\t                if (coordinate in this.props.checkoutList) {\n\t                  nodeClass = 'node checkout';\n\t                } else if (coordinate == this.state.coordinate) {\n\t                  nodeClass = 'node new';\n\t                } else {\n\t                  nodeClass = 'node occupied';\n\t                }\n\t                dataHtml = 'true';\n\t                dataToggle = 'tooltip';\n\t                dataPlacement = 'top';\n\t                //tooltipTitle = \n\t                //  '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                //  '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                //  '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                draggable = this.props.editable.barcode ? 'false' : 'true';\n\t                onDragStart = this.drag;\n\t                onDragOver = null;\n\t                onDrop = null;\n\t                if (this.props.editable.containerCheckout) {\n\t                  onClick = function onClick(e) {\n\t                    var container = _this6.props.containers[_this6.props.coordinates[e.target.id]];\n\t                    _this6.props.setCheckoutList(container);\n\t                  };\n\t                }\n\t                if (this.props.editable.barcode) {\n\t                  onClick = null;\n\t                }\n\t              } else if (!this.props.editable.containerCheckout) {\n\t                nodeClass = coordinate == this.props.coordinate ? 'node selected' : 'node load';\n\t                title = 'Load...';\n\t                onClick = function onClick(e) {\n\t                  _this6.props.setCoordinate(e.target.id);_this6.props.edit('barcode');\n\t                };\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this6.props.setContainer('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this6.props.setContainer('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                title: title,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            { className: 'row', style: rowStyle },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { style: { width: 500 } },\n\t          checkout,\n\t          load\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'display' },\n\t          display\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      var _this2 = this;\n\t\n\t      if (this.props.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          _this2.props.closeModal();\n\t        });\n\t      } else {\n\t        this.props.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 850,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '50px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          \"div\",\n\t          { style: backdropStyle, onClick: this.closeModal },\n\t          React.createElement(\n\t            \"div\",\n\t            { style: modalStyle, onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              } },\n\t            React.createElement(\n\t              \"div\",\n\t              { style: titleStyle },\n\t              this.props.title,\n\t              React.createElement(\n\t                \"span\",\n\t                { style: glyphStyle, onClick: this.closeModal },\n\t                \"\\xD7\"\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { style: bodyStyle },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(6);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _preparationForm = __webpack_require__(13);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Pool Specimen Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\tvar PoolSpecimenForm = function (_React$Component) {\n\t  _inherits(PoolSpecimenForm, _React$Component);\n\t\n\t  function PoolSpecimenForm(props) {\n\t    _classCallCheck(this, PoolSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (PoolSpecimenForm.__proto__ || Object.getPrototypeOf(PoolSpecimenForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      barcodeList: {},\n\t      errorMessage: null,\n\t      formErrors: {},\n\t      barcodeCount: 2,\n\t      preparation: false,\n\t      step: 1\n\t    };\n\t\n\t    _this.handleSubmit = _this.handleSubmit.bind(_this);\n\t    _this.validateForm = _this.validateForm.bind(_this);\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.setPreparationFormData = _this.setPreparationFormData.bind(_this);\n\t    _this.setSpecimenFormData = _this.setSpecimenFormData.bind(_this);\n\t    _this.submitForm = _this.submitForm.bind(_this);\n\t    _this.setBarcodeCount = _this.setBarcodeCount.bind(_this);\n\t    _this.next = _this.next.bind(_this);\n\t    _this.previous = _this.previous.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.removePreparation = _this.removePreparation.bind(_this);\n\t    _this.validate = _this.validate.bind(_this);\n\t    _this.formSwitch = _this.formSwitch.bind(_this);\n\t    _this.preparationSwitch = _this.preparationSwitch.bind(_this);\n\t    _this.runAjax = _this.runAjax.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(PoolSpecimenForm, [{\n\t    key: 'next',\n\t    value: function next() {\n\t      var _this2 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this2.setState({\n\t          poolData: data,\n\t          step: _this2.state.step + 1\n\t        });\n\t      }, function (error) {\n\t        swal(\"Oops!\", error.responseText, \"error\");\n\t      });\n\t    }\n\t  }, {\n\t    key: 'previous',\n\t    value: function previous() {\n\t      this.setState({\n\t        step: this.state.step - 1\n\t      });\n\t    }\n\t  }, {\n\t    key: 'validate',\n\t    value: function validate() {\n\t      return this.runAjax(this.props.specimenRequest, { barcodeList: this.state.barcodeList });\n\t    }\n\t  }, {\n\t    key: 'runAjax',\n\t    value: function runAjax(url, inputData) {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        $.ajax(url, {\n\t          method: \"GET\",\n\t          dataType: 'json',\n\t          data: inputData,\n\t          success: function (data) {\n\t            resolve(data);\n\t          }.bind(_this3),\n\t          error: function error(_error, textStatus, errorThrown) {\n\t            reject(_error);\n\t            console.error(_error);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setBarcodeCount',\n\t    value: function setBarcodeCount(field, value) {\n\t      var barcodeCount = value;\n\t      var barcodeList = this.state.barcodeList;\n\t      for (var barcode in barcodeList) {\n\t        if (barcode > barcodeCount) {\n\t          delete barcodeList[barcode];\n\t        }\n\t      }\n\t\n\t      this.setState({ barcodeCount: barcodeCount, barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'formSwitch',\n\t    value: function formSwitch(inputForm, specimenForm) {\n\t      switch (this.state.step) {\n\t        case 1:\n\t          return inputForm;\n\t        case 2:\n\t          return specimenForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'preparationSwitch',\n\t    value: function preparationSwitch(preparationButton, preparationForm) {\n\t      switch (this.state.preparation) {\n\t        case false:\n\t          return preparationButton;\n\t        case true:\n\t          return preparationForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var _this4 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this4.setState({\n\t          poolData: data,\n\t          preparation: true\n\t        });\n\t      }, function (error) {\n\t        swal('Oh no!', error.responseText, 'error');\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removePreparation',\n\t    value: function removePreparation() {\n\t      var formData = this.state.formData;\n\t      //TODO: is it better to set it to empty, or delete it?\n\t      formData.preparationForm = {};\n\t      this.setState({\n\t        preparation: false,\n\t        formData: formData\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      //Generates barcodes\n\t      var barcodes = [];\n\t      for (var i = 1; i <= this.state.barcodeCount; i++) {\n\t        barcodes.push(React.createElement(TextboxElement, {\n\t          name: i,\n\t          label: 'Barcode ' + i,\n\t          onUserInput: this.setFormData,\n\t          required: true,\n\t          value: this.state.barcodeList[i],\n\t          errorMessage: this.state.formErrors[i]\n\t        }));\n\t      }\n\t\n\t      var preparationButton = React.createElement(\n\t        'div',\n\t        { className: 'row' },\n\t        React.createElement('div', { className: 'col-xs-4' }),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs 4 action' },\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button add',\n\t                onClick: this.addPreparation\n\t              },\n\t              '+'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Add Preparation'\n\t          )\n\t        )\n\t      );\n\t\n\t      var preparationForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        var specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId];\n\t\n\t        var specimenProtocols = {};\n\t        for (var id in specimenProtocolAttributes) {\n\t          specimenProtocols[id] = this.props.specimenProtocols[id];\n\t        }\n\t        specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\t\n\t        preparationForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(_preparationForm2.default, {\n\t              formData: this.state.formData.preparationForm,\n\t              specimenProtocols: specimenProtocols,\n\t              specimenProtocolAttributes: specimenProtocolAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              setParentFormData: this.setPreparationFormData,\n\t              insertAction: loris.BaseURL + '/biobank/ajax/submitData.php?action=insertSpecimenPreparation'\n\t            }),\n\t            React.createElement(\n\t              'a',\n\t              { className: 'pull-right', style: { cursor: 'pointer' }, onClick: this.removePreparation },\n\t              'Cancel Preparation'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var inputForm = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(StaticElement, {\n\t              label: 'Pooling Note',\n\t              text: 'Select or Scan the specimens to be pooled. Please ensure that they are the same type, and share the same PSCID and Visit Label'\n\t            }),\n\t            React.createElement(NumericElement, {\n\t              label: '\\u2116 of Specimens',\n\t              min: '2',\n\t              max: '100',\n\t              value: this.state.barcodeCount,\n\t              onUserInput: this.setBarcodeCount\n\t            }),\n\t            barcodes\n\t          )\n\t        ),\n\t        this.preparationSwitch(preparationButton, preparationForm),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-sm-3 col-xs-offset-9 action' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Next'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.next\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        )\n\t      );\n\t\n\t      //TODO: Things here need to be in the proper order!!!\n\t      var specimenForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        // This is to provide the options for the output specimens\n\t        var specimenTypes = {};\n\t        if (this.state.poolData.typeId) {\n\t          specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n\t        }\n\t\n\t        var pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n\t        var visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\t\n\t        var barcodesArray = Object.values(this.state.barcodeList);\n\t        var barcodesString = barcodesArray.join(', ');\n\t\n\t        // TODO: rather than all specimen units this should really be specific to the\n\t        // type\n\t        var specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\t\n\t        specimenForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            React.createElement(_specimenForm2.default, {\n\t              formData: this.state.formData.specimenForm,\n\t              candidateId: this.state.poolData.candidateId,\n\t              pscid: pscid,\n\t              sessionId: this.state.poolData.sessionId,\n\t              visit: visit,\n\t              parentSpecimenBarcodes: barcodesString,\n\t              parentSpecimenIds: this.state.poolData.specimenIds,\n\t              specimenTypes: specimenTypes,\n\t              specimenTypeUnits: this.props.specimenTypeUnits,\n\t              specimenUnits: specimenUnits,\n\t              containerTypesPrimary: this.props.containerTypesPrimary,\n\t              containersNonPrimary: this.props.containersNonPrimary,\n\t              specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              capacities: this.props.capacities,\n\t              containerDimensions: this.props.containerDimensions,\n\t              containerCoordinates: this.props.containerCoordinates,\n\t              setParentFormData: this.setSpecimenFormData,\n\t              action: loris.BaseURL + '/biobank/ajax/submitData.php?action=submitSpecimen',\n\t              refreshParent: this.props.refreshParent\n\t            }),\n\t            React.createElement(ButtonElement, {\n\t              label: 'Submit'\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-3 col-xs-offset-2 action' },\n\t            React.createElement(\n\t              'span',\n\t              { className: 'action' },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: this.previous\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'action-title' },\n\t              'Previous'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'poolSpecimenForm',\n\t          id: 'poolSpecimenForm',\n\t          onSubmit: this.handleSubmit,\n\t          ref: 'form'\n\t        },\n\t        this.formSwitch(inputForm, specimenForm)\n\t      );\n\t    }\n\t\n\t    /** *******************************************************************************\n\t     *                      ******     Helper methods     *******\n\t     *********************************************************************************/\n\t\n\t  }, {\n\t    key: 'validateForm',\n\t    value: function validateForm(formElement, value) {\n\t      var _this5 = this;\n\t\n\t      var formErrors = this.state.formErrors;\n\t\n\t      //validate barcode regex\n\t      if (formElement === \"barcode\" && value !== \"\") {\n\t        if (!/^hello/.test(this.state.formData.barcode)) {\n\t          formErrors.barcode = true;\n\t        } else {\n\t          formErrors.barcode = false;\n\t        }\n\t      }\n\t\n\t      //validate that quantity is a number and less than capacity\n\t      if (formElement === \"quantity\" && value !== \"\") {\n\t        if (isNaN(value) || value > this.props.capacities[this.state.currentContainerType]) {\n\t          formErrors.quantity = true;\n\t        } else {\n\t          formErrors.quantity = false;\n\t        }\n\t      }\n\t\n\t      //validate datatypes and regex of generated type attributes\n\t      var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n\t      var specimenTypeFields = Object.keys(specimenTypeFieldsObject).map(function (attribute) {\n\t\n\t        var datatype = _this5.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"number\") {\n\t          if (formElement === attribute) {\n\t            if (isNaN(value) && value !== \"\") {\n\t              formErrors[attribute] = true;\n\t            } else {\n\t              formErrors[attribute] = false;\n\t            }\n\t          }\n\t        }\n\t      });\n\t\n\t      this.setState({\n\t        formErrors: formErrors\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Handle form submission\n\t     * @param {object} e - Form submission event\n\t     */\n\t\n\t  }, {\n\t    key: 'handleSubmit',\n\t    value: function handleSubmit(e) {\n\t      e.preventDefault();\n\t\n\t      this.submitForm();\n\t    }\n\t\n\t    /*\n\t     * Uploads the file to the server\n\t     */\n\t\n\t  }, {\n\t    key: 'submitForm',\n\t    value: function submitForm() {\n\t      // Set form data and specimen the biobank file\n\t      var formData = this.state.formData;\n\t      var preparationForm = this.state.formData.preparationForm;\n\t      var specimenForm = this.state.formData.specimenForm;\n\t      formData['preparationForm'] = JSON.stringify(preparationForm);\n\t      formData['specimenForm'] = JSON.stringify(specimenForm);\n\t\n\t      console.log(formData.specimenForm);\n\t      console.log(formData.preparationForm);\n\t\n\t      var formObj = new FormData();\n\t      for (var key in formData) {\n\t        if (formData[key] !== \"\") {\n\t          formObj.append(key, formData[key]);\n\t        }\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: this.props.action,\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function () {\n\t          //this.props.refreshParent();\n\t          swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n\t          this.props.onSuccess();\n\t        }.bind(this),\n\t        error: function (err) {\n\t          console.error(err);\n\t          var msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\t          this.setState({\n\t            errorMessage: msg\n\t          });\n\t          swal(msg, \"\", \"error\");\n\t        }.bind(this)\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Checks if the inputted file name is valid\n\t     *\n\t     * @param {string} requiredFileName - Required file name\n\t     * @param {string} fileName - Provided file name\n\t     * @return {boolean} - true if fileName starts with requiredFileName, false\n\t     *   otherwise\n\t     */\n\t    //  isValidFileName(requiredFileName, fileName) {\n\t    //    if (fileName === null || requiredFileName === null) {\n\t    //      return false;\n\t    //    }\n\t    //\n\t    //    return (fileName.indexOf(requiredFileName) === 0);\n\t    //  }\n\t\n\t    /**\n\t     * Validate the form\n\t     *\n\t     * @param {object} formRefs - Object containing references to React form elements\n\t     * @param {object} formData - Object containing form data inputed by user\n\t     * @return {boolean} - true if all required fields are filled, false otherwise\n\t     */\n\t\n\t  }, {\n\t    key: 'isValidForm',\n\t    value: function isValidForm(formRefs, formData) {\n\t      var isValidForm = true;\n\t\n\t      var requiredFields = {\n\t        pscid: null,\n\t        visitLabel: null\n\t      };\n\t\n\t      Object.keys(requiredFields).map(function (field) {\n\t        if (formData[field]) {\n\t          requiredFields[field] = formData[field];\n\t        } else if (formRefs[field]) {\n\t          formRefs[field].props.hasError = true;\n\t          isValidForm = false;\n\t        }\n\t      });\n\t      this.forceUpdate();\n\t\n\t      return isValidForm;\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      // This lets the modal window know that there is formData\n\t      // and will cause a warning to be thrown of the modal window\n\t      // is exited\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t\n\t      if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n\t        this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n\t      }\n\t\n\t      var formData = this.state.formData;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      //TODO: there must be a better way to do this\n\t      if (isNaN(formElement)) {\n\t        formData[formElement] = value;\n\t      } else {\n\t        barcodeList[formElement] = value;\n\t      }\n\t\n\t      this.setState({\n\t        formData: formData,\n\t        barcodeList: barcodeList\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setPreparationFormData',\n\t    value: function setPreparationFormData(preparationFormData) {\n\t      var formData = this.state.formData;\n\t      formData.preparationForm = preparationFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenFormData',\n\t    value: function setSpecimenFormData(specimenFormData) {\n\t      var formData = this.state.formData;\n\t      formData.specimenForm = specimenFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }]);\n\t\n\t  return PoolSpecimenForm;\n\t}(React.Component);\n\t\n\tPoolSpecimenForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  action: React.PropTypes.string.isRequired,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\texports.default = PoolSpecimenForm;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(8);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = React.createElement(_customFields2.default, {\n\t              fields: specimenProtocolFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.preparation.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainerForm = function (_React$Component) {\n\t  _inherits(BiobankContainerForm, _React$Component);\n\t\n\t  function BiobankContainerForm() {\n\t    _classCallCheck(this, BiobankContainerForm);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankContainerForm.__proto__ || Object.getPrototypeOf(BiobankContainerForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankContainerForm, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Generates new Barcode Form everytime the addContainer button is pressed\n\t      var containerListArray = Object.keys(this.props.containerList);\n\t      var containers = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          containers.push(React.createElement(ContainerBarcodeForm, {\n\t            key: key,\n\t            containerKey: key,\n\t            id: i,\n\t            container: _this2.props.containerList[key] || null,\n\t            errors: (_this2.props.errors[key] || {}).container || {},\n\t            collapsed: _this2.props.collapsed[key],\n\t            containerTypesNonPrimary: _this2.props.containerTypesNonPrimary,\n\t            containerBarcodesNonPrimary: _this2.props.containerBarcodesNonPrimary,\n\t            removeContainer: containerListArray.length !== 1 ? function () {\n\t              _this2.props.removeContainer(key);\n\t            } : null,\n\t            addContainer: i == containerListArray.length ? _this2.props.addContainer : null,\n\t            setCopyMultiplier: _this2.props.setCopyMultiplier,\n\t            copyMultiplier: _this2.props.copyMultiplier,\n\t            copyContainer: i == containerListArray.length && _this2.props.containerList[key] ? _this2.props.copyContainer : null,\n\t            setContainerList: _this2.props.setContainerList,\n\t            toggleCollapse: _this2.props.toggleCollapse\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = containerListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: \"containerForm\",\n\t          onSubmit: this.props.saveContainerList,\n\t          ref: \"form\"\n\t        },\n\t        React.createElement(\"br\", null),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-11\" },\n\t            React.createElement(SelectElement, {\n\t              name: \"siteId\",\n\t              label: \"Site\",\n\t              options: this.props.centers,\n\t              onUserInput: this.props.setSiteId,\n\t              required: true,\n\t              value: this.props.siteId\n\t            })\n\t          )\n\t        ),\n\t        containers,\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"col-xs-3 col-xs-offset-9\" },\n\t          React.createElement(ButtonElement, { label: \"Submit\" })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainerForm;\n\t}(React.Component);\n\t\n\tBiobankContainerForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  barcode: React.PropTypes.string,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\t/**\n\t * Container Barcode Form\n\t *\n\t * Acts a subform for ContainerForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerBarcodeForm = function (_React$Component2) {\n\t  _inherits(ContainerBarcodeForm, _React$Component2);\n\t\n\t  function ContainerBarcodeForm() {\n\t    _classCallCheck(this, ContainerBarcodeForm);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, (ContainerBarcodeForm.__proto__ || Object.getPrototypeOf(ContainerBarcodeForm)).call(this));\n\t\n\t    _this3.setContainer = _this3.setContainer.bind(_this3);\n\t    _this3.copy = _this3.copy.bind(_this3);\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(ContainerBarcodeForm, [{\n\t    key: \"copy\",\n\t    value: function copy() {\n\t      this.props.copyContainer(this.props.containerKey);\n\t    }\n\t\n\t    //TODO: change form.js so this isn't necessary\n\t\n\t  }, {\n\t    key: \"setContainer\",\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainerList(name, value, this.props.containerKey);\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      // HR TODO: All this CSS should eventually be moved\n\t      var addContainerButton = void 0;\n\t      var addContainerText = void 0;\n\t      var copyContainerButton = void 0;\n\t      var copyContainerText = void 0;\n\t      if (this.props.addContainer) {\n\t        addContainerButton = React.createElement(\n\t          \"span\",\n\t          { className: \"action\" },\n\t          React.createElement(\n\t            \"div\",\n\t            {\n\t              className: \"action-button add\",\n\t              onClick: this.props.addContainer\n\t            },\n\t            \"+\"\n\t          )\n\t        );\n\t\n\t        addContainerText = React.createElement(\n\t          \"span\",\n\t          { className: \"action-title\" },\n\t          \"New Entry\"\n\t        );\n\t      }\n\t\n\t      if (this.props.copyContainer) {\n\t        copyContainerButton = React.createElement(\n\t          \"span\",\n\t          { className: \"action\" },\n\t          React.createElement(\n\t            \"div\",\n\t            {\n\t              className: \"action-button add\",\n\t              onClick: this.copy\n\t            },\n\t            React.createElement(\"span\", { className: \"glyphicon glyphicon-duplicate\" })\n\t          )\n\t        );\n\t        copyContainerText = React.createElement(\n\t          \"span\",\n\t          { className: \"action-title\" },\n\t          React.createElement(\"input\", {\n\t            className: \"form-control input-sm\",\n\t            type: \"number\",\n\t            min: \"1\",\n\t            max: \"50\",\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          \"Copies\"\n\t        );\n\t      }\n\t\n\t      var removeContainerButton = void 0;\n\t      if (this.props.removeContainer) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeContainerButton = React.createElement(\"span\", {\n\t          className: \"glyphicon glyphicon-remove\",\n\t          onClick: this.props.removeContainer,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: \"container\"\n\t        },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-11\" },\n\t            React.createElement(\n\t              \"div\",\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: \"barcode\",\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                ref: \"barcode\",\n\t                required: true,\n\t                value: this.props.container.barcode,\n\t                errorMessage: this.props.errors.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-1\", style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement(\"span\", {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              \"data-toggle\": \"collapse\",\n\t              \"data-target\": '#item-' + this.props.containerKey,\n\t              onClick: function onClick() {\n\t                return _this4.props.toggleCollapse(_this4.props.containerKey);\n\t              }\n\t            }),\n\t            removeContainerButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\"div\", { className: \"col-xs-2\" }),\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-9\" },\n\t            React.createElement(\n\t              \"div\",\n\t              { id: 'item-' + this.props.containerKey, className: \"collapse\" },\n\t              React.createElement(SelectElement, {\n\t                name: \"typeId\",\n\t                label: \"Container Type\",\n\t                options: this.props.containerTypesNonPrimary,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.typeId,\n\t                errorMessage: this.props.errors.typeId\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-11\" },\n\t            React.createElement(\"div\", { className: \"col-xs-3\" }),\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-xs-4 action\" },\n\t              addContainerButton,\n\t              addContainerText\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-xs-4 action\" },\n\t              copyContainerButton,\n\t              copyContainerText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerBarcodeForm;\n\t}(React.Component);\n\t\n\tContainerBarcodeForm.propTypes = {};\n\t\n\texports.default = BiobankContainerForm;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/**\n\t * Allows to dynamically render vertical tabs corresponding to tab panes.\n\t */\n\t\n\tvar VerticalTabs = function (_React$Component2) {\n\t  _inherits(VerticalTabs, _React$Component2);\n\t\n\t  function VerticalTabs(props) {\n\t    _classCallCheck(this, VerticalTabs);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, (VerticalTabs.__proto__ || Object.getPrototypeOf(VerticalTabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this2.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this2.props.defaultTab) {\n\t      activeTab = _this2.props.defaultTab;\n\t    } else if (_this2.props.tabs.length > 0) {\n\t      activeTab = _this2.props.tabs[0].id;\n\t    }\n\t\n\t    _this2.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this2.handleClick = _this2.handleClick.bind(_this2);\n\t    _this2.getTabs = _this2.getTabs.bind(_this2);\n\t    _this2.getTabPanes = _this2.getTabPanes.bind(_this2);\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(VerticalTabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tabbable col-md-3 col-sm-3' },\n\t          React.createElement(\n\t            'ul',\n\t            { className: 'nav nav-pills nav-stacked', role: 'tablist', style: tabStyle },\n\t            tabs\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content col-md-9 col-sm-9' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return VerticalTabs;\n\t}(React.Component);\n\t\n\tVerticalTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tVerticalTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component3) {\n\t  _inherits(TabPane, _React$Component3);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.VerticalTabs = VerticalTabs;\n\texports.TabPane = TabPane;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(11);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _globals = __webpack_require__(17);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(7);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(13);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(22);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(23);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(24);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Map Options for Form Select Elements\n\t      var specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      var addAliquotForm = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Make Aliquots'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this2.props.edit('aliquotForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            closeModal: this.props.close,\n\t            show: this.props.editable.aliquotForm\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.props.data,\n\t            specimen: this.props.specimen,\n\t            setSpecimen: this.props.setSpecimen,\n\t            saveSpecimen: this.props.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            close: this.props.close,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.props.editable.collection) {\n\t        var _containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t        var specimenTypeAttributes = void 0;\n\t        //loops through data object to produce static elements\n\t        if (this.props.data.specimen.collection.data) {\n\t          var collectionData = this.props.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(collectionData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenTypeAttributes[_this2.props.data.specimen.typeId][key].name,\n\t              text: collectionData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.props.data.specimen.collection.quantity + ' ' + this.props.options.specimenUnits[this.props.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel specimen-panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.props.editable.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.props.editable.collection ? null : function () {\n\t              _this2.props.edit('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.props.options.specimenProtocols) {\n\t        if (this.props.options.specimenProtocols[id].typeId == this.props.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation does Exist and the form is not in an edit state\n\t      if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        if (this.props.data.specimen.preparation.data) {\n\t          var preparationData = this.props.data.specimen.preparation.data;\n\t          specimenProtocolAttributes = Object.keys(preparationData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenProtocolAttributes[_this2.props.data.specimen.preparation.protocolId][key].name,\n\t              text: preparationData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel specimen-panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('preparation');_this2.props.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel specimen-panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.preparation ? null : function () {\n\t                _this2.props.edit('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.props.options.specimenMethods) {\n\t        if (this.props.options.specimenMethods[_id].typeId == this.props.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.props.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.props.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          files: this.props.files,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          setFiles: this.props.setFiles,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        //TODO: Make the below a separate component\n\t        if (this.props.data.specimen.analysis.data) {\n\t          var analysisData = this.props.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.keys(analysisData).map(function (key) {\n\t            if (_this2.props.options.attributeDatatypes[_this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].datatypeId].datatype === 'file') {\n\t              return React.createElement(LinkElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key],\n\t                href: loris.BaseURL + '/biobank/ajax/requestData.php?action=downloadFile&file=' + analysisData[key],\n\t                target: '_blank',\n\t                download: analysisData[key]\n\t              });\n\t            } else {\n\t              return React.createElement(StaticElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key]\n\t              });\n\t            }\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.analysis.locationId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel specimen-panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('analysis');_this2.props.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel specimen-panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.analysis ? null : function () {\n\t                _this2.props.edit('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.props.specimen,\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        errors: this.props.errors,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        setSpecimen: this.props.setSpecimen,\n\t        saveSpecimen: this.props.saveSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      //TODO: this can maybe become its own component...?\n\t      var returnToFilter = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: this.props.loadFilters\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-title' },\n\t          'Return to Filter'\n\t        )\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.data.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            specimen: this.props.data.specimen,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        ),\n\t        returnToFilter\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(11);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _quantityField = __webpack_require__(18);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(19);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(20);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(21);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.editable.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.edit('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                specimen: this.props.specimen,\n\t                errors: this.props.errors.specimen,\n\t                units: units,\n\t                close: this.props.close,\n\t                setSpecimen: this.props.setSpecimen,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if (this.props.data.specimen && this.props.options.specimenTypes[this.props.data.specimen.typeId].freezeThaw == 1) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.editable.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  _this2.props.edit('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              container: this.props.container,\n\t              errors: this.props.errors.container,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.editable.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              container: this.props.container,\n\t              errors: this.props.errors.container,\n\t              stati: stati,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.editable.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              container: this.props.container,\n\t              errors: this.props.errors.container,\n\t              centers: this.props.options.centers,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var barcode = this.props.data.parentSpecimenContainer.barcode;\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t              return _this2.props.loadSpecimen(barcode);\n\t            } },\n\t          barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var _barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode;\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t                return _this2.props.loadContainer(_barcode);\n\t              } },\n\t            _barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerParentForm');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t          ),\n\t          React.createElement(\n\t            _Modal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              closeModal: this.props.close,\n\t              show: this.props.editable.containerParentForm\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            inputClass: 'col-xs-11',\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.quantity,\n\t            errorMessage: this.props.errors.quantity\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            inputClass: 'col-xs-11',\n\t            options: this.props.units,\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.unitId,\n\t            errorMessage: this.props.errors.unitId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveSpecimen,\n\t            columnSize: 'col-xs-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimen: React.PropTypes.func,\n\t  close: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.temperature,\n\t            errorMessage: this.props.errors.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.statusId,\n\t            errorMessage: this.props.errors.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.centers,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.locationId,\n\t            errorMessage: this.props.errors.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(8);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      if (value instanceof File) {\n\t        data[name] = value.name;\n\t        this.props.setFiles(name, value);\n\t      } else {\n\t        data[name] = value;\n\t        this.setAnalysis('data', data);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var submitButton = void 0;\n\t      submitButton = this.props.data.specimen.analysis ? React.createElement(ButtonElement, { label: 'Update' }) : React.createElement(ButtonElement, { label: 'Submit' });\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = React.createElement(_customFields2.default, {\n\t              fields: specimenMethodFieldsObject,\n\t              files: this.props.files,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.analysis.data,\n\t              data: (((this.props.data || {}).specimen || {}).analysis || {}).data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          fileUpload: true,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\t//TODO: revise this component once Shipments are enabled.\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle() {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    return _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // Create Collection Node\n\t      var collectionNode = void 0;\n\t      if ((this.props.specimen || {}).collection || this.props.container) {\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Preparation Node\n\t      var preparationNode = void 0;\n\t      if ((this.props.specimen || {}).preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Analysis Node\n\t      var analysisNode = void 0;\n\t      if ((this.props.specimen || {}).analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'A'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Lines\n\t      var line = void 0;\n\t      var nodes = 0;\n\t      for (var i in this.props.specimen) {\n\t        if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n\t          nodes++;\n\t        }\n\t      }\n\t      var lineWidth = nodes > 1 ? 60 / (nodes - 1) : 0;\n\t      var lineStyle = { width: lineWidth + '%' };\n\t      line = React.createElement('div', { className: 'lifecycle-line', style: lineStyle });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode ? line : null,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainer('parentContainerId', null);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(17);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _lifeCycle = __webpack_require__(23);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _barcodePath = __webpack_require__(26);\n\t\n\tvar _barcodePath2 = _interopRequireDefault(_barcodePath);\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tvar _containerCheckout = __webpack_require__(24);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankContainer */\n\t\n\t/**\n\t * Biobank Container\n\t *\n\t * Fetches data corresponding to a given Container from Loris backend and\n\t * displays a page allowing viewing of meta information of the container\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainer = function (_React$Component) {\n\t  _inherits(BiobankContainer, _React$Component);\n\t\n\t  function BiobankContainer() {\n\t    _classCallCheck(this, BiobankContainer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainer.__proto__ || Object.getPrototypeOf(BiobankContainer)).call(this));\n\t\n\t    _this.drag = _this.drag.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainer, [{\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        errors: this.props.errors,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      var barcodePath = React.createElement(_barcodePath2.default, {\n\t        container: this.props.data.container,\n\t        parentContainers: this.props.data.parentContainers,\n\t        loadContainer: this.props.loadContainer\n\t      });\n\t\n\t      var checkoutButton = void 0;\n\t      var display = void 0;\n\t      if (this.props.data.container.dimensionId) {\n\t        //TODO: the styling here needs to be redone.\n\t\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          { style: { marginLeft: 'auto', height: '10%', marginRight: '10%' } },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: !this.props.editable.containerCheckout && !this.props.editable.barcode ? 'action-button update open' : 'action-button update closed',\n\t              title: 'Checkout Child Containers',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerCheckout');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t          )\n\t        );\n\t\n\t        var barcodes = this.props.mapFormOptions(this.props.options.containers, 'barcode');\n\t        //delete values that are parents of the container\n\t        if (this.props.data.parentContainers) {\n\t          for (var key in this.props.data.parentContainers) {\n\t            delete barcodes[this.props.data.parentContainers[key].id];\n\t          }\n\t        }\n\t        delete barcodes[this.props.data.container.id];\n\t\n\t        display = React.createElement(_containerDisplay2.default, {\n\t          barcodes: barcodes,\n\t          container: this.props.container,\n\t          coordinate: this.props.coordinate,\n\t          sequential: this.props.sequential,\n\t          checkoutList: this.props.checkoutList,\n\t          containers: this.props.options.containers,\n\t          children: this.props.data.childContainers,\n\t          types: this.props.options.containerTypes,\n\t          dimensions: this.props.options.containerDimensions[this.props.data.container.dimensionId],\n\t          coordinates: this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null,\n\t          containerTypes: this.props.options.containerTypes,\n\t          containerStati: this.props.options.containerStati,\n\t          editable: this.props.editable,\n\t          edit: this.props.edit,\n\t          close: this.props.close,\n\t          setCoordinate: this.props.setCoordinate,\n\t          setSequential: this.props.setSequential,\n\t          setCheckoutList: this.props.setCheckoutList,\n\t          mapFormOptions: this.props.mapFormOptions,\n\t          loadSpecimen: this.props.loadSpecimen,\n\t          loadContainer: this.props.loadContainer,\n\t          saveChildContainer: this.props.saveChildContainer\n\t        });\n\t      }\n\t\n\t      var listAssigned = [];\n\t      var coordinateList = [];\n\t      var listUnassigned = [];\n\t      if (this.props.data.childContainers) {\n\t        (function () {\n\t          var children = _this2.props.data.childContainers;\n\t\n\t          var _loop = function _loop(child) {\n\t            var load = void 0;\n\t            if (_this2.props.options.containerTypes[children[child].typeId].primary) {\n\t              load = _this2.props.loadSpecimen;\n\t            } else {\n\t              load = _this2.props.loadContainer;\n\t            }\n\t\n\t            if (children[child].coordinate) {\n\t              listAssigned.push(React.createElement(\n\t                'div',\n\t                null,\n\t                React.createElement(\n\t                  'a',\n\t                  { onClick: function onClick() {\n\t                      return load(children[child].barcode);\n\t                    }, style: { cursor: 'pointer' } },\n\t                  children[child].barcode\n\t                )\n\t              ));\n\t              coordinateList.push(React.createElement(\n\t                'div',\n\t                null,\n\t                'at ',\n\t                children[child].coordinate\n\t              ));\n\t            } else {\n\t              listUnassigned.push(React.createElement(\n\t                'a',\n\t                {\n\t                  onClick: function onClick() {\n\t                    return load(children[child].barcode);\n\t                  },\n\t                  style: { cursor: 'pointer' },\n\t                  id: children[child].id,\n\t                  draggable: true,\n\t                  onDragStart: _this2.drag\n\t                },\n\t                children[child].barcode\n\t              ));\n\t            }\n\t          };\n\t\n\t          for (var child in children) {\n\t            _loop(child);\n\t          }\n\t        })();\n\t      }\n\t\n\t      //TODO: this can maybe become it's own component..?\n\t      var returnToFilter = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: this.props.loadFilters\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-title' },\n\t          'Return to Filter'\n\t        )\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'container-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.data.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'display-container' },\n\t            !(listAssigned.length === 0 && listUnassigned.length === 0) ? checkoutButton : null,\n\t            display,\n\t            barcodePath\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-list' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length !== 0 ? 'Assigned Containers' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'container-coordinate' },\n\t              React.createElement(\n\t                'div',\n\t                null,\n\t                listAssigned\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { style: { paddingLeft: 10 } },\n\t                coordinateList\n\t              )\n\t            ),\n\t            listAssigned.length !== 0 ? React.createElement('br', null) : null,\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listUnassigned.length !== 0 ? 'Unassigned Containers' : null\n\t            ),\n\t            listUnassigned\n\t          )\n\t        ),\n\t        returnToFilter\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainer;\n\t}(React.Component);\n\t\n\tBiobankContainer.propTypes = {\n\t  containerPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = BiobankContainer;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Path\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar BarcodePath = function (_React$Component) {\n\t  _inherits(BarcodePath, _React$Component);\n\t\n\t  function BarcodePath() {\n\t    _classCallCheck(this, BarcodePath);\n\t\n\t    return _possibleConstructorReturn(this, (BarcodePath.__proto__ || Object.getPrototypeOf(BarcodePath)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BarcodePath, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var path = [];\n\t      var pathLength = this.props.parentContainers.length - 1;\n\t      var containerURL = loris.BaseURL + '/biobank/container/?barcode=';\n\t\n\t      var _loop = function _loop(i) {\n\t        path.push(React.createElement(\n\t          'span',\n\t          { className: 'barcodePath' },\n\t          '/',\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                return _this2.props.loadContainer(_this2.props.parentContainers[i].barcode);\n\t              },\n\t              style: { cursor: 'pointer' }\n\t            },\n\t            _this2.props.parentContainers[i].barcode\n\t          )\n\t        ));\n\t      };\n\t\n\t      for (var i = pathLength; i >= 0; i--) {\n\t        _loop(i);\n\t      }\n\t      path.push(React.createElement(\n\t        'span',\n\t        { className: 'barcodePath' },\n\t        '/',\n\t        React.createElement(\n\t          'a',\n\t          {\n\t            onClick: function onClick() {\n\t              return _this2.props.loadContainer(_this2.props.container.barcode);\n\t            },\n\t            style: { cursor: 'pointer' }\n\t          },\n\t          this.props.container.barcode\n\t        )\n\t      ));\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        path\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodePath;\n\t}(React.Component);\n\t\n\tBarcodePath.propTypes = {};\n\t\n\texports.default = BarcodePath;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/biobankIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c34633a76930ed6c2962","/* global ReactDOM */\n\nimport Loader from 'Loader';\nimport BiobankFilter from './filter';\nimport BiobankSpecimen from './specimen';\nimport BiobankContainer from './container';\n\nclass BiobankIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoaded: false,\n      page: '',\n      options: {},\n      specimenFilter: {},\n      containerDataTable: {},\n      containerFilter: {},\n      containerDataTable: {},\n      data: {},\n\n      specimen: {},\n      container: {},\n      files: {},\n\n      containerList: {1: {}},\n      countContainers: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n      coordinate: null,\n      sequential: false,\n      checkoutList: {},\n\n      errors: {\n        container: {},\n        specimen: {},\n        list: {},\n      },\n      editable: {\n        specimenForm: false,\n        containerForm: false,\n        aliquotForm: false,\n        containerParentForm: false,\n        barcode: false,\n        containerCheckout: false,\n        temperature: false,\n        quantity: false,\n        status: false,\n        location: false,\n        collection: false,\n        preparation: false,\n        analysis: false,\n      }\n    };\n\n    this.fetch                    = this.fetch.bind(this);\n    this.loadFilters              = this.loadFilters.bind(this);\n    this.loadSpecimenDataTable    = this.loadSpecimenDataTable.bind(this);\n    this.loadContainerDataTable   = this.loadContainerDataTable.bind(this);\n    this.loadOptions              = this.loadOptions.bind(this);\n    this.loadContainer            = this.loadContainer.bind(this);\n    this.loadSpecimen             = this.loadSpecimen.bind(this);\n    this.fetch                    = this.fetch.bind(this);\n    this.updateSpecimenFilter     = this.updateSpecimenFilter.bind(this);\n    this.updateContainerFilter    = this.updateContainerFilter.bind(this);\n    this.clone                    = this.clone.bind(this);\n    this.mapFormOptions           = this.mapFormOptions.bind(this);\n    this.toggleCollapse           = this.toggleCollapse.bind(this);\n    this.edit                     = this.edit.bind(this);\n    this.close                    = this.close.bind(this);\n    this.revertParameters         = this.revertParameters.bind(this);\n    this.setSpecimen              = this.setSpecimen.bind(this);\n    this.revertSpecimen           = this.revertSpecimen.bind(this);\n    this.setContainerList         = this.setContainerList.bind(this);\n    this.addContainer             = this.addContainer.bind(this);\n    this.copyContainer            = this.copyContainer.bind(this);\n    this.removeContainer          = this.removeContainer.bind(this);\n    this.setContainer             = this.setContainer.bind(this);\n    this.revertContainer          = this.revertContainer.bind(this);\n    this.setCopyMultiplier        = this.setCopyMultiplier.bind(this);\n    this.setSiteId                = this.setSiteId.bind(this);\n    this.setCoordinate            = this.setCoordinate.bind(this);\n    this.setSequential            = this.setSequential.bind(this);\n    this.setCheckoutList          = this.setCheckoutList.bind(this);\n    this.setFiles                 = this.setFiles.bind(this)\n    this.addPreparation           = this.addPreparation.bind(this);\n    this.addAnalysis              = this.addAnalysis.bind(this);\n    this.saveSpecimen             = this.saveSpecimen.bind(this);\n    this.saveContainer            = this.saveContainer.bind(this);\n    this.saveChildContainer       = this.saveChildContainer.bind(this);\n    this.saveContainerList        = this.saveContainerList.bind(this);\n    this.validateContainer        = this.validateContainer.bind(this);\n    this.validateSpecimen         = this.validateSpecimen.bind(this);\n    this.save                     = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadFilters().then(() =>\n      this.loadOptions().then(() =>\n        this.setState({isLoaded: true})\n      )\n    );\n  }\n\n  loadFilters() {\n    return new Promise(resolve => {\n      this.loadContainerDataTable().then(() =>\n        this.loadSpecimenDataTable().then(() =>  {\n          this.setState({page: 'filter'}, resolve());\n        })\n      )\n    });\n  }\n\n  loadSpecimenDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenFilterDataURL).then(data => {\n        let specimenDataTable = data;\n        this.setState({specimenDataTable}, resolve());\n      });\n    });\n  }\n\n  loadContainerDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerFilterDataURL).then(data => {\n        let containerDataTable = data;\n        this.setState({containerDataTable}, resolve());\n      });\n    });\n  }\n\n  loadOptions() {\n    return new Promise(resolve => {\n      this.fetch(this.props.optionsURL).then(data => {\n        let options = data;\n        this.setState({options}, resolve());\n      });\n    });\n  }\n\n  loadContainer(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerDataURL+barcode).then(data => {\n        let container = this.clone(data.container);\n        let page = 'container';\n        this.close();\n        this.revertParameters();\n        this.setState({data, container, page}, resolve());\n      });\n    });\n  }\n\n  loadSpecimen(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenDataURL+barcode).then(data => {\n        let specimen = this.clone(data.specimen);\n        let container = this.clone(data.container);\n        let page = 'specimen';\n        this.setState({data, specimen, container, page}, resolve());\n      });\n    });\n  }\n\n  fetch(url) {\n    return new Promise(resolve => {\n      $.ajax(url, {\n        dataType: 'json',\n        success: data => resolve(data),\n        error: (error, errorCode, errorMsg) => console.error(error, errorCode, errorMsg)\n      });\n    });\n  }\n\n  updateSpecimenFilter(specimenFilter) {\n    this.setState({specimenFilter});\n  }\n\n  updateContainerFilter(containerFilter) {\n    this.setState({containerFilter});\n  }\n\n  clone(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  mapFormOptions(object, attribute) {\n    let data = {};\n    for (let id in object) {\n      data[id] = object[id][attribute];\n    }\n    return data;\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  edit(stateKey) {\n    this.close().then(() => {\n      let editable = this.state.editable;\n      editable[stateKey] = true;\n      this.setState({editable});\n    });\n  }\n\n  close() {\n    return new Promise(resolve => {\n      let editable = this.state.editable;\n      for (let key in editable) {\n        editable[key] = false;\n      }\n\n      this.state.data.specimen && this.revertSpecimen();\n      this.state.data.container && this.revertContainer();\n      this.revertParameters();\n      this.setState({editable}, resolve());\n    });\n  }\n\n  revertParameters() {\n    //TODO: these should be moved to another function\n    let coordinate = this.state.coordinate;\n    coordinate = null;\n    let sequential = this.state.sequential;\n    sequential = false;\n    let checkoutList = this.state.checkoutList;\n    checkoutList = {};\n    let containerList = this.state.containerList;\n    containerList = {1: {}};\n    let countContainers = this.state.countContainers;\n    countContainers = 1;\n    let collapsed = this.state.collapsed;\n    collapsed = {1: true};\n    let copyMultiplier = this.state.copyMultiplier;\n    copyMultiplier = 1;\n    let siteId = this.state.siteId;\n    siteId = null;\n    let errors = this.state.errors;\n    errors = {container:{}, specimen:{}, list:{}};\n\n    this.setState({\n      coordinate,\n      sequential,\n      checkoutList,\n      containerList,\n      countContainers,\n      collapsed,\n      copyMultiplier,\n      siteId,\n      errors\n    });\n  }\n\n  setSpecimen(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  revertSpecimen() {\n    let specimen = this.state.specimen;\n    specimen = this.clone(this.state.data.specimen);\n    this.setState({specimen});\n  }\n\n  setContainerList(name, value, key) {\n    let containerList = this.state.containerList;\n    containerList[key][name] = value;\n    this.setState({containerList});\n  }\n\n  addContainer() {\n    let containerList = this.state.containerList;\n    let countContainers = this.state.countContainers;\n    let collapsed = this.state.collapsed;\n\n    countContainers++;\n    containerList[countContainers] = {};\n    collapsed[countContainers] = true;\n\n    this.setState({containerList, countContainers, collapsed});\n  }\n\n  copyContainer(key) {\n    let countContainers = this.state.countContainers;\n    let collapsed = this.state.collapsed;\n    let containerList = this.state.containerList;\n    let multiplier = this.state.copyMultiplier;\n\n    countContainers++;\n    for (let i=1; i<=multiplier; i++) {\n      containerList[countContainers] = this.clone(containerList[key]);\n      delete containerList[countContainers].barcode;\n      collapsed[countContainers] = true;\n      countContainers++;\n    }\n\n    this.setState({containerList, countContainers, collapsed});\n  }\n\n  removeContainer(key) {\n    let containerList = this.state.containerList;\n    delete containerList[key]\n    this.setState({containerList});\n  }\n\n  setContainer(name, value) {\n    let container = this.state.container;\n    value ? container[name] = value : delete container[name]; \n    this.setState({container});\n  }\n\n  revertContainer() {\n    let container = this.state.container;\n    container = this.clone(this.state.data.container);\n    this.setState({container});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n \n  setSiteId(name, value) {\n    let siteId = this.state.siteId;\n    siteId = value;\n    this.setState({siteId});\n  }\n\n  setCoordinate(value) {\n    let coordinate = this.state.coordinates;\n    coordinate = value;\n    this.setState({coordinate});\n  }\n\n  setSequential(name, value) {\n    let sequential = this.state.sequential;\n    sequential = value;\n    this.setState({sequential});\n  }\n\n  setFiles(name, value) {\n    let files = this.state.files;\n    files[value.name] = value;\n    this.setState({files});\n  }\n\n  setCheckoutList(container) {\n    let checkoutList = this.state.checkoutList;\n    checkoutList[container.coordinate] = container;\n    this.setState({checkoutList});\n  }\n  \n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  addAnalysis() {\n    let specimen = this.state.specimen;\n    specimen.analysis = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  saveSpecimen() {\n    let specimen = this.state.specimen;\n    this.validateSpecimen(specimen).then(() => {\n      this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(() => {\n        let data = this.state.data;\n        data.specimen = this.clone(this.state.specimen);\n        this.setState({data}, ()=>{this.close()});\n      }\n      );\n    });\n  }\n\n  saveContainer() {\n    let container = this.state.container;\n    this.validateContainer(container).then(() => {\n      this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(() => {\n        let data = this.state.data;\n        data.container = this.clone(this.state.container);\n        this.setState({data}, ()=>{this.close()});\n        }\n      );\n    });\n  }\n  \n  saveChildContainer(container) {\n    return new Promise(resolve => {\n      this.save(container, this.props.saveContainerURL).then(() => {\n        let data = this.state.data;\n        if (container.parentContainerId === null) {\n          delete data.childContainers[container.id];\n        } else {\n          data.childContainers[container.id] = this.clone(container);\n        }\n        this.setState({data}, resolve());\n        }\n      )\n    });\n  }\n\n  saveContainerList() {\n    let containerList = this.state.containerList;\n    let availableId = Object.keys(this.state.options.containerStati).find(\n      key => this.state.options.containerStati[key].status === 'Available'\n    );\n    let containerListValidation = [];\n\n    Object.entries(containerList).map(([key, container]) => {\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.originId = this.state.siteId;\n      container.locationId = this.state.siteId;\n\n      containerListValidation.push(this.validateContainer(container, key));\n    });\n\n    Promise.all(containerListValidation).then(()=> {\n      this.save(containerList, this.props.saveContainerListURL, 'Container Creation Successful!').then(\n        () => {this.close(); this.loadFilters(); this.loadOptions();}\n      );\n    }).catch(()=>{});\n  }\n\n  save(data, url, message) {\n    return new Promise(resolve => {\n      let dataObject = new FormData();\n      for (let file in this.state.files) {\n        dataObject.append(this.state.files[file].name, this.state.files[file]);\n      }\n      dataObject.append('data', JSON.stringify(data));\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: dataObject,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: () => {\n          resolve();\n          this.loadOptions();\n          message && swal(message, '', 'success');\n        },\n        error: (error, textStatus, errorThrown) => {\n          let message = (error.responseJSON||{}).message || 'Submission error!';\n          swal('Error', message, 'error');\n          console.error(error, textStatus, errorThrown);\n        }\n      });\n    });\n  }\n\n  validateContainer(container, key) {\n    return new Promise((resolve, reject) => {\n      let errors = this.state.errors;\n      errors.container = {};\n\n      let required = [\n        'barcode',\n        'typeId',\n        'temperature',\n        'statusId',\n        'locationId',\n      ]\n\n      let float = [\n        'temperature',\n      ]\n\n      required.map(field => {\n        if (!container[field]) {\n          errors.container[field] = 'This field is required! ';\n        }\n      });\n\n      float.map(field => {\n        if (isNaN(container[field])) {\n          errors.container[field] = 'This field must be a number! ';\n        }\n      });\n\n      required.map(field => {\n        if (!container[field]) {\n          errors.container[field] = 'This field is required! ';\n        }\n      });\n\n      Object.values(this.state.options.containers).map(c => {\n        if (container.barcode === c.barcode) {\n          errors.container.barcode = 'Barcode must be unique';\n        }\n      });\n\n      if (key) {\n        errors.list[key] = {};\n        errors.list[key].container = errors.container;\n      }\n\n      if (Object.keys(errors.container).length == 0) {\n        this.setState({errors}, resolve());\n      } else {\n        this.setState({errors}, reject());\n      }\n    });\n  }\n\n  //TODO: validation might be more effective within 1 function.\n  validateContainer(container, key) {\n    return new Promise((resolve, reject) => {\n      let errors = this.state.errors;\n      errors.container = {};\n\n      let required = [\n        'barcode',\n        'typeId',\n        'temperature',\n        'statusId',\n        'locationId',\n      ]\n\n      let float = [\n        'temperature',\n      ]\n\n      required.map(field => {\n        if (!container[field]) {\n          errors.container[field] = 'This field is required! ';\n        }\n      });\n\n      float.map(field => {\n        if (isNaN(container[field])) {\n          errors.container[field] = 'This field must be a number! ';\n        }\n      });\n\n      Object.values(this.state.options.containers).map(c => {\n        if (container.barcode === c.barcode) {\n          errors.container.barcode = 'Barcode must be unique';\n        }\n      });\n\n      if (key) {\n        errors.list[key] = {};\n        errors.list[key].container = errors.container;\n      }\n\n      if (Object.keys(errors.container).length == 0) {\n        this.setState({errors}, resolve());\n      } else {\n        this.setState({errors}, reject());\n      }\n    });\n  }\n\n  validateSpecimen(specimen, key) {\n    return new Promise((resolve, reject) => {\n      let errors = this.state.errors;\n      errors.specimen = {};\n\n      let required = [\n        'containerId',\n        'typeId',\n        'quantity',\n        'unitId',\n        'candidateId',\n        'sessionId',\n        'collection',\n      ]\n\n      let float = [\n        'quantity',\n      ]\n\n      required.map(field => {\n        if (!specimen[field]) {\n          errors.specimen[field] = 'This field is required! ';\n        }\n      });\n\n      float.map(field => {\n        if (isNaN(specimen[field])) {\n          errors.specimen[field] = 'This field must be a number! ';\n        }\n      });\n\n      if (key) {\n        errors.list[key] = {};\n        errors.list[key].specimen = errors.specimen;\n      }\n\n      if (Object.keys(errors.specimen).length == 0) {\n        this.setState({errors}, resolve());\n      } else {\n        this.setState({errors}, reject());\n      }\n    });\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (\n        <div style={{height: 500}}><Loader/></div>\n      );\n    }\n\n    let display;\n    switch (this.state.page) {\n      case 'container':\n          display = (\n            <BiobankContainer\n              data={this.state.data}\n              options={this.state.options}\n              container={this.state.container}\n              errors={this.state.errors}\n              coordinate={this.state.coordinate}\n              sequential={this.state.sequential}\n              checkoutList={this.state.checkoutList}\n              editable={this.state.editable}\n              loadContainer={this.loadContainer}\n              loadSpecimen={this.loadSpecimen}\n              loadFilters={this.loadFilters}\n              mapFormOptions={this.mapFormOptions}\n              setContainer={this.setContainer}\n              revertContainer={this.revertContainer}\n              saveContainer={this.saveContainer}\n              setCoordinate={this.setCoordinate}\n              setSequential={this.setSequential}\n              setCheckoutList={this.setCheckoutList}\n              saveChildContainer={this.saveChildContainer}\n              edit={this.edit}\n              close={this.close}\n            />\n          );\n        break;\n      case 'specimen': \n        display = (\n          <BiobankSpecimen\n            data={this.state.data}\n            options={this.state.options}\n            container={this.state.container}\n            specimen={this.state.specimen}\n            errors={this.state.errors}\n            files={this.state.files}\n            editable={this.state.editable}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            loadFilters={this.loadFilters}\n            loadOptions={this.loadOptions}\n            mapFormOptions={this.mapFormOptions}\n            setContainer={this.setContainer}\n            revertContainer={this.revertContainer}\n            saveContainer={this.saveContainer}\n            setSpecimen={this.setSpecimen}\n            revertSpecimen={this.revertSpecimen}\n            saveSpecimen={this.saveSpecimen}\n            addPreparation={this.addPreparation}\n            addAnalysis={this.addAnalysis}\n            setFiles={this.setFiles}\n            saveChildContainer={this.saveChildContainer}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            edit={this.edit}\n            close={this.close}\n            save={this.save}\n          />\n        );\n        break;\n      case 'filter':\n        display = (\n          <BiobankFilter\n            specimenFilter={this.state.specimenFilter}\n            specimenDataTable={this.state.specimenDataTable}\n            containerFilter={this.state.containerFilter}\n            containerDataTable={this.state.containerDataTable}\n            options={this.state.options}\n            errors={this.state.errors}\n            collapsed={this.state.collapsed}\n            editable={this.state.editable}\n            siteId={this.state.siteId}\n            containerList={this.state.containerList}\n            copyMultiplier={this.state.copyMultiplier}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            updateSpecimenFilter={this.updateSpecimenFilter}\n            updateContainerFilter={this.updateContainerFilter}\n            mapFormOptions={this.mapFormOptions}\n            clone={this.clone}\n            edit={this.edit}\n            close={this.close}\n            toggleCollapse={this.toggleCollapse}\n            loadFilters={this.loadFilters}\n            loadOptions={this.loadOptions}\n            setCopyMultiplier={this.setCopyMultiplier}\n            setSiteId={this.setSiteId}\n            setContainerList={this.setContainerList}\n            addContainer={this.addContainer}\n            copyContainer={this.copyContainer}\n            removeContainer={this.removeContainer}\n            saveContainerList={this.saveContainerList}\n            save={this.save}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            validateContainer={this.validateContainer}\n          />\n        );\n    }\n\n    return (\n      <div className=\"biobank-page\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            {display}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n$(function() {\n  const request = `${loris.BaseURL}/biobank/ajax/requestData.php?`;\n  const submit = `${loris.BaseURL}/biobank/ajax/submitData.php?`;\n  const biobankIndex = (\n    <div className='page=biobank'>\n      <BiobankIndex\n        specimenFilterDataURL={`${loris.BaseURL}/biobank/?format=json`}\n        containerFilterDataURL={`${request}action=getContainerFilterData`}\n        specimenDataURL={`${request}action=getSpecimenData&barcode=`}\n        containerDataURL={`${request}action=getContainerData&barcode=`}\n        optionsURL={`${request}action=getFormOptions`}\n        saveContainerURL={`${submit}action=saveContainer`}\n        saveSpecimenURL={`${submit}action=saveSpecimen`}\n        saveContainerListURL={`${submit}action=saveContainerList`}\n        saveBarcodeListURL={`${submit}action=saveBarcodeList`}\n      />\n    </div>\n  );\n  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/biobankIndex.js","/**\n * This file contains the React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  render() {\n    return (\n        <div\n          className=\"loader\"\n          style={{width: this.props.size, height: this.props.size}}\n        />\n    );\n  }\n}\n\nLoader.propTypes = {size: React.PropTypes.int}\nLoader.defaultProps = {size: 120}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","import FilterForm from 'FilterForm';\nimport BiobankSpecimenForm from './specimenForm';\nimport PoolSpecimenForm from './poolSpecimenForm';\nimport BiobankContainerForm from './containerForm';\nimport {Tabs, TabPane} from 'Tabs';\nimport Modal from 'Modal';\nimport Loader from 'Loader';\n\nclass BiobankFilter extends React.Component {\n  constructor() {\n    super();\n\n    this.resetSpecimenFilters = this.resetSpecimenFilters.bind(this);\n    this.resetContainerFilters = this.resetContainerFilters.bind(this);\n    this.formatSpecimenColumns = this.formatSpecimenColumns.bind(this);\n    this.formatContainerColumns = this.formatContainerColumns.bind(this);\n  }\n\n  resetSpecimenFilters() {\n    this.refs.specimenFilter.clearFilter();\n  }\n  \n  resetContainerFilters() {\n    this.refs.containerFilter.clearFilter();\n  }\n\n  formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n    let row = {};\n    let barcode;\n\n    // Create the mapping between rowHeaders and rowData in a row object.\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    switch (column) {\n      case 'Barcode':\n        barcode = row['Barcode'];\n        return (\n          <td>\n            <a onClick={()=>{this.props.loadSpecimen(barcode)}} style={{cursor:'pointer'}}>\n              {cell}\n            </a>\n          </td>\n        );\n      case 'Parent Barcode':\n        barcode = row['Parent Barcode'];\n        return (\n          <td>\n            <a \n              onClick={()=>{this.props.loadSpecimen(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td> \n        );\n      case 'Container Barcode':\n        barcode = row['Container Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td>\n        );\n      case 'PSCID':\n        let pscidURL = loris.BaseURL + '/' + row['PSCID'];\n        return <td><a href={pscidURL}>{cell}</a></td>;\n      case 'Visit Label':\n        let visitLabelURL = loris.BaseURL+'/instrument_list/?candID='+row['PSCID']+\n          '&sessionID='+row['Visit Label'];\n        return <td><a href={visitLabelURL}>{cell}</a></td>;\n      case 'Status':\n        switch (cell) {\n          case 'Available':\n            return <td style={{color: 'green'}}>{cell}</td>;\n          case 'Reserved':\n            return <td style={{color: 'orange'}}>{cell}</td>\n          case 'Dispensed':\n            return <td style={{color: 'red'}}>{cell}</td>\n        }\n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  formatContainerColumns(column, cell, rowData, rowHeaders) {\n    // Create the mapping between rowHeaders and rowData in a row object.\n    let row = {};\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    let barcode;\n    switch (column) {\n      case 'Barcode':\n        barcode = row['Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td>\n        );\n      case 'Status':\n        switch (cell) {\n          case 'Available':\n            return <td style={{color: 'green'}}>{cell}</td>;\n          case 'Reserved':\n            return <td style={{color: 'orange'}}>{cell}</td>\n          case 'Dispensed':\n            return <td style={{color: 'red'}}>{cell}</td>\n        }\n      case 'Parent Barcode':\n        barcode = row['Parent Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td> \n        );\n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  render() {\n    let addSpecimenButton;\n    let poolSpecimenButton;\n    let addContainerButton;\n\n    /**\n     * Map Options for Form Select Elements of Specimen Form\n     */\n    let containerTypesPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesPrimary, 'label'\n    );\n    let containerStati = this.props.mapFormOptions(\n      this.props.options.containerStati, 'status'\n    );\n    let candidates = this.props.mapFormOptions(\n      this.props.options.candidates, 'pscid'\n    );\n    let sessions = this.props.mapFormOptions(\n      this.props.options.sessions, 'label'\n    );\n\n    addSpecimenButton = (\n      <div className='action' title='Add Specimen'>\n        <div className='action-button add' onClick={()=>{this.props.edit('specimenForm')}}>\n          +\n        </div>\n        <Modal\n          title='Add New Specimen'\n          show={this.props.editable.specimenForm}\n          closeModal={this.props.close}\n        >\n          <BiobankSpecimenForm\n            candidates={candidates}\n            sessions={sessions}\n            candidateSessions={this.props.options.candidateSessions}\n            sessionCenters={this.props.options.sessionCenters}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            clone={this.props.clone}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            close={this.props.close}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n\n    //TODO: turn the following into components to avoid duplication\n    //TODO: should there be a general search, or one for specimen and one for containers?\n    let barcodesPrimary = this.props.mapFormOptions(this.props.options.containersPrimary, 'barcode');\n    let searchSpecimenButton = (\n      <div className='action' title='Go To Specimen'>\n        <div className='action-button search' onClick={()=>{this.props.edit('searchSpecimen')}}>\n          <span className='glyphicon glyphicon-search'/>\n        </div>\n        <Modal\n          title='Go To Specimen'\n          show={this.props.editable.searchSpecimen}\n          closeModal={this.props.close}\n        >\n          <SearchableDropdown\n            name='barcode'\n            label='Barcode'\n            options={barcodesPrimary}\n            onUserInput={(name, value) => {\n              barcodesPrimary[value] &&\n              this.props.loadSpecimen(barcodesPrimary[value]).then(()=>this.props.close())\n            }}\n            placeHolder='Please Scan or Select Barcode'\n            autoFocus={true}\n          />\n        </Modal>\n      </div>\n    );\n\n    let barcodesNonPrimary = this.props.mapFormOptions(this.props.options.containersNonPrimary, 'barcode');\n    let searchContainerButton;\n    searchContainerButton = (\n      <div className='action' title='Go To Container'>\n        <div className='action-button search' onClick={()=>{this.props.edit('searchContainer')}}>\n          <span className='glyphicon glyphicon-search'/>\n        </div>\n        <Modal\n          title='Go To Barcode'\n          show={this.props.editable.searchContainer}\n          closeModal={this.props.close}\n        >\n          <SearchableDropdown\n            name='barcode'\n            label='Barcode'\n            options={barcodesNonPrimary}\n            onUserInput={(name, value) => {\n              barcodesNonPrimary[value] &&\n              this.props.loadContainer(barcodesNonPrimary[value]).then(()=>this.props.close())\n            }}\n            placeHolder='Please Scan or Select Barcode'\n            autoFocus={true}\n          />\n        </Modal>\n      </div>\n    );\n\n\n    poolSpecimenButton = (\n      <div className='action' title='Pool Specimens'>\n        <div className='action-button pool' onClick={()=>{this.props.edit('poolSpecimenForm')}}>\n          <span className='glyphicon glyphicon-resize-small'/>\n        </div>\n        <Modal\n          title='Pool Specimens'\n          show={this.props.editable.poolSpecimenForm}\n          closeModal={this.props.close}\n        >\n          <PoolSpecimenForm\n            specimenTypes={this.props.options.specimenTypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            specimenProtocols={this.props.options.specimenProtocols}\n            specimenProtocolAttributes={this.props.options.specimenProtocolAttributes}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            attributeOptions={this.props.options.attributeOptions}\n            capacities={this.props.options.capacities}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenUnits={this.props.options.specimenUnits}\n            candidates={candidates}\n            candidateSessions={this.props.options.candidateSessions}\n            sessionCenters={this.props.options.sessionCenters}\n            specimenRequest={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode`}\n            mapFormOptions={this.props.mapFormOptions}\n            saveSpecimen={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveSpecimen`}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n          />\n        </Modal>\n      </div>\n    );\n\n    let containerTypesNonPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesNonPrimary, 'label'\n    );\n\n    addContainerButton = (\n      <div\n        className='action'\n        title='Add Container'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('containerForm')}}\n        >\n          <span>+</span>\n        </div>\n        <Modal\n          title='Add New Container'\n          show={this.props.editable.containerForm}\n          closeModal={this.props.close}\n        >\n          <BiobankContainerForm\n            siteId={this.props.siteId}\n            containerList={this.props.containerList}\n            errors={this.props.errors.list}\n            collapsed={this.props.collapsed}\n            copyMultiplier={this.props.copyMultiplier}\n            containerTypesNonPrimary={containerTypesNonPrimary}\n            centers={this.props.options.centers}\n            containerStati={containerStati}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n            validateContainer={this.props.validateContainer}\n            close={this.props.close}\n            toggleCollapse={this.props.toggleCollapse}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            setCopyMultiplier={this.props.setCopyMultiplier}\n            setSiteId={this.props.setSiteId}\n            setContainerList={this.props.setContainerList}\n            addContainer={this.props.addContainer}\n            copyContainer={this.props.copyContainer}\n            removeContainer={this.props.removeContainer}\n            saveContainerList={this.props.saveContainerList}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    ); \n    \n\n    let tabList = [\n      {id: \"specimens\", label: \"Specimens\"},\n      {id: \"containers\", label: \"Containers\"}\n    ];\n\n    return (\n      <div id='biobank-page'>\n        <Tabs tabs={tabList} defaultTab=\"specimens\" updateURL={true}>\n          <TabPane TabId={tabList[0].id}>\n            <div className='row' style={{marginTop:20}}>\n              <div className='col-lg-3' style={{marginTop: '10px'}}>\n                <div className='filter'>\n                  <FilterForm\n                    Module='biobank'\n                    ref='specimenFilter'\n                    formElements={this.props.specimenDataTable.form}\n                    onUpdate={this.props.updateSpecimenFilter}\n                    filter={this.props.specimenFilter}\n                  >\n                    <ButtonElement\n                      label=\"Clear Filters\"\n                      type=\"reset\" \n                      onUserInput={this.resetSpecimenFilters}\n                    />\n                    <div className='align-row'>\n                      <span className='action'>\n                        {searchSpecimenButton}\n                      </span>\n                      <span className='action'>\n                        {addSpecimenButton}\n                      </span>\n                      <span className='action'>\n                        {poolSpecimenButton}\n                      </span>\n                    </div>\n                  </FilterForm>\n                </div>\n              </div>\n              <div className='col-lg-9' style={{marginTop: '10px'}}>\n                <StaticDataTable\n                  Data={this.props.specimenDataTable.Data}\n                  Headers={this.props.specimenDataTable.Headers}\n                  Filter={this.props.specimenFilter}\n                  getFormattedCell={this.formatSpecimenColumns}\n                />\n              </div>\n            </div>\n          </TabPane>\n          <TabPane TabId={tabList[1].id}>\n            <div className='row'>\n              <div className='col-lg-3' style={{marginTop: '10px'}}>\n                <div className='filter'>\n                  <FilterForm\n                    Module='biobank' \n                    ref='containerFilter'\n                    formElements={this.props.containerDataTable.form}\n                    onUpdate={this.props.updateContainerFilter}\n                    filter={this.props.containerFilter}\n\t\t              >\n                    <ButtonElement\n                      label=\"Clear Filters\"\n                      type=\"reset\"\n                      onUserInput={this.resetContainerFilters}\n                    />\n                    <div className='align-row'>\n                      <span className='action'>\n                        {searchContainerButton}\n                      </span>\n                      <span className='action'>\n                        {addContainerButton}\n                      </span>\n                    </div>\n                  </FilterForm>\t\t\t\n                </div>\n              </div>\n              <div className='col-lg-9' style={{marginTop: '10px'}}>\n                <StaticDataTable\n                  Data={this.props.containerDataTable.Data}\n                  Headers={this.props.containerDataTable.Headers}\n                  Filter={this.props.containerFilter}\n                  getFormattedCell={this.formatContainerColumns}\n                />\n              </div>\n            </div>\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nBiobankFilter.propTypes = {\n  specimenFilter: React.PropTypes.object.isRequired,\n  specimenDataTable: React.PropTypes.object.isRequired,\n  containerFilter: React.PropTypes.object.isRequired,\n  containerDataTable: React.PropTypes.object.isRequired,\n  options: React.PropTypes.object.isRequired,\n  editable: React.PropTypes.object.isRequired,\n  loadContainer: React.PropTypes.func.isRequired,\n  loadSpecimen: React.PropTypes.func.isRequired,\n  loadTransfer: React.PropTypes.func.isRequired,\n  updateSpecimenFilter: React.PropTypes.func.isRequired,\n  updateContainerFilter: React.PropTypes.func.isRequired,\n  mapFormOptions: React.PropTypes.func.isRequired,\n  edit: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  save: React.PropTypes.func.isRequired,\n  saveBarcodeListURL: React.PropTypes.string.isRequired,\n}\n\nexport default BiobankFilter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/filter.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n    if (key) {\n      filter[key] = {};\n      if (value) {     // all defined/non-null values must have some length, else empty string\n        filter[key].value = Object.keys(value).length > 0 ? value : '';\n      } else {         // null and undefined handled here\n        filter[key].value = '';\n      }\n      filter[key].exactMatch = (type === \"SelectElement\");\n    } else if (filter && key && value === '') {\n      delete filter[key];\n    }\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure key is of string type and value is of string or object type\n    // before sending them to querystring\n    if (typeof fieldName !== 'string' ||\n        (typeof fieldValue !== 'string' && typeof fieldValue !== 'object')) {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <FormElement {...this.props}>\n        {formChildren}\n      </FormElement>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    let pencilGlyph;\n    if (this.props.edit) {\n      pencilGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-pencil\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.edit}\n        /> \n      );\n    } \n\n    let plusGlyph;\n    if (this.props.add) {\n      plusGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-plus\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.add}\n        />\n      );\n    }\n\n    let removeGlyph;\n    if (this.props.cancel) {\n      removeGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-remove\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.cancel}\n        />\n      );\n    }\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n      >\n        <span \n          className={glyphClass}\n          onClick={this.toggleCollapsed}\n          data-toggle=\"collapse\"\n          data-target={'#' + this.props.id}\n          style={{cursor: 'pointer'}}\n        />\n        {pencilGlyph}\n        {plusGlyph}\n        {removeGlyph}\n        {this.props.title}\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  edit: React.PropTypes.func,\n  add: React.PropTypes.func\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      formErrors: {},\n      candidateId: null,\n      sessionId: null,\n      centerId: null,\n      barcodeList: {1: {specimen: {collection: {}}, container: {}}},\n      count: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.addBarcode = this.addBarcode.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyBarcode = this.copyBarcode.bind(this);\n    this.removeBarcode = this.removeBarcode.bind(this);\n    this.saveBarcodeList = this.saveBarcodeList.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveBarcodeList() {\n    let barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let barcode in barcodeList) {\n      //set container values\n      let container = barcodeList[barcode].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.locationId = this.state.centerId;\n      container.originId = this.state.centerId;\n\n      //set specimen values\n      let specimen = barcodeList[barcode].specimen;\n      specimen.candidateId = this.state.candidateId;\n      specimen.sessionId = this.state.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.locationId = this.state.centerId;\n      if (this.props.specimenTypes[specimen.typeId].freezeThaw == 1) {\n        specimen.fTCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: these will eventually be higher level states.\n      if (this.props.data) {\n        specimen.candidateId = this.props.data.candidate.CandID;\n        specimen.sessionId = this.props.data.session.ID;\n        specimen.parentSpecimenId = this.props.data.specimen.id;\n        specimen.collection.locationId = this.props.data.container.locationId;\n        container.locationId = this.props.data.container.locationId;\n        container.originId = this.props.data.container.locationId;\n      }\n    \n      barcodeList[barcode].container = container;\n      barcodeList[barcode].specimen = specimen;\n    }\n\n    this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(\n      () => {this.props.close(); this.props.loadFilters()}\n    );\n  }\n\n  setSpecimen(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let centerId = this.state.centerId;\n    let candidateId = this.state.candidateId;\n    let sessionId = this.state.sessionId;\n    let barcodeList = this.state.barcodeList;\n\n    if (name === 'candidateId') {\n      candidateId = value;\n    } else if (name === 'sessionId') {\n      sessionId = value;\n      centerId = this.props.sessionCenters[sessionId].centerId;\n    } else {\n      //this is eliminate values if specimen type is changed\n      if (name === 'typeId') {\n        barcodeList[key].specimen = {collection:{}};\n      }\n      barcodeList[key].specimen[name] = value;\n    }\n\n    this.setState({barcodeList, centerId, candidateId, sessionId})\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let barcodeList = this.state.barcodeList;\n    barcodeList[key].container[name] = value;\n    this.setState({barcodeList});\n  }\n\n  addBarcode() {\n    let barcodeList = this.state.barcodeList;\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n\n    barcodeList[count+1] = {specimen: {}, container: {collection:{}}}; \n    collapsed[count+1] = true;\n    count = count+1\n\n    this.setState({barcodeList, collapsed, count});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyBarcode() {\n    let key = this.state.count;\n    let nextKey = this.state.count;\n    let collapsed = this.state.collapsed;\n    let barcodeList = this.state.barcodeList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      nextKey++;\n      barcodeList[nextKey] = this.props.clone(barcodeList[key]); \n      barcodeList[nextKey].container.barcode && delete barcodeList[nextKey].container.barcode;\n      collapsed[nextKey] = true;\n    }\n\n    this.setState({barcodeList, count: nextKey, collapsed});\n  }\n\n  removeBarcode(key) {\n    let barcodeList = this.state.barcodeList;\n    delete barcodeList[key];\n    this.setState({barcodeList: barcodeList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          container={this.state.barcodeList[key].container || null}\n          specimen={this.state.barcodeList[key].specimen || null}\n          removeBarcode={barcodeListArray.length !== 1 ?\n            () => this.removeBarcode(key) : null}\n          addBarcode={i == barcodeListArray.length ? this.addBarcode : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyBarcode={i == barcodeListArray.length && this.state.barcodeList[key] ? \n            this.copyBarcode : null}\n          setContainer={this.setContainer}\n          setSpecimen={this.setSpecimen}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimen}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimen}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.state.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.candidateId}\n            placeHolder='Search for a PSCID'\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.sessionId}\n            disabled={this.state.candidateId ? false : true}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={() => {\n          this.saveBarcodeList();\n          //this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()\n        }}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimen(name, value, this.props.barcodeKey);\n  }\n\n  render() {\n    let addBarcodeButton;\n    let addBarcodeText;\n    let copyBarcodeButton;\n    let copyBarcodeText;\n    if (this.props.addBarcode) {\n      addBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcode}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcode) {\n      copyBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.copyBarcode}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeButton;\n    if (this.props.removeBarcode) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcode}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => this.props.toggleCollapse(this.props.barcodeKey)}\n            />\n            {removeBarcodeButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                setSpecimen={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainer={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeButton}\n              {addBarcodeText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeButton}\n              {copyBarcodeText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","import CustomFields from './customFields'\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.setCollection = this.setCollection.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollection(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimen('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimen('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollection('data', data);\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = (\n            <CustomFields\n              fields={specimenTypeFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.collection.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollection}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimen: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Custom Attribute Fields\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\nclass CustomFields extends React.Component {\n  render() {\n    let fields = this.props.fields;\n    let attributeFields = Object.keys(fields).map(attribute => {\n\n      let datatype = this.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n      if (datatype === 'text' || datatype === 'number') {\n        if (fields[attribute]['refTableId'] === null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n\n        if (fields[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              options={this.props.attributeOptions[fields[attribute]['refTableId']]}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === 'datetime') {\n        return (\n          <DataElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.object[attribute]}\n          />\n        );\n      }\n\n      // Do not present the possibility of uploading if file is already set\n      // File must instead be deleted or overwritten.\n      if (datatype === 'file' && !(this.props.data||{})[attribute]) {\n        return (\n          <FileElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.files[this.props.object[attribute]]}\n          />\n        );\n      }\n    });\n\n    return (\n      <div>\n        {attributeFields}\n      </div>\n    );\n  }\n}\n\nCustomFields.propTypes = {\n  fields: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  object: React.PropTypes.object.isRequired,\n  setData: React.PropTypes.func.isRequired,\n}\n\nexport default CustomFields;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/customFields.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n  }\n\n  setContainer(name, value) {\n    let container = this.props.containersNonPrimary[this.props.container.parentContainerId];\n    this.props.setContainer(name, value);\n    this.props.setContainer('coordinate', null);\n    this.props.setContainer('temperature', container.temperature);\n    this.props.setContainer('locationId', container.locationId);\n    this.props.setContainer('statusId', container.statusId);\n  }\n\n  recursive(object, id) {\n    for (let key in this.props.containersNonPrimary) {\n      if (id == this.props.containersNonPrimary[key].parentContainerId) {\n        object = this.recursive(object, key);\n        delete object[key];\n      }\n    }\n    return object;\n  }\n\n  render() {\n    let containerDisplay;\n\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    if (this.props.data) {\n      containerBarcodesNonPrimary = this.recursive(containerBarcodesNonPrimary, this.props.data.container.id);\n      delete containerBarcodesNonPrimary[this.props.data.container.id];\n    }\n\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.setContainer}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions={\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates={\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes={this.props.containerTypes}\n            containerStati={this.props.containerStati} \n            select={true}\n            selectedCoordinate={this.props.container.coordinate}\n            setContainer={this.props.setContainer}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","import Modal from 'Modal'\n\n/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      coordinate: null,\n    }\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n    this.loadContainer = this.loadContainer.bind(this);\n    this.checkoutContainers = this.checkoutContainers.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let load = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary == 1 ? this.props.loadSpecimen : this.props.loadContainer;\n\n      load(this.props.children[this.props.coordinates[coordinate]].barcode);\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    let node = e.target;\n    this.props.saveChildContainer(container).then(()=>{\n      this.setState({coordinate: node.id});\n    });\n  }\n\n  increaseCoordinate() {\n    return new Promise((resolve, reject) => {\n      let coordinate = this.props.coordinate;\n      coordinate++;\n      for (let c in this.props.coordinates) {\n        if (c == coordinate) {\n          this.props.close();\n          reject();\n        }\n      }\n      this.props.setCoordinate(coordinate);\n      resolve();\n    });\n  }\n\n  loadContainer(name, value) {\n    if (value) {\n      let containerId = value;\n      let container = this.props.containers[containerId];\n      container.parentContainerId = this.props.container.id;\n      container.coordinate = this.props.coordinate;\n\n      this.props.saveChildContainer(container).then(() => {\n        let node = document.getElementById(container.coordinate);\n        this.setState({coordinate: node.id});\n        if (this.props.sequential) {\n          this.increaseCoordinate().then(() => {this.props.edit('barcode')});\n        } else {\n          this.props.close();\n        }\n      });\n    }\n  }\n\n  //TODO: this is the same as the containerList in the container form\n  //These functions should be combined in biobankIndex.js\n  checkoutContainers() {\n    return new Promise(() => {\n      let checkoutList = this.props.checkoutList;\n      for (let coordinate in checkoutList) {\n        checkoutList[coordinate].parentContainerId = null;\n        checkoutList[coordinate].coordinate = null;\n        this.props.saveChildContainer(checkoutList[coordinate]);\n      }\n    });\n  }\n\n  render() {\n  let barcodeField;\n  if ((this.props.editable||{}).barcode) {\n    barcodeField = (\n      <SearchableDropdown\n        name='barcode'\n        label='Barcode'\n        options={this.props.barcodes}\n        onUserInput={this.loadContainer}\n        placeHolder='Please Scan or Select Barcode'\n        autoFocus={true}\n      />\n    );\n  }\n  \n  let load = (\n    <div className={((this.props.editable||{}).barcode) ? 'open' : 'closed'}>\n      <FormElement>\n        <StaticElement\n          label='Note'\n          text='Select or Scan Containers to be Loaded. If Sequential is Checked,\n           the Coordinate will Auto-Increment after each Load.'\n        />\n        <CheckboxElement\n          name='sequential'\n          label='Sequential'\n          value={this.props.sequential}\n          onUserInput={this.props.setSequential}\n        />\n        {barcodeField}\n        <ButtonElement\n          label='Done'\n          onUserInput={this.props.close}\n        />\n      </FormElement>\n    </div>\n  );\n\n  if ((this.props.editable||{}).containerCheckout) {\n    let barcodes = this.props.mapFormOptions(this.props.children, 'barcode');\n    barcodeField = (\n      <SearchableDropdown\n        name='barcode'\n        label='Barcode'\n        options={barcodes}\n        onUserInput={(name, value)=>this.props.setCheckoutList(this.props.children[value])}\n        placeHolder='Please Scan or Select Barcode'\n        autoFocus={true}\n      />\n    );\n  }\n\n  let checkout = (\n    <div className={((this.props.editable||{}).containerCheckout) ? 'open' : 'closed'}>\n      <FormElement>\n        <StaticElement\n          label='Note'\n          text=\"Click, Select or Scan Containers to be Unloaded and Press 'Confirm'\"\n        />\n        {barcodeField}\n        <ButtonElement\n          label='Confirm'\n          onUserInput={()=>{this.checkoutContainers(); this.props.close();}}\n        />\n        <StaticElement\n          text={<a onClick={this.props.close} style={{cursor: 'pointer'}}>Cancel</a>}\n        />\n      </FormElement>\n    </div>\n\n  );\n\n  //TODO: This will eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  let coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let title = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = this.redirectURL;\n\n        if (!this.props.select) {\n          if ((this.props.coordinates||{})[coordinate]) {\n            if (coordinate in this.props.checkoutList) {\n              nodeClass = 'node checkout';\n            } else if (coordinate == this.state.coordinate) {\n              nodeClass = 'node new';\n            } else {\n              nodeClass = 'node occupied'\n            }\n            dataHtml = 'true';\n            dataToggle = 'tooltip';\n            dataPlacement = 'top';\n            //tooltipTitle = \n            //  '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //  '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //  '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            draggable = this.props.editable.barcode ? 'false' : 'true';\n            onDragStart = this.drag;\n            onDragOver = null;\n            onDrop = null;\n            if (this.props.editable.containerCheckout) {\n              onClick = (e)=>{\n                let container = this.props.containers[this.props.coordinates[e.target.id]];\n                this.props.setCheckoutList(container)\n              };\n            }\n            if (this.props.editable.barcode) {\n              onClick = null;\n            }\n          } else if (!this.props.editable.containerCheckout) {\n            nodeClass = coordinate == this.props.coordinate ?\n              'node selected' : 'node load';\n            title = 'Load...';\n            onClick = (e) => {this.props.setCoordinate(e.target.id); this.props.edit('barcode');};\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n              onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            title={title}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div className='row' style={rowStyle}>{column}</div>\n      );\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div>\n        <div style={{width: 500}}>\n          {checkout}\n          {load}\n        </div>\n        <div className='display'>\n          {display}\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    if (this.props.throwWarning) {                                              \n      swal({                                                                    \n        title: \"Are You Sure?\",                                                 \n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",                                                        \n        showCancelButton: true,                                                 \n        confirmButtonText: 'Proceed',                                           \n        cancelButtonText: 'Cancel',                                             \n      },                                                                        \n      () => {                                                              \n        this.props.closeModal();                                                        \n      });                                                            \n    } else {                                                                    \n      this.props.closeModal();\n    }                                                                           \n  }   \n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 850,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '50px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.closeModal}>\n          <div style={modalStyle} onClick={e => {e.stopPropagation()}}>\n            <div style={titleStyle}>\n              {this.props.title}\n              <span style={glyphStyle} onClick={this.closeModal}>\n                ×\n              </span>\n            </div>\n            <div style={bodyStyle}>\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nModal.defaultProps = {\n  throwWarning: true,\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","import SpecimenBarcodeForm from './barcodeForm';\nimport BiobankSpecimenForm from './specimenForm';\nimport SpecimenPreparationForm from './preparationForm';\n\n/**\n * Biobank Pool Specimen Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\nclass PoolSpecimenForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formData: {},\n      barcodeList: {},\n      errorMessage: null,\n      formErrors: {},\n      barcodeCount: 2,\n      preparation: false,\n      step: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.setPreparationFormData = this.setPreparationFormData.bind(this);\n    this.setSpecimenFormData = this.setSpecimenFormData.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.setBarcodeCount = this.setBarcodeCount.bind(this);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.addPreparation = this.addPreparation.bind(this);\n    this.removePreparation = this.removePreparation.bind(this);\n    this.validate = this.validate.bind(this);\n    this.formSwitch = this.formSwitch.bind(this);\n    this.preparationSwitch = this.preparationSwitch.bind(this);\n    this.runAjax = this.runAjax.bind(this);\n  }\n\n  next() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          step: this.state.step+1\n        });\n      }, \n      error => {\n        swal(\"Oops!\", error.responseText, \"error\");\n      }\n    );\n  }\n\n  previous() {\n    this.setState({\n      step: this.state.step-1\n    });\n  }\n\n  validate() {\n    return this.runAjax(this.props.specimenRequest, {barcodeList: this.state.barcodeList});\n  }\n\n  runAjax(url, inputData) {\n    return new Promise((resolve, reject) => {\n      $.ajax(url, {\n        method: \"GET\",\n        dataType: 'json',\n        data: inputData,\n        success: function(data) {\n          resolve(data);\n        }.bind(this),\n        error: function(error, textStatus, errorThrown) {\n          reject(error);\n          console.error(error);\n        }\n      });  \n    })\n  }\n\n  setBarcodeCount(field, value) {\n    let barcodeCount = value;\n    let barcodeList = this.state.barcodeList;\n    for (let barcode in barcodeList) {\n      if (barcode > barcodeCount) {\n        delete barcodeList[barcode];\n      }\n    }\n\n    this.setState({barcodeCount, barcodeList});\n  }\n\n  formSwitch(inputForm, specimenForm) {\n    switch(this.state.step) {\n      case 1:\n        return inputForm;\n      case 2:\n        return specimenForm;\n    }\n  }\n\n  preparationSwitch(preparationButton, preparationForm) {\n    switch(this.state.preparation) {\n      case false:\n        return preparationButton;\n      case true:\n        return preparationForm;\n    }\n  }\n\n  addPreparation() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          preparation: true\n        });\n      },\n      error => {\n        swal('Oh no!', error.responseText, 'error');\n      }\n    );\n  }\n\n  removePreparation() {\n    let formData = this.state.formData;\n    //TODO: is it better to set it to empty, or delete it?\n    formData.preparationForm = {};\n    this.setState({\n      preparation: false,\n      formData\n    });\n  }\n\n  render() {\n    //Generates barcodes\n    let barcodes = [];\n    for (let i=1; i<=this.state.barcodeCount; i++) {\n      barcodes.push(\n        <TextboxElement\n          name={i}\n          label={'Barcode ' + i}\n          onUserInput={this.setFormData}\n          required={true}\n          value={this.state.barcodeList[i]}\n          errorMessage={this.state.formErrors[i]}\n        />\n      )\n    }\n    \n    let preparationButton = ( \n      <div className='row'>\n        <div className='col-xs-4'/>\n        <div className='col-xs 4 action'>\n            <span className='action'>\n            <div \n              className='action-button add'\n              onClick={this.addPreparation}\n            >\n              +\n            </div>\n            </span>\n            <div className='action-title'>\n              Add Preparation\n            </div>\n        </div>\n      </div>\n    );\n\n    let preparationForm;\n    if (this.state.poolData) {\n\n      const specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId]\n \n      let specimenProtocols = {};\n      for (let id in specimenProtocolAttributes) {\n        specimenProtocols[id] = this.props.specimenProtocols[id];\n      }\n      specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\n      preparationForm = (\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <SpecimenPreparationForm\n              formData={this.state.formData.preparationForm}\n              specimenProtocols={specimenProtocols}\n              specimenProtocolAttributes={specimenProtocolAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              setParentFormData={this.setPreparationFormData}\n              insertAction={`${loris.BaseURL}/biobank/ajax/submitData.php?action=insertSpecimenPreparation`}\n            />\n            <a className='pull-right' style={{cursor:'pointer'}} onClick={this.removePreparation}>Cancel Preparation</a>\n          </div>\n        </div>\n      );\n    }\n\n    let inputForm = (\n      <div>\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <StaticElement\n              label='Pooling Note'\n              text='Select or Scan the specimens to be pooled. Please ensure that they\n                    are the same type, and share the same PSCID and Visit Label'\n            />\n            <NumericElement\n              label='№ of Specimens'\n              min='2'\n              max='100'\n              value={this.state.barcodeCount}\n              onUserInput={this.setBarcodeCount}\n            />\n            {barcodes}\n          </div>\n        </div>\n        {this.preparationSwitch(preparationButton, preparationForm)}\n        <div className='col-sm-3 col-xs-offset-9 action'>\n          <div className='action-title'>\n            Next\n          </div>\n          <span className='action'>\n            <div \n              className='action-button update'\n              onClick={this.next}\n            >\n              <span className='glyphicon glyphicon-chevron-right'/>\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n\n    //TODO: Things here need to be in the proper order!!!\n    let specimenForm;\n    if (this.state.poolData) {\n\n      // This is to provide the options for the output specimens\n      let specimenTypes = {};\n      if (this.state.poolData.typeId) {\n        specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n      }\n  \n      let pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n      let visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\n      let barcodesArray = Object.values(this.state.barcodeList); \n      let barcodesString = barcodesArray.join(', ');  \n\n      // TODO: rather than all specimen units this should really be specific to the\n      // type\n      let specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\n      specimenForm = (\n        <div className='row'>\n          <div className='col-xs-12'>\n            <BiobankSpecimenForm\n              formData={this.state.formData.specimenForm}\n              candidateId={this.state.poolData.candidateId}\n              pscid={pscid}\n              sessionId={this.state.poolData.sessionId}\n              visit={visit}\n              parentSpecimenBarcodes={barcodesString}\n              parentSpecimenIds={this.state.poolData.specimenIds}\n              specimenTypes={specimenTypes}\n              specimenTypeUnits={this.props.specimenTypeUnits}\n              specimenUnits={specimenUnits}\n              containerTypesPrimary={this.props.containerTypesPrimary}\n              containersNonPrimary={this.props.containersNonPrimary}\n              specimenTypeAttributes={this.props.specimenTypeAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              capacities={this.props.capacities}\n              containerDimensions={this.props.containerDimensions}\n              containerCoordinates={this.props.containerCoordinates}\n              setParentFormData={this.setSpecimenFormData}\n              action={`${loris.BaseURL}/biobank/ajax/submitData.php?action=submitSpecimen`}\n              refreshParent={this.props.refreshParent}\n            />\n            <ButtonElement\n              label='Submit'\n            />\n          </div>\n          <div className='col-sm-3 col-xs-offset-2 action'>\n            <span className='action'>\n              <div \n                className='action-button update'\n                onClick={this.previous}\n              >\n                <span className='glyphicon glyphicon-chevron-left'/>\n              </div>\n            </span>\n            <div className='action-title'>\n              Previous\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"poolSpecimenForm\"\n        id='poolSpecimenForm'\n        onSubmit={this.handleSubmit}\n        ref=\"form\"\n      >\n        {this.formSwitch(inputForm, specimenForm)}\n      </FormElement>\n    );\n  }\n\n/** *******************************************************************************\n *                      ******     Helper methods     *******\n *********************************************************************************/\n\n\n  validateForm(formElement, value) {\n    let formErrors = this.state.formErrors;\n\n    //validate barcode regex\n    if (formElement === \"barcode\" && value !== \"\") {\n      if (!(/^hello/.test(this.state.formData.barcode))) {\n        formErrors.barcode = true;\n      } else {\n        formErrors.barcode = false;\n      }\n    }\n\n    //validate that quantity is a number and less than capacity\n    if (formElement === \"quantity\" && value !== \"\") {\n      if (isNaN(value) || (value > this.props.capacities[this.state.currentContainerType])) {\n        formErrors.quantity = true;\n      } else {\n        formErrors.quantity = false;\n      }\n    }\n\n    //validate datatypes and regex of generated type attributes\n    let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n    let specimenTypeFields = Object.keys(specimenTypeFieldsObject).map((attribute) => {\n\n      let datatype = this.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"number\") {\n        if (formElement === attribute) {\n          if (isNaN(value) && value !== \"\") {\n            formErrors[attribute] = true;\n          } else {\n            formErrors[attribute] = false;\n          }\n        }\n      }\n    })\n\n    this.setState({\n      formErrors: formErrors\n    });\n  }\n\n\n  /**\n   * Handle form submission\n   * @param {object} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.submitForm();\n  }\n\n  /*\n   * Uploads the file to the server\n   */\n  submitForm() {\n    // Set form data and specimen the biobank file\n    let formData = this.state.formData;\n    let preparationForm = this.state.formData.preparationForm;\n    let specimenForm = this.state.formData.specimenForm;\n    formData['preparationForm'] = JSON.stringify(preparationForm);\n    formData['specimenForm'] = JSON.stringify(specimenForm);\n\n    console.log(formData.specimenForm);\n    console.log(formData.preparationForm);\n\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        let xhr = new window.XMLHttpRequest();\n        return xhr;\n      }.bind(this),\n      success: function() {\n        //this.props.refreshParent();\n        swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n        this.props.onSuccess();\n      }.bind(this),\n      error: function(err) {\n        console.error(err);\n        let msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n        this.setState({\n          errorMessage: msg,\n        });\n        swal(msg, \"\", \"error\");\n      }.bind(this)\n    });\n  }\n\n  /**\n   * Checks if the inputted file name is valid\n   *\n   * @param {string} requiredFileName - Required file name\n   * @param {string} fileName - Provided file name\n   * @return {boolean} - true if fileName starts with requiredFileName, false\n   *   otherwise\n   */\n//  isValidFileName(requiredFileName, fileName) {\n//    if (fileName === null || requiredFileName === null) {\n//      return false;\n//    }\n//\n//    return (fileName.indexOf(requiredFileName) === 0);\n//  }\n\n  /**\n   * Validate the form\n   *\n   * @param {object} formRefs - Object containing references to React form elements\n   * @param {object} formData - Object containing form data inputed by user\n   * @return {boolean} - true if all required fields are filled, false otherwise\n   */\n  isValidForm(formRefs, formData) {\n    let isValidForm = true;\n\n    let requiredFields = {\n      pscid: null,\n      visitLabel: null,\n    };\n\n    Object.keys(requiredFields).map(function(field) {\n      if (formData[field]) {\n        requiredFields[field] = formData[field];\n      } else if (formRefs[field]) {\n        formRefs[field].props.hasError = true;\n        isValidForm = false;\n      }\n    });\n    this.forceUpdate();\n\n    return isValidForm;\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    // This lets the modal window know that there is formData\n    // and will cause a warning to be thrown of the modal window\n    // is exited\n    this.props.onChange instanceof Function && this.props.onChange();\n  \n    if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n      this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n    }\n\n    let formData = this.state.formData;\n    let barcodeList = this.state.barcodeList;\n \n    //TODO: there must be a better way to do this\n    if (isNaN(formElement)) {\n      formData[formElement] = value;\n    } else {\n      barcodeList[formElement] = value;\n    }\n\n    this.setState({\n      formData,\n      barcodeList\n    });\n  }\n\n  setPreparationFormData(preparationFormData) {\n    let formData = this.state.formData;\n    formData.preparationForm = preparationFormData;\n    \n    this.setState({formData});\n  }\n\n  setSpecimenFormData(specimenFormData) {\n    let formData = this.state.formData;\n    formData.specimenForm = specimenFormData;\n  \n    this.setState({formData});\n  }\n}\n\nPoolSpecimenForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  action: React.PropTypes.string.isRequired,\n  refreshTable: React.PropTypes.func\n};\n\nexport default PoolSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/poolSpecimenForm.js","import CustomFields from './customFields';\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = (\n            <CustomFields\n              fields={specimenProtocolFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.preparation.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainerForm extends React.Component {\n\n  render() {\n    //Generates new Barcode Form everytime the addContainer button is pressed\n    let containerListArray = Object.keys(this.props.containerList);\n    let containers = [];\n    let i = 1;\n    for (let key of containerListArray) {\n      containers.push(\n        <ContainerBarcodeForm\n          key={key}\n          containerKey={key}\n          id={i}\n          container={this.props.containerList[key] || null}\n          errors={(this.props.errors[key]||{}).container || {}}\n          collapsed={this.props.collapsed[key]}\n          containerTypesNonPrimary={this.props.containerTypesNonPrimary}\n          containerBarcodesNonPrimary={this.props.containerBarcodesNonPrimary}\n          removeContainer={containerListArray.length !== 1 ? () => {this.props.removeContainer(key)} : null}\n          addContainer={i == containerListArray.length ? this.props.addContainer : null}\n          setCopyMultiplier={this.props.setCopyMultiplier}\n          copyMultiplier={this.props.copyMultiplier}\n          copyContainer={i == containerListArray.length && this.props.containerList[key] ? this.props.copyContainer : null}\n          setContainerList={this.props.setContainerList}\n          toggleCollapse={this.props.toggleCollapse}\n        />\n      );\n     \n      i++;\n    }\n\n    return (\n      <FormElement\n        name=\"containerForm\"\n        onSubmit={this.props.saveContainerList}\n        ref=\"form\"\n      >\n        <br/>\n        <div className=\"row\">\n          <div className=\"col-xs-11\">\n            <SelectElement\n              name=\"siteId\"\n              label=\"Site\"\n              options={this.props.centers}\n              onUserInput={this.props.setSiteId}\n              required={true}\n              value={this.props.siteId}\n            />\n          </div>\n        </div>\n        {containers}\n          <div className=\"col-xs-3 col-xs-offset-9\">\n            <ButtonElement label=\"Submit\"/>\n          </div>\n      </FormElement>\n    );\n  }\n}\n\nBiobankContainerForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  barcode: React.PropTypes.string,\n  refreshTable: React.PropTypes.func\n};\n\n\n/**\n * Container Barcode Form\n *\n * Acts a subform for ContainerForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\nclass ContainerBarcodeForm extends React.Component {\n  constructor() {\n    super();\n   \n    this.setContainer = this.setContainer.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  copy() {\n    this.props.copyContainer(this.props.containerKey);\n  }\n\n  //TODO: change form.js so this isn't necessary\n  setContainer(name, value) {\n    this.props.setContainerList(name, value, this.props.containerKey);\n  }\n\n  render() {\n    // HR TODO: All this CSS should eventually be moved\n    let addContainerButton;\n    let addContainerText;\n    let copyContainerButton;\n    let copyContainerText;\n    if (this.props.addContainer) {\n      addContainerButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addContainer}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addContainerText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }   \n    \n    if (this.props.copyContainer) {\n      copyContainerButton = ( \n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >   \n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );  \n      copyContainerText = ( \n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />  \n          Copies\n        </span>\n      );  \n    }   \n\n    let removeContainerButton;\n    if (this.props.removeContainer) {\n      const glyphStyle = { \n        color: '#DDDDDD',\n        marginLeft: 10, \n        cursor: 'pointer',\n        fontSize: 15\n      }   \n\n      removeContainerButton = ( \n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeContainer}\n          style={glyphStyle}\n        />\n      );  \n    }\n\n    return (\n      <FormElement\n        name='container'\n      >\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div>\n            <TextboxElement\n              name='barcode'\n              label={'Barcode ' + this.props.id}\n              onUserInput={this.setContainer}\n              ref='barcode'\n              required={true}\n              value={this.props.container.barcode}\n              errorMessage={this.props.errors.barcode}\n            />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span\n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse'\n              data-target={'#item-' + this.props.containerKey}\n              onClick={() => this.props.toggleCollapse(this.props.containerKey)}\n            />\n            {removeContainerButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-9'>\n            <div id={'item-' + this.props.containerKey} className='collapse'>\n              <SelectElement\n                name='typeId'\n                label='Container Type'\n                options={this.props.containerTypesNonPrimary}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.typeId}\n                errorMessage={this.props.errors.typeId}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-3'/>\n            <div className='col-xs-4 action'>\n              {addContainerButton}\n              {addContainerText}\n            </div>\n            <div className='col-xs-4 action'>\n              {copyContainerButton}\n              {copyContainerText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nContainerBarcodeForm.propTypes = {\n}\n\nexport default BiobankContainerForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerForm.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/**\n * Allows to dynamically render vertical tabs corresponding to tab panes.\n */\n\nclass VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <div className=\"tabbable col-md-3 col-sm-3\">\n          <ul className=\"nav nav-pills nav-stacked\" role=\"tablist\" style={tabStyle}>\n            {tabs}\n          </ul>\n        </div>\n        <div className=\"tab-content col-md-9 col-sm-9\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nVerticalTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nVerticalTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nexport {\n  Tabs,\n  VerticalTabs,\n  TabPane\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/* exported RBiobankSpecimen */\n\nimport Modal from 'Modal';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n\n  render() {\n\n    //Map Options for Form Select Elements\n    let specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n    let containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n    let candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n    let sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\n    let addAliquotForm = (\n      <div\n        className='action'\n        title='Make Aliquots'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('aliquotForm')}}\n        >\n          <span>+</span>  \n        </div>\n        <Modal\n          title=\"Add Aliquots\"\n          closeModal={this.props.close}\n          show={this.props.editable.aliquotForm}\n        >\n          <BiobankSpecimenForm\n            data={this.props.data}\n            specimen={this.props.specimen}\n            setSpecimen={this.props.setSpecimen}\n            saveSpecimen={this.props.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            close={this.props.close}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.props.editable.collection) {\n      let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.props.options.specimenTypeUnits}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    } else {\n      let specimenTypeAttributes;\n      //loops through data object to produce static elements\n      if (this.props.data.specimen.collection.data) {\n        let collectionData = this.props.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(collectionData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenTypeAttributes[this.props.data.specimen.typeId][key].name}\n              text={collectionData[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.props.data.specimen.collection.quantity+' '+\n              this.props.options.specimenUnits[\n                this.props.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.collection.locationId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel specimen-panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.props.editable.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.props.editable.collection ? null : () => {this.props.edit('collection')}}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.props.options.specimenProtocols) {\n      if (this.props.options.specimenProtocols[id].typeId == this.props.data.specimen.typeId) {\n        specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.props.editable.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation does Exist and the form is not in an edit state\n    if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      if (this.props.data.specimen.preparation.data) {\n        let preparationData = this.props.data.specimen.preparation.data;\n        specimenProtocolAttributes = Object.keys(preparationData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenProtocolAttributes[this.props.data.specimen.preparation.protocolId][key].name}\n              text={preparationData[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      preparationPanel = (\n        <div\n          className='panel specimen-panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('preparation'); this.props.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n      preparationPanel = (\n        <div className='panel specimen-panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.preparation ? null : () => {this.props.edit('preparation')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.props.options.specimenMethods) {\n      if (this.props.options.specimenMethods[id].typeId == this.props.data.specimen.typeId) {\n        specimenMethods[id] = this.props.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.props.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.props.editable.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          files={this.props.files}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          setFiles={this.props.setFiles}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      //TODO: Make the below a separate component\n      if (this.props.data.specimen.analysis.data) {\n      let analysisData = this.props.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.keys(analysisData).map((key) => {\n          if (this.props.options.attributeDatatypes[\n            this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].datatypeId\n          ].datatype === 'file') {\n            return (\n              <LinkElement\n               label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n               text={analysisData[key]}\n               href={loris.BaseURL+'/biobank/ajax/requestData.php?action=downloadFile&file='+analysisData[key]}\n               target={'_blank'}\n               download={analysisData[key]}\n              />\n            );\n          } else {\n            return ( \n              <StaticElement\n                label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n                text={analysisData[key]}\n              />\n            );\n          }\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.analysis.locationId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel specimen-panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('analysis'); this.props.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n      analysisPanel = (\n        <div className='panel specimen-panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.analysis ? null : () => {this.props.edit('analysis')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.props.specimen}\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        errors={this.props.errors}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        setSpecimen={this.props.setSpecimen}\n        saveSpecimen={this.props.saveSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );\n\n    //TODO: this can maybe become its own component...?\n    let returnToFilter = (\n      <div>\n        <br/>\n        <span className='action'>\n          <div\n            className='action-button update'\n            onClick={this.props.loadFilters}\n          >\n            <span className='glyphicon glyphicon-chevron-left'/>\n          </div>\n        </span>\n        <div className='action-title'>\n          Return to Filter\n        </div>\n      </div>\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.props.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.props.data.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            specimen={this.props.data.specimen}\n            centers={this.props.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n        {returnToFilter}\n      </div>\n    ); \n  }\n}\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","import Modal from 'Modal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.editable.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.edit('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                specimen={this.props.specimen}\n                errors={this.props.errors.specimen}\n                units={units}\n                close={this.props.close}\n                setSpecimen={this.props.setSpecimen}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if (this.props.data.specimen && this.props.options.specimenTypes[\n      this.props.data.specimen.typeId\n    ].freezeThaw == 1) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.editable.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => {this.props.edit('temperature')}}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              container={this.props.container}                                  \n              errors={this.props.errors.container}\n              close={this.props.close}                     \n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.editable.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              container={this.props.container}                                  \n              errors={this.props.errors.container}\n              stati={stati}\n              close={this.props.close}\n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.editable.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              container={this.props.container}\n              errors={this.props.errors.container}\n              centers={this.props.options.centers}\n              close={this.props.close}                        \n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let barcode = this.props.data.parentSpecimenContainer.barcode;\n      let parentSpecimenFieldValue = (\n        <a style={{cursor: 'pointer'}} onClick={()=>this.props.loadSpecimen(barcode)}>\n          {barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a style={{cursor:'pointer'}} onClick={()=>this.props.loadContainer(barcode)}>\n            {barcode}\n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <span                                                               \n            className='action-button update'                                  \n            onClick={() => {this.props.edit('containerParentForm')}}\n          >                                                                   \n            <span className='glyphicon glyphicon-chevron-right'/>             \n          </span>                                                             \n          <Modal                                                              \n            title='Update Parent Container'                                       \n            closeModal={this.props.close}\n            show={this.props.editable.containerParentForm}\n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainer={this.props.setContainer}                            \n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </Modal>                                                            \n        </div>                                                                \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}>\n          <TextboxElement\n            name='quantity'\n            inputClass='col-xs-11'\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.quantity}\n            errorMessage={this.props.errors.quantity}\n          />\n        </div>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}>\n          <SelectElement\n            name='unitId'\n            inputClass='col-xs-11'\n            options={this.props.units}\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.unitId}\n            errorMessage={this.props.errors.unitId}\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}>\n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveSpecimen}\n            columnSize= 'col-xs-11'\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}>\n          <a onClick={this.props.close} style={{cursor: 'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimen: React.PropTypes.func,\n  close: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex:'1 0 25%', minWidth: '90px'}}> \n            <TextboxElement\n              name='temperature'\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.temperature}\n              errorMessage={this.props.errors.temperature}\n            />  \n        </div>\n        <div style={{flex:'0 1 15%', margin: '0 1%'}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-11'\n          />\n        </div>\n        <div style={{flex:'0 1 15%', margin: '0 1%'}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.statusId}\n              errorMessage={this.props.errors.statusId}\n            />  \n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <ButtonElement\n            label='Update'\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-11'\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}> \n            <SelectElement\n              name='locationId'\n              options={this.props.centers}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.locationId}\n              errorMessage={this.props.errors.locationId}\n            />  \n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-11'\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","import CustomFields from './customFields';\n\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    if (value instanceof File) {\n      data[name] = value.name;\n      this.props.setFiles(name, value);\n    } else {\n      data[name] = value;\n      this.setAnalysis('data', data);\n    }\n  }\n\n  render() {\n    let submitButton;\n    submitButton = this.props.data.specimen.analysis ? <ButtonElement label=\"Update\"/>\n      : <ButtonElement label=\"Submit\"/>;\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = (\n            <CustomFields\n              fields={specimenMethodFieldsObject}\n              files={this.props.files}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.analysis.data}\n              data={(((this.props.data||{}).specimen||{}).analysis||{}).data}\n              setData={this.setData}\n            />\n          );  \n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        fileUpload={true}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\n//TODO: revise this component once Shipments are enabled.\nclass LifeCycle extends React.Component {\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n      });\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n    // Create Collection Node\n    let collectionNode;\n    if ((this.props.specimen||{}).collection || this.props.container) {\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    // Create Preparation Node\n    let preparationNode;\n    if ((this.props.specimen||{}).preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    // Create Analysis Node\n    let analysisNode;\n    if ((this.props.specimen||{}).analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'>\n             <div className='letter'>A</div>\n           </div>\n        </div>\n      );\n    }\n\n    // Create Lines\n    let line;\n    let nodes = 0;\n    for (let i in this.props.specimen) {\n      if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n        nodes++;\n      }\n    }\n    let lineWidth = nodes > 1 ? 60/(nodes-1) : 0;\n    let lineStyle = {width: lineWidth+'%'}\n    line = (<div className='lifecycle-line' style={lineStyle}/>);\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode ? line : null}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainer('parentContainerId', null);\n    this.props.setContainer('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankContainer */\n\nimport Loader from 'Loader';\nimport Globals from './globals';\nimport LifeCycle from './lifeCycle.js';\nimport BarcodePath from './barcodePath.js';\nimport ContainerDisplay from './containerDisplay.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Container\n *\n * Fetches data corresponding to a given Container from Loris backend and\n * displays a page allowing viewing of meta information of the container\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainer extends React.Component {\n  constructor() {\n    super();\n    this.drag = this.drag.bind(this);\n  }\n\n  drag(e) {\n    let container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n    e.dataTransfer.setData(\"text/plain\", container);\n  }\n\n  render() {\n    let globals = ( \n      <Globals\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        errors={this.props.errors}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );  \n\n    let barcodePath = (\n      <BarcodePath\n        container={this.props.data.container}\n        parentContainers={this.props.data.parentContainers}\n        loadContainer={this.props.loadContainer}\n      />\n    );\n\n    let checkoutButton;\n    let display;\n    if (this.props.data.container.dimensionId) {  \n      //TODO: the styling here needs to be redone.\n\n      checkoutButton = (\n        <div style = {{marginLeft: 'auto', height: '10%', marginRight:'10%'}}>\n          <div\n            className={!this.props.editable.containerCheckout && !this.props.editable.barcode ?\n              'action-button update open' : 'action-button update closed'}\n            title='Checkout Child Containers'\n            onClick={()=>{this.props.edit('containerCheckout')}}\n          >\n            <span className='glyphicon glyphicon-share'/>\n          </div>\n        </div>\n      );\n\n      let barcodes = this.props.mapFormOptions(this.props.options.containers, 'barcode');\n      //delete values that are parents of the container\n      if (this.props.data.parentContainers) {\n        for (let key in this.props.data.parentContainers) {\n          delete barcodes[this.props.data.parentContainers[key].id];\n        }\n      }\n      delete barcodes[this.props.data.container.id];\n\n      display = (\n        <ContainerDisplay \n          barcodes={barcodes}\n          container={this.props.container}\n          coordinate={this.props.coordinate}\n          sequential={this.props.sequential}\n          checkoutList={this.props.checkoutList}\n          containers={this.props.options.containers}\n          children={this.props.data.childContainers}\n          types={this.props.options.containerTypes}\n          dimensions={this.props.options.containerDimensions[this.props.data.container.dimensionId]}\n          coordinates={this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null}\n          containerTypes={this.props.options.containerTypes}\n          containerStati={this.props.options.containerStati}\n          editable={this.props.editable}\n          edit={this.props.edit}\n          close={this.props.close}\n          setCoordinate={this.props.setCoordinate}\n          setSequential={this.props.setSequential}\n          setCheckoutList={this.props.setCheckoutList}\n          mapFormOptions={this.props.mapFormOptions}\n          loadSpecimen={this.props.loadSpecimen}\n          loadContainer={this.props.loadContainer}\n          saveChildContainer={this.props.saveChildContainer}\n        />\n      );\n    }\n\n    let listAssigned = [];\n    let coordinateList = [];\n    let listUnassigned = [];\n    if (this.props.data.childContainers) {\n      let children = this.props.data.childContainers;\n      for (let child in children) {\n        let load;\n        if (this.props.options.containerTypes[children[child].typeId].primary) {\n          load = this.props.loadSpecimen;\n        } else {\n          load = this.props.loadContainer;\n        }\n\n        if (children[child].coordinate) {\n          listAssigned.push(\n            <div>\n              <a onClick={()=>load(children[child].barcode)} style={{cursor:'pointer'}}>\n                {children[child].barcode}\n              </a>\n            </div>\n          ); \n          coordinateList.push(\n            <div>\n              at {children[child].coordinate}\n            </div>\n\n          );\n        } else {\n          listUnassigned.push(\n            <a \n              onClick={()=>load(children[child].barcode)}\n              style={{cursor:'pointer'}}\n              id={children[child].id} \n              draggable={true}\n              onDragStart={this.drag}\n            >\n              {children[child].barcode}\n            </a>\n          );\n        }\n      }     \n    }\n\n    //TODO: this can maybe become it's own component..?\n    let returnToFilter = (\n      <div>\n        <br/>\n        <span className='action'>\n          <div\n            className='action-button update'\n            onClick={this.props.loadFilters}\n          >\n            <span className='glyphicon glyphicon-chevron-left'/>\n          </div>\n        </span>\n        <div className='action-title'>\n          Return to Filter\n        </div>\n      </div>\n    );\n\n    return (\n      <div id='container-page'> \n        <div className=\"container-header\"> \n          <div className='container-title'> \n            <div className='barcode'> \n              Barcode \n              <div className='value'> \n                <strong>{this.props.data.container.barcode}</strong> \n              </div> \n            </div> \n            <ContainerCheckout \n              container={this.props.data.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div> \n        </div> \n        <div className='summary'> \n          {globals} \n          <div className='display-container'>\n            {!(listAssigned.length === 0 && listUnassigned.length === 0) ? checkoutButton : null}\n            {display} \n            {barcodePath}\n          </div>\n          <div className='container-list'>\n            <div className='title'>\n              {listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null}\n            </div>\n            <div className='title'>\n              {listAssigned.length !== 0 ? 'Assigned Containers' : null}\n            </div>\n            <div className='container-coordinate'>\n              <div>{listAssigned}</div>\n              <div style={{paddingLeft: 10}}>{coordinateList}</div>\n            </div>\n              {listAssigned.length !==0 ? <br/> : null}\n            <div className='title'>\n              {listUnassigned.length !== 0 ? 'Unassigned Containers' : null}\n            </div>\n            {listUnassigned}\n          </div>\n        </div> \n        {returnToFilter}\n      </div> \n    ); \n  }\n}\n\nBiobankContainer.propTypes = {\n  containerPageDataURL: React.PropTypes.string.isRequired,\n};\n\nexport default BiobankContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/container.js","/**\n * Container Path\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass BarcodePath extends React.Component {\n\n  render() {\n\n    let path = [];\n    let pathLength = this.props.parentContainers.length - 1;\n    let containerURL = loris.BaseURL+'/biobank/container/?barcode=';\n    for (let i=pathLength; i>=0; i--) {\n      path.push(\n        <span className='barcodePath'> \n          {'/'}\n          <a\n            onClick={()=>this.props.loadContainer(this.props.parentContainers[i].barcode)}\n            style={{cursor:'pointer'}}\n          >\n            {this.props.parentContainers[i].barcode}\n          </a>\n        </span>\n      );\n    }\n    path.push(\n      <span className='barcodePath'> \n        {'/'}\n        <a\n          onClick={()=>this.props.loadContainer(this.props.container.barcode)}\n          style={{cursor:'pointer'}}\n        >\n          {this.props.container.barcode}\n        </a>\n      </span>\n    );\n\n    return (\n      <div>\n        {path}\n      </div>\n    );\n  }\n}\n\nBarcodePath.propTypes = {\n}\n\nexport default BarcodePath;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodePath.js"],"sourceRoot":""}