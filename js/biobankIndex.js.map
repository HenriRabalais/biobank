{"version":3,"sources":["webpack:///modules/biobank/js/biobankIndex.js","webpack:///webpack/bootstrap d62801950336817ac4f4?e6d8*******","webpack:///./modules/biobank/jsx/biobankIndex.js","webpack:///./jsx/Loader.js","webpack:///./modules/biobank/jsx/filter.js","webpack:///./jsx/FilterForm.js","webpack:///./jsx/Panel.js","webpack:///./modules/biobank/jsx/specimenForm.js","webpack:///./modules/biobank/jsx/barcodeForm.js","webpack:///./modules/biobank/jsx/collectionForm.js","webpack:///./modules/biobank/jsx/customFields.js","webpack:///./modules/biobank/jsx/containerParentForm.js","webpack:///./modules/biobank/jsx/containerDisplay.js","webpack:///./modules/biobank/jsx/poolSpecimenForm.js","webpack:///./modules/biobank/jsx/preparationForm.js","webpack:///./modules/biobank/jsx/containerForm.js","webpack:///./modules/biobank/jsx/containerBarcodeForm.js","webpack:///./jsx/Tabs.js","webpack:///./jsx/Modal.js","webpack:///./modules/biobank/jsx/specimen.js","webpack:///./modules/biobank/jsx/globals.js","webpack:///./modules/biobank/jsx/quantityField.js","webpack:///./modules/biobank/jsx/temperatureField.js","webpack:///./modules/biobank/jsx/statusField.js","webpack:///./modules/biobank/jsx/locationField.js","webpack:///./modules/biobank/jsx/analysisForm.js","webpack:///./modules/biobank/jsx/lifeCycle.js","webpack:///./modules/biobank/jsx/containerCheckout.js","webpack:///./modules/biobank/jsx/container.js","webpack:///./modules/biobank/jsx/barcodePath.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_Loader","_Loader2","_filter","_filter2","_specimen","_specimen2","_container","_container2","BiobankIndex","_React$Component","_this$state","this","_this","getPrototypeOf","state","specimenFilter","containerDataTable","containerFilter","specimenForm","containerForm","aliquotForm","containerParentForm","temperature","quantity","status","location","collection","preparation","analysis","fetch","bind","loadDataTables","loadSpecimenDataTable","loadContainerDataTable","loadOptions","loadContainer","loadSpecimen","updateSpecimenFilter","updateContainerFilter","clone","mapFormOptions","edit","close","setSpecimen","revertSpecimen","setContainer","revertContainer","setFiles","addPreparation","addAnalysis","saveSpecimen","saveContainer","saveChildContainer","save","_this2","then","setState","isLoaded","page","_this3","Promise","resolve","_this4","specimenFilterDataURL","data","specimenDataTable","_this5","containerFilterDataURL","_this6","optionsURL","options","barcode","_this7","containerDataURL","container","_this8","specimenDataURL","specimen","url","$","ajax","dataType","success","error","errorCode","errorMsg","console","object","JSON","parse","stringify","attribute","stateKey","editable","name","files","locationId","_this9","saveSpecimenURL","_this10","saveContainerURL","_this11","containerCoordinates","coordinate","childContainers","Unassigned","indexOf","message","_this12","dataObject","FormData","file","dataOject","append","type","cache","contentType","processData","swal","textStatus","errorThrown","responseJSON","undefined","React","createElement","className","display","saveBarcodeListURL","Component","request","loris","BaseURL","submit","biobankIndex","ReactDOM","render","document","getElementById","Loader","apply","arguments","style","width","size","height","propTypes","PropTypes","int","defaultProps","_FilterForm","_FilterForm2","_specimenForm","_specimenForm2","_poolSpecimenForm","_poolSpecimenForm2","_containerForm","_containerForm2","_Tabs","_Modal","_Modal2","BiobankFilter","resetFilters","formatSpecimenColumns","formatContainerColumns","column","cell","rowData","rowHeaders","row","forEach","header","index","onClick","pscidURL","href","visitLabelURL","color","barcodeURL","URL","addSpecimenButton","poolSpecimenButton","addContainerButton","containerTypesPrimary","containerStati","candidates","sessions","title","show","closeModal","candidateSessions","sessionCenters","specimenTypes","specimenTypeUnits","specimenTypeAttributes","attributeOptions","attributeDatatypes","containersNonPrimary","containerDimensions","poolSpecimenButtonContent","buttonClass","buttonContent","specimenProtocols","specimenProtocolAttributes","capacities","specimenUnits","specimenRequest","containerTypesNonPrimary","centers","tabList","label","Tabs","tabs","defaultTab","updateURL","TabPane","TabId","Module","ref","columns","formElements","form","onUpdate","filter","StaticElement","ButtonElement","onUserInput","StaticDataTable","Data","Headers","Filter","getFormattedCell","_typeof","Symbol","iterator","_Panel","_Panel2","FilterForm","clearFilter","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","keys","filterKey","exactMatch","clear","formChildren","Children","children","child","isValidElement","callbackFunc","callbackName","elementName","displayName","queryFieldName","filterValue","push","cloneElement","fieldName","fieldValue","set","FormElement","warn","string","isRequired","func","Panel","collapsed","initCollapsed","panelClass","toggleCollapsed","glyphClass","pencilGlyph","marginRight","cursor","plusGlyph","add","removeGlyph","cancel","panelHeading","data-toggle","data-target","role","_barcodeForm","_barcodeForm2","BiobankSpecimenForm","formErrors","candidateId","sessionId","centerId","barcodeList","1","count","copyMultiplier","toggleCollapse","addBarcode","setCopyMultiplier","copyBarcode","removeBarcode","saveBarcodeList","availableId","find","statusId","originId","unitId","typeId","freezeThaw","fTCycle","candidate","CandID","session","ID","parentSpecimenId","refreshParent","onChange","Function","e","nextKey","multiplier","barcodeListArray","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","barcodeKey","units","_iterator","next","done","err","return","globalFields","remainingQuantityFields","text","PSCID","Visit_label","TextboxElement","setSpecimenData","required","SelectElement","emptyOption","placeHolder","disabled","onSubmit","columnSize","_collectionForm","_collectionForm2","_containerParentForm","_containerParentForm2","SpecimenBarcodeForm","copy","addBarcodeButton","addBarcodeText","copyBarcodeButton","copyBarcodeText","min","max","removeBarcodeButton","glyphStyle","marginLeft","fontSize","parentTypeId","paddingLeft","marginTop","position","right","setContainerData","_customFields","_customFields2","SpecimenCollectionForm","setCollection","addData","setData","updateButton","specimenTypeFields","unit","specimenTypeFieldsObject","fields","specimenFields","DateElement","minYear","maxYear","date","TimeElement","time","TextareaElement","comments","CustomFields","attributeFields","map","datatype","DataElement","FileElement","_containerDisplay","_containerDisplay2","ContainerParentForm","containerDisplay","containerBarcodesNonPrimary","parentContainerField","parentContainerId","dimensionId","dimensions","coordinatesTotal","dimension","coordinates","containerTypes","select","selectedCoordinate","ContainerDisplay","redirectURL","drag","drop","tooltip","load","types","primary","preventDefault","dataTransfer","getData","newCoordinate","parseInt","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","data-html","data-placement","data-original-title","rowHeight","rowStyle","_preparationForm","_preparationForm2","PoolSpecimenForm","formData","errorMessage","barcodeCount","step","handleSubmit","validateForm","setFormData","setPreparationFormData","setSpecimenFormData","submitForm","setBarcodeCount","previous","removePreparation","validate","formSwitch","preparationSwitch","runAjax","poolData","responseText","inputData","reject","method","field","inputForm","preparationButton","preparationForm","setParentFormData","insertAction","NumericElement","pscid","pSCIDs","visit","sessionData","visits","barcodesArray","values","barcodesString","join","parentSpecimenBarcodes","parentSpecimenIds","specimenIds","action","formElement","test","isNaN","currentContainerType","currentSpecimenType","log","formObj","xhr","window","XMLHttpRequest","onSuccess","msg","isValidForm","formRefs","requiredFields","visitLabel","hasError","forceUpdate","preparationFormData","specimenFormData","DataURL","refreshTable","SpecimenPreparationForm","setPreparation","submitButton","specimenProtocolFields","protocolId","specimenProtocolFieldsObject","_containerBarcodeForm","_containerBarcodeForm2","BiobankContainerForm","containerList","countContainers","addContainer","copyContainer","removeContainer","saveContainerList","siteId","containerListArray","containers","containerKey","ContainerBarcodeForm","addContainerText","copyContainerButton","copyContainerText","removeContainerButton","hash","activeTab","substr","handleClick","getTabs","getTabPanes","tabId","onTabChange","scrollDistance","scrollTop","tab","tabClass","tabID","tabPanes","tabStyle","marginBottom","array","bool","VerticalTabs","_React$Component2","_React$Component3","classList","Title","Modal","throwWarning","showCancelButton","confirmButtonText","cancelButtonText","backdropStyle","zIndex","top","bottom","left","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","borderTopRightRadius","bodyStyle","modal","stopPropagation","_globals","_globals2","_analysisForm","_analysisForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","addAliquotForm","collectionPanel","collectionPanelForm","cancelEditCollectionButton","collectionData","preparationPanel","cancelEditPreparationButton","protocol","preparationData","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","analysisData","methodId","datatypeId","LinkElement","download","globals","specimenPageDataURL","RBiobankSpecimen","createFactory","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_locationField","_locationField2","Globals","increaseCycle","decreaseCycle","cycle","specimenTypeField","containerTypeField","quantityField","fTCycleField","temperatureField","statusField","stati","locationField","originField","parentSpecimenField","dateTimeCreate","parentSpecimenContainer","parentSpecimenFieldValue","parentContainerBarcodeValue","candidateSessionField","fieldList","QuantityField","flexGrow","inputClass","TemperatureField","StatusField","LocationField","labelClass","centerIds","SpecimenAnalysisForm","setAnalysis","File","specimenMethodFields","specimenMethodFieldsObject","fileUpload","LifeCycle","css","border","box-shadow","collectionNode","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","line","nodes","lineWidth","lineStyle","ContainerCheckout","checkoutContainer","checkoutButton","_barcodePath","_barcodePath2","BiobankContainer","barcodePath","parentContainers","listAssigned","listUnassigned","containerPageDataURL","RBiobankContainer","BarcodePath","path","pathLength"],"mappings":"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","file":"./modules/biobank/js/biobankIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _filter = __webpack_require__(2);\n\t\n\tvar _filter2 = _interopRequireDefault(_filter);\n\t\n\tvar _specimen = __webpack_require__(17);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tvar _container = __webpack_require__(26);\n\t\n\tvar _container2 = _interopRequireDefault(_container);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global ReactDOM */\n\t\n\tvar BiobankIndex = function (_React$Component) {\n\t  _inherits(BiobankIndex, _React$Component);\n\t\n\t  function BiobankIndex() {\n\t    var _this$state;\n\t\n\t    _classCallCheck(this, BiobankIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankIndex.__proto__ || Object.getPrototypeOf(BiobankIndex)).call(this));\n\t\n\t    _this.state = (_this$state = {\n\t      specimenFilter: {},\n\t      containerDataTable: {},\n\t      containerFilter: {}\n\t    }, _defineProperty(_this$state, 'containerDataTable', {}), _defineProperty(_this$state, 'data', {}), _defineProperty(_this$state, 'specimen', {}), _defineProperty(_this$state, 'container', {}), _defineProperty(_this$state, 'page', ''), _defineProperty(_this$state, 'options', {}), _defineProperty(_this$state, 'files', {}), _defineProperty(_this$state, 'isLoaded', false), _defineProperty(_this$state, 'editable', {\n\t      specimenForm: false,\n\t      containerForm: false,\n\t      aliquotForm: false,\n\t      containerParentForm: false,\n\t      temperature: false,\n\t      quantity: false,\n\t      status: false,\n\t      location: false,\n\t      collection: false,\n\t      preparation: false,\n\t      analysis: false\n\t    }), _this$state);\n\t\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.loadDataTables = _this.loadDataTables.bind(_this);\n\t    _this.loadSpecimenDataTable = _this.loadSpecimenDataTable.bind(_this);\n\t    _this.loadContainerDataTable = _this.loadContainerDataTable.bind(_this);\n\t    _this.loadOptions = _this.loadOptions.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.loadSpecimen = _this.loadSpecimen.bind(_this);\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.updateSpecimenFilter = _this.updateSpecimenFilter.bind(_this);\n\t    _this.updateContainerFilter = _this.updateContainerFilter.bind(_this);\n\t    _this.clone = _this.clone.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.edit = _this.edit.bind(_this);\n\t    _this.close = _this.close.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.revertSpecimen = _this.revertSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.revertContainer = _this.revertContainer.bind(_this);\n\t    _this.setFiles = _this.setFiles.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.addAnalysis = _this.addAnalysis.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveChildContainer = _this.saveChildContainer.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankIndex, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _this2 = this;\n\t\n\t      this.loadDataTables().then(this.loadOptions().then(function () {\n\t        _this2.setState({ isLoaded: true, page: 'filter' });\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'loadDataTables',\n\t    value: function loadDataTables() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this3.loadContainerDataTable().then(_this3.loadSpecimenDataTable().then(function () {\n\t          return resolve();\n\t        }));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainerDataTable',\n\t    value: function loadContainerDataTable() {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this4.fetch(_this4.props.specimenFilterDataURL).then(function (data) {\n\t          var specimenDataTable = data;\n\t          _this4.setState({ specimenDataTable: specimenDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimenDataTable',\n\t    value: function loadSpecimenDataTable() {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this5.fetch(_this5.props.containerFilterDataURL).then(function (data) {\n\t          var containerDataTable = data;\n\t          _this5.setState({ containerDataTable: containerDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadOptions',\n\t    value: function loadOptions() {\n\t      var _this6 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this6.fetch(_this6.props.optionsURL).then(function (data) {\n\t          var options = data;\n\t          _this6.setState({ options: options }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(barcode) {\n\t      var _this7 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this7.fetch(_this7.props.containerDataURL + barcode).then(function (data) {\n\t          var container = _this7.clone(data.container);\n\t          var page = 'container';\n\t          _this7.setState({ data: data, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimen',\n\t    value: function loadSpecimen(barcode) {\n\t      var _this8 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this8.fetch(_this8.props.specimenDataURL + barcode).then(function (data) {\n\t          var specimen = _this8.clone(data.specimen);\n\t          var container = _this8.clone(data.container);\n\t          var page = 'specimen';\n\t          _this8.setState({ data: data, specimen: specimen, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetch',\n\t    value: function fetch(url) {\n\t      return new Promise(function (resolve) {\n\t        $.ajax(url, {\n\t          dataType: 'json',\n\t          success: function success(data) {\n\t            resolve(data);\n\t          },\n\t          error: function error(_error, errorCode, errorMsg) {\n\t            console.error(_error, errorCode, errorMsg);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateSpecimenFilter',\n\t    value: function updateSpecimenFilter(specimenFilter) {\n\t      this.setState({ specimenFilter: specimenFilter });\n\t    }\n\t  }, {\n\t    key: 'updateContainerFilter',\n\t    value: function updateContainerFilter(containerFilter) {\n\t      this.setState({ containerFilter: containerFilter });\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone(object) {\n\t      return JSON.parse(JSON.stringify(object));\n\t    }\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(object, attribute) {\n\t      var data = {};\n\t      for (var id in object) {\n\t        data[id] = object[id][attribute];\n\t      }\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'edit',\n\t    value: function edit(stateKey) {\n\t      this.close();\n\t      var editable = this.state.editable;\n\t      editable[stateKey] = true;\n\t      this.setState({ editable: editable });\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var editable = this.state.editable;\n\t      for (var key in editable) {\n\t        editable[key] = false;\n\t      }\n\t      this.state.data.specimen && this.revertSpecimen();\n\t      this.revertContainer();\n\t      this.setState({ editable: editable });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimen',\n\t    value: function revertSpecimen() {\n\t      var specimen = this.state.specimen;\n\t      specimen = this.clone(this.state.data.specimen);\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.state.container;\n\t      value ? container[name] = value : delete container[name];\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainer',\n\t    value: function revertContainer() {\n\t      var container = this.state.container;\n\t      container = this.clone(this.state.data.container);\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'setFiles',\n\t    value: function setFiles(name, value) {\n\t      var files = this.state.files;\n\t      files[value.name] = value;\n\t      this.setState({ files: files });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addAnalysis',\n\t    value: function addAnalysis() {\n\t      var specimen = this.state.specimen;\n\t      specimen.analysis = { locationId: this.state.data.container.locationId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this9 = this;\n\t\n\t      var specimen = this.state.specimen;\n\t      this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(function () {\n\t        var data = _this9.state.data;\n\t        data.specimen = _this9.clone(_this9.state.specimen);\n\t        _this9.setState({ data: data });\n\t        _this9.close();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this10 = this;\n\t\n\t      var container = this.state.container;\n\t      this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(function () {\n\t        var data = _this10.state.data;\n\t        data.container = _this10.clone(_this10.state.container);\n\t        _this10.setState({ data: data });\n\t        _this10.close();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveChildContainer',\n\t    value: function saveChildContainer(container) {\n\t      var _this11 = this;\n\t\n\t      this.save(container, this.props.saveContainer).then(function () {\n\t        var options = _this11.state.options;\n\t        var data = _this11.state.data;\n\t        options.containerCoordinates[data.container.id][container.coordinate] = container.id;\n\t        if (data.childContainers[container.id].coordinate) {\n\t          delete options.containerCoordinates[data.container.id][data.childContainers[container.id].coordinate];\n\t        } else {\n\t          delete options.containerCoordinates[data.container.id].Unassigned.indexOf[data.container.id];\n\t        }\n\t\n\t        data.childContainers[container.id] = _this11.clone(container);\n\t        _this11.setState({ options: options, data: data });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(data, url, message) {\n\t      var _this12 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var dataObject = new FormData();\n\t        for (var file in _this12.state.files) {\n\t          dataOject.append(_this12.state.files[file].name, _this12.state.files[file]);\n\t        }\n\t        dataObject.append('data', JSON.stringify(data));\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: dataObject,\n\t          cache: false,\n\t          contentType: false,\n\t          processData: false,\n\t          success: function success() {\n\t            resolve();\n\t            message && swal(message, '', 'success');\n\t          },\n\t          error: function error(_error2, textStatus, errorThrown) {\n\t            var message = (_error2.responseJSON || {}).message || 'Submission error!';\n\t            swal(message, '', 'error');\n\t            console.error(_error2, textStatus, errorThrown);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(_Loader2.default, null);\n\t      }\n\t\n\t      var display = void 0;\n\t      switch (this.state.page) {\n\t        case 'container':\n\t          display = React.createElement(_container2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t        case 'specimen':\n\t          display = React.createElement(_specimen2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            specimen: this.state.specimen,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setSpecimen: this.setSpecimen,\n\t            revertSpecimen: this.revertSpecimen,\n\t            saveSpecimen: this.saveSpecimen,\n\t            addPreparation: this.addPreparation,\n\t            addAnalysis: this.addAnalysis,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t        case 'filter':\n\t          display = React.createElement(_filter2.default, {\n\t            specimenFilter: this.state.specimenFilter,\n\t            specimenDataTable: this.state.specimenDataTable,\n\t            containerFilter: this.state.containerFilter,\n\t            containerDataTable: this.state.containerDataTable,\n\t            options: this.state.options,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            updateSpecimenFilter: this.updateSpecimenFilter,\n\t            updateContainerFilter: this.updateContainerFilter,\n\t            mapFormOptions: this.mapFormOptions,\n\t            edit: this.edit,\n\t            close: this.close,\n\t            save: this.save,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL\n\t          });\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'barcode-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            display\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t  var request = loris.BaseURL + '/biobank/ajax/requestData.php?';\n\t  var submit = loris.BaseURL + '/biobank/ajax/submitData.php?';\n\t  var biobankIndex = React.createElement(\n\t    'div',\n\t    { className: 'page=biobank' },\n\t    React.createElement(BiobankIndex, {\n\t      specimenFilterDataURL: loris.BaseURL + '/biobank/?format=json',\n\t      containerFilterDataURL: request + 'action=getContainerFilterData',\n\t      specimenDataURL: request + 'action=getSpecimenData&barcode=',\n\t      containerDataURL: request + 'action=getContainerData&barcode=',\n\t      optionsURL: request + 'action=getFormOptions',\n\t      saveContainerURL: submit + 'action=saveContainer',\n\t      saveSpecimenURL: submit + 'action=saveSpecimen',\n\t      saveBarcodeListURL: submit + 'action=saveBarcodeList'\n\t    })\n\t  );\n\t  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains the React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\"div\", {\n\t        className: \"loader\",\n\t        style: { width: this.props.size, height: this.props.size }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\tLoader.propTypes = { size: React.PropTypes.int };\n\tLoader.defaultProps = { size: 120 };\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(3);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _poolSpecimenForm = __webpack_require__(11);\n\t\n\tvar _poolSpecimenForm2 = _interopRequireDefault(_poolSpecimenForm);\n\t\n\tvar _containerForm = __webpack_require__(13);\n\t\n\tvar _containerForm2 = _interopRequireDefault(_containerForm);\n\t\n\tvar _Tabs = __webpack_require__(15);\n\t\n\tvar _Modal = __webpack_require__(16);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BiobankFilter = function (_React$Component) {\n\t  _inherits(BiobankFilter, _React$Component);\n\t\n\t  function BiobankFilter() {\n\t    _classCallCheck(this, BiobankFilter);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankFilter.__proto__ || Object.getPrototypeOf(BiobankFilter)).call(this));\n\t\n\t    _this.resetFilters = _this.resetFilters.bind(_this);\n\t    _this.formatSpecimenColumns = _this.formatSpecimenColumns.bind(_this);\n\t    _this.formatContainerColumns = _this.formatContainerColumns.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankFilter, [{\n\t    key: 'resetFilters',\n\t    value: function resetFilters() {\n\t      // this.refs.biobankFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'formatSpecimenColumns',\n\t    value: function formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n\t      var _this2 = this;\n\t\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      var row = {};\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      var barcode = void 0;\n\t      switch (column) {\n\t        case 'Barcode':\n\t          barcode = row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                } },\n\t              cell\n\t            )\n\t          );\n\t        case 'Parent Barcode':\n\t          barcode = row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                } },\n\t              cell\n\t            )\n\t          );\n\t        case 'Container Barcode':\n\t          barcode = row['Container Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { onClick: function onClick() {\n\t                  _this2.props.loadContainer(barcode);\n\t                } },\n\t              cell\n\t            )\n\t          );\n\t        case 'PSCID':\n\t          var pscidURL = loris.BaseURL + '/' + row['PSCID'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: pscidURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Visit Label':\n\t          var visitLabelURL = loris.BaseURL + '/instrument_list/?candID=' + row['PSCID'] + '&sessionID=' + row['Visit Label'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: visitLabelURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Status':\n\t          switch (cell) {\n\t            case 'Available':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'green' } },\n\t                cell\n\t              );\n\t            case 'Reserved':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'orange' } },\n\t                cell\n\t              );\n\t            case 'Dispensed':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'red' } },\n\t                cell\n\t              );\n\t          }\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'formatContainerColumns',\n\t    value: function formatContainerColumns(column, cell, rowData, rowHeaders) {\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      var row = {};\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      var barcodeURL = loris.BaseURL + '/biobank/barcode/?barcode=';\n\t      switch (column) {\n\t        case 'Barcode':\n\t          var URL = barcodeURL + row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: URL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Parent Barcode':\n\t          URL = barcodeURL + row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: URL },\n\t              cell\n\t            )\n\t          );\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      var addSpecimenButton = void 0;\n\t      var poolSpecimenButton = void 0;\n\t      var addContainerButton = void 0;\n\t\n\t      /**\n\t       * Map Options for Form Select Elements of Specimen Form\n\t       */\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      addSpecimenButton = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Add Specimen'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this3.props.edit('specimenForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Specimen',\n\t            show: this.props.editable.specimenForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            candidateSessions: this.props.options.candidateSessions,\n\t            sessionCenters: this.props.options.sessionCenters,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL\n\t          })\n\t        )\n\t      );\n\t\n\t      var poolSpecimenButtonContent = React.createElement('span', { className: 'glyphicon glyphicon-resize-small' });\n\t\n\t      poolSpecimenButton = React.createElement(\n\t        _Modal2.default,\n\t        {\n\t          title: 'Pool Specimens',\n\t          buttonClass: 'action-button pool',\n\t          buttonContent: poolSpecimenButtonContent,\n\t          style: { display: 'inline-block' }\n\t        },\n\t        React.createElement(_poolSpecimenForm2.default, {\n\t          specimenTypes: this.props.options.specimenTypes,\n\t          containerTypesPrimary: containerTypesPrimary,\n\t          containersNonPrimary: this.props.options.containersNonPrimary,\n\t          specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t          specimenProtocols: this.props.options.specimenProtocols,\n\t          specimenProtocolAttributes: this.props.options.specimenProtocolAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          capacities: this.props.options.capacities,\n\t          containerDimensions: this.props.options.containerDimensions,\n\t          containerCoordinates: this.props.options.containerCoordinates,\n\t          specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t          specimenUnits: this.props.options.specimenUnits,\n\t          candidates: candidates,\n\t          candidateSessions: this.props.options.candidateSessions,\n\t          sessionCenters: this.props.options.sessionCenters,\n\t          specimenRequest: loris.BaseURL + '/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode',\n\t          mapFormOptions: this.props.mapFormOptions,\n\t          saveSpecimen: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveSpecimen',\n\t          saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer'\n\t        })\n\t      );\n\t\n\t      var containerTypesNonPrimary = this.props.mapFormOptions(this.props.options.containerTypesNonPrimary, 'label');\n\t\n\t      addContainerButton = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Add Container'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this3.props.edit('containerForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Container',\n\t            show: this.props.editable.containerForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_containerForm2.default, {\n\t            containerTypesNonPrimary: containerTypesNonPrimary,\n\t            centers: this.props.options.centers,\n\t            containerStati: containerStati,\n\t            saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer',\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      var tabList = [{ id: \"specimens\", label: \"Specimens\" }, { id: \"containers\", label: \"Containers\" }];\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'biobank-page' },\n\t        React.createElement(\n\t          _Tabs.Tabs,\n\t          { tabs: tabList, defaultTab: 'specimens', updateURL: true },\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[0].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-10' },\n\t                React.createElement(\n\t                  _FilterForm2.default,\n\t                  {\n\t                    Module: 'biobank',\n\t                    name: 'specimen_filter',\n\t                    id: 'specimen_filter',\n\t                    ref: 'specimenFilter',\n\t                    columns: 3,\n\t                    formElements: this.props.specimenDataTable.form,\n\t                    onUpdate: this.props.updateSpecimenFilter,\n\t                    filter: this.props.specimenFilter\n\t                  },\n\t                  React.createElement('br', null),\n\t                  React.createElement(StaticElement, null),\n\t                  React.createElement(StaticElement, null),\n\t                  React.createElement(ButtonElement, {\n\t                    label: 'Clear Filters',\n\t                    type: 'reset',\n\t                    onUserInput: this.resetFilters\n\t                  })\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-2' },\n\t                React.createElement(\n\t                  'span',\n\t                  { className: 'action' },\n\t                  addSpecimenButton,\n\t                  React.createElement(\n\t                    'div',\n\t                    { className: 'action-title' },\n\t                    'Add Specimen'\n\t                  )\n\t                ),\n\t                React.createElement('br', null),\n\t                React.createElement('br', null),\n\t                React.createElement(\n\t                  'span',\n\t                  { className: 'action' },\n\t                  poolSpecimenButton,\n\t                  React.createElement(\n\t                    'div',\n\t                    { className: 'action-title' },\n\t                    'Pool Specimens'\n\t                  )\n\t                )\n\t              )\n\t            ),\n\t            React.createElement(StaticDataTable, {\n\t              Data: this.props.specimenDataTable.Data,\n\t              Headers: this.props.specimenDataTable.Headers,\n\t              Filter: this.props.specimenFilter,\n\t              getFormattedCell: this.formatSpecimenColumns\n\t            })\n\t          ),\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[1].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-10' },\n\t                React.createElement(\n\t                  _FilterForm2.default,\n\t                  {\n\t                    Module: 'biobank',\n\t                    name: 'container_filter',\n\t                    id: 'container_filter',\n\t                    ref: 'containerFilter',\n\t                    columns: 3,\n\t                    formElements: this.props.containerDataTable.form,\n\t                    onUpdate: this.props.updateContainerFilter,\n\t                    filter: this.props.containerFilter\n\t                  },\n\t                  React.createElement('br', null),\n\t                  React.createElement(StaticElement, null),\n\t                  React.createElement(StaticElement, null),\n\t                  React.createElement(ButtonElement, {\n\t                    label: 'Clear Filters',\n\t                    type: 'reset',\n\t                    onUserInput: this.resetFilters\n\t                  })\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-2' },\n\t                React.createElement(\n\t                  'span',\n\t                  { className: 'action' },\n\t                  addContainerButton,\n\t                  React.createElement(\n\t                    'div',\n\t                    { className: 'action-title' },\n\t                    'New Container'\n\t                  )\n\t                )\n\t              )\n\t            ),\n\t            React.createElement(StaticDataTable, {\n\t              Data: this.props.containerDataTable.Data,\n\t              Headers: this.props.containerDataTable.Headers,\n\t              Filter: this.props.containerFilter,\n\t              getFormattedCell: this.formatContainerColumns\n\t            })\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankFilter;\n\t}(React.Component);\n\t\n\texports.default = BiobankFilter;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(4);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t      if (key) {\n\t        filter[key] = {};\n\t        if (value) {\n\t          // all defined/non-null values must have some length, else empty string\n\t          filter[key].value = Object.keys(value).length > 0 ? value : '';\n\t        } else {\n\t          // null and undefined handled here\n\t          filter[key].value = '';\n\t        }\n\t        filter[key].exactMatch = type === \"SelectElement\";\n\t      } else if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure key is of string type and value is of string or object type\n\t      // before sending them to querystring\n\t      if (typeof fieldName !== 'string' || typeof fieldValue !== 'string' && (typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        _Panel2.default,\n\t        {\n\t          id: this.props.id,\n\t          height: this.props.height,\n\t          title: this.props.title\n\t        },\n\t        React.createElement(\n\t          FormElement,\n\t          this.props,\n\t          formChildren\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      var pencilGlyph = void 0;\n\t      if (this.props.edit) {\n\t        pencilGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-pencil\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.edit\n\t        });\n\t      }\n\t\n\t      var plusGlyph = void 0;\n\t      if (this.props.add) {\n\t        plusGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-plus\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.add\n\t        });\n\t      }\n\t\n\t      var removeGlyph = void 0;\n\t      if (this.props.cancel) {\n\t        removeGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-remove\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.cancel\n\t        });\n\t      }\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\"\n\t        },\n\t        React.createElement(\"span\", {\n\t          className: glyphClass,\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        }),\n\t        pencilGlyph,\n\t        plusGlyph,\n\t        removeGlyph,\n\t        this.props.title\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  edit: React.PropTypes.func,\n\t  add: React.PropTypes.func\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(6);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).call(this));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      candidateId: null,\n\t      sessionId: null,\n\t      centerId: null,\n\t      barcodeList: { 1: { specimen: { collection: {} }, container: {} } },\n\t      count: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.addBarcode = _this.addBarcode.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyBarcode = _this.copyBarcode.bind(_this);\n\t    _this.removeBarcode = _this.removeBarcode.bind(_this);\n\t    _this.saveBarcodeList = _this.saveBarcodeList.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveBarcodeList',\n\t    value: function saveBarcodeList() {\n\t      var _this2 = this;\n\t\n\t      var barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var barcode in barcodeList) {\n\t        //set container values\n\t        var container = barcodeList[barcode].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.locationId = this.state.centerId;\n\t        container.originId = this.state.centerId;\n\t\n\t        //set specimen values\n\t        var specimen = barcodeList[barcode].specimen;\n\t        specimen.candidateId = this.state.candidateId;\n\t        specimen.sessionId = this.state.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.locationId = this.state.centerId;\n\t        if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n\t          specimen.fTCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: these will eventually be higher level states.\n\t        if (this.props.data) {\n\t          specimen.candidateId = this.props.data.candidate.CandID;\n\t          specimen.sessionId = this.props.data.session.ID;\n\t          specimen.parentSpecimenId = this.props.data.specimen.id;\n\t          specimen.collection.locationId = this.props.data.container.locationId;\n\t          container.locationId = this.props.data.container.locationId;\n\t          container.originId = this.props.data.container.locationId;\n\t        }\n\t\n\t        barcodeList[barcode].container = container;\n\t        barcodeList[barcode].specimen = specimen;\n\t      }\n\t\n\t      this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(function () {\n\t        _this2.props.refreshParent();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var centerId = this.state.centerId;\n\t      var candidateId = this.state.candidateId;\n\t      var sessionId = this.state.sessionId;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      if (name === 'candidateId') {\n\t        candidateId = value;\n\t      } else if (name === 'sessionId') {\n\t        sessionId = value;\n\t        centerId = this.props.sessionCenters[sessionId].centerId;\n\t      } else {\n\t        //this is eliminate values if specimen type is changed\n\t        if (name === 'typeId') {\n\t          barcodeList[key].specimen = { collection: {} };\n\t        }\n\t        barcodeList[key].specimen[name] = value;\n\t      }\n\t\n\t      this.setState({ barcodeList: barcodeList, centerId: centerId, candidateId: candidateId, sessionId: sessionId });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var barcodeList = this.state.barcodeList;\n\t      barcodeList[key].container[name] = value;\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'addBarcode',\n\t    value: function addBarcode() {\n\t      var barcodeList = this.state.barcodeList;\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t\n\t      barcodeList[count + 1] = { specimen: {}, container: { collection: {} } };\n\t      collapsed[count + 1] = true;\n\t      count = count + 1;\n\t\n\t      this.setState({ barcodeList: barcodeList, collapsed: collapsed, count: count });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyBarcode',\n\t    value: function copyBarcode(key) {\n\t      var count = this.state.count;\n\t      var collapsed = this.state.collapsed;\n\t      var nextKey = count + 1;\n\t      var barcodeList = this.state.barcodeList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key]));\n\t        delete barcodeList[nextKey].container.barcode;\n\t        collapsed[nextKey] = true;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        barcodeList: barcodeList,\n\t        count: nextKey,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeBarcode',\n\t    value: function removeBarcode(key) {\n\t      var barcodeList = this.state.barcodeList;\n\t      delete barcodeList[key];\n\t      this.setState({ barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var barcodeListArray = Object.keys(this.state.barcodeList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(_barcodeForm2.default, {\n\t            data: _this3.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this3.state.collapsed[key],\n\t            toggleCollapse: _this3.toggleCollapse,\n\t            mapFormOptions: _this3.props.mapFormOptions,\n\t            container: _this3.state.barcodeList[key].container || null,\n\t            specimen: _this3.state.barcodeList[key].specimen || null,\n\t            removeBarcode: barcodeListArray.length !== 1 ? function () {\n\t              return _this3.removeBarcode(key);\n\t            } : null,\n\t            addBarcode: i == barcodeListArray.length ? _this3.addBarcode : null,\n\t            setCopyMultiplier: _this3.setCopyMultiplier,\n\t            copyMultiplier: _this3.state.copyMultiplier,\n\t            copyBarcode: i == barcodeListArray.length && _this3.state.barcodeList[key] ? _this3.copyBarcode : null,\n\t            setContainer: _this3.setContainer,\n\t            setSpecimen: _this3.setSpecimen,\n\t            onChange: _this3.props.onChange,\n\t            specimenTypes: _this3.props.specimenTypes,\n\t            containerTypesPrimary: _this3.props.containerTypesPrimary,\n\t            containersNonPrimary: _this3.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this3.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this3.props.attributeDatatypes,\n\t            attributeOptions: _this3.props.attributeOptions,\n\t            capacities: _this3.props.capacities,\n\t            containerDimensions: _this3.props.containerDimensions,\n\t            containerCoordinates: _this3.props.containerCoordinates,\n\t            specimenTypeUnits: _this3.props.specimenTypeUnits,\n\t            units: _this3.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = barcodeListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimenData,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimenData,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.state.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.candidateId,\n\t            placeHolder: 'Search for a PSCID'\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.setSpecimen,\n\t            required: true,\n\t            value: this.state.sessionId,\n\t            disabled: this.state.candidateId ? false : true\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: function onSubmit() {\n\t            _this3.saveBarcodeList();\n\t            _this3.props.saveSpecimen instanceof Function && _this3.props.saveSpecimen();\n\t          },\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(7);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimen(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyBarcode(this.props.copyMultiplier);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var addBarcodeButton = void 0;\n\t      var addBarcodeText = void 0;\n\t      var copyBarcodeButton = void 0;\n\t      var copyBarcodeText = void 0;\n\t      if (this.props.addBarcode) {\n\t        addBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addBarcode\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyBarcode) {\n\t        copyBarcodeButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyBarcodeText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeBarcodeButton = void 0;\n\t      if (this.props.removeBarcode) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeBarcodeButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeBarcode,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeBarcodeButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                setSpecimenData: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainerData: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addBarcodeButton,\n\t              addBarcodeText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copyBarcodeButton,\n\t              copyBarcodeText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\texports.default = SpecimenBarcodeForm;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(8);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.setCollection = _this.setCollection.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollection',\n\t    value: function setCollection(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollection('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = React.createElement(_customFields2.default, {\n\t              fields: specimenTypeFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.collection.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollection,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimen: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Custom Attribute Fields\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\tvar CustomFields = function (_React$Component) {\n\t  _inherits(CustomFields, _React$Component);\n\t\n\t  function CustomFields() {\n\t    _classCallCheck(this, CustomFields);\n\t\n\t    return _possibleConstructorReturn(this, (CustomFields.__proto__ || Object.getPrototypeOf(CustomFields)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CustomFields, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var fields = this.props.fields;\n\t      var attributeFields = Object.keys(fields).map(function (attribute) {\n\t\n\t        var datatype = _this2.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n\t        if (datatype === 'text' || datatype === 'number') {\n\t          if (fields[attribute]['refTableId'] === null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t\n\t          if (fields[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fields[attribute]['refTableId']],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === 'datetime') {\n\t          return React.createElement(DataElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.object[attribute]\n\t          });\n\t        }\n\t\n\t        // Do not present the possibility of uploading if file is already set\n\t        // File must instead be deleted or overwritten.\n\t        if (datatype === 'file' && !(_this2.props.data || {})[attribute]) {\n\t          return React.createElement(FileElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.files[_this2.props.object[attribute]]\n\t          });\n\t        }\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        attributeFields\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CustomFields;\n\t}(React.Component);\n\t\n\tCustomFields.propTypes = {\n\t  fields: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  object: React.PropTypes.object.isRequired,\n\t  setData: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = CustomFields;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    return _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.props.setContainer,\n\t        required: true,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainer: this.props.setContainer\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var load = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\t\n\t        load(this.props.children[this.props.coordinates[coordinate]].barcode);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      this.props.saveChildContainer(container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // This is eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = null;\n\t\n\t            if (!this.props.select) {\n\t              // This double if statement doesn't sound great\n\t              if (this.props.coordinates) {\n\t                if (this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node occupied';\n\t                  dataHtml = 'true';\n\t                  dataToggle = 'tooltip';\n\t                  dataPlacement = 'top';\n\t                  tooltipTitle = '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                  draggable = 'true';\n\t                  onDragStart = this.drag;\n\t                  onDragOver = null;\n\t                  onDrop = null;\n\t                  onClick = this.redirectURL;\n\t                }\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this2.props.setContainer('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this2.props.setContainer('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  // TODO: --- This is currently not working ---\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            {\n\t              className: 'row',\n\t              style: rowStyle\n\t            },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'display' },\n\t        display\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _barcodeForm = __webpack_require__(6);\n\t\n\tvar _barcodeForm2 = _interopRequireDefault(_barcodeForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _preparationForm = __webpack_require__(12);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Pool Specimen Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\tvar PoolSpecimenForm = function (_React$Component) {\n\t  _inherits(PoolSpecimenForm, _React$Component);\n\t\n\t  function PoolSpecimenForm(props) {\n\t    _classCallCheck(this, PoolSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (PoolSpecimenForm.__proto__ || Object.getPrototypeOf(PoolSpecimenForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      barcodeList: {},\n\t      errorMessage: null,\n\t      formErrors: {},\n\t      barcodeCount: 2,\n\t      preparation: false,\n\t      step: 1\n\t    };\n\t\n\t    _this.handleSubmit = _this.handleSubmit.bind(_this);\n\t    _this.validateForm = _this.validateForm.bind(_this);\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.setPreparationFormData = _this.setPreparationFormData.bind(_this);\n\t    _this.setSpecimenFormData = _this.setSpecimenFormData.bind(_this);\n\t    _this.submitForm = _this.submitForm.bind(_this);\n\t    _this.setBarcodeCount = _this.setBarcodeCount.bind(_this);\n\t    _this.next = _this.next.bind(_this);\n\t    _this.previous = _this.previous.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.removePreparation = _this.removePreparation.bind(_this);\n\t    _this.validate = _this.validate.bind(_this);\n\t    _this.formSwitch = _this.formSwitch.bind(_this);\n\t    _this.preparationSwitch = _this.preparationSwitch.bind(_this);\n\t    _this.runAjax = _this.runAjax.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(PoolSpecimenForm, [{\n\t    key: 'next',\n\t    value: function next() {\n\t      var _this2 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this2.setState({\n\t          poolData: data,\n\t          step: _this2.state.step + 1\n\t        });\n\t      }, function (error) {\n\t        swal(\"Oops!\", error.responseText, \"error\");\n\t      });\n\t    }\n\t  }, {\n\t    key: 'previous',\n\t    value: function previous() {\n\t      this.setState({\n\t        step: this.state.step - 1\n\t      });\n\t    }\n\t  }, {\n\t    key: 'validate',\n\t    value: function validate() {\n\t      return this.runAjax(this.props.specimenRequest, { barcodeList: this.state.barcodeList });\n\t    }\n\t  }, {\n\t    key: 'runAjax',\n\t    value: function runAjax(url, inputData) {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        $.ajax(url, {\n\t          method: \"GET\",\n\t          dataType: 'json',\n\t          data: inputData,\n\t          success: function (data) {\n\t            resolve(data);\n\t          }.bind(_this3),\n\t          error: function error(_error, textStatus, errorThrown) {\n\t            reject(_error);\n\t            console.error(_error);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setBarcodeCount',\n\t    value: function setBarcodeCount(field, value) {\n\t      var barcodeCount = value;\n\t      var barcodeList = this.state.barcodeList;\n\t      for (var barcode in barcodeList) {\n\t        if (barcode > barcodeCount) {\n\t          delete barcodeList[barcode];\n\t        }\n\t      }\n\t\n\t      this.setState({ barcodeCount: barcodeCount, barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'formSwitch',\n\t    value: function formSwitch(inputForm, specimenForm) {\n\t      switch (this.state.step) {\n\t        case 1:\n\t          return inputForm;\n\t        case 2:\n\t          return specimenForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'preparationSwitch',\n\t    value: function preparationSwitch(preparationButton, preparationForm) {\n\t      switch (this.state.preparation) {\n\t        case false:\n\t          return preparationButton;\n\t        case true:\n\t          return preparationForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var _this4 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this4.setState({\n\t          poolData: data,\n\t          preparation: true\n\t        });\n\t      }, function (error) {\n\t        swal('Oh no!', error.responseText, 'error');\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removePreparation',\n\t    value: function removePreparation() {\n\t      var formData = this.state.formData;\n\t      //TODO: is it better to set it to empty, or delete it?\n\t      formData.preparationForm = {};\n\t      this.setState({\n\t        preparation: false,\n\t        formData: formData\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      //Generates barcodes\n\t      var barcodes = [];\n\t      for (var i = 1; i <= this.state.barcodeCount; i++) {\n\t        barcodes.push(React.createElement(TextboxElement, {\n\t          name: i,\n\t          label: 'Barcode ' + i,\n\t          onUserInput: this.setFormData,\n\t          required: true,\n\t          value: this.state.barcodeList[i],\n\t          errorMessage: this.state.formErrors[i]\n\t        }));\n\t      }\n\t\n\t      var preparationButton = React.createElement(\n\t        'div',\n\t        { className: 'row' },\n\t        React.createElement('div', { className: 'col-xs-4' }),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs 4 action' },\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button add',\n\t                onClick: this.addPreparation\n\t              },\n\t              '+'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Add Preparation'\n\t          )\n\t        )\n\t      );\n\t\n\t      var preparationForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        var specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId];\n\t\n\t        var specimenProtocols = {};\n\t        for (var id in specimenProtocolAttributes) {\n\t          specimenProtocols[id] = this.props.specimenProtocols[id];\n\t        }\n\t        specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\t\n\t        preparationForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(_preparationForm2.default, {\n\t              formData: this.state.formData.preparationForm,\n\t              specimenProtocols: specimenProtocols,\n\t              specimenProtocolAttributes: specimenProtocolAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              setParentFormData: this.setPreparationFormData,\n\t              insertAction: loris.BaseURL + '/biobank/ajax/submitData.php?action=insertSpecimenPreparation'\n\t            }),\n\t            React.createElement(\n\t              'a',\n\t              { className: 'pull-right', style: { cursor: 'pointer' }, onClick: this.removePreparation },\n\t              'Cancel Preparation'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var inputForm = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(StaticElement, {\n\t              label: 'Pooling Note',\n\t              text: 'Select or Scan the specimens to be pooled. Please ensure that they are the same type, and share the same PSCID and Visit Label'\n\t            }),\n\t            React.createElement(NumericElement, {\n\t              label: '\\u2116 of Specimens',\n\t              min: '2',\n\t              max: '100',\n\t              value: this.state.barcodeCount,\n\t              onUserInput: this.setBarcodeCount\n\t            }),\n\t            barcodes\n\t          )\n\t        ),\n\t        this.preparationSwitch(preparationButton, preparationForm),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-sm-3 col-xs-offset-9 action' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Next'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.next\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        )\n\t      );\n\t\n\t      //TODO: Things here need to be in the proper order!!!\n\t      var specimenForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        // This is to provide the options for the output specimens\n\t        var specimenTypes = {};\n\t        if (this.state.poolData.typeId) {\n\t          specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n\t        }\n\t\n\t        var pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n\t        var visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\t\n\t        var barcodesArray = Object.values(this.state.barcodeList);\n\t        var barcodesString = barcodesArray.join(', ');\n\t\n\t        // TODO: rather than all specimen units this should really be specific to the\n\t        // type\n\t        var specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\t\n\t        specimenForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            React.createElement(_specimenForm2.default, {\n\t              formData: this.state.formData.specimenForm,\n\t              candidateId: this.state.poolData.candidateId,\n\t              pscid: pscid,\n\t              sessionId: this.state.poolData.sessionId,\n\t              visit: visit,\n\t              parentSpecimenBarcodes: barcodesString,\n\t              parentSpecimenIds: this.state.poolData.specimenIds,\n\t              specimenTypes: specimenTypes,\n\t              specimenTypeUnits: this.props.specimenTypeUnits,\n\t              specimenUnits: specimenUnits,\n\t              containerTypesPrimary: this.props.containerTypesPrimary,\n\t              containersNonPrimary: this.props.containersNonPrimary,\n\t              specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              capacities: this.props.capacities,\n\t              containerDimensions: this.props.containerDimensions,\n\t              containerCoordinates: this.props.containerCoordinates,\n\t              setParentFormData: this.setSpecimenFormData,\n\t              action: loris.BaseURL + '/biobank/ajax/submitData.php?action=submitSpecimen',\n\t              refreshParent: this.props.refreshParent\n\t            }),\n\t            React.createElement(ButtonElement, {\n\t              label: 'Submit'\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-3 col-xs-offset-2 action' },\n\t            React.createElement(\n\t              'span',\n\t              { className: 'action' },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: this.previous\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'action-title' },\n\t              'Previous'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'poolSpecimenForm',\n\t          id: 'poolSpecimenForm',\n\t          onSubmit: this.handleSubmit,\n\t          ref: 'form'\n\t        },\n\t        this.formSwitch(inputForm, specimenForm)\n\t      );\n\t    }\n\t\n\t    /** *******************************************************************************\n\t     *                      ******     Helper methods     *******\n\t     *********************************************************************************/\n\t\n\t  }, {\n\t    key: 'validateForm',\n\t    value: function validateForm(formElement, value) {\n\t      var _this5 = this;\n\t\n\t      var formErrors = this.state.formErrors;\n\t\n\t      //validate barcode regex\n\t      if (formElement === \"barcode\" && value !== \"\") {\n\t        if (!/^hello/.test(this.state.formData.barcode)) {\n\t          formErrors.barcode = true;\n\t        } else {\n\t          formErrors.barcode = false;\n\t        }\n\t      }\n\t\n\t      //validate that quantity is a number and less than capacity\n\t      if (formElement === \"quantity\" && value !== \"\") {\n\t        if (isNaN(value) || value > this.props.capacities[this.state.currentContainerType]) {\n\t          formErrors.quantity = true;\n\t        } else {\n\t          formErrors.quantity = false;\n\t        }\n\t      }\n\t\n\t      //validate datatypes and regex of generated type attributes\n\t      var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n\t      var specimenTypeFields = Object.keys(specimenTypeFieldsObject).map(function (attribute) {\n\t\n\t        var datatype = _this5.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"number\") {\n\t          if (formElement === attribute) {\n\t            if (isNaN(value) && value !== \"\") {\n\t              formErrors[attribute] = true;\n\t            } else {\n\t              formErrors[attribute] = false;\n\t            }\n\t          }\n\t        }\n\t      });\n\t\n\t      this.setState({\n\t        formErrors: formErrors\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Handle form submission\n\t     * @param {object} e - Form submission event\n\t     */\n\t\n\t  }, {\n\t    key: 'handleSubmit',\n\t    value: function handleSubmit(e) {\n\t      e.preventDefault();\n\t\n\t      this.submitForm();\n\t    }\n\t\n\t    /*\n\t     * Uploads the file to the server\n\t     */\n\t\n\t  }, {\n\t    key: 'submitForm',\n\t    value: function submitForm() {\n\t      // Set form data and specimen the biobank file\n\t      var formData = this.state.formData;\n\t      var preparationForm = this.state.formData.preparationForm;\n\t      var specimenForm = this.state.formData.specimenForm;\n\t      formData['preparationForm'] = JSON.stringify(preparationForm);\n\t      formData['specimenForm'] = JSON.stringify(specimenForm);\n\t\n\t      console.log(formData.specimenForm);\n\t      console.log(formData.preparationForm);\n\t\n\t      var formObj = new FormData();\n\t      for (var key in formData) {\n\t        if (formData[key] !== \"\") {\n\t          formObj.append(key, formData[key]);\n\t        }\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: this.props.action,\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function () {\n\t          //this.props.refreshParent();\n\t          swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n\t          this.props.onSuccess();\n\t        }.bind(this),\n\t        error: function (err) {\n\t          console.error(err);\n\t          var msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\t          this.setState({\n\t            errorMessage: msg\n\t          });\n\t          swal(msg, \"\", \"error\");\n\t        }.bind(this)\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Checks if the inputted file name is valid\n\t     *\n\t     * @param {string} requiredFileName - Required file name\n\t     * @param {string} fileName - Provided file name\n\t     * @return {boolean} - true if fileName starts with requiredFileName, false\n\t     *   otherwise\n\t     */\n\t    //  isValidFileName(requiredFileName, fileName) {\n\t    //    if (fileName === null || requiredFileName === null) {\n\t    //      return false;\n\t    //    }\n\t    //\n\t    //    return (fileName.indexOf(requiredFileName) === 0);\n\t    //  }\n\t\n\t    /**\n\t     * Validate the form\n\t     *\n\t     * @param {object} formRefs - Object containing references to React form elements\n\t     * @param {object} formData - Object containing form data inputed by user\n\t     * @return {boolean} - true if all required fields are filled, false otherwise\n\t     */\n\t\n\t  }, {\n\t    key: 'isValidForm',\n\t    value: function isValidForm(formRefs, formData) {\n\t      var isValidForm = true;\n\t\n\t      var requiredFields = {\n\t        pscid: null,\n\t        visitLabel: null\n\t      };\n\t\n\t      Object.keys(requiredFields).map(function (field) {\n\t        if (formData[field]) {\n\t          requiredFields[field] = formData[field];\n\t        } else if (formRefs[field]) {\n\t          formRefs[field].props.hasError = true;\n\t          isValidForm = false;\n\t        }\n\t      });\n\t      this.forceUpdate();\n\t\n\t      return isValidForm;\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      // This lets the modal window know that there is formData\n\t      // and will cause a warning to be thrown of the modal window\n\t      // is exited\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t\n\t      if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n\t        this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n\t      }\n\t\n\t      var formData = this.state.formData;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      //TODO: there must be a better way to do this\n\t      if (isNaN(formElement)) {\n\t        formData[formElement] = value;\n\t      } else {\n\t        barcodeList[formElement] = value;\n\t      }\n\t\n\t      this.setState({\n\t        formData: formData,\n\t        barcodeList: barcodeList\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setPreparationFormData',\n\t    value: function setPreparationFormData(preparationFormData) {\n\t      var formData = this.state.formData;\n\t      formData.preparationForm = preparationFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenFormData',\n\t    value: function setSpecimenFormData(specimenFormData) {\n\t      var formData = this.state.formData;\n\t      formData.specimenForm = specimenFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }]);\n\t\n\t  return PoolSpecimenForm;\n\t}(React.Component);\n\t\n\tPoolSpecimenForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  action: React.PropTypes.string.isRequired,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\texports.default = PoolSpecimenForm;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(8);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = React.createElement(_customFields2.default, {\n\t              fields: specimenProtocolFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.preparation.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerBarcodeForm = __webpack_require__(14);\n\t\n\tvar _containerBarcodeForm2 = _interopRequireDefault(_containerBarcodeForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainerForm = function (_React$Component) {\n\t  _inherits(BiobankContainerForm, _React$Component);\n\t\n\t  function BiobankContainerForm(props) {\n\t    _classCallCheck(this, BiobankContainerForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainerForm.__proto__ || Object.getPrototypeOf(BiobankContainerForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formErrors: {},\n\t      errorMessage: null,\n\t      containerList: { 1: {} },\n\t      countContainers: 1,\n\t      collapsed: { 1: true },\n\t      copyMultiplier: 1\n\t    };\n\t\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.addContainer = _this.addContainer.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.setCopyMultiplier = _this.setCopyMultiplier.bind(_this);\n\t    _this.copyContainer = _this.copyContainer.bind(_this);\n\t    _this.removeContainer = _this.removeContainer.bind(_this);\n\t    _this.saveContainerList = _this.saveContainerList.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainerForm, [{\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setState({ collapsed: collapsed });\n\t    }\n\t  }, {\n\t    key: 'saveContainerList',\n\t    value: function saveContainerList() {\n\t      var _this2 = this;\n\t\n\t      var containerList = this.state.containerList;\n\t      var availableId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this2.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      for (var container in containerList) {\n\t        containerList[container].statusId = availableId;\n\t        containerList[container].temperature = 20;\n\t        this.props.save(containerList[container], this.props.saveContainer).then(function () {\n\t          _this2.props.refreshParent();\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value, key) {\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t      var siteId = this.state.siteId;\n\t      var containerList = this.state.containerList;\n\t      if (name === 'siteId') {\n\t        siteId = value;\n\t        for (var container in containerList) {\n\t          containerList[container].originId = siteId;\n\t          containerList[container].locationId = siteId;\n\t        }\n\t      } else {\n\t        containerList[key][name] = value;\n\t      }\n\t      this.setState({ containerList: containerList, siteId: siteId });\n\t    }\n\t  }, {\n\t    key: 'addContainer',\n\t    value: function addContainer() {\n\t      var _this3 = this;\n\t\n\t      var containerList = this.state.containerList;\n\t      var count = this.state.countContainers;\n\t      var collapsed = this.state.collapsed;\n\t      var siteId = this.state.siteId;\n\t      var temperature = 20;\n\t\n\t      // get Id of available status\n\t      var statusId = Object.keys(this.props.containerStati).find(function (key) {\n\t        return _this3.props.containerStati[key] === 'Available';\n\t      });\n\t\n\t      containerList[count + 1] = {\n\t        statusId: statusId,\n\t        originId: siteId,\n\t        locationId: siteId,\n\t        temperature: temperature\n\t      };\n\t\n\t      collapsed[count + 1] = true;\n\t\n\t      this.setState({\n\t        containerList: containerList,\n\t        countContainers: count + 1,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setCopyMultiplier',\n\t    value: function setCopyMultiplier(e) {\n\t      var copyMultiplier = e.target.value;\n\t      this.setState({ copyMultiplier: copyMultiplier });\n\t    }\n\t  }, {\n\t    key: 'copyContainer',\n\t    value: function copyContainer(key) {\n\t      var count = this.state.countContainers;\n\t      var collapsed = this.state.collapsed;\n\t      var nextKey = count + 1;\n\t      var containerList = this.state.containerList;\n\t      var multiplier = this.state.copyMultiplier;\n\t\n\t      for (var i = 1; i <= multiplier; i++) {\n\t        containerList[nextKey] = JSON.parse(JSON.stringify(containerList[key]));\n\t        delete containerList[nextKey].barcode;\n\t        collapsed[nextKey] = true;\n\t        nextKey++;\n\t      }\n\t\n\t      this.setState({\n\t        containerList: containerList,\n\t        countContainers: nextKey,\n\t        collapsed: collapsed\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeContainer',\n\t    value: function removeContainer(key) {\n\t      var containerList = this.state.containerList;\n\t      delete containerList[key];\n\t      this.setState({ containerList: containerList });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      //Generates new Barcode Form everytime the addContainer button is pressed\n\t      var containerListArray = Object.keys(this.state.containerList);\n\t      var containers = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          containers.push(React.createElement(_containerBarcodeForm2.default, {\n\t            key: key,\n\t            containerKey: key,\n\t            id: i,\n\t            collapsed: _this4.state.collapsed[key],\n\t            toggleCollapse: _this4.toggleCollapse,\n\t            container: _this4.state.containerList[key] || null,\n\t            removeContainer: containerListArray.length !== 1 ? function () {\n\t              return _this4.removeContainer(key);\n\t            } : null,\n\t            addContainer: i == containerListArray.length ? _this4.addContainer : null,\n\t            setCopyMultiplier: _this4.setCopyMultiplier,\n\t            copyMultiplier: _this4.state.copyMultiplier,\n\t            copyContainer: i == containerListArray.length && _this4.state.containerList[key] ? _this4.copyContainer : null,\n\t            setContainer: _this4.setContainer,\n\t            onChange: _this4.props.onChange,\n\t            containerTypesNonPrimary: _this4.props.containerTypesNonPrimary,\n\t            containerBarcodesNonPrimary: _this4.props.containerBarcodesNonPrimary\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = containerListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'containerForm',\n\t          onSubmit: this.saveContainerList,\n\t          ref: 'form'\n\t        },\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement(SelectElement, {\n\t              name: 'siteId',\n\t              label: 'Site',\n\t              options: this.props.centers,\n\t              onUserInput: this.setContainer,\n\t              required: true,\n\t              value: this.state.siteId\n\t            })\n\t          )\n\t        ),\n\t        containers,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3 col-xs-offset-9' },\n\t          React.createElement(ButtonElement, { label: 'Submit' })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainerForm;\n\t}(React.Component);\n\t\n\tBiobankContainerForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  barcode: React.PropTypes.string,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\texports.default = BiobankContainerForm;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Barcode Form\n\t *\n\t * Acts a subform for ContainerForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerBarcodeForm = function (_React$Component) {\n\t  _inherits(ContainerBarcodeForm, _React$Component);\n\t\n\t  function ContainerBarcodeForm() {\n\t    _classCallCheck(this, ContainerBarcodeForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerBarcodeForm.__proto__ || Object.getPrototypeOf(ContainerBarcodeForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.copy = _this.copy.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerBarcodeForm, [{\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copyContainer(this.props.containerKey);\n\t    }\n\t\n\t    //TODO: change form.js so this isn't necessary\n\t\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainer(name, value, this.props.containerKey);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // HR TODO: All this CSS should eventually be moved\n\t      var addContainerButton = void 0;\n\t      var addContainerText = void 0;\n\t      var copyContainerButton = void 0;\n\t      var copyContainerText = void 0;\n\t      if (this.props.addContainer) {\n\t        addContainerButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addContainer\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addContainerText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copyContainer) {\n\t        copyContainerButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copyContainerText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: this.props.setCopyMultiplier,\n\t            value: this.props.copyMultiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeContainerButton = void 0;\n\t      if (this.props.removeContainer) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeContainerButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeContainer,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'container'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                ref: 'barcode',\n\t                required: true,\n\t                value: this.props.container.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.containerKey,\n\t              onClick: function onClick() {\n\t                return _this2.props.toggleCollapse(_this2.props.containerKey);\n\t              }\n\t            }),\n\t            removeContainerButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.containerKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesNonPrimary,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.typeId\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-3' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-4 action' },\n\t              addContainerButton,\n\t              addContainerText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-4 action' },\n\t              copyContainerButton,\n\t              copyContainerText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerBarcodeForm;\n\t}(React.Component);\n\t\n\tContainerBarcodeForm.propTypes = {};\n\t\n\texports.default = ContainerBarcodeForm;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/**\n\t * Allows to dynamically render vertical tabs corresponding to tab panes.\n\t */\n\t\n\tvar VerticalTabs = function (_React$Component2) {\n\t  _inherits(VerticalTabs, _React$Component2);\n\t\n\t  function VerticalTabs(props) {\n\t    _classCallCheck(this, VerticalTabs);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, (VerticalTabs.__proto__ || Object.getPrototypeOf(VerticalTabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this2.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this2.props.defaultTab) {\n\t      activeTab = _this2.props.defaultTab;\n\t    } else if (_this2.props.tabs.length > 0) {\n\t      activeTab = _this2.props.tabs[0].id;\n\t    }\n\t\n\t    _this2.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this2.handleClick = _this2.handleClick.bind(_this2);\n\t    _this2.getTabs = _this2.getTabs.bind(_this2);\n\t    _this2.getTabPanes = _this2.getTabPanes.bind(_this2);\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(VerticalTabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tabbable col-md-3 col-sm-3' },\n\t          React.createElement(\n\t            'ul',\n\t            { className: 'nav nav-pills nav-stacked', role: 'tablist', style: tabStyle },\n\t            tabs\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content col-md-9 col-sm-9' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return VerticalTabs;\n\t}(React.Component);\n\t\n\tVerticalTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tVerticalTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component3) {\n\t  _inherits(TabPane, _React$Component3);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.VerticalTabs = VerticalTabs;\n\texports.TabPane = TabPane;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      var _this2 = this;\n\t\n\t      if (this.props.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          _this2.props.closeModal();\n\t        });\n\t      } else {\n\t        this.props.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 850,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '70px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          \"div\",\n\t          { style: backdropStyle, onClick: this.closeModal },\n\t          React.createElement(\n\t            \"div\",\n\t            { style: modalStyle, onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              } },\n\t            React.createElement(\n\t              \"div\",\n\t              { style: titleStyle },\n\t              this.props.title,\n\t              React.createElement(\n\t                \"span\",\n\t                { style: glyphStyle, onClick: this.closeModal },\n\t                \"\\xD7\"\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { style: bodyStyle },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(16);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _globals = __webpack_require__(18);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(7);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(12);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(23);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(24);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(25);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Map Options for Form Select Elements\n\t      var specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      var addAliquotForm = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Make Aliquots'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this2.props.edit('aliquotForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            closeModal: this.props.close,\n\t            show: this.props.editable.aliquotForm\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.props.data,\n\t            specimen: this.props.specimen,\n\t            setSpecimenData: this.props.setSpecimen,\n\t            saveSpecimen: this.props.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveBarcodeListURL: this.props.saveBarcodeListURL,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.props.editable.collection) {\n\t        var _containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t        console.log('not sure');\n\t        var specimenTypeAttributes = void 0;\n\t        console.log('not sure 2');\n\t        //loops through data object to produce static elements\n\t        console.log(this.props.data);\n\t        if (this.props.data.specimen.collection.data) {\n\t          var collectionData = this.props.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(collectionData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenTypeAttributes[_this2.props.data.specimen.typeId][key].name,\n\t              text: collectionData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.props.data.specimen.collection.quantity + ' ' + this.props.options.specimenUnits[this.props.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.collection.locationId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.props.editable.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.props.editable.collection ? null : function () {\n\t              _this2.props.edit('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.props.options.specimenProtocols) {\n\t        if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation Does Exist and the form is not in an edit state\n\t      if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        if (this.props.data.specimen.preparation.data) {\n\t          var preparationData = this.props.data.specimen.preparation.data;\n\t          specimenProtocolAttributes = Object.keys(preparationData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenProtocolAttributes[_this2.props.data.specimen.preparation.protocolId][key].name,\n\t              text: preparationData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.preparation.locationId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('preparation');_this2.props.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.preparation ? null : function () {\n\t                _this2.props.edit('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.props.options.specimenMethods) {\n\t        if (this.props.options.specimenMethods[_id].typeId === this.props.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.props.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.props.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          files: this.props.files,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          setFiles: this.props.setFiles,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        //TODO: Make the below a separate component\n\t        if (this.props.data.specimen.analysis.data) {\n\t          var analysisData = this.props.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.keys(analysisData).map(function (key) {\n\t            if (_this2.props.options.attributeDatatypes[_this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].datatypeId].datatype === 'file') {\n\t              return React.createElement(LinkElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key],\n\t                href: loris.BaseURL + '/biobank/ajax/requestData.php?action=downloadFile&file=' + analysisData[key],\n\t                target: '_blank',\n\t                download: analysisData[key]\n\t              });\n\t            } else {\n\t              return React.createElement(StaticElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key]\n\t              });\n\t            }\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.analysis.locationId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('analysis');_this2.props.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.analysis ? null : function () {\n\t                _this2.props.edit('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.props.specimen,\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        setSpecimen: this.props.setSpecimen,\n\t        saveSpecimen: this.props.saveSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            specimen: this.props.data.specimen,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\t\n\twindow.BiobankSpecimen = BiobankSpecimen;\n\twindow.RBiobankSpecimen = RBiobankSpecimen;\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(16);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _quantityField = __webpack_require__(19);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(20);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(21);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _locationField = __webpack_require__(22);\n\t\n\tvar _locationField2 = _interopRequireDefault(_locationField);\n\t\n\tvar _containerParentForm = __webpack_require__(9);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.editable.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.edit('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                specimen: this.props.specimen,\n\t                units: units,\n\t                close: this.props.close,\n\t                setSpecimen: this.props.setSpecimen,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if ((this.props.data.specimen || {}).fTCycle !== undefined) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.editable.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  _this2.props.edit('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              container: this.props.container,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.editable.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              container: this.props.container,\n\t              stati: stati,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var locationField = void 0;\n\t      if (!this.props.editable.location) {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.locationId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('location');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        locationField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_locationField2.default, {\n\t              container: this.props.container,\n\t              centers: this.props.options.centers,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var barcode = this.props.data.parentSpecimenContainer.barcode;\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t              return _this2.props.loadSpecimen(barcode);\n\t            } },\n\t          barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var _barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode;\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t                return _this2.props.loadContainer(_barcode);\n\t              } },\n\t            _barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerParentForm');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t          ),\n\t          React.createElement(\n\t            _Modal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              closeModal: this.props.close,\n\t              show: this.props.editable.containerParentForm\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        locationField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            inputClass: 'col-xs-11',\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.quantity\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 2 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'unit',\n\t            inputClass: 'col-xs-11',\n\t            options: this.props.units,\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveSpecimen,\n\t            columnSize: 'col-xs-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimen: React.PropTypes.func,\n\t  close: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 4 } },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flexGrow: 1 } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Location Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar LocationField = function (_React$Component) {\n\t  _inherits(LocationField, _React$Component);\n\t\n\t  function LocationField() {\n\t    _classCallCheck(this, LocationField);\n\t\n\t    return _possibleConstructorReturn(this, (LocationField.__proto__ || Object.getPrototypeOf(LocationField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LocationField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: this.props.className },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-6' },\n\t          React.createElement(SelectElement, {\n\t            name: 'locationId',\n\t            options: this.props.centers,\n\t            labelClass: 'col-xl-0',\n\t            inputClass: 'col-lg-12',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.locationId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-12'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs-3' },\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: this.props.close\n\t            },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LocationField;\n\t}(React.Component);\n\t\n\tLocationField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = LocationField;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(8);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      if (value instanceof File) {\n\t        data[name] = value.name;\n\t        this.props.setFiles(name, value);\n\t      } else {\n\t        data[name] = value;\n\t        this.setAnalysis('data', data);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.analysis) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = React.createElement(_customFields2.default, {\n\t              fields: specimenMethodFieldsObject,\n\t              files: this.props.files,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.analysis.data,\n\t              data: (((this.props.data || {}).specimen || {}).analysis || {}).data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          fileUpload: true,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\t//TODO: revise this component once Shipments are enabled.\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle() {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    return _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // Create Collection Node\n\t      var collectionNode = void 0;\n\t      if ((this.props.specimen || {}).collection || this.props.container) {\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Preparation Node\n\t      var preparationNode = void 0;\n\t      if ((this.props.specimen || {}).preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Analysis Node\n\t      var analysisNode = void 0;\n\t      if ((this.props.specimen || {}).analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'A'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Lines\n\t      var line = void 0;\n\t      var nodes = 0;\n\t      for (var i in this.props.specimen) {\n\t        if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n\t          nodes++;\n\t        }\n\t      }\n\t      var lineWidth = nodes > 1 ? 60 / (nodes - 1) : 0;\n\t      var lineStyle = { width: lineWidth + '%' };\n\t      line = React.createElement('div', { className: 'lifecycle-line', style: lineStyle });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode ? line : null,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainer('parentContainerId', null);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(18);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _lifeCycle = __webpack_require__(24);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _barcodePath = __webpack_require__(27);\n\t\n\tvar _barcodePath2 = _interopRequireDefault(_barcodePath);\n\t\n\tvar _containerDisplay = __webpack_require__(10);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tvar _containerCheckout = __webpack_require__(25);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankContainer */\n\t\n\t/**\n\t * Biobank Container\n\t *\n\t * Fetches data corresponding to a given Container from Loris backend and\n\t * displays a page allowing viewing of meta information of the container\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainer = function (_React$Component) {\n\t  _inherits(BiobankContainer, _React$Component);\n\t\n\t  function BiobankContainer() {\n\t    _classCallCheck(this, BiobankContainer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainer.__proto__ || Object.getPrototypeOf(BiobankContainer)).call(this));\n\t\n\t    _this.drag = _this.drag.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainer, [{\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      var barcodePath = React.createElement(_barcodePath2.default, {\n\t        container: this.props.data.container,\n\t        parentContainers: this.props.data.parentContainers,\n\t        loadContainer: this.props.loadContainer\n\t      });\n\t\n\t      var display = void 0;\n\t      if (this.props.data.container.dimensionId) {\n\t        display = React.createElement(_containerDisplay2.default, {\n\t          children: this.props.data.childContainers,\n\t          types: this.props.options.containerTypes,\n\t          dimensions: this.props.options.containerDimensions[this.props.data.container.dimensionId],\n\t          coordinates: this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null,\n\t          containerTypes: this.props.options.containerTypes,\n\t          containerStati: this.props.options.containerStati,\n\t          loadSpecimen: this.props.loadSpecimen,\n\t          loadContainer: this.props.loadContainer,\n\t          saveChildContainer: this.props.saveChildContainer\n\t        });\n\t      }\n\t\n\t      var listAssigned = [];\n\t      var listUnassigned = [];\n\t      if (this.props.data.childContainers) {\n\t        (function () {\n\t          var children = _this2.props.data.childContainers;\n\t\n\t          var _loop = function _loop(child) {\n\t            var load = void 0;\n\t            if (_this2.props.options.containerTypes[children[child].typeId].primary) {\n\t              load = _this2.props.loadSpecimen;\n\t              //url = loris.BaseURL+\"/biobank/specimen/?barcode=\"+children[child].barcode;\n\t            } else {\n\t              load = _this2.props.loadContainer;\n\t              //url = loris.BaseURL+\"/biobank/container/?barcode=\"+children[child].barcode;\n\t            }\n\t\n\t            if (children[child].coordinate) {\n\t              listAssigned.push(React.createElement(\n\t                'div',\n\t                null,\n\t                React.createElement(\n\t                  'a',\n\t                  { onClick: function onClick() {\n\t                      return load(children[child].barcode);\n\t                    } },\n\t                  children[child].barcode\n\t                ),\n\t                'at ',\n\t                children[child].coordinate\n\t              ));\n\t            } else {\n\t              listUnassigned.push(React.createElement(\n\t                'a',\n\t                {\n\t                  onClick: function onClick() {\n\t                    return load(children[child].barcode);\n\t                  },\n\t                  id: children[child].id,\n\t                  draggable: true,\n\t                  onDragStart: _this2.drag\n\t                },\n\t                children[child].barcode\n\t              ));\n\t            }\n\t          };\n\t\n\t          for (var child in children) {\n\t            _loop(child);\n\t          }\n\t        })();\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'container-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(_containerCheckout2.default, {\n\t            container: this.props.container,\n\t            setContainer: this.props.setContainer,\n\t            saveContainer: this.props.saveContainer\n\t          }),\n\t          React.createElement(_lifeCycle2.default, {\n\t            container: this.props.data.container,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'display-container' },\n\t            display,\n\t            barcodePath\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-list' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length !== 0 ? 'Assigned Containers' : null\n\t            ),\n\t            listAssigned,\n\t            listAssigned.length !== 0 ? React.createElement('br', null) : null,\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listUnassigned.length !== 0 ? 'Unassigned Containers' : null\n\t            ),\n\t            listUnassigned\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainer;\n\t}(React.Component);\n\t\n\tBiobankContainer.propTypes = {\n\t  containerPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RBiobankContainer = React.createFactory(BiobankContainer);\n\t\n\twindow.BiobankContainer = BiobankContainer;\n\twindow.RBiobankContainer = RBiobankContainer;\n\t\n\texports.default = BiobankContainer;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Path\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar BarcodePath = function (_React$Component) {\n\t  _inherits(BarcodePath, _React$Component);\n\t\n\t  function BarcodePath() {\n\t    _classCallCheck(this, BarcodePath);\n\t\n\t    return _possibleConstructorReturn(this, (BarcodePath.__proto__ || Object.getPrototypeOf(BarcodePath)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BarcodePath, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var path = [];\n\t      var pathLength = this.props.parentContainers.length - 1;\n\t      var containerURL = loris.BaseURL + '/biobank/container/?barcode=';\n\t\n\t      var _loop = function _loop(i) {\n\t        path.push(React.createElement(\n\t          'span',\n\t          { className: 'barcodePath' },\n\t          '/',\n\t          React.createElement(\n\t            'a',\n\t            { onClick: function onClick() {\n\t                return _this2.props.loadContainer(_this2.props.parentContainers[i].barcode);\n\t              } },\n\t            _this2.props.parentContainers[i].barcode\n\t          )\n\t        ));\n\t      };\n\t\n\t      for (var i = pathLength; i >= 0; i--) {\n\t        _loop(i);\n\t      }\n\t      path.push(React.createElement(\n\t        'span',\n\t        { className: 'barcodePath' },\n\t        '/',\n\t        React.createElement(\n\t          'a',\n\t          { onClick: function onClick() {\n\t              return _this2.props.loadContainer(_this2.props.container.barcode);\n\t            } },\n\t          this.props.container.barcode\n\t        )\n\t      ));\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        path\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodePath;\n\t}(React.Component);\n\t\n\tBarcodePath.propTypes = {};\n\t\n\texports.default = BarcodePath;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/biobankIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d62801950336817ac4f4","/* global ReactDOM */\n\nimport Loader from 'Loader';\nimport BiobankFilter from './filter';\nimport BiobankSpecimen from './specimen';\nimport BiobankContainer from './container';\n\nclass BiobankIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      specimenFilter: {},\n      containerDataTable: {},\n      containerFilter: {},\n      containerDataTable: {},\n      data: {},\n      specimen: {},\n      container: {},\n      page: '',\n      options: {},\n      files: {},\n      isLoaded: false,\n      editable: {\n        specimenForm: false,\n        containerForm: false,\n        aliquotForm: false,\n        containerParentForm: false,\n        temperature: false,\n        quantity: false,\n        status: false,\n        location: false,\n        collection: false,\n        preparation: false,\n        analysis: false,\n      }\n    };\n\n    this.fetch                    = this.fetch.bind(this);\n    this.loadDataTables           = this.loadDataTables.bind(this);\n    this.loadSpecimenDataTable    = this.loadSpecimenDataTable.bind(this);\n    this.loadContainerDataTable   = this.loadContainerDataTable.bind(this);\n    this.loadOptions              = this.loadOptions.bind(this);\n    this.loadContainer            = this.loadContainer.bind(this);\n    this.loadSpecimen             = this.loadSpecimen.bind(this);\n    this.fetch                    = this.fetch.bind(this);\n    this.updateSpecimenFilter     = this.updateSpecimenFilter.bind(this);\n    this.updateContainerFilter    = this.updateContainerFilter.bind(this);\n    this.clone                    = this.clone.bind(this);\n    this.mapFormOptions           = this.mapFormOptions.bind(this);\n    this.edit                     = this.edit.bind(this);\n    this.close                    = this.close.bind(this);\n    this.setSpecimen              = this.setSpecimen.bind(this);\n    this.revertSpecimen           = this.revertSpecimen.bind(this);\n    this.setContainer             = this.setContainer.bind(this);\n    this.revertContainer          = this.revertContainer.bind(this);\n    this.setFiles                 = this.setFiles.bind(this)\n    this.addPreparation           = this.addPreparation.bind(this);\n    this.addAnalysis              = this.addAnalysis.bind(this);\n    this.saveSpecimen             = this.saveSpecimen.bind(this);\n    this.saveContainer            = this.saveContainer.bind(this);\n    this.saveChildContainer       = this.saveChildContainer.bind(this);\n    this.save                     = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadDataTables().then(this.loadOptions().then(() => {\n      this.setState({isLoaded: true, page: 'filter'});\n    }));\n  }\n\n  loadDataTables() {\n    return new Promise(resolve => {\n      this.loadContainerDataTable().then(this.loadSpecimenDataTable().then(() => resolve()));\n    });\n  }\n\n  loadContainerDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenFilterDataURL).then(\n        data => {\n          let specimenDataTable = data;\n          this.setState({specimenDataTable}, resolve())\n        }\n      );\n    });\n  }\n\n  loadSpecimenDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerFilterDataURL).then(\n        data => {\n          let containerDataTable = data;\n          this.setState({containerDataTable}, resolve());\n        }\n      );\n    });\n  }\n\n  loadOptions() {\n    return new Promise(resolve => {\n      this.fetch(this.props.optionsURL).then(\n        data => {\n          let options = data;\n          this.setState({options}, resolve());\n        }\n      );\n    });\n  }\n\n  loadContainer(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerDataURL+barcode).then(\n        data => {\n          let container = this.clone(data.container);\n          let page = 'container';\n          this.setState({data, container, page}, resolve());\n        }\n      );\n    });\n  }\n\n  loadSpecimen(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenDataURL+barcode).then(\n        data => {\n          let specimen = this.clone(data.specimen);\n          let container = this.clone(data.container);\n          let page = 'specimen';\n          this.setState({data, specimen, container, page}, resolve());\n        }\n      );\n    });\n  }\n\n  fetch(url) {\n    return new Promise(resolve => {\n      $.ajax(url, {\n        dataType: 'json',\n        success: data => {\n          resolve(data);\n        },\n        error: (error, errorCode, errorMsg) => {\n          console.error(error, errorCode, errorMsg);\n        }\n      });\n    });\n  }\n\n  updateSpecimenFilter(specimenFilter) {\n    this.setState({specimenFilter});\n  }\n\n  updateContainerFilter(containerFilter) {\n    this.setState({containerFilter});\n  }\n\n  clone(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  mapFormOptions(object, attribute) {\n    let data = {};\n    for (let id in object) {\n      data[id] = object[id][attribute];\n    }\n    return data;\n  }\n\n  edit(stateKey) {\n    this.close();\n    let editable = this.state.editable;\n    editable[stateKey] = true;\n    this.setState({editable});\n  }\n\n  close() {\n    let editable = this.state.editable;\n    for (let key in editable) {\n      editable[key] = false;\n    }\n    this.state.data.specimen && this.revertSpecimen();\n    this.revertContainer();\n    this.setState({editable});\n\n  }\n\n  setSpecimen(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  revertSpecimen() {\n    let specimen = this.state.specimen;\n    specimen = this.clone(this.state.data.specimen);\n    this.setState({specimen});\n  }\n\n  setContainer(name, value) {\n    let container = this.state.container;\n    value ? container[name] = value : delete container[name]; \n    this.setState({container});\n  }\n\n  revertContainer() {\n    let container = this.state.container;\n    container = this.clone(this.state.data.container);\n    this.setState({container});\n  }\n\n  setFiles(name, value) {\n    let files = this.state.files;\n    files[value.name] = value;\n    this.setState({files});\n  }\n  \n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  addAnalysis() {\n    let specimen = this.state.specimen;\n    specimen.analysis = {locationId: this.state.data.container.locationId};\n    this.setState({specimen});\n  }\n\n  saveSpecimen() {\n    let specimen = this.state.specimen;\n    this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.specimen = this.clone(this.state.specimen);\n        this.setState({data});\n        this.close();\n      }\n    );\n  }\n\n  saveContainer() {\n    let container = this.state.container;\n    this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(\n      () => {\n        let data = this.state.data;\n        data.container = this.clone(this.state.container);\n        this.setState({data});\n        this.close();\n      }\n    );\n  }\n  \n  saveChildContainer(container) {\n    this.save(container, this.props.saveContainer).then(\n      () => {\n        let options = this.state.options;\n        let data    = this.state.data;\n        options.containerCoordinates[data.container.id][container.coordinate] = container.id;\n        if (data.childContainers[container.id].coordinate) {\n          delete options.containerCoordinates[data.container.id][data.childContainers[container.id].coordinate];\n        } else {\n          delete options.containerCoordinates[data.container.id].Unassigned.indexOf[data.container.id];\n        }\n\n        data.childContainers[container.id] = this.clone(container);\n        this.setState({options, data});\n      }\n    )\n  }\n\n  save(data, url, message) {\n    return new Promise(resolve => {\n      let dataObject = new FormData();\n      for (let file in this.state.files) {\n        dataOject.append(this.state.files[file].name, this.state.files[file]);\n      }\n      dataObject.append('data', JSON.stringify(data));\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: dataObject,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: () => {\n          resolve();\n          message && swal(message, '', 'success');\n        },\n        error: (error, textStatus, errorThrown) => {\n          let message = (error.responseJSON||{}).message || 'Submission error!';\n          swal(message, '', 'error');\n          console.error(error, textStatus, errorThrown);\n        }\n      });\n    });\n  }\n\n  render() {\n    if (this.state.error !== undefined) {\n      return (\n        <div className='alert alert-danger text-center'>\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    if (!this.state.isLoaded) {\n      return (\n        <Loader/>\n      );\n    }\n\n    let display;\n    switch (this.state.page) {\n      case 'container':\n        display = (\n          <BiobankContainer\n            data={this.state.data}\n            options={this.state.options}\n            container={this.state.container}\n            editable={this.state.editable}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            mapFormOptions={this.mapFormOptions}\n            setContainer={this.setContainer}\n            revertContainer={this.revertContainer}\n            saveContainer={this.saveContainer}\n            saveChildContainer={this.saveChildContainer}\n            edit={this.edit}\n            close={this.close}\n          />\n        );\n        break;\n      case 'specimen': \n        display = (\n          <BiobankSpecimen\n            data={this.state.data}\n            options={this.state.options}\n            container={this.state.container}\n            specimen={this.state.specimen}\n            editable={this.state.editable}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            mapFormOptions={this.mapFormOptions}\n            setContainer={this.setContainer}\n            revertContainer={this.revertContainer}\n            saveContainer={this.saveContainer}\n            setSpecimen={this.setSpecimen}\n            revertSpecimen={this.revertSpecimen}\n            saveSpecimen={this.saveSpecimen}\n            addPreparation={this.addPreparation}\n            addAnalysis={this.addAnalysis}\n            saveChildContainer={this.saveChildContainer}\n            edit={this.edit}\n            close={this.close}\n          />\n        );\n        break;\n      case 'filter':\n        display = (\n          <BiobankFilter\n            specimenFilter={this.state.specimenFilter}\n            specimenDataTable={this.state.specimenDataTable}\n            containerFilter={this.state.containerFilter}\n            containerDataTable={this.state.containerDataTable}\n            options={this.state.options}\n            editable={this.state.editable}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            updateSpecimenFilter={this.updateSpecimenFilter}\n            updateContainerFilter={this.updateContainerFilter}\n            mapFormOptions={this.mapFormOptions}\n            edit={this.edit}\n            close={this.close}\n            save={this.save}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n          />\n        );\n    }\n\n    return (\n      <div className=\"barcode-page\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            {display}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n$(function() {\n  const request = `${loris.BaseURL}/biobank/ajax/requestData.php?`;\n  const submit = `${loris.BaseURL}/biobank/ajax/submitData.php?`;\n  const biobankIndex = (\n    <div className='page=biobank'>\n      <BiobankIndex\n        specimenFilterDataURL={`${loris.BaseURL}/biobank/?format=json`}\n        containerFilterDataURL={`${request}action=getContainerFilterData`}\n        specimenDataURL={`${request}action=getSpecimenData&barcode=`}\n        containerDataURL={`${request}action=getContainerData&barcode=`}\n        optionsURL={`${request}action=getFormOptions`}\n        saveContainerURL={`${submit}action=saveContainer`}\n        saveSpecimenURL={`${submit}action=saveSpecimen`}\n        saveBarcodeListURL={`${submit}action=saveBarcodeList`}\n      />\n    </div>\n  );\n  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/biobankIndex.js","/**\n * This file contains the React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  render() {\n    return (\n        <div\n          className=\"loader\"\n          style={{width: this.props.size, height: this.props.size}}\n        />\n    );\n  }\n}\n\nLoader.propTypes = {size: React.PropTypes.int}\nLoader.defaultProps = {size: 120}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","import FilterForm from 'FilterForm';\nimport BiobankSpecimenForm from './specimenForm';\nimport PoolSpecimenForm from './poolSpecimenForm';\nimport BiobankContainerForm from './containerForm';\nimport {Tabs, TabPane} from 'Tabs';\nimport Modal from 'Modal';\nimport Loader from 'Loader';\n\nclass BiobankFilter extends React.Component {\n  constructor() {\n    super();\n\n    this.resetFilters = this.resetFilters.bind(this);\n    this.formatSpecimenColumns = this.formatSpecimenColumns.bind(this);\n    this.formatContainerColumns = this.formatContainerColumns.bind(this);\n  }\n\n  resetFilters() {\n   // this.refs.biobankFilter.clearFilter();\n  }\n\n  formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n    // Create the mapping between rowHeaders and rowData in a row object.\n    let row = {};\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    let barcode;\n    switch (column) {\n      case 'Barcode':\n        barcode = row['Barcode'];\n        return <td><a onClick={()=>{this.props.loadSpecimen(barcode)}}>{cell}</a></td>;\n      case 'Parent Barcode':\n        barcode = row['Parent Barcode'];\n        return <td><a onClick={()=>{this.props.loadSpecimen(barcode)}}>{cell}</a></td>; \n      case 'Container Barcode':\n        barcode = row['Container Barcode'];\n        return <td><a onClick={()=>{this.props.loadContainer(barcode)}}>{cell}</a></td>;\n      case 'PSCID':\n        let pscidURL = loris.BaseURL + '/' + row['PSCID'];\n        return <td><a href={pscidURL}>{cell}</a></td>;\n      case 'Visit Label':\n        let visitLabelURL = loris.BaseURL + '/instrument_list/?candID=' + row['PSCID'] +\n          '&sessionID='+row['Visit Label'];\n        return <td><a href={visitLabelURL}>{cell}</a></td>;\n      case 'Status':\n        switch (cell) {\n          case 'Available':\n            return <td style={{color: 'green'}}>{cell}</td>;\n          case 'Reserved':\n            return <td style={{color: 'orange'}}>{cell}</td>\n          case 'Dispensed':\n            return <td style={{color: 'red'}}>{cell}</td>\n        }\n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  formatContainerColumns(column, cell, rowData, rowHeaders) {\n    // Create the mapping between rowHeaders and rowData in a row object.\n    let row = {};\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    let barcodeURL = loris.BaseURL + '/biobank/barcode/?barcode=' \n    switch (column) {\n      case 'Barcode':\n        let URL = barcodeURL+row['Barcode'];\n        return <td><a href={URL}>{cell}</a></td>;\n      case 'Parent Barcode':\n        URL = barcodeURL+row['Parent Barcode'];\n        return <td><a href={URL}>{cell}</a></td>; \n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  render() {\n\n    let addSpecimenButton;\n    let poolSpecimenButton;\n    let addContainerButton;\n\n    /**\n     * Map Options for Form Select Elements of Specimen Form\n     */\n    let containerTypesPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesPrimary, 'label'\n    );\n    let containerStati = this.props.mapFormOptions(\n      this.props.options.containerStati, 'status'\n    );\n    let candidates = this.props.mapFormOptions(\n      this.props.options.candidates, 'pscid'\n    );\n    let sessions = this.props.mapFormOptions(\n      this.props.options.sessions, 'label'\n    );\n     \n    addSpecimenButton = (\n      <div\n        className='action'\n        title='Add Specimen'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('specimenForm')}}\n        >\n          <span>+</span>\n        </div>\n        <Modal\n          title='Add New Specimen'\n          show={this.props.editable.specimenForm}\n          closeModal={this.props.close}\n        >\n          <BiobankSpecimenForm\n            candidates={candidates}\n            sessions={sessions}\n            candidateSessions={this.props.options.candidateSessions}\n            sessionCenters={this.props.options.sessionCenters}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n          />\n        </Modal>\n      </div>\n    );\n\n    let poolSpecimenButtonContent = (\n      <span className='glyphicon glyphicon-resize-small'/>\n    )\n\n    poolSpecimenButton = (\n      <Modal\n        title='Pool Specimens'\n        buttonClass='action-button pool'\n        buttonContent={poolSpecimenButtonContent}\n        style={{display:'inline-block'}}\n      >\n        <PoolSpecimenForm\n          specimenTypes={this.props.options.specimenTypes}\n          containerTypesPrimary={containerTypesPrimary}\n          containersNonPrimary={this.props.options.containersNonPrimary}\n          specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n          specimenProtocols={this.props.options.specimenProtocols}\n          specimenProtocolAttributes={this.props.options.specimenProtocolAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          capacities={this.props.options.capacities}\n          containerDimensions={this.props.options.containerDimensions}\n          containerCoordinates={this.props.options.containerCoordinates}\n          specimenTypeUnits={this.props.options.specimenTypeUnits}\n          specimenUnits={this.props.options.specimenUnits}\n          candidates={candidates}\n          candidateSessions={this.props.options.candidateSessions}\n          sessionCenters={this.props.options.sessionCenters}\n          specimenRequest={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode`}\n          mapFormOptions={this.props.mapFormOptions}\n          saveSpecimen={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveSpecimen`}\n          saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n        />\n      </Modal>\n    );\n\n    let containerTypesNonPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesNonPrimary, 'label'\n    );\n\n    addContainerButton = (\n      <div\n        className='action'\n        title='Add Container'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('containerForm')}}\n        >\n          <span>+</span>\n        </div>\n        <Modal\n          title='Add New Container'\n          show={this.props.editable.containerForm}\n          closeModal={this.props.close}\n        >\n          <BiobankContainerForm\n            containerTypesNonPrimary={containerTypesNonPrimary}\n            centers={this.props.options.centers}\n            containerStati={containerStati}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    ); \n    \n\n    let tabList = [\n      {id: \"specimens\", label: \"Specimens\"},\n      {id: \"containers\", label: \"Containers\"}\n    ];\n\n    return (\n      <div id='biobank-page'>\n        <Tabs tabs={tabList} defaultTab=\"specimens\" updateURL={true}>\n          <TabPane TabId={tabList[0].id}>\n            <div className='row'>\n              <div className='col-lg-10'>\n                <FilterForm\n                  Module=\"biobank\"\n                  name=\"specimen_filter\"\n                  id=\"specimen_filter\"\n                  ref=\"specimenFilter\"\n                  columns={3}\n                  formElements={this.props.specimenDataTable.form}\n                  onUpdate={this.props.updateSpecimenFilter}\n                  filter={this.props.specimenFilter}\n                >\n                  <br/>\n                  <StaticElement/>\n                  <StaticElement/>\n                  <ButtonElement\n                    label=\"Clear Filters\"\n                    type=\"reset\" \n                    onUserInput={this.resetFilters}\n                  />\n                </FilterForm>\n              </div>\n              <div className='col-lg-2'>\n                <span className='action'>\n                  {addSpecimenButton}\n                  <div className='action-title'>\n                    Add Specimen\n                  </div>\n                </span>\n                <br/><br/>\n                <span className='action'>\n                  {poolSpecimenButton}\n                  <div className='action-title'>\n                    Pool Specimens\n                  </div>\n                </span>\n              </div>\n            </div>\n            <StaticDataTable\n              Data={this.props.specimenDataTable.Data}\n              Headers={this.props.specimenDataTable.Headers}\n              Filter={this.props.specimenFilter}\n              getFormattedCell={this.formatSpecimenColumns}\n            />\n          </TabPane>\n          <TabPane TabId={tabList[1].id}>\n            <div className='row'>\n              <div className='col-lg-10'>\n                <FilterForm\n                  Module=\"biobank\"\n                  name=\"container_filter\"\n                  id=\"container_filter\"\n                  ref=\"containerFilter\"\n                  columns={3}\n                  formElements={this.props.containerDataTable.form}\n                  onUpdate={this.props.updateContainerFilter}\n                  filter={this.props.containerFilter}\n\t\t            >\n                  <br/>\n                  <StaticElement/>\n                  <StaticElement/>\n                  <ButtonElement\n                    label=\"Clear Filters\"\n                    type=\"reset\"\n                    onUserInput={this.resetFilters}\n                  />\n                </FilterForm>\t\t\t\n              </div>\n              <div className='col-lg-2'>\n                <span className='action'>\n                  {addContainerButton}\n                  <div className='action-title'>\n                    New Container\n                  </div>\n                </span>\n              </div>\n            </div>\n            <StaticDataTable\n              Data={this.props.containerDataTable.Data}\n              Headers={this.props.containerDataTable.Headers}\n              Filter={this.props.containerFilter}\n              getFormattedCell={this.formatContainerColumns}\n            />\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default BiobankFilter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/filter.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n    if (key) {\n      filter[key] = {};\n      if (value) {     // all defined/non-null values must have some length, else empty string\n        filter[key].value = Object.keys(value).length > 0 ? value : '';\n      } else {         // null and undefined handled here\n        filter[key].value = '';\n      }\n      filter[key].exactMatch = (type === \"SelectElement\");\n    } else if (filter && key && value === '') {\n      delete filter[key];\n    }\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure key is of string type and value is of string or object type\n    // before sending them to querystring\n    if (typeof fieldName !== 'string' ||\n        (typeof fieldValue !== 'string' && typeof fieldValue !== 'object')) {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <Panel\n        id={this.props.id}\n        height={this.props.height}\n        title={this.props.title}\n      >\n        <FormElement {...this.props}>\n          {formChildren}\n        </FormElement>\n      </Panel>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    let pencilGlyph;\n    if (this.props.edit) {\n      pencilGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-pencil\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.edit}\n        /> \n      );\n    } \n\n    let plusGlyph;\n    if (this.props.add) {\n      plusGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-plus\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.add}\n        />\n      );\n    }\n\n    let removeGlyph;\n    if (this.props.cancel) {\n      removeGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-remove\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.cancel}\n        />\n      );\n    }\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n      >\n        <span \n          className={glyphClass}\n          onClick={this.toggleCollapsed}\n          data-toggle=\"collapse\"\n          data-target={'#' + this.props.id}\n          style={{cursor: 'pointer'}}\n        />\n        {pencilGlyph}\n        {plusGlyph}\n        {removeGlyph}\n        {this.props.title}\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  edit: React.PropTypes.func,\n  add: React.PropTypes.func\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","import SpecimenBarcodeForm from './barcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      formErrors: {},\n      candidateId: null,\n      sessionId: null,\n      centerId: null,\n      barcodeList: {1: {specimen: {collection: {}}, container: {}}},\n      count: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.addBarcode = this.addBarcode.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyBarcode = this.copyBarcode.bind(this);\n    this.removeBarcode = this.removeBarcode.bind(this);\n    this.saveBarcodeList = this.saveBarcodeList.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveBarcodeList() {\n    let barcodeList = JSON.parse(JSON.stringify(this.state.barcodeList));\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let barcode in barcodeList) {\n      //set container values\n      let container = barcodeList[barcode].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.locationId = this.state.centerId;\n      container.originId = this.state.centerId;\n\n      //set specimen values\n      let specimen = barcodeList[barcode].specimen;\n      specimen.candidateId = this.state.candidateId;\n      specimen.sessionId = this.state.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.locationId = this.state.centerId;\n      if (this.props.specimenTypes[specimen.typeId].freezeThaw === 1) {\n        specimen.fTCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: these will eventually be higher level states.\n      if (this.props.data) {\n        specimen.candidateId = this.props.data.candidate.CandID;\n        specimen.sessionId = this.props.data.session.ID;\n        specimen.parentSpecimenId = this.props.data.specimen.id;\n        specimen.collection.locationId = this.props.data.container.locationId;\n        container.locationId = this.props.data.container.locationId;\n        container.originId = this.props.data.container.locationId;\n      }\n    \n      barcodeList[barcode].container = container;\n      barcodeList[barcode].specimen = specimen;\n    }\n\n    this.props.save(barcodeList, this.props.saveBarcodeListURL, 'Save Successful!').then(\n      () => {this.props.refreshParent();}\n    );\n  }\n\n  setSpecimen(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let centerId = this.state.centerId;\n    let candidateId = this.state.candidateId;\n    let sessionId = this.state.sessionId;\n    let barcodeList = this.state.barcodeList;\n\n    if (name === 'candidateId') {\n      candidateId = value;\n    } else if (name === 'sessionId') {\n      sessionId = value;\n      centerId = this.props.sessionCenters[sessionId].centerId;\n    } else {\n      //this is eliminate values if specimen type is changed\n      if (name === 'typeId') {\n        barcodeList[key].specimen = {collection:{}};\n      }\n      barcodeList[key].specimen[name] = value;\n    }\n\n    this.setState({barcodeList, centerId, candidateId, sessionId})\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let barcodeList = this.state.barcodeList;\n    barcodeList[key].container[name] = value;\n    this.setState({barcodeList});\n  }\n\n  addBarcode() {\n    let barcodeList = this.state.barcodeList;\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n\n    barcodeList[count+1] = {specimen: {}, container: {collection:{}}}; \n    collapsed[count+1] = true;\n    count = count+1\n\n    this.setState({barcodeList, collapsed, count});\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyBarcode(key) {\n    let count = this.state.count;\n    let collapsed = this.state.collapsed;\n    let nextKey = count+1;\n    let barcodeList = this.state.barcodeList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      barcodeList[nextKey] = JSON.parse(JSON.stringify(barcodeList[key])); \n      delete barcodeList[nextKey].container.barcode;\n      collapsed[nextKey] = true;\n      nextKey++;\n    }\n\n    this.setState({\n      barcodeList: barcodeList,\n      count: nextKey,\n      collapsed: collapsed,\n    });\n  }\n\n  removeBarcode(key) {\n    let barcodeList = this.state.barcodeList;\n    delete barcodeList[key];\n    this.setState({barcodeList: barcodeList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let barcodeListArray = Object.keys(this.state.barcodeList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of barcodeListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          container={this.state.barcodeList[key].container || null}\n          specimen={this.state.barcodeList[key].specimen || null}\n          removeBarcode={barcodeListArray.length !== 1 ?\n            () => this.removeBarcode(key) : null}\n          addBarcode={i == barcodeListArray.length ? this.addBarcode : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyBarcode={i == barcodeListArray.length && this.state.barcodeList[key] ? \n            this.copyBarcode : null}\n          setContainer={this.setContainer}\n          setSpecimen={this.setSpecimen}\n          onChange={this.props.onChange}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimenData}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimenData}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.state.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.state.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.candidateId}\n            placeHolder='Search for a PSCID'\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.setSpecimen}\n            required={true}\n            value={this.state.sessionId}\n            disabled={this.state.candidateId ? false : true}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={() => {\n          this.saveBarcodeList();\n          this.props.saveSpecimen instanceof Function && this.props.saveSpecimen()}}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimen(name, value, this.props.barcodeKey);\n  }\n\n  copy() {\n    this.props.copyBarcode(this.props.copyMultiplier);\n  }\n\n  render() {\n    let addBarcodeButton;\n    let addBarcodeText;\n    let copyBarcodeButton;\n    let copyBarcodeText;\n    if (this.props.addBarcode) {\n      addBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addBarcode}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addBarcodeText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copyBarcode) {\n      copyBarcodeButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copyBarcodeText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeBarcodeButton;\n    if (this.props.removeBarcode) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeBarcodeButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeBarcode}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => this.props.toggleCollapse(this.props.barcodeKey)}\n            />\n            {removeBarcodeButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                setSpecimenData={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainerData={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addBarcodeButton}\n              {addBarcodeText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copyBarcodeButton}\n              {copyBarcodeText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n}\n\nexport default SpecimenBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodeForm.js","import CustomFields from './customFields'\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.setCollection = this.setCollection.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollection(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimen('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimen('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollection('data', data);\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = (\n            <CustomFields\n              fields={specimenTypeFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.collection.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollection}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimen: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Custom Attribute Fields\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\nclass CustomFields extends React.Component {\n  render() {\n    let fields = this.props.fields;\n    let attributeFields = Object.keys(fields).map(attribute => {\n\n      let datatype = this.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n      if (datatype === 'text' || datatype === 'number') {\n        if (fields[attribute]['refTableId'] === null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n\n        if (fields[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              options={this.props.attributeOptions[fields[attribute]['refTableId']]}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === 'datetime') {\n        return (\n          <DataElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.object[attribute]}\n          />\n        );\n      }\n\n      // Do not present the possibility of uploading if file is already set\n      // File must instead be deleted or overwritten.\n      if (datatype === 'file' && !(this.props.data||{})[attribute]) {\n        return (\n          <FileElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.files[this.props.object[attribute]]}\n          />\n        );\n      }\n    });\n\n    return (\n      <div>\n        {attributeFields}\n      </div>\n    );\n  }\n}\n\nCustomFields.propTypes = {\n  fields: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  object: React.PropTypes.object.isRequired,\n  setData: React.PropTypes.func.isRequired,\n}\n\nexport default CustomFields;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/customFields.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n\n  render() {\n    let containerDisplay;\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.props.setContainer}\n        required={true}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions = {\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates = {\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes = {this.props.containerTypes}\n            containerStati = {this.props.containerStati} \n            select = {true}\n            selectedCoordinate = {this.props.container.coordinate}\n            setContainer = {this.props.setContainer}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let load = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary ? this.props.loadSpecimen : this.props.loadContainer;\n\n      load(this.props.children[this.props.coordinates[coordinate]].barcode);\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    this.props.saveChildContainer(container);\n  }\n\n  render() {\n  // This is eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  var coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = null;\n\n        if (!this.props.select) {\n          // This double if statement doesn't sound great\n          if (this.props.coordinates) {\n            if (this.props.coordinates[coordinate]) {\n              nodeClass = 'node occupied';\n              dataHtml = 'true';\n              dataToggle = 'tooltip';\n              dataPlacement = 'top';\n              tooltipTitle = \n            '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n              draggable = 'true';\n              onDragStart = this.drag;\n              onDragOver = null;\n              onDrop = null;\n              onClick = this.redirectURL;\n            }\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n\t\t\t  onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            // TODO: --- This is currently not working ---\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div\n          className='row'\n          style={rowStyle} \n        >\n          {column}\n        </div>\n      )\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div className='display'>\n        {display}\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","import SpecimenBarcodeForm from './barcodeForm';\nimport BiobankSpecimenForm from './specimenForm';\nimport SpecimenPreparationForm from './preparationForm';\n\n/**\n * Biobank Pool Specimen Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\nclass PoolSpecimenForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formData: {},\n      barcodeList: {},\n      errorMessage: null,\n      formErrors: {},\n      barcodeCount: 2,\n      preparation: false,\n      step: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.setPreparationFormData = this.setPreparationFormData.bind(this);\n    this.setSpecimenFormData = this.setSpecimenFormData.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.setBarcodeCount = this.setBarcodeCount.bind(this);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.addPreparation = this.addPreparation.bind(this);\n    this.removePreparation = this.removePreparation.bind(this);\n    this.validate = this.validate.bind(this);\n    this.formSwitch = this.formSwitch.bind(this);\n    this.preparationSwitch = this.preparationSwitch.bind(this);\n    this.runAjax = this.runAjax.bind(this);\n  }\n\n  next() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          step: this.state.step+1\n        });\n      }, \n      error => {\n        swal(\"Oops!\", error.responseText, \"error\");\n      }\n    );\n  }\n\n  previous() {\n    this.setState({\n      step: this.state.step-1\n    });\n  }\n\n  validate() {\n    return this.runAjax(this.props.specimenRequest, {barcodeList: this.state.barcodeList});\n  }\n\n  runAjax(url, inputData) {\n    return new Promise((resolve, reject) => {\n      $.ajax(url, {\n        method: \"GET\",\n        dataType: 'json',\n        data: inputData,\n        success: function(data) {\n          resolve(data);\n        }.bind(this),\n        error: function(error, textStatus, errorThrown) {\n          reject(error);\n          console.error(error);\n        }\n      });  \n    })\n  }\n\n  setBarcodeCount(field, value) {\n    let barcodeCount = value;\n    let barcodeList = this.state.barcodeList;\n    for (let barcode in barcodeList) {\n      if (barcode > barcodeCount) {\n        delete barcodeList[barcode];\n      }\n    }\n\n    this.setState({barcodeCount, barcodeList});\n  }\n\n  formSwitch(inputForm, specimenForm) {\n    switch(this.state.step) {\n      case 1:\n        return inputForm;\n      case 2:\n        return specimenForm;\n    }\n  }\n\n  preparationSwitch(preparationButton, preparationForm) {\n    switch(this.state.preparation) {\n      case false:\n        return preparationButton;\n      case true:\n        return preparationForm;\n    }\n  }\n\n  addPreparation() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          preparation: true\n        });\n      },\n      error => {\n        swal('Oh no!', error.responseText, 'error');\n      }\n    );\n  }\n\n  removePreparation() {\n    let formData = this.state.formData;\n    //TODO: is it better to set it to empty, or delete it?\n    formData.preparationForm = {};\n    this.setState({\n      preparation: false,\n      formData\n    });\n  }\n\n  render() {\n    //Generates barcodes\n    let barcodes = [];\n    for (let i=1; i<=this.state.barcodeCount; i++) {\n      barcodes.push(\n        <TextboxElement\n          name={i}\n          label={'Barcode ' + i}\n          onUserInput={this.setFormData}\n          required={true}\n          value={this.state.barcodeList[i]}\n          errorMessage={this.state.formErrors[i]}\n        />\n      )\n    }\n    \n    let preparationButton = ( \n      <div className='row'>\n        <div className='col-xs-4'/>\n        <div className='col-xs 4 action'>\n            <span className='action'>\n            <div \n              className='action-button add'\n              onClick={this.addPreparation}\n            >\n              +\n            </div>\n            </span>\n            <div className='action-title'>\n              Add Preparation\n            </div>\n        </div>\n      </div>\n    );\n\n    let preparationForm;\n    if (this.state.poolData) {\n\n      const specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId]\n \n      let specimenProtocols = {};\n      for (let id in specimenProtocolAttributes) {\n        specimenProtocols[id] = this.props.specimenProtocols[id];\n      }\n      specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\n      preparationForm = (\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <SpecimenPreparationForm\n              formData={this.state.formData.preparationForm}\n              specimenProtocols={specimenProtocols}\n              specimenProtocolAttributes={specimenProtocolAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              setParentFormData={this.setPreparationFormData}\n              insertAction={`${loris.BaseURL}/biobank/ajax/submitData.php?action=insertSpecimenPreparation`}\n            />\n            <a className='pull-right' style={{cursor:'pointer'}} onClick={this.removePreparation}>Cancel Preparation</a>\n          </div>\n        </div>\n      );\n    }\n\n    let inputForm = (\n      <div>\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <StaticElement\n              label='Pooling Note'\n              text='Select or Scan the specimens to be pooled. Please ensure that they\n                    are the same type, and share the same PSCID and Visit Label'\n            />\n            <NumericElement\n              label='№ of Specimens'\n              min='2'\n              max='100'\n              value={this.state.barcodeCount}\n              onUserInput={this.setBarcodeCount}\n            />\n            {barcodes}\n          </div>\n        </div>\n        {this.preparationSwitch(preparationButton, preparationForm)}\n        <div className='col-sm-3 col-xs-offset-9 action'>\n          <div className='action-title'>\n            Next\n          </div>\n          <span className='action'>\n            <div \n              className='action-button update'\n              onClick={this.next}\n            >\n              <span className='glyphicon glyphicon-chevron-right'/>\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n\n    //TODO: Things here need to be in the proper order!!!\n    let specimenForm;\n    if (this.state.poolData) {\n\n      // This is to provide the options for the output specimens\n      let specimenTypes = {};\n      if (this.state.poolData.typeId) {\n        specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n      }\n  \n      let pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n      let visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\n      let barcodesArray = Object.values(this.state.barcodeList); \n      let barcodesString = barcodesArray.join(', ');  \n\n      // TODO: rather than all specimen units this should really be specific to the\n      // type\n      let specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\n      specimenForm = (\n        <div className='row'>\n          <div className='col-xs-12'>\n            <BiobankSpecimenForm\n              formData={this.state.formData.specimenForm}\n              candidateId={this.state.poolData.candidateId}\n              pscid={pscid}\n              sessionId={this.state.poolData.sessionId}\n              visit={visit}\n              parentSpecimenBarcodes={barcodesString}\n              parentSpecimenIds={this.state.poolData.specimenIds}\n              specimenTypes={specimenTypes}\n              specimenTypeUnits={this.props.specimenTypeUnits}\n              specimenUnits={specimenUnits}\n              containerTypesPrimary={this.props.containerTypesPrimary}\n              containersNonPrimary={this.props.containersNonPrimary}\n              specimenTypeAttributes={this.props.specimenTypeAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              capacities={this.props.capacities}\n              containerDimensions={this.props.containerDimensions}\n              containerCoordinates={this.props.containerCoordinates}\n              setParentFormData={this.setSpecimenFormData}\n              action={`${loris.BaseURL}/biobank/ajax/submitData.php?action=submitSpecimen`}\n              refreshParent={this.props.refreshParent}\n            />\n            <ButtonElement\n              label='Submit'\n            />\n          </div>\n          <div className='col-sm-3 col-xs-offset-2 action'>\n            <span className='action'>\n              <div \n                className='action-button update'\n                onClick={this.previous}\n              >\n                <span className='glyphicon glyphicon-chevron-left'/>\n              </div>\n            </span>\n            <div className='action-title'>\n              Previous\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"poolSpecimenForm\"\n        id='poolSpecimenForm'\n        onSubmit={this.handleSubmit}\n        ref=\"form\"\n      >\n        {this.formSwitch(inputForm, specimenForm)}\n      </FormElement>\n    );\n  }\n\n/** *******************************************************************************\n *                      ******     Helper methods     *******\n *********************************************************************************/\n\n\n  validateForm(formElement, value) {\n    let formErrors = this.state.formErrors;\n\n    //validate barcode regex\n    if (formElement === \"barcode\" && value !== \"\") {\n      if (!(/^hello/.test(this.state.formData.barcode))) {\n        formErrors.barcode = true;\n      } else {\n        formErrors.barcode = false;\n      }\n    }\n\n    //validate that quantity is a number and less than capacity\n    if (formElement === \"quantity\" && value !== \"\") {\n      if (isNaN(value) || (value > this.props.capacities[this.state.currentContainerType])) {\n        formErrors.quantity = true;\n      } else {\n        formErrors.quantity = false;\n      }\n    }\n\n    //validate datatypes and regex of generated type attributes\n    let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n    let specimenTypeFields = Object.keys(specimenTypeFieldsObject).map((attribute) => {\n\n      let datatype = this.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"number\") {\n        if (formElement === attribute) {\n          if (isNaN(value) && value !== \"\") {\n            formErrors[attribute] = true;\n          } else {\n            formErrors[attribute] = false;\n          }\n        }\n      }\n    })\n\n    this.setState({\n      formErrors: formErrors\n    });\n  }\n\n\n  /**\n   * Handle form submission\n   * @param {object} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.submitForm();\n  }\n\n  /*\n   * Uploads the file to the server\n   */\n  submitForm() {\n    // Set form data and specimen the biobank file\n    let formData = this.state.formData;\n    let preparationForm = this.state.formData.preparationForm;\n    let specimenForm = this.state.formData.specimenForm;\n    formData['preparationForm'] = JSON.stringify(preparationForm);\n    formData['specimenForm'] = JSON.stringify(specimenForm);\n\n    console.log(formData.specimenForm);\n    console.log(formData.preparationForm);\n\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        let xhr = new window.XMLHttpRequest();\n        return xhr;\n      }.bind(this),\n      success: function() {\n        //this.props.refreshParent();\n        swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n        this.props.onSuccess();\n      }.bind(this),\n      error: function(err) {\n        console.error(err);\n        let msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n        this.setState({\n          errorMessage: msg,\n        });\n        swal(msg, \"\", \"error\");\n      }.bind(this)\n    });\n  }\n\n  /**\n   * Checks if the inputted file name is valid\n   *\n   * @param {string} requiredFileName - Required file name\n   * @param {string} fileName - Provided file name\n   * @return {boolean} - true if fileName starts with requiredFileName, false\n   *   otherwise\n   */\n//  isValidFileName(requiredFileName, fileName) {\n//    if (fileName === null || requiredFileName === null) {\n//      return false;\n//    }\n//\n//    return (fileName.indexOf(requiredFileName) === 0);\n//  }\n\n  /**\n   * Validate the form\n   *\n   * @param {object} formRefs - Object containing references to React form elements\n   * @param {object} formData - Object containing form data inputed by user\n   * @return {boolean} - true if all required fields are filled, false otherwise\n   */\n  isValidForm(formRefs, formData) {\n    let isValidForm = true;\n\n    let requiredFields = {\n      pscid: null,\n      visitLabel: null,\n    };\n\n    Object.keys(requiredFields).map(function(field) {\n      if (formData[field]) {\n        requiredFields[field] = formData[field];\n      } else if (formRefs[field]) {\n        formRefs[field].props.hasError = true;\n        isValidForm = false;\n      }\n    });\n    this.forceUpdate();\n\n    return isValidForm;\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    // This lets the modal window know that there is formData\n    // and will cause a warning to be thrown of the modal window\n    // is exited\n    this.props.onChange instanceof Function && this.props.onChange();\n  \n    if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n      this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n    }\n\n    let formData = this.state.formData;\n    let barcodeList = this.state.barcodeList;\n \n    //TODO: there must be a better way to do this\n    if (isNaN(formElement)) {\n      formData[formElement] = value;\n    } else {\n      barcodeList[formElement] = value;\n    }\n\n    this.setState({\n      formData,\n      barcodeList\n    });\n  }\n\n  setPreparationFormData(preparationFormData) {\n    let formData = this.state.formData;\n    formData.preparationForm = preparationFormData;\n    \n    this.setState({formData});\n  }\n\n  setSpecimenFormData(specimenFormData) {\n    let formData = this.state.formData;\n    formData.specimenForm = specimenFormData;\n  \n    this.setState({formData});\n  }\n}\n\nPoolSpecimenForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  action: React.PropTypes.string.isRequired,\n  refreshTable: React.PropTypes.func\n};\n\nexport default PoolSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/poolSpecimenForm.js","import CustomFields from './customFields';\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = (\n            <CustomFields\n              fields={specimenProtocolFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.preparation.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","import ContainerBarcodeForm from './containerBarcodeForm.js';\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainerForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formErrors: {},\n      errorMessage: null,\n      containerList: {1: {}},\n      countContainers: 1,\n      collapsed: {1: true},\n      copyMultiplier: 1,\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.addContainer = this.addContainer.bind(this);\n    this.setContainer = this.setContainer.bind(this);\n    this.setCopyMultiplier = this.setCopyMultiplier.bind(this);\n    this.copyContainer = this.copyContainer.bind(this);\n    this.removeContainer = this.removeContainer.bind(this);\n    this.saveContainerList = this.saveContainerList.bind(this);\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setState({collapsed});\n  }\n\n  saveContainerList() {\n    let containerList = this.state.containerList;\n    let availableId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    for (let container in containerList) {\n      containerList[container].statusId = availableId;\n      containerList[container].temperature = 20;\n      this.props.save(containerList[container], this.props.saveContainer).then(\n        () => {this.props.refreshParent();}\n      );\n    }\n  }\n\n  setContainer(name, value, key) {\n    this.props.onChange instanceof Function && this.props.onChange();\n    let siteId = this.state.siteId;\n    let containerList = this.state.containerList;\n    if (name === 'siteId') {\n       siteId = value;\n       for (let container in containerList) {\n         containerList[container].originId = siteId;\n         containerList[container].locationId = siteId;\n       }\n    } else {\n      containerList[key][name] = value;\n    }\n    this.setState({containerList, siteId});\n  }\n\n  addContainer() {\n    let containerList = this.state.containerList;\n    let count = this.state.countContainers;\n    let collapsed = this.state.collapsed;\n    let siteId = this.state.siteId;\n    let temperature = 20;\n\n    // get Id of available status\n    let statusId = Object.keys(this.props.containerStati).find(\n      key => this.props.containerStati[key] === 'Available'\n    );\n\n    containerList[count+1] = {\n      statusId: statusId,\n      originId: siteId,\n      locationId: siteId,\n      temperature: temperature\n    };\n\n    collapsed[count+1] = true;  \n\n    this.setState({\n      containerList: containerList,\n      countContainers: count + 1,\n      collapsed: collapsed,\n    });\n  }\n\n  setCopyMultiplier(e) {\n    let copyMultiplier = e.target.value;\n    this.setState({copyMultiplier});\n  }\n\n  copyContainer(key) {\n    let count = this.state.countContainers;\n    let collapsed = this.state.collapsed;\n    let nextKey = count+1;\n    let containerList = this.state.containerList;\n    let multiplier = this.state.copyMultiplier\n\n    for (let i=1; i<=multiplier; i++) {\n      containerList[nextKey] = JSON.parse(JSON.stringify(containerList[key]));\n      delete containerList[nextKey].barcode;\n      collapsed[nextKey] = true;\n      nextKey++;\n    }    \n\n    this.setState({\n      containerList: containerList,\n      countContainers: nextKey,\n      collapsed: collapsed\n    });\n  }\n\n  removeContainer(key) {\n    let containerList = this.state.containerList;\n    delete containerList[key];\n    this.setState({containerList});\n  }\n\n  render() {\n    //Generates new Barcode Form everytime the addContainer button is pressed\n    let containerListArray = Object.keys(this.state.containerList);\n    let containers = [];\n    let i = 1;\n    for (let key of containerListArray) {\n      containers.push(\n        <ContainerBarcodeForm\n          key={key}\n          containerKey={key}\n          id={i}\n          collapsed={this.state.collapsed[key]}\n          toggleCollapse={this.toggleCollapse}\n          container={this.state.containerList[key] || null}\n          removeContainer={containerListArray.length !== 1 ? () => this.removeContainer(key) : null}\n          addContainer={i == containerListArray.length ? this.addContainer : null}\n          setCopyMultiplier={this.setCopyMultiplier}\n          copyMultiplier={this.state.copyMultiplier}\n          copyContainer={i == containerListArray.length && this.state.containerList[key] ? this.copyContainer : null}\n          setContainer={this.setContainer}\n          onChange={this.props.onChange}\n          containerTypesNonPrimary={this.props.containerTypesNonPrimary}\n          containerBarcodesNonPrimary={this.props.containerBarcodesNonPrimary}\n        />\n      );\n     \n      i++;\n    }\n\n    return (\n      <FormElement\n        name=\"containerForm\"\n        onSubmit={this.saveContainerList}\n        ref=\"form\"\n      >\n        <br/>\n        <div className=\"row\">\n          <div className=\"col-xs-11\">\n            <SelectElement\n              name=\"siteId\"\n              label=\"Site\"\n              options={this.props.centers}\n              onUserInput={this.setContainer}\n              required={true}\n              value={this.state.siteId}\n            />\n          </div>\n        </div>\n        {containers}\n          <div className=\"col-xs-3 col-xs-offset-9\">\n            <ButtonElement label=\"Submit\"/>\n          </div>\n      </FormElement>\n    );\n  }\n}\n\nBiobankContainerForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  barcode: React.PropTypes.string,\n  refreshTable: React.PropTypes.func\n};\n\nexport default BiobankContainerForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerForm.js","/**\n * Container Barcode Form\n *\n * Acts a subform for ContainerForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerBarcodeForm extends React.Component {\n  constructor() {\n    super();\n   \n    this.setContainer = this.setContainer.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  copy() {\n    this.props.copyContainer(this.props.containerKey);\n  }\n\n  //TODO: change form.js so this isn't necessary\n  setContainer(name, value) {\n    this.props.setContainer(name, value, this.props.containerKey);\n  }\n\n  render() {\n    // HR TODO: All this CSS should eventually be moved\n    let addContainerButton;\n    let addContainerText;\n    let copyContainerButton;\n    let copyContainerText;\n    if (this.props.addContainer) {\n      addContainerButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addContainer}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addContainerText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }   \n    \n    if (this.props.copyContainer) {\n      copyContainerButton = ( \n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >   \n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );  \n      copyContainerText = ( \n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={this.props.setCopyMultiplier}\n            value={this.props.copyMultiplier}\n          />  \n          Copies\n        </span>\n      );  \n    }   \n\n    let removeContainerButton;\n    if (this.props.removeContainer) {\n      const glyphStyle = { \n        color: '#DDDDDD',\n        marginLeft: 10, \n        cursor: 'pointer',\n        fontSize: 15\n      }   \n\n      removeContainerButton = ( \n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeContainer}\n          style={glyphStyle}\n        />\n      );  \n    }\n\n    return (\n      <FormElement\n        name='container'\n      >\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div>\n            <TextboxElement\n              name='barcode'\n              label={'Barcode ' + this.props.id}\n              onUserInput={this.setContainer}\n              ref='barcode'\n              required={true}\n              value={this.props.container.barcode}\n            />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span\n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse'\n              data-target={'#item-' + this.props.containerKey}\n              onClick={() => this.props.toggleCollapse(this.props.containerKey)}\n            />\n            {removeContainerButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-9'>\n            <div id={'item-' + this.props.containerKey} className='collapse'>\n              <SelectElement\n                name='typeId'\n                label='Container Type'\n                options={this.props.containerTypesNonPrimary}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.typeId}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-3'/>\n            <div className='col-xs-4 action'>\n              {addContainerButton}\n              {addContainerText}\n            </div>\n            <div className='col-xs-4 action'>\n              {copyContainerButton}\n              {copyContainerText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nContainerBarcodeForm.propTypes = {\n}\n\nexport default ContainerBarcodeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerBarcodeForm.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/**\n * Allows to dynamically render vertical tabs corresponding to tab panes.\n */\n\nclass VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <div className=\"tabbable col-md-3 col-sm-3\">\n          <ul className=\"nav nav-pills nav-stacked\" role=\"tablist\" style={tabStyle}>\n            {tabs}\n          </ul>\n        </div>\n        <div className=\"tab-content col-md-9 col-sm-9\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nVerticalTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nVerticalTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nexport {\n  Tabs,\n  VerticalTabs,\n  TabPane\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    if (this.props.throwWarning) {                                              \n      swal({                                                                    \n        title: \"Are You Sure?\",                                                 \n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",                                                        \n        showCancelButton: true,                                                 \n        confirmButtonText: 'Proceed',                                           \n        cancelButtonText: 'Cancel',                                             \n      },                                                                        \n      () => {                                                              \n        this.props.closeModal();                                                        \n      });                                                            \n    } else {                                                                    \n      this.props.closeModal();\n    }                                                                           \n  }   \n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 850,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '70px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.closeModal}>\n          <div style={modalStyle} onClick={e => {e.stopPropagation()}}>\n            <div style={titleStyle}>\n              {this.props.title}\n              <span style={glyphStyle} onClick={this.closeModal}>\n                ×\n              </span>\n            </div>\n            <div style={bodyStyle}>\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nModal.defaultProps = {\n  throwWarning: true,\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","/* exported RBiobankSpecimen */\n\nimport Modal from 'Modal';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n\n  render() {\n\n    //Map Options for Form Select Elements\n    let specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n    let containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n    let candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n    let sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\n    let addAliquotForm = (\n      <div\n        className='action'\n        title='Make Aliquots'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('aliquotForm')}}\n        >\n          <span>+</span>  \n        </div>\n        <Modal\n          title=\"Add Aliquots\"\n          closeModal={this.props.close}\n          show={this.props.editable.aliquotForm}\n        >\n          <BiobankSpecimenForm\n            data={this.props.data}\n            specimen={this.props.specimen}\n            setSpecimenData={this.props.setSpecimen}\n            saveSpecimen={this.props.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            saveBarcodeListURL={this.props.saveBarcodeListURL}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.props.editable.collection) {\n      let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.props.options.specimenTypeUnits}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    } else {\n    console.log('not sure');\n      let specimenTypeAttributes;\n    console.log('not sure 2');\n      //loops through data object to produce static elements\n      console.log(this.props.data);\n      if (this.props.data.specimen.collection.data) {\n        let collectionData = this.props.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(collectionData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenTypeAttributes[this.props.data.specimen.typeId][key].name}\n              text={collectionData[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.props.data.specimen.collection.quantity+' '+\n              this.props.options.specimenUnits[\n                this.props.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.collection.locationId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.props.editable.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.props.editable.collection ? null : () => {this.props.edit('collection')}}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.props.options.specimenProtocols) {\n      if (this.props.options.specimenProtocols[id].typeId === this.props.data.specimen.typeId) {\n        specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.props.editable.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation Does Exist and the form is not in an edit state\n    if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      if (this.props.data.specimen.preparation.data) {\n        let preparationData = this.props.data.specimen.preparation.data;\n        specimenProtocolAttributes = Object.keys(preparationData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenProtocolAttributes[this.props.data.specimen.preparation.protocolId][key].name}\n              text={preparationData[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.preparation.locationId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      preparationPanel = (\n        <div\n          className='panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('preparation'); this.props.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n      preparationPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.preparation ? null : () => {this.props.edit('preparation')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.props.options.specimenMethods) {\n      if (this.props.options.specimenMethods[id].typeId === this.props.data.specimen.typeId) {\n        specimenMethods[id] = this.props.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.props.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.props.editable.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          files={this.props.files}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          setFiles={this.props.setFiles}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      //TODO: Make the below a separate component\n      if (this.props.data.specimen.analysis.data) {\n      let analysisData = this.props.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.keys(analysisData).map((key) => {\n          if (this.props.options.attributeDatatypes[\n            this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].datatypeId\n          ].datatype === 'file') {\n            return (\n              <LinkElement\n               label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n               text={analysisData[key]}\n               href={loris.BaseURL+'/biobank/ajax/requestData.php?action=downloadFile&file='+analysisData[key]}\n               target={'_blank'}\n               download={analysisData[key]}\n              />\n            );\n          } else {\n            return ( \n              <StaticElement\n                label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n                text={analysisData[key]}\n              />\n            );\n          }\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.analysis.locationId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('analysis'); this.props.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n      analysisPanel = (\n        <div className='panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.analysis ? null : () => {this.props.edit('analysis')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.props.specimen}\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        setSpecimen={this.props.setSpecimen}\n        saveSpecimen={this.props.saveSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.props.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.props.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            specimen={this.props.data.specimen}\n            centers={this.props.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n      </div>\n    ); \n  }\n}\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankSpecimen = React.createFactory(BiobankSpecimen);\n\nwindow.BiobankSpecimen = BiobankSpecimen;\nwindow.RBiobankSpecimen = RBiobankSpecimen;\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","import Modal from 'Modal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport LocationField from './locationField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.editable.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.edit('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                specimen={this.props.specimen}\n                units={units}\n                close={this.props.close}\n                setSpecimen={this.props.setSpecimen}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if ((this.props.data.specimen||{}).fTCycle !== undefined) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.editable.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => {this.props.edit('temperature')}}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              container={this.props.container}                                  \n              close={this.props.close}                     \n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.editable.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              container={this.props.container}                                  \n              stati={stati}\n              close={this.props.close}\n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let locationField;                                                           \n    if (!this.props.editable.location) {                                        \n      locationField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.locationId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('location')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      locationField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <LocationField                                                      \n              container={this.props.container}\n              centers={this.props.options.centers}\n              close={this.props.close}                        \n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let barcode = this.props.data.parentSpecimenContainer.barcode;\n      let parentSpecimenFieldValue = (\n        <a style={{cursor: 'pointer'}} onClick={()=>this.props.loadSpecimen(barcode)}>\n          {barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a style={{cursor:'pointer'}} onClick={()=>this.props.loadContainer(barcode)}>\n            {barcode}\n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <span                                                               \n            className='action-button update'                                  \n            onClick={() => {this.props.edit('containerParentForm')}}\n          >                                                                   \n            <span className='glyphicon glyphicon-chevron-right'/>             \n          </span>                                                             \n          <Modal                                                              \n            title='Update Parent Container'                                       \n            closeModal={this.props.close}\n            show={this.props.editable.containerParentForm}\n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainer={this.props.setContainer}                            \n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </Modal>                                                            \n        </div>                                                                \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {locationField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow: 2}}>\n          <TextboxElement\n            name='quantity'\n            inputClass='col-xs-11'\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.quantity}\n          />\n        </div>\n        <div style={{flexGrow: 2}}>\n          <SelectElement\n            name='unit'\n            inputClass='col-xs-11'\n            options={this.props.units}\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveSpecimen}\n            columnSize= 'col-xs-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}>\n          <a onClick={this.props.close} style={{cursor: 'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimen: React.PropTypes.func,\n  close: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <TextboxElement\n              name='temperature'\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.temperature}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow: 1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flexGrow:4}}> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.statusId}\n            />  \n        </div>\n        <div style={{flexGrow:1}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div style={{flexGrow:1}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Location Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass LocationField extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className='col-xs-6'> \n            <SelectElement\n              name='locationId'\n              options={this.props.centers}\n              labelClass='col-xl-0'\n              inputClass='col-lg-12'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.locationId}\n            />  \n        </div>\n        <div className='col-xs-3'> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-12'\n          />\n        </div>\n        <div className='col-xs-3'> \n          <a\n            onClick={this.props.close}\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default LocationField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/locationField.js","import CustomFields from './customFields';\n\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    if (value instanceof File) {\n      data[name] = value.name;\n      this.props.setFiles(name, value);\n    } else {\n      data[name] = value;\n      this.setAnalysis('data', data);\n    }\n  }\n\n  render() {\n    let submitButton;\n    if (this.props.data.specimen.analysis) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = (\n            <CustomFields\n              fields={specimenMethodFieldsObject}\n              files={this.props.files}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.analysis.data}\n              data={(((this.props.data||{}).specimen||{}).analysis||{}).data}\n              setData={this.setData}\n            />\n          );  \n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        fileUpload={true}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\n//TODO: revise this component once Shipments are enabled.\nclass LifeCycle extends React.Component {\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n      });\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n    // Create Collection Node\n    let collectionNode;\n    if ((this.props.specimen||{}).collection || this.props.container) {\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    // Create Preparation Node\n    let preparationNode;\n    if ((this.props.specimen||{}).preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    // Create Analysis Node\n    let analysisNode;\n    if ((this.props.specimen||{}).analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'>\n             <div className='letter'>A</div>\n           </div>\n        </div>\n      );\n    }\n\n    // Create Lines\n    let line;\n    let nodes = 0;\n    for (let i in this.props.specimen) {\n      if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n        nodes++;\n      }\n    }\n    let lineWidth = nodes > 1 ? 60/(nodes-1) : 0;\n    let lineStyle = {width: lineWidth+'%'}\n    line = (<div className='lifecycle-line' style={lineStyle}/>);\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode ? line : null}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainer('parentContainerId', null);\n    this.props.setContainer('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","/* exported RBiobankContainer */\n\nimport Loader from 'Loader';\nimport Globals from './globals';\nimport LifeCycle from './lifeCycle.js';\nimport BarcodePath from './barcodePath.js';\nimport ContainerDisplay from './containerDisplay.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Container\n *\n * Fetches data corresponding to a given Container from Loris backend and\n * displays a page allowing viewing of meta information of the container\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.drag = this.drag.bind(this);\n  }\n\n  drag(e) {\n    let container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n    e.dataTransfer.setData(\"text/plain\", container);\n  }\n\n  render() {\n    let globals = ( \n      <Globals\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );  \n\n    let barcodePath = (\n      <BarcodePath\n        container={this.props.data.container}\n        parentContainers={this.props.data.parentContainers}\n        loadContainer={this.props.loadContainer}\n      />\n    );\n\n    let display;\n    if (this.props.data.container.dimensionId) {  \n      display = (\n        <ContainerDisplay \n          children={this.props.data.childContainers}\n          types={this.props.options.containerTypes}\n          dimensions={this.props.options.containerDimensions[this.props.data.container.dimensionId]}\n          coordinates={this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null}\n          containerTypes={this.props.options.containerTypes}\n          containerStati={this.props.options.containerStati}\n          loadSpecimen={this.props.loadSpecimen}\n          loadContainer={this.props.loadContainer}\n          saveChildContainer={this.props.saveChildContainer}\n        />\n      );\n    }\n\n    let listAssigned = [];\n    let listUnassigned = [];\n    if (this.props.data.childContainers) {\n      let children = this.props.data.childContainers;\n      for (let child in children) {\n        let load;\n        if (this.props.options.containerTypes[children[child].typeId].primary) {\n          load = this.props.loadSpecimen;\n          //url = loris.BaseURL+\"/biobank/specimen/?barcode=\"+children[child].barcode;\n        } else {\n          load = this.props.loadContainer;\n          //url = loris.BaseURL+\"/biobank/container/?barcode=\"+children[child].barcode;\n        }\n\n        if (children[child].coordinate) {\n          listAssigned.push(\n            <div>\n              <a onClick={()=>load(children[child].barcode)}>\n                {children[child].barcode}\n              </a>\n              at {children[child].coordinate}\n            </div>\n          );    \n        } else {\n          listUnassigned.push(\n            <a \n              onClick={()=>load(children[child].barcode)}\n              id={children[child].id} \n              draggable={true}\n              onDragStart={this.drag}\n            >\n              {children[child].barcode}\n            </a>\n          );\n        }\n      }     \n    }\n\n    return (\n      <div id='container-page'> \n        <div className=\"container-header\"> \n          <div className='container-title'> \n            <div className='barcode'> \n              Barcode \n              <div className='value'> \n                <strong>{this.props.data.container.barcode}</strong> \n              </div> \n            </div> \n          </div> \n          <ContainerCheckout \n            container={this.props.container}\n            setContainer={this.props.setContainer}\n            saveContainer={this.props.saveContainer}\n          />\n          <LifeCycle\n            container={this.props.data.container}\n            centers={this.props.options.centers}\n          />\n        </div> \n        <div className='summary'> \n          {globals} \n          <div className='display-container'>\n            {display} \n            {barcodePath}\n          </div>\n          <div className='container-list'>\n            <div className='title'>\n              {listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null}\n            </div>\n            <div className='title'>\n              {listAssigned.length !== 0 ? 'Assigned Containers' : null}\n            </div>\n              {listAssigned}\n              {listAssigned.length !==0 ? <br/> : null}\n            <div className='title'>\n              {listUnassigned.length !== 0 ? 'Unassigned Containers' : null}\n            </div>\n            {listUnassigned}\n          </div>\n        </div> \n      </div> \n    ); \n  }\n}\n\nBiobankContainer.propTypes = {\n  containerPageDataURL: React.PropTypes.string.isRequired,\n};\n\nlet RBiobankContainer = React.createFactory(BiobankContainer);\n\nwindow.BiobankContainer = BiobankContainer;\nwindow.RBiobankContainer = RBiobankContainer;\n\nexport default BiobankContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/container.js","/**\n * Container Path\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass BarcodePath extends React.Component {\n\n  render() {\n\n    let path = [];\n    let pathLength = this.props.parentContainers.length - 1;\n    let containerURL = loris.BaseURL+'/biobank/container/?barcode=';\n    for (let i=pathLength; i>=0; i--) {\n      path.push(\n        <span className='barcodePath'> \n          {'/'}\n          <a onClick={()=>this.props.loadContainer(this.props.parentContainers[i].barcode)}>\n            {this.props.parentContainers[i].barcode}\n          </a>\n        </span>\n      );\n    }\n    path.push(\n      <span className='barcodePath'> \n        {'/'}\n        <a onClick={()=>this.props.loadContainer(this.props.container.barcode)}>\n          {this.props.container.barcode}\n        </a>\n      </span>\n    );\n\n    return (\n      <div>\n        {path}\n      </div>\n    );\n  }\n}\n\nBarcodePath.propTypes = {\n}\n\nexport default BarcodePath;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodePath.js"],"sourceRoot":""}