{"version":3,"sources":["webpack:///modules/biobank/js/biobankIndex.js","webpack:///webpack/bootstrap 29d9cfa5183393640606?4213*******","webpack:///./modules/biobank/jsx/biobankIndex.js","webpack:///./jsx/FilterForm.js","webpack:///./jsx/Panel.js","webpack:///./jsx/Tabs.js","webpack:///./modules/biobank/jsx/columnFormatter.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_FilterForm","_FilterForm2","_Tabs","_columnFormatter","_columnFormatter2","BiobankIndex","_React$Component","this","_this","getPrototypeOf","state","isLoaded","filter","isOpen","fetchData","bind","updateFilter","resetFilters","toggleModal","$","ajax","DataURL","method","dataType","success","data","setState","Data","error","console","refs","biobankFilter","clearFilter","React","createElement","className","addSpecimenButton","addNewSpecimenForm","tabList","label","loris","userHasPermission","ButtonElement","onUserInput","type","Modal","show","onClose","FormElement","name","onSubmit","handleSubmit","ref","SelectElement","options","setFormData","hasError","required","TextboxElement","Tabs","tabs","defaultTab","updateURL","TabPane","TabId","Module","columns","formElements","form","onUpdate","StaticDataTable","Headers","Filter","getFormattedCell","Component","biobankIndex","BaseURL","ReactDOM","render","document","getElementById","_Panel","_Panel2","FilterForm","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","keys","forEach","filterKey","exactMatch","clear","formChildren","Children","children","child","isValidElement","callbackFunc","callbackName","elementName","displayName","queryFieldName","filterValue","push","cloneElement","JSON","parse","stringify","fieldName","fieldValue","set","height","title","defaultProps","warn","propTypes","PropTypes","string","isRequired","object","func","Panel","collapsed","initCollapsed","panelClass","toggleCollapsed","glyphClass","panelHeading","onClick","data-toggle","data-target","style","cursor","role","hash","window","location","activeTab","substr","handleClick","getTabs","getTabPanes","tabId","e","onTabChange","scrollDistance","scrollTop","map","tab","tabClass","href","tabID","tabPanes","tabStyle","marginLeft","marginBottom","array","bool","_React$Component2","apply","arguments","classList","Title","_React$Component3","modalStyle","position","zIndex","borderRadius","maxWidth","minHeight","margin","backgroundColor","padding","backdropStyle","top","bottom","left","right","stopPropagation","node","formatColumn","column","cell","rowData","rowHeaders","row","header","index","classes","join","specimenURL","containerURL"],"mappings":"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","file":"./modules/biobank/js/biobankIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(1);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _Tabs = __webpack_require__(3);\n\t\n\tvar _columnFormatter = __webpack_require__(4);\n\t\n\tvar _columnFormatter2 = _interopRequireDefault(_columnFormatter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t//import Modal from '../../../htdocs/js/components/Modal';\n\t\n\t\n\tvar BiobankIndex = function (_React$Component) {\n\t  _inherits(BiobankIndex, _React$Component);\n\t\n\t  function BiobankIndex(props) {\n\t    _classCallCheck(this, BiobankIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankIndex.__proto__ || Object.getPrototypeOf(BiobankIndex)).call(this, props));\n\t\n\t    _this.state = {\n\t      isLoaded: false,\n\t      filter: {},\n\t      isOpen: false\n\t    };\n\t\n\t    // Bind component instance to custom methods\n\t    _this.fetchData = _this.fetchData.bind(_this);\n\t    _this.updateFilter = _this.updateFilter.bind(_this);\n\t    _this.resetFilters = _this.resetFilters.bind(_this);\n\t    _this.toggleModal = _this.toggleModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankIndex, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.fetchData();\n\t    }\n\t\n\t    /**\n\t     * Retrieve data from the provided URL and save it in state\n\t     * Additionaly add hiddenHeaders to global loris vairable\n\t     * for easy access by columnFormatter.\n\t     */\n\t\n\t  }, {\n\t    key: 'fetchData',\n\t    value: function fetchData() {\n\t      $.ajax(this.props.DataURL, {\n\t        method: \"GET\",\n\t        dataType: 'json',\n\t        success: function (data) {\n\t          this.setState({\n\t            Data: data,\n\t            isLoaded: true\n\t          });\n\t        }.bind(this),\n\t        error: function error(_error) {\n\t          console.error(_error);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateFilter',\n\t    value: function updateFilter(filter) {\n\t      this.setState({ filter: filter });\n\t    }\n\t  }, {\n\t    key: 'resetFilters',\n\t    value: function resetFilters() {\n\t      this.refs.biobankFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'toggleModal',\n\t    value: function toggleModal() {\n\t      this.setState({\n\t        isOpen: !this.state.isOpen\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Waiting for async data to load\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'button',\n\t          { className: 'btn-info has-spinner' },\n\t          'Loading',\n\t          React.createElement('span', {\n\t            className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate' })\n\t        );\n\t      }\n\t\n\t      var addSpecimenButton = void 0;\n\t      var addNewSpecimenForm = void 0;\n\t      var tabList = [{ id: \"specimens\", label: \"Specimens\" }, { id: \"containers\", label: \"Containers\" }];\n\t\n\t      if (loris.userHasPermission('biobank_write')) {\n\t        addSpecimenButton = React.createElement(ButtonElement, { onUserInput: this.toggleModal, label: 'Add New Specimen', type: 'button' });\n\t        addNewSpecimenForm = React.createElement(\n\t          _Tabs.Modal,\n\t          { show: this.state.isOpen, onClose: this.toggleModal },\n\t          React.createElement(\n\t            FormElement,\n\t            {\n\t              name: 'specimenAdd',\n\t              onSubmit: this.handleSubmit,\n\t              ref: 'form'\n\t            },\n\t            React.createElement(\n\t              'h3',\n\t              null,\n\t              'Add New Specimen'\n\t            ),\n\t            React.createElement('br', null),\n\t            React.createElement(SelectElement, {\n\t              name: 'pscid',\n\t              label: 'PSCID',\n\t              options: '',\n\t              onUserInput: this.setFormData,\n\t              ref: 'pscid',\n\t              hasError: false,\n\t              required: true,\n\t              value: ''\n\t            }),\n\t            React.createElement(SelectElement, {\n\t              name: 'visitLabel',\n\t              label: 'Visit Label',\n\t              options: '',\n\t              onUserInput: this.setFormData,\n\t              ref: 'visitLabel',\n\t              required: true,\n\t              value: ''\n\t            }),\n\t            React.createElement(SelectElement, {\n\t              name: 'forSite',\n\t              label: 'Site',\n\t              options: '',\n\t              onUserInput: this.setFormData,\n\t              ref: 'forSite',\n\t              required: true,\n\t              value: ''\n\t            }),\n\t            React.createElement(SelectElement, {\n\t              name: 'type',\n\t              label: 'Type',\n\t              options: '',\n\t              onUserInput: this.setFormData,\n\t              ref: 'type',\n\t              required: true,\n\t              value: ''\n\t            }),\n\t            React.createElement(TextboxElement, {\n\t              name: 'quantity',\n\t              label: 'Quantity',\n\t              onUserInput: this.setFormData,\n\t              ref: 'quantity',\n\t              required: true,\n\t              value: ''\n\t            }),\n\t            React.createElement(SelectElement, {\n\t              name: 'container',\n\t              label: 'Container',\n\t              options: '',\n\t              onUserInput: this.setFormData,\n\t              ref: 'container',\n\t              required: true,\n\t              value: ''\n\t            }),\n\t            React.createElement(TextboxElement, {\n\t              name: 'collectionTime',\n\t              label: 'Collection TIme',\n\t              options: '',\n\t              onUserInput: this.setFormData,\n\t              ref: 'collectionTime',\n\t              required: true,\n\t              value: ''\n\t            }),\n\t            React.createElement(TextboxElement, {\n\t              name: 'notes',\n\t              label: 'Notes',\n\t              onUserInput: this.setFormData,\n\t              ref: 'notes',\n\t              required: false,\n\t              value: ''\n\t            }),\n\t            React.createElement(ButtonElement, { label: 'Submit', type: 'submit' })\n\t          )\n\t        );\n\t        //  tabList.push({id: \"upload\", label: \"Upload\"});\n\t        //  uploadTab = (\n\t        //    <TabPane TabId={tabList[1].id}>\n\t        //      <BiobankUploadForm\n\t        //        DataURL={`${loris.BaseURL}/biobank/ajax/FileUpload.php?action=getData`}\n\t        //        action={`${loris.BaseURL}/biobank/ajax/FileUpload.php?action=upload`}\n\t        //        maxUploadSize={this.state.Data.maxUploadSize}\n\t        //      />\n\t        //    </TabPane>\n\t        //  );\n\t      }\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          _Tabs.Tabs,\n\t          { tabs: tabList, defaultTab: 'specimens', updateURL: true },\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[0].id },\n\t            React.createElement(\n\t              _FilterForm2.default,\n\t              {\n\t                Module: 'biobank',\n\t                name: 'specimen_filter',\n\t                id: 'specimen_filter_form',\n\t                ref: 'specimenFilter',\n\t                columns: 3,\n\t                formElements: this.state.Data.form,\n\t                onUpdate: this.updateFilter,\n\t                filter: this.state.filter\n\t              },\n\t              React.createElement('br', null),\n\t              addSpecimenButton,\n\t              React.createElement(ButtonElement, { label: 'Clear Filters', type: 'reset', onUserInput: this.resetFilters })\n\t            ),\n\t            React.createElement(StaticDataTable, {\n\t              Data: this.state.Data.Data,\n\t              Headers: this.state.Data.Headers,\n\t              Filter: this.state.filter,\n\t              getFormattedCell: _columnFormatter2.default\n\t            })\n\t          ),\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[1].id },\n\t            React.createElement(\n\t              _FilterForm2.default,\n\t              {\n\t                Module: 'biobank',\n\t                name: 'container_filter',\n\t                id: 'container_filter_form',\n\t                ref: 'containerFilter',\n\t                columns: 3,\n\t                formElements: this.state.Data.form,\n\t                onUpdate: this.updateFilter,\n\t                filter: this.state.filter\n\t              },\n\t              React.createElement('br', null),\n\t              React.createElement(ButtonElement, { label: 'Clear Filters', type: 'reset', onUserInput: this.resetFilters })\n\t            ),\n\t            React.createElement(StaticDataTable, {\n\t              Data: this.state.Data.Data,\n\t              Headers: this.state.Data.Headers,\n\t              Filter: this.state.filter,\n\t              getFormattedCell: _columnFormatter2.default\n\t            })\n\t          )\n\t        ),\n\t        addNewSpecimenForm\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t  var biobankIndex = React.createElement(\n\t    'div',\n\t    { className: 'page-biobank' },\n\t    React.createElement(BiobankIndex, { DataURL: loris.BaseURL + '/biobank/?format=json' })\n\t  );\n\t\n\t  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(2);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t\n\t      if (key && value) {\n\t        filter[key] = {};\n\t        filter[key].value = value;\n\t        filter[key].exactMatch = type === \"SelectElement\";\n\t      } else if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure both key/value are string before sending them to querystring\n\t      if (typeof fieldName !== \"string\" || typeof fieldValue !== \"string\") {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        _Panel2.default,\n\t        {\n\t          id: this.props.id,\n\t          height: this.props.height,\n\t          title: this.props.title\n\t        },\n\t        React.createElement(\n\t          FormElement,\n\t          this.props,\n\t          formChildren\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\",\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        },\n\t        this.props.title,\n\t        React.createElement(\"span\", { className: glyphClass })\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  updateURL: false\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component2) {\n\t  _inherits(TabPane, _React$Component2);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\tvar Modal = function (_React$Component3) {\n\t  _inherits(Modal, _React$Component3);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    return _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      // Render nothing if the \"show\" prop is false\n\t      if (!this.props.show) {\n\t        return null;\n\t      }\n\t\n\t      // The gray background\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        zIndex: 9999,\n\t        borderRadius: 10,\n\t        maxWidth: 1000,\n\t        minHeight: 300,\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        padding: 30\n\t      };\n\t\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { style: backdropStyle, onClick: this.props.onClose },\n\t        React.createElement(\n\t          'div',\n\t          { style: modalStyle, onClick: function onClick(e) {\n\t              e.stopPropagation();\n\t            } },\n\t          this.props.children\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  onClose: React.PropTypes.func.isRequired,\n\t  show: React.PropTypes.bool,\n\t  children: React.PropTypes.node\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.TabPane = TabPane;\n\texports.Modal = Modal;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Modify behaviour of specified column cells in the Data Table component\n\t * @param {string} column - column name\n\t * @param {string} cell - cell content\n\t * @param {arrray} rowData - array of cell contents for a specific row\n\t * @param {arrray} rowHeaders - array of table headers (column names)\n\t * @return {*} a formated table cell for a given column\n\t */\n\tfunction formatColumn(column, cell, rowData, rowHeaders) {\n\t  // If a column if set as hidden, don't display it\n\t  //if (loris.hiddenHeaders.indexOf(column) > -1) {\n\t  //  return null;\n\t  //}\n\t\n\t  // Create the mapping between rowHeaders and rowData in a row object.\n\t  var row = {};\n\t  rowHeaders.forEach(function (header, index) {\n\t    row[header] = rowData[index];\n\t  }, this);\n\t\n\t  // create array of classes to be added to td tag\n\t  var classes = [];\n\t  if (row['Hide File'] === '1') {\n\t    classes.push(\"bg-danger\");\n\t  }\n\t  // convert array to string, with blank space separator\n\t  classes = classes.join(\" \");\n\t\n\t  //const hasWritePermission = loris.userHasPermission('media_read');\n\t  if (column === 'Barcode') {\n\t    var specimenURL = loris.BaseURL + \"/biobank/specimen/?barcode=\" + row['Barcode'];\n\t    return React.createElement(\n\t      'td',\n\t      { className: classes },\n\t      React.createElement(\n\t        'a',\n\t        { href: specimenURL },\n\t        cell\n\t      )\n\t    );\n\t  }\n\t\n\t  if (column === 'Parent Barcode') {\n\t    var specimenURL = loris.BaseURL + \"/biobank/specimen/?barcode=\" + row['Parent Barcode'];\n\t    return React.createElement(\n\t      'td',\n\t      { className: classes },\n\t      React.createElement(\n\t        'a',\n\t        { href: specimenURL },\n\t        cell\n\t      )\n\t    );\n\t  }\n\t\n\t  if (column === 'Container Barcode') {\n\t    var containerURL = loris.BaseURL + \"/biobank/container/?barcode=\" + row['Container Barcode'];\n\t    return React.createElement(\n\t      'td',\n\t      { className: classes },\n\t      React.createElement(\n\t        'a',\n\t        { href: containerURL },\n\t        cell\n\t      )\n\t    );\n\t  }\n\t\n\t  // if (column === 'Visit Label') {\n\t  //   if (row[\"Cand ID\"] !== null && row[\"Session ID\"]) {\n\t  //     var sessionURL = loris.BaseURL + \"/instrument_list/?candID=\" +\n\t  //       row[\"Cand ID\"] + \"&sessionID=\" + row[\"Session ID\"];\n\t  //     return <td className={classes}><a href={sessionURL}>{cell}</a></td>;\n\t  //   }\n\t  // }\n\t\n\t  // if (column === 'Edit Metadata') {\n\t  //   var editURL = loris.BaseURL + \"/biobank/edit/?id=\" + row['Edit Metadata'];\n\t  //   return <td className={classes}><a href={editURL}>Edit</a></td>;\n\t  // }\n\t\n\t  return React.createElement(\n\t    'td',\n\t    { className: classes },\n\t    cell\n\t  );\n\t}\n\t\n\texports.default = formatColumn;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/biobankIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 29d9cfa5183393640606","import FilterForm from 'FilterForm';\nimport {Tabs, TabPane, Modal} from 'Tabs';\n//import Modal from '../../../htdocs/js/components/Modal';\nimport formatColumn from './columnFormatter';\n\nclass BiobankIndex extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      filter: {},\n      isOpen: false,\n    };\n\n    // Bind component instance to custom methods\n    this.fetchData = this.fetchData.bind(this);\n    this.updateFilter = this.updateFilter.bind(this);\n    this.resetFilters = this.resetFilters.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  /**\n   * Retrieve data from the provided URL and save it in state\n   * Additionaly add hiddenHeaders to global loris vairable\n   * for easy access by columnFormatter.\n   */\n  fetchData() {\n    $.ajax(this.props.DataURL, {\n      method: \"GET\",\n      dataType: 'json',\n      success: function(data) {\n        this.setState({\n          Data: data,\n          isLoaded: true\n        });\n      }.bind(this),\n      error: function(error) {\n        console.error(error);\n      }\n    });\n  }\n\n  updateFilter(filter) {\n    this.setState({filter});\n  }\n\n  resetFilters() {\n    this.refs.biobankFilter.clearFilter();\n  }\n\n  toggleModal() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    // Waiting for async data to load\n    if (!this.state.isLoaded) {\n      return (\n        <button className=\"btn-info has-spinner\">\n          Loading\n          <span\n            className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n          </span>\n        </button>\n      );\n    }\n\n    let addSpecimenButton;\n    let addNewSpecimenForm;\n    let tabList = [\n      {id: \"specimens\", label: \"Specimens\"},\n      {id: \"containers\", label: \"Containers\"}\n    ];\n\n    if (loris.userHasPermission('biobank_write')) {\n       addSpecimenButton = (\n         <ButtonElement onUserInput={this.toggleModal} label=\"Add New Specimen\" type=\"button\"/>\n       );\n       addNewSpecimenForm = (\n          <Modal show={this.state.isOpen} onClose={this.toggleModal}>\n            <FormElement\n              name=\"specimenAdd\"\n              onSubmit={this.handleSubmit}\n              ref=\"form\"\n            >\n              <h3>Add New Specimen</h3>\n              <br/>\n              <SelectElement\n                name= \"pscid\"\n                label=\"PSCID\"\n                options=\"\"\n                onUserInput={this.setFormData}\n                ref=\"pscid\"\n                hasError={false}\n                required={true}\n                value=\"\"\n              />\n              <SelectElement\n                name= \"visitLabel\"\n                label=\"Visit Label\"\n                options=\"\"\n                onUserInput={this.setFormData}\n                ref=\"visitLabel\"\n                required={true}\n                value=\"\"\n              />\n              <SelectElement\n                name= \"forSite\"\n                label=\"Site\"\n                options=\"\"\n                onUserInput={this.setFormData}\n                ref=\"forSite\"\n                required={true}\n                value=\"\"\n              />\n              <SelectElement\n                name= \"type\"\n                label=\"Type\"\n                options=\"\"\n                onUserInput={this.setFormData}\n                ref=\"type\"\n                required={true}\n                value=\"\"\n              />\n              <TextboxElement\n                name= \"quantity\"\n                label=\"Quantity\"\n                onUserInput={this.setFormData}\n                ref=\"quantity\"\n                required={true}\n                value=\"\"\n              />\n              <SelectElement\n                name= \"container\"\n                label=\"Container\"\n                options=\"\"\n                onUserInput={this.setFormData}\n                ref=\"container\"\n                required={true}\n                value=\"\"\n              />\n              <TextboxElement\n                name= \"collectionTime\"\n                label=\"Collection TIme\"\n                options=\"\"\n                onUserInput={this.setFormData}\n                ref=\"collectionTime\"\n                required={true}\n                value=\"\"\n              />\n              <TextboxElement\n                name=\"notes\"\n                label=\"Notes\"\n                onUserInput={this.setFormData}\n                ref=\"notes\"\n                required={false}\n                value=\"\"\n              />\n              {/*<ButtonElement label=\"Cancel\" type=\"button\" onUserInput={this.toggleModal}/>*/}\n              <ButtonElement label=\"Submit\" type=\"submit\"/>\n            </FormElement>\n          </Modal>  \n       );\n    //  tabList.push({id: \"upload\", label: \"Upload\"});\n    //  uploadTab = (\n    //    <TabPane TabId={tabList[1].id}>\n    //      <BiobankUploadForm\n    //        DataURL={`${loris.BaseURL}/biobank/ajax/FileUpload.php?action=getData`}\n    //        action={`${loris.BaseURL}/biobank/ajax/FileUpload.php?action=upload`}\n    //        maxUploadSize={this.state.Data.maxUploadSize}\n    //      />\n    //    </TabPane>\n    //  );\n    }\n    return (\n    <div>\n      <Tabs tabs={tabList} defaultTab=\"specimens\" updateURL={true}>\n        <TabPane TabId={tabList[0].id}>\n          <FilterForm\n            Module=\"biobank\"\n            name=\"specimen_filter\"\n            id=\"specimen_filter_form\"\n            ref=\"specimenFilter\"\n            columns={3}\n            formElements={this.state.Data.form}\n            onUpdate={this.updateFilter}\n            filter={this.state.filter}\n          >\n            <br/>\n          {addSpecimenButton}\n            <ButtonElement label=\"Clear Filters\" type=\"reset\" onUserInput={this.resetFilters}/>\n          </FilterForm>\n          <StaticDataTable\n            Data={this.state.Data.Data}\n            Headers={this.state.Data.Headers}\n            Filter={this.state.filter}\n            getFormattedCell={formatColumn}\n          />\n        </TabPane>\n        <TabPane TabId={tabList[1].id}>\n          <FilterForm\n            Module=\"biobank\"\n            name=\"container_filter\"\n            id=\"container_filter_form\"\n            ref=\"containerFilter\"\n            columns={3}\n            formElements={this.state.Data.form}\n            onUpdate={this.updateFilter}\n            filter={this.state.filter}\n\t\t  >\n            <br/>\n            <ButtonElement label=\"Clear Filters\" type=\"reset\" onUserInput={this.resetFilters}/>\n          </FilterForm>\t\t\t\n          <StaticDataTable\n            Data={this.state.Data.Data}\n            Headers={this.state.Data.Headers}\n            Filter={this.state.filter}\n            getFormattedCell={formatColumn}\n          />\n        </TabPane>\n      </Tabs>\n      {addNewSpecimenForm}\n      </div>\n    );\n  }\n}\n\n$(function() {\n  const biobankIndex = (\n    <div className=\"page-biobank\">\n      <BiobankIndex DataURL={`${loris.BaseURL}/biobank/?format=json`} />\n    </div>\n  );\n\n  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/biobankIndex.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n\n    if (key && value) {\n      filter[key] = {};\n      filter[key].value = value;\n      filter[key].exactMatch = (type === \"SelectElement\");\n    } else if (filter && key && value === '') {\n      delete filter[key];\n    }\n\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure both key/value are string before sending them to querystring\n    if (typeof fieldName !== \"string\" || typeof fieldValue !== \"string\") {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <Panel\n        id={this.props.id}\n        height={this.props.height}\n        title={this.props.title}\n      >\n        <FormElement {...this.props}>\n          {formChildren}\n        </FormElement>\n      </Panel>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n        onClick={this.toggleCollapsed}\n        data-toggle=\"collapse\"\n        data-target={'#' + this.props.id}\n        style={{cursor: 'pointer'}}\n      >\n        {this.props.title}\n        <span className={glyphClass}></span>\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  updateURL: false\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nclass Modal extends React.Component {\n\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if(!this.props.show) {\n      return null;\n    }   \n\n    // The gray background\n    const modalStyle = { \n      position: 'relative',\n      zIndex: 9999,\n      borderRadius: 10,\n      maxWidth: 1000,        \n      minHeight: 300,\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      padding: 30\n    };  \n\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    return (\n    <div style={backdropStyle} onClick={this.props.onClose}>\n      <div style={modalStyle} onClick={(e) => {e.stopPropagation()}}>\n        {this.props.children}\n      </div>\n    </div>\n    ); \n  }\n}\nModal.propTypes = { \n  onClose: React.PropTypes.func.isRequired,\n  show: React.PropTypes.bool,\n  children: React.PropTypes.node\n};\n\nexport {\n  Tabs,\n  TabPane,\n  Modal\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/**\n * Modify behaviour of specified column cells in the Data Table component\n * @param {string} column - column name\n * @param {string} cell - cell content\n * @param {arrray} rowData - array of cell contents for a specific row\n * @param {arrray} rowHeaders - array of table headers (column names)\n * @return {*} a formated table cell for a given column\n */\nfunction formatColumn(column, cell, rowData, rowHeaders) {\n  // If a column if set as hidden, don't display it\n  //if (loris.hiddenHeaders.indexOf(column) > -1) {\n  //  return null;\n  //}\n\n  // Create the mapping between rowHeaders and rowData in a row object.\n  var row = {};\n  rowHeaders.forEach(function(header, index) {\n    row[header] = rowData[index];\n  }, this);\n\n  // create array of classes to be added to td tag\n  var classes = [];\n  if (row['Hide File'] === '1') {\n    classes.push(\"bg-danger\");\n  }\n  // convert array to string, with blank space separator\n  classes = classes.join(\" \");\n\n  //const hasWritePermission = loris.userHasPermission('media_read');\n  if (column === 'Barcode') {\n    var specimenURL = loris.BaseURL + \"/biobank/specimen/?barcode=\" + row['Barcode'];\n    return <td className= {classes}><a href={specimenURL}>{cell}</a></td>;\n  }\n\n  if (column === 'Parent Barcode') {\n    var specimenURL = loris.BaseURL + \"/biobank/specimen/?barcode=\" + row['Parent Barcode'];\n    return <td className= {classes}><a href={specimenURL}>{cell}</a></td>; \n}\n\n  if (column === 'Container Barcode') {\n    var containerURL = loris.BaseURL + \"/biobank/container/?barcode=\" + row['Container Barcode'];\n    return <td className= {classes}><a href={containerURL}>{cell}</a></td>;\n}\n\n // if (column === 'Visit Label') {\n //   if (row[\"Cand ID\"] !== null && row[\"Session ID\"]) {\n //     var sessionURL = loris.BaseURL + \"/instrument_list/?candID=\" +\n //       row[\"Cand ID\"] + \"&sessionID=\" + row[\"Session ID\"];\n //     return <td className={classes}><a href={sessionURL}>{cell}</a></td>;\n //   }\n // }\n\n // if (column === 'Edit Metadata') {\n //   var editURL = loris.BaseURL + \"/biobank/edit/?id=\" + row['Edit Metadata'];\n //   return <td className={classes}><a href={editURL}>Edit</a></td>;\n // }\n\n  return <td className={classes}>{cell}</td>;\n}\n\nexport default formatColumn;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/columnFormatter.js"],"sourceRoot":""}