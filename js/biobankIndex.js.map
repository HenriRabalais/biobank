{"version":3,"sources":["webpack:///modules/biobank/js/biobankIndex.js","webpack:///webpack/bootstrap da8d381293255d9ac598?3753*******","webpack:///./modules/biobank/jsx/biobankIndex.js","webpack:///./jsx/Loader.js","webpack:///./modules/biobank/jsx/filter.js","webpack:///./jsx/FilterForm.js","webpack:///./jsx/Panel.js","webpack:///./modules/biobank/jsx/specimenForm.js","webpack:///./modules/biobank/jsx/collectionForm.js","webpack:///./modules/biobank/jsx/customFields.js","webpack:///./modules/biobank/jsx/containerParentForm.js","webpack:///./modules/biobank/jsx/containerDisplay.js","webpack:///./jsx/Modal.js","webpack:///./modules/biobank/jsx/poolSpecimenForm.js","webpack:///./modules/biobank/jsx/preparationForm.js","webpack:///./modules/biobank/jsx/containerForm.js","webpack:///./jsx/Tabs.js","webpack:///./modules/biobank/jsx/specimen.js","webpack:///./modules/biobank/jsx/globals.js","webpack:///./modules/biobank/jsx/quantityField.js","webpack:///./modules/biobank/jsx/temperatureField.js","webpack:///./modules/biobank/jsx/statusField.js","webpack:///./modules/biobank/jsx/centerField.js","webpack:///./modules/biobank/jsx/analysisForm.js","webpack:///./modules/biobank/jsx/lifeCycle.js","webpack:///./modules/biobank/jsx/containerCheckout.js","webpack:///./modules/biobank/jsx/container.js","webpack:///./modules/biobank/jsx/barcodePath.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_typeof","Symbol","iterator","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_Loader","_Loader2","_filter","_filter2","_specimen","_specimen2","_container","_container2","BiobankIndex","_React$Component","_this$state","this","_this","getPrototypeOf","state","isLoaded","page","options","specimenFilter","containerDataTable","containerFilter","files","coordinate","sequential","candidateId","centerId","sessionId","list","count","collapsed","multiplier","container","specimen","specimenForm","containerForm","aliquotForm","containerParentForm","barcode","containerCheckout","temperature","quantity","status","center","collection","preparation","analysis","fetch","bind","loadFilters","loadSpecimenDataTable","loadContainerDataTable","loadOptions","loadContainer","loadSpecimen","updateSpecimenFilter","updateContainerFilter","clone","mapFormOptions","toggleCollapse","edit","close","setCurrent","revertCurrent","setSpecimenList","addListItem","copyListItem","removeListItem","saveSpecimenList","setSpecimen","revertSpecimen","setContainerList","setContainer","revertContainer","setCheckoutList","addPreparation","addAnalysis","saveSpecimen","saveContainer","saveChildContainer","saveContainerList","validateContainer","validateSpecimen","save","_this2","then","setState","_this3","Promise","resolve","_this4","specimenFilterDataURL","data","specimenDataTable","_this5","containerFilterDataURL","_this6","optionsURL","_this7","containerDataURL","_this8","specimenDataURL","url","$","ajax","dataType","success","error","errorCode","errorMsg","console","object","JSON","parse","stringify","attribute","stateKey","_this9","editable","_this10","current","name","item","_this11","saveSpecimenURL","_this12","specimenList","availableId","keys","containerStati","find","sessionCenters","specimenListValidation","statusId","originId","unitId","specimenTypes","typeId","freezeThaw","fTCycle","ALIQUOT","candidate","CandId","session","ID","parentSpecimenId","push","all","saveSpecimenListURL","catch","_this13","saveContainerURL","_this14","parentContainerId","childContainers","_this15","containerList","containerListValidation","saveContainerListURL","message","_this16","dataObject","FormData","file","append","type","cache","contentType","processData","swal","textStatus","errorThrown","responseJSON","_this17","reject","errors","required","float","map","field","isNaN","values","containers","_this18","date","time","regex","test","specimenTypeAttributes","attributes","datatypes","attributeDatatypes","datatypeId","datatype","_React$createElement","React","createElement","style","height","display","className","Component","request","loris","BaseURL","submit","biobankIndex","ReactDOM","render","document","getElementById","Loader","apply","arguments","width","size","propTypes","PropTypes","int","defaultProps","_FilterForm","_FilterForm2","_specimenForm","_specimenForm2","_poolSpecimenForm","_poolSpecimenForm2","_containerForm","_containerForm2","_Tabs","_Modal","_Modal2","BiobankFilter","resetSpecimenFilters","resetContainerFilters","formatSpecimenColumns","formatContainerColumns","refs","clearFilter","column","cell","rowData","rowHeaders","row","forEach","header","index","onClick","cursor","pscidURL","href","visitLabelURL","color","addSpecimenButton","poolSpecimenButton","addContainerButton","containerTypesPrimary","candidates","sessions","title","show","closeModal","candidateSessions","specimenTypeUnits","attributeOptions","containersNonPrimary","containerDimensions","containerCoordinates","barcodesPrimary","containersPrimary","searchSpecimenButton","searchSpecimen","SearchableDropdown","label","onUserInput","placeHolder","autoFocus","barcodesNonPrimary","searchContainerButton","searchContainer","poolSpecimenForm","specimenProtocols","specimenProtocolAttributes","capacities","specimenUnits","specimenRequest","containerTypesNonPrimary","centers","tabList","Tabs","tabs","defaultTab","updateURL","TabPane","TabId","marginTop","Module","ref","formElements","form","onUpdate","filter","ButtonElement","StaticDataTable","Data","Headers","Filter","getFormattedCell","isRequired","func","loadTransfer","_Panel","FilterForm","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","filterKey","exactMatch","clear","formChildren","Children","children","child","isValidElement","callbackFunc","callbackName","elementName","displayName","queryFieldName","filterValue","cloneElement","fieldName","fieldValue","set","FormElement","warn","string","Panel","initCollapsed","panelClass","toggleCollapsed","glyphClass","pencilGlyph","marginRight","plusGlyph","add","removeGlyph","cancel","panelHeading","data-toggle","data-target","role","_collectionForm","_collectionForm2","_containerParentForm","_containerParentForm2","BiobankSpecimenForm","specimenListArray","barcodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","SpecimenBarcodeForm","barcodeKey","removeSpecimen","addSpecimen","copySpecimen","units","_iterator","next","done","err","return","globalFields","remainingQuantityFields","StaticElement","text","PSCID","Visit_label","TextboxElement","SelectElement","emptyOption","errorMessage","disabled","onSubmit","columnSize","_React$Component2","copy","addSpecimenText","copySpecimenButton","copySpecimenText","min","max","onChange","e","removeSpecimenButton","glyphStyle","marginLeft","fontSize","parentTypeId","paddingLeft","position","right","_customFields","_customFields2","SpecimenCollectionForm","setCollection","addData","setData","updateButton","specimenTypeFields","unit","specimenTypeFieldsObject","fields","specimenFields","DateElement","minYear","maxYear","TimeElement","TextareaElement","comments","CustomFields","attributeFields","FileElement","_containerDisplay","_containerDisplay2","ContainerParentForm","recursive","containerDisplay","containerBarcodesNonPrimary","parentContainerField","dimensionId","dimensions","coordinatesTotal","dimension","coordinates","containerTypes","select","selectedCoordinate","ContainerDisplay","redirectURL","drag","drop","checkoutContainers","tooltip","load","types","primary","preventDefault","dataTransfer","getData","newCoordinate","parseInt","node","capacity","reduce","total","containerId","increaseCoordinate","checkoutList","barcodeField","CheckboxElement","checkout","y","x","nodeWidth","nodeStyle","nodeClass","tooltipTitle","dataHtml","dataToggle","dataPlacement","draggable","onDragStart","onDragOver","allowDrop","onDrop","coordinateDisplay","data-html","data-placement","data-original-title","rowHeight","rowStyle","Modal","throwWarning","showCancelButton","confirmButtonText","cancelButtonText","backdropStyle","zIndex","top","bottom","left","backgroundColor","padding","modalStyle","maxWidth","maxHeight","margin","borderRadius","overflowY","titleStyle","flexDirection","alignItems","background","borderTopRightRadius","bodyStyle","modal","stopPropagation","bool","_preparationForm","_preparationForm2","PoolSpecimenForm","formData","barcodeList","formErrors","barcodeCount","step","handleSubmit","validateForm","setFormData","setPreparationFormData","setSpecimenFormData","submitForm","setBarcodeCount","previous","removePreparation","validate","formSwitch","preparationSwitch","runAjax","poolData","responseText","inputData","method","inputForm","preparationButton","preparationForm","setParentFormData","insertAction","NumericElement","pscid","pSCIDs","visit","sessionData","visits","barcodesArray","barcodesString","join","parentSpecimenBarcodes","parentSpecimenIds","specimenIds","action","refreshParent","formElement","currentContainerType","currentSpecimenType","log","formObj","xhr","window","XMLHttpRequest","onSuccess","msg","isValidForm","formRefs","requiredFields","visitLabel","hasError","forceUpdate","Function","preparationFormData","specimenFormData","DataURL","refreshTable","SpecimenPreparationForm","setPreparation","submitButton","specimenProtocolFields","protocolId","specimenProtocolFieldsObject","BiobankContainerForm","containerListArray","ContainerBarcodeForm","containerKey","removeContainer","addContainer","copyContainer","addContainerText","copyContainerButton","copyContainerText","removeContainerButton","hash","location","activeTab","substr","handleClick","getTabs","getTabPanes","tabId","onTabChange","scrollDistance","scrollTop","tab","tabClass","tabID","tabPanes","tabStyle","marginBottom","array","VerticalTabs","_React$Component3","classList","Title","_globals","_globals2","_analysisForm","_analysisForm2","_lifeCycle","_lifeCycle2","_containerCheckout","_containerCheckout2","BiobankSpecimen","addAliquotForm","collectionPanel","collectionPanelForm","cancelEditCollectionButton","collectionData","preparationPanel","cancelEditPreparationButton","protocol","preparationData","analysisPanel","analysisForm","cancelEditAnalysisButton","specimenMethods","specimenMethodAttributes","specimenMethodAttributeFields","analysisData","methodId","LinkElement","download","globals","returnToFilter","specimenPageDataURL","_quantityField","_quantityField2","_temperatureField","_temperatureField2","_statusField","_statusField2","_centerField","_centerField2","Globals","increaseCycle","decreaseCycle","cycle","specimenTypeField","containerTypeField","quantityField","fTCycleField","temperatureField","statusField","stati","centerField","originField","parentSpecimenField","dateTimeCreate","parentSpecimenContainer","parentSpecimenFieldValue","parentContainerBarcodeValue","candidateSessionField","fieldList","QuantityField","flex","minWidth","inputClass","TemperatureField","StatusField","CenterField","centerIds","SpecimenAnalysisForm","setAnalysis","File","specimenMethodFields","specimenMethodFieldsObject","fileUpload","LifeCycle","css","border","box-shadow","collectionNode","onMouseEnter","mouseOver","onMouseLeave","mouseLeave","preparationNode","mouseOverPreparation","mouseLeavePreparation","analysisNode","line","nodes","lineWidth","lineStyle","ContainerCheckout","checkoutContainer","checkoutButton","_barcodePath","_barcodePath2","BiobankContainer","barcodePath","parentContainers","listAssigned","coordinateList","listUnassigned","containerPageDataURL","BarcodePath","path","pathLength"],"mappings":"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","file":"./modules/biobank/js/biobankIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _filter = __webpack_require__(2);\n\t\n\tvar _filter2 = _interopRequireDefault(_filter);\n\t\n\tvar _specimen = __webpack_require__(15);\n\t\n\tvar _specimen2 = _interopRequireDefault(_specimen);\n\t\n\tvar _container = __webpack_require__(24);\n\t\n\tvar _container2 = _interopRequireDefault(_container);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global ReactDOM */\n\t\n\tvar BiobankIndex = function (_React$Component) {\n\t  _inherits(BiobankIndex, _React$Component);\n\t\n\t  function BiobankIndex() {\n\t    var _this$state;\n\t\n\t    _classCallCheck(this, BiobankIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankIndex.__proto__ || Object.getPrototypeOf(BiobankIndex)).call(this));\n\t\n\t    _this.state = (_this$state = {\n\t      isLoaded: false,\n\t      page: '',\n\t      options: {},\n\t      specimenFilter: {},\n\t      containerDataTable: {},\n\t      containerFilter: {}\n\t    }, _defineProperty(_this$state, 'containerDataTable', {}), _defineProperty(_this$state, 'data', {}), _defineProperty(_this$state, 'specimen', {}), _defineProperty(_this$state, 'container', {}), _defineProperty(_this$state, 'current', {\n\t      files: {},\n\t      coordinate: null,\n\t      sequential: false,\n\t      candidateId: null,\n\t      centerId: null,\n\t      sessionId: null,\n\t      list: {},\n\t      count: null,\n\t      collapsed: {},\n\t      multiplier: null\n\t    }), _defineProperty(_this$state, 'errors', {\n\t      container: {},\n\t      specimen: {},\n\t      list: {}\n\t    }), _defineProperty(_this$state, 'editable', {\n\t      specimenForm: false,\n\t      containerForm: false,\n\t      aliquotForm: false,\n\t      containerParentForm: false,\n\t      barcode: false,\n\t      containerCheckout: false,\n\t      temperature: false,\n\t      quantity: false,\n\t      status: false,\n\t      center: false,\n\t      collection: false,\n\t      preparation: false,\n\t      analysis: false\n\t    }), _this$state);\n\t\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.loadFilters = _this.loadFilters.bind(_this);\n\t    _this.loadSpecimenDataTable = _this.loadSpecimenDataTable.bind(_this);\n\t    _this.loadContainerDataTable = _this.loadContainerDataTable.bind(_this);\n\t    _this.loadOptions = _this.loadOptions.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.loadSpecimen = _this.loadSpecimen.bind(_this);\n\t    _this.fetch = _this.fetch.bind(_this);\n\t    _this.updateSpecimenFilter = _this.updateSpecimenFilter.bind(_this);\n\t    _this.updateContainerFilter = _this.updateContainerFilter.bind(_this);\n\t    _this.clone = _this.clone.bind(_this);\n\t    _this.mapFormOptions = _this.mapFormOptions.bind(_this);\n\t    _this.toggleCollapse = _this.toggleCollapse.bind(_this);\n\t    _this.edit = _this.edit.bind(_this);\n\t    _this.close = _this.close.bind(_this);\n\t    _this.setCurrent = _this.setCurrent.bind(_this);\n\t    _this.revertCurrent = _this.revertCurrent.bind(_this);\n\t    _this.setSpecimenList = _this.setSpecimenList.bind(_this);\n\t    _this.addListItem = _this.addListItem.bind(_this);\n\t    _this.copyListItem = _this.copyListItem.bind(_this);\n\t    _this.removeListItem = _this.removeListItem.bind(_this);\n\t    _this.saveSpecimenList = _this.saveSpecimenList.bind(_this);\n\t    _this.setSpecimen = _this.setSpecimen.bind(_this);\n\t    _this.revertSpecimen = _this.revertSpecimen.bind(_this);\n\t    _this.setContainerList = _this.setContainerList.bind(_this);\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    _this.revertContainer = _this.revertContainer.bind(_this);\n\t    _this.setCheckoutList = _this.setCheckoutList.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.addAnalysis = _this.addAnalysis.bind(_this);\n\t    _this.saveSpecimen = _this.saveSpecimen.bind(_this);\n\t    _this.saveContainer = _this.saveContainer.bind(_this);\n\t    _this.saveChildContainer = _this.saveChildContainer.bind(_this);\n\t    _this.saveContainerList = _this.saveContainerList.bind(_this);\n\t    _this.validateContainer = _this.validateContainer.bind(_this);\n\t    _this.validateSpecimen = _this.validateSpecimen.bind(_this);\n\t    _this.save = _this.save.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankIndex, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var _this2 = this;\n\t\n\t      this.loadFilters().then(function () {\n\t        return _this2.loadOptions().then(function () {\n\t          return _this2.setState({ isLoaded: true });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadFilters',\n\t    value: function loadFilters() {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this3.loadContainerDataTable().then(function () {\n\t          return _this3.loadSpecimenDataTable().then(function () {\n\t            _this3.setState({ page: 'filter' }, resolve());\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimenDataTable',\n\t    value: function loadSpecimenDataTable() {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this4.fetch(_this4.props.specimenFilterDataURL).then(function (data) {\n\t          var specimenDataTable = data;\n\t          _this4.setState({ specimenDataTable: specimenDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainerDataTable',\n\t    value: function loadContainerDataTable() {\n\t      var _this5 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this5.fetch(_this5.props.containerFilterDataURL).then(function (data) {\n\t          var containerDataTable = data;\n\t          _this5.setState({ containerDataTable: containerDataTable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadOptions',\n\t    value: function loadOptions() {\n\t      var _this6 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this6.fetch(_this6.props.optionsURL).then(function (data) {\n\t          var options = data;\n\t          _this6.setState({ options: options }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(barcode) {\n\t      var _this7 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this7.fetch(_this7.props.containerDataURL + barcode).then(function (data) {\n\t          var container = _this7.clone(data.container);\n\t          var page = 'container';\n\t          _this7.close();\n\t          _this7.setState({ data: data, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadSpecimen',\n\t    value: function loadSpecimen(barcode) {\n\t      var _this8 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this8.fetch(_this8.props.specimenDataURL + barcode).then(function (data) {\n\t          var specimen = _this8.clone(data.specimen);\n\t          var container = _this8.clone(data.container);\n\t          var page = 'specimen';\n\t          _this8.setState({ data: data, specimen: specimen, container: container, page: page }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'fetch',\n\t    value: function fetch(url) {\n\t      return new Promise(function (resolve) {\n\t        $.ajax(url, {\n\t          dataType: 'json',\n\t          success: function success(data) {\n\t            return resolve(data);\n\t          },\n\t          error: function error(_error, errorCode, errorMsg) {\n\t            return console.error(_error, errorCode, errorMsg);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateSpecimenFilter',\n\t    value: function updateSpecimenFilter(specimenFilter) {\n\t      this.setState({ specimenFilter: specimenFilter });\n\t    }\n\t  }, {\n\t    key: 'updateContainerFilter',\n\t    value: function updateContainerFilter(containerFilter) {\n\t      this.setState({ containerFilter: containerFilter });\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone(object) {\n\t      return JSON.parse(JSON.stringify(object));\n\t    }\n\t  }, {\n\t    key: 'mapFormOptions',\n\t    value: function mapFormOptions(object, attribute) {\n\t      var data = {};\n\t      for (var id in object) {\n\t        data[id] = object[id][attribute];\n\t      }\n\t      return data;\n\t    }\n\t  }, {\n\t    key: 'edit',\n\t    value: function edit(stateKey) {\n\t      var _this9 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this9.close().then(function () {\n\t          var editable = _this9.state.editable;\n\t          editable[stateKey] = true;\n\t          _this9.setState({ editable: editable }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'close',\n\t    value: function close() {\n\t      var _this10 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var editable = _this10.state.editable;\n\t        for (var key in editable) {\n\t          editable[key] = false;\n\t        }\n\t\n\t        _this10.state.data.specimen && _this10.revertSpecimen();\n\t        _this10.state.data.container && _this10.revertContainer();\n\t        _this10.revertCurrent();\n\t        _this10.setState({ editable: editable }, resolve());\n\t      });\n\t    }\n\t  }, {\n\t    key: 'toggleCollapse',\n\t    value: function toggleCollapse(key) {\n\t      var collapsed = this.state.current.collapsed;\n\t      collapsed[key] = !collapsed[key];\n\t      this.setCurrent('collapsed', collapsed);\n\t    }\n\t  }, {\n\t    key: 'setSpecimenList',\n\t    value: function setSpecimenList(name, value, key) {\n\t      var list = this.state.current.list;\n\t      list[key].specimen[name] = value;\n\t      this.setCurrent('list', list);\n\t    }\n\t  }, {\n\t    key: 'setContainerList',\n\t    value: function setContainerList(name, value, key) {\n\t      var list = this.state.current.list;\n\t      list[key].container[name] = value;\n\t      this.setCurrent('list', list);\n\t    }\n\t  }, {\n\t    key: 'setCheckoutList',\n\t    value: function setCheckoutList(container) {\n\t      var list = this.state.current.list;\n\t      list[container.coordinate] = container;\n\t      this.setCurrent('list', list);\n\t    }\n\t  }, {\n\t    key: 'setCurrent',\n\t    value: function setCurrent(name, value) {\n\t      var current = this.state.current;\n\t      current[name] = value;\n\t      this.setState({ current: current });\n\t    }\n\t  }, {\n\t    key: 'revertCurrent',\n\t    value: function revertCurrent() {\n\t      var current = this.state.current;\n\t      for (var key in current) {\n\t        current[key] = current[key] !== null && _typeof(current[key]) === 'object' ? {} : null;\n\t      }\n\t      this.setState({ current: current });\n\t    }\n\t  }, {\n\t    key: 'addListItem',\n\t    value: function addListItem(item) {\n\t      var current = this.state.current;\n\t      current.count++;\n\t      current.collapsed[current.count] = true;\n\t      switch (item) {\n\t        case 'specimen':\n\t          current.list[current.count] = { specimen: { collection: {} }, container: {} };\n\t          break;\n\t        case 'container':\n\t          current.list[current.count] = { container: {} };\n\t          break;\n\t      }\n\t\n\t      this.setState({ current: current });\n\t    }\n\t  }, {\n\t    key: 'copyListItem',\n\t    value: function copyListItem(key) {\n\t      var current = this.state.current;\n\t\n\t      for (var i = 1; i <= current.multiplier; i++) {\n\t        current.count++;\n\t        current.list[current.count] = this.clone(current.list[key]);\n\t        current.list[current.count].container.barcode && delete current.list[current.count].container.barcode;\n\t        current.collapsed[current.count] = true;\n\t      }\n\t\n\t      this.setState({ current: current });\n\t    }\n\t  }, {\n\t    key: 'removeListItem',\n\t    value: function removeListItem(key) {\n\t      var current = this.state.current;\n\t      delete current.list[key];\n\t      this.setState({ current: current });\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      var specimen = this.state.specimen;\n\t      specimen[name] = value;\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'revertSpecimen',\n\t    value: function revertSpecimen() {\n\t      var specimen = this.state.specimen;\n\t      specimen = this.clone(this.state.data.specimen);\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.state.container;\n\t      value ? container[name] = value : delete container[name];\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'revertContainer',\n\t    value: function revertContainer() {\n\t      var container = this.state.container;\n\t      container = this.clone(this.state.data.container);\n\t      this.setState({ container: container });\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var specimen = this.state.specimen;\n\t      specimen.preparation = { centerId: this.state.data.container.centerId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'addAnalysis',\n\t    value: function addAnalysis() {\n\t      var specimen = this.state.specimen;\n\t      specimen.analysis = { centerId: this.state.data.container.centerId };\n\t      this.setState({ specimen: specimen });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimen',\n\t    value: function saveSpecimen() {\n\t      var _this11 = this;\n\t\n\t      var specimen = this.state.specimen;\n\t      this.validateSpecimen(specimen).then(function () {\n\t        _this11.save(specimen, _this11.props.saveSpecimenURL, 'Specimen Save Successful!').then(function () {\n\t          var data = _this11.state.data;\n\t          data.specimen = _this11.clone(_this11.state.specimen);\n\t          _this11.setState({ data: data }, function () {\n\t            _this11.close();\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveSpecimenList',\n\t    value: function saveSpecimenList() {\n\t      var _this12 = this;\n\t\n\t      var specimenList = this.clone(this.state.current.list);\n\t      var availableId = Object.keys(this.state.options.containerStati).find(function (key) {\n\t        return _this12.state.options.containerStati[key].status === 'Available';\n\t      });\n\t      var centerId = this.state.options.sessionCenters[this.state.current.sessionId].centerId;\n\t      var specimenListValidation = [];\n\t\n\t      for (var key in specimenList) {\n\t        //set container values\n\t        var container = specimenList[key].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.centerId = centerId;\n\t        container.originId = centerId;\n\t\n\t        //set specimen values\n\t        var specimen = specimenList[key].specimen;\n\t        specimen.candidateId = this.state.current.candidateId;\n\t        specimen.sessionId = this.state.current.sessionId;\n\t        specimen.quantity = specimen.collection.quantity;\n\t        specimen.unitId = specimen.collection.unitId;\n\t        specimen.collection.centerId = centerId;\n\t        if ((this.state.options.specimenTypes[specimen.typeId] || {}).freezeThaw == 1) {\n\t          specimen.fTCycle = 0;\n\t        }\n\t\n\t        //if this is an aliquot form, reset some of the values.\n\t        //TODO: fix this later\n\t        if (this.state.ALIQUOT) {\n\t          specimen.candidateId = this.state.data.candidate.CandId;\n\t          specimen.sessionId = this.state.data.session.ID;\n\t          specimen.parentSpecimenId = this.state.data.specimen.id;\n\t          specimen.collection.centerId = this.props.data.container.centerId;\n\t          container.centerId = this.props.data.container.centerId;\n\t          container.originId = this.props.data.container.centerId;\n\t        }\n\t\n\t        specimenList[key].container = container;\n\t        specimenList[key].specimen = specimen;\n\t\n\t        specimenListValidation.push(this.validateContainer(container, key));\n\t        specimenListValidation.push(this.validateSpecimen(specimen, key));\n\t      }\n\t\n\t      Promise.all(specimenListValidation).then(function () {\n\t        _this12.save(specimenList, _this12.props.saveSpecimenListURL, 'Save Successful!').then(function () {\n\t          _this12.close();_this12.loadFilters();\n\t        });\n\t      }).catch(function () {});\n\t    }\n\t  }, {\n\t    key: 'saveContainer',\n\t    value: function saveContainer() {\n\t      var _this13 = this;\n\t\n\t      var container = this.state.container;\n\t      this.validateContainer(container).then(function () {\n\t        _this13.save(container, _this13.props.saveContainerURL, 'Container Save Successful!').then(function () {\n\t          var data = _this13.state.data;\n\t          data.container = _this13.clone(_this13.state.container);\n\t          _this13.setState({ data: data }, function () {\n\t            _this13.close();\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveChildContainer',\n\t    value: function saveChildContainer(container) {\n\t      var _this14 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this14.save(container, _this14.props.saveContainerURL).then(function () {\n\t          var data = _this14.state.data;\n\t          if (container.parentContainerId === null) {\n\t            delete data.childContainers[container.id];\n\t          } else {\n\t            data.childContainers[container.id] = _this14.clone(container);\n\t          }\n\t          _this14.setState({ data: data }, resolve());\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'saveContainerList',\n\t    value: function saveContainerList() {\n\t      var _this15 = this;\n\t\n\t      var containerList = this.state.current.list;\n\t      var availableId = Object.keys(this.state.options.containerStati).find(function (key) {\n\t        return _this15.state.options.containerStati[key].status === 'Available';\n\t      });\n\t      var containerListValidation = [];\n\t\n\t      for (var key in containerList) {\n\t        var container = containerList[key].container;\n\t        container.statusId = availableId;\n\t        container.temperature = 20;\n\t        container.originId = this.state.current.centerId;\n\t        container.centerId = this.state.current.centerId;\n\t\n\t        containerListValidation.push(this.validateContainer(container, key));\n\t      }\n\t\n\t      Promise.all(containerListValidation).then(function () {\n\t        _this15.save(containerList, _this15.props.saveContainerListURL, 'Container Creation Successful!').then(function () {\n\t          _this15.close();_this15.loadFilters();_this15.loadOptions();\n\t        });\n\t      }).catch(function () {});\n\t    }\n\t  }, {\n\t    key: 'save',\n\t    value: function save(data, url, message) {\n\t      var _this16 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        var dataObject = new FormData();\n\t        for (var file in _this16.state.current.files) {\n\t          dataObject.append(_this16.state.current.files[file].name, _this16.state.current.files[file]);\n\t        }\n\t        dataObject.append('data', JSON.stringify(data));\n\t        $.ajax({\n\t          type: 'POST',\n\t          url: url,\n\t          data: dataObject,\n\t          cache: false,\n\t          contentType: false,\n\t          processData: false,\n\t          success: function success() {\n\t            resolve();\n\t            _this16.loadOptions();\n\t            message && swal(message, '', 'success');\n\t          },\n\t          error: function error(_error2, textStatus, errorThrown) {\n\t            var message = (_error2.responseJSON || {}).message || 'Submission error!';\n\t            swal('Error', message, 'error');\n\t            console.error(_error2, textStatus, errorThrown);\n\t          }\n\t        });\n\t      });\n\t    }\n\t\n\t    //TODO: validation might be more effective within 1 function.\n\t\n\t  }, {\n\t    key: 'validateContainer',\n\t    value: function validateContainer(container, key) {\n\t      var _this17 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var errors = _this17.state.errors;\n\t        errors.container = {};\n\t\n\t        var required = ['barcode', 'typeId', 'temperature', 'statusId', 'centerId'];\n\t\n\t        var float = ['temperature'];\n\t\n\t        required.map(function (field) {\n\t          if (!container[field]) {\n\t            errors.container[field] = 'This field is required! ';\n\t          }\n\t        });\n\t\n\t        float.map(function (field) {\n\t          if (isNaN(container[field])) {\n\t            errors.container[field] = 'This field must be a number! ';\n\t          }\n\t        });\n\t\n\t        Object.values(_this17.state.options.containers).map(function (c) {\n\t          if (container.barcode === c.barcode && container.id !== c.id) {\n\t            errors.container.barcode = 'Barcode must be unique';\n\t          }\n\t        });\n\t\n\t        //TODO: Regex check will go here\n\t        if (key) {\n\t          errors.list[key] = errors.list[key] || {};\n\t          errors.list[key].container = errors.container;\n\t        }\n\t\n\t        if (Object.keys(errors.container).length == 0) {\n\t          _this17.setState({ errors: errors }, resolve());\n\t        } else {\n\t          _this17.setState({ errors: errors }, reject());\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'validateSpecimen',\n\t    value: function validateSpecimen(specimen, key) {\n\t      var _this18 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        var errors = _this18.state.errors;\n\t        errors.specimen = {};\n\t\n\t        var required = ['typeId', 'quantity', 'unitId', 'candidateId', 'sessionId', 'collection'];\n\t        var float = ['quantity'];\n\t\n\t        required.map(function (field) {\n\t          if (!specimen[field]) {\n\t            errors.specimen[field] = 'This field is required! ';\n\t          }\n\t        });\n\t\n\t        float.map(function (field) {\n\t          if (isNaN(specimen[field])) {\n\t            errors.specimen[field] = 'This field must be a number! ';\n\t          }\n\t        });\n\t\n\t        if (specimen.collection) {\n\t          errors.specimen.collection = {};\n\t          var _required = ['quantity', 'unitId', 'centerId', 'date', 'time'];\n\t          var _float = ['quantity'];\n\t          var date = ['date'];\n\t          var time = ['time'];\n\t\n\t          _required.map(function (field) {\n\t            if (!specimen.collection[field]) {\n\t              errors.specimen.collection[field] = 'This field is required! ';\n\t            }\n\t          });\n\t\n\t          _float.map(function (field) {\n\t            if (isNaN(specimen.collection[field])) {\n\t              errors.specimen.collection[field] = 'This field must be a number! ';\n\t            }\n\t          });\n\t\n\t          date.map(function (field) {\n\t            var regex = /^[12]\\d{3}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/;\n\t            if (regex.test(specimen.collection[field]) === false) {\n\t              errors.specimen.collection[field] = 'This field must be a date! ';\n\t            }\n\t          });\n\t\n\t          time.map(function (field) {\n\t            var regex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n\t            if (regex.test(specimen.collection[field]) === false) {\n\t              errors.specimen.collection[field] = 'This field must be a time! ';\n\t            }\n\t          });\n\t\n\t          if (_this18.state.options.specimenTypeAttributes[specimen.typeId]) {\n\t            errors.specimen.collection.data = {};\n\t            var attributes = _this18.state.options.specimenTypeAttributes[specimen.typeId];\n\t            var datatypes = _this18.state.options.attributeDatatypes;\n\t\n\t            for (var attribute in attributes) {\n\t              if (!specimen.collection.data[attribute]) {\n\t                errors.specimen.collection.data[attribute] = 'This field is required!';\n\t              }\n\t\n\t              if (datatypes[attributes[attribute].datatypeId].datatype === 'number') {\n\t                if (isNaN(specimen.collection.data[attribute])) {\n\t                  errors.specimen.collection.data[attribute] = 'This field must be a number!';\n\t                }\n\t              }\n\t\n\t              //TODO: Decide what other validation needs to happen here:\n\t              // - boolean?\n\t              // - datetime?\n\t              // - file?\n\t            }\n\t\n\t            if (Object.keys(errors.specimen.collection.data).length == 0) {\n\t              delete errors.specimen.collection.data;\n\t            }\n\t          }\n\t\n\t          if (Object.keys(errors.specimen.collection).length == 0) {\n\t            delete errors.specimen.collection;\n\t          }\n\t        }\n\t\n\t        if (key) {\n\t          errors.list[key] = errors.list[key] || {};\n\t          errors.list[key].specimen = errors.specimen;\n\t        }\n\t\n\t        if (Object.keys(errors.specimen).length == 0) {\n\t          _this18.setState({ errors: errors }, resolve());\n\t        } else {\n\t          _this18.setState({ errors: errors }, reject());\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _React$createElement;\n\t\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'div',\n\t          { style: { height: 500 } },\n\t          React.createElement(_Loader2.default, null)\n\t        );\n\t      }\n\t\n\t      var display = void 0;\n\t      switch (this.state.page) {\n\t        case 'container':\n\t          display = React.createElement(_container2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            errors: this.state.errors,\n\t            current: this.state.current,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            loadFilters: this.loadFilters,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setCurrent: this.setCurrent,\n\t            setCheckoutList: this.setCheckoutList,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close\n\t          });\n\t          break;\n\t        case 'specimen':\n\t          display = React.createElement(_specimen2.default, {\n\t            data: this.state.data,\n\t            options: this.state.options,\n\t            container: this.state.container,\n\t            specimen: this.state.specimen,\n\t            errors: this.state.errors,\n\t            current: this.state.current,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            loadFilters: this.loadFilters,\n\t            loadOptions: this.loadOptions,\n\t            mapFormOptions: this.mapFormOptions,\n\t            setContainer: this.setContainer,\n\t            revertContainer: this.revertContainer,\n\t            saveContainer: this.saveContainer,\n\t            setSpecimen: this.setSpecimen,\n\t            revertSpecimen: this.revertSpecimen,\n\t            saveSpecimen: this.saveSpecimen,\n\t            addPreparation: this.addPreparation,\n\t            addAnalysis: this.addAnalysis,\n\t            setCurrent: this.setCurrent,\n\t            saveChildContainer: this.saveChildContainer,\n\t            edit: this.edit,\n\t            close: this.close,\n\t            save: this.save\n\t          });\n\t          break;\n\t        case 'filter':\n\t          display = React.createElement(_filter2.default, (_React$createElement = {\n\t            specimenFilter: this.state.specimenFilter,\n\t            specimenDataTable: this.state.specimenDataTable,\n\t            containerFilter: this.state.containerFilter,\n\t            containerDataTable: this.state.containerDataTable,\n\t            options: this.state.options,\n\t            current: this.state.current,\n\t            errors: this.state.errors,\n\t            editable: this.state.editable,\n\t            loadContainer: this.loadContainer,\n\t            loadSpecimen: this.loadSpecimen,\n\t            updateSpecimenFilter: this.updateSpecimenFilter,\n\t            updateContainerFilter: this.updateContainerFilter,\n\t            mapFormOptions: this.mapFormOptions,\n\t            edit: this.edit,\n\t            close: this.close,\n\t            toggleCollapse: this.toggleCollapse,\n\t            loadFilters: this.loadFilters,\n\t            loadOptions: this.loadOptions,\n\t            setCurrent: this.setCurrent,\n\t            setContainerList: this.setContainerList,\n\t            setSpecimenList: this.setSpecimenList\n\t          }, _defineProperty(_React$createElement, 'setContainerList', this.setContainerList), _defineProperty(_React$createElement, 'addListItem', this.addListItem), _defineProperty(_React$createElement, 'copyListItem', this.copyListItem), _defineProperty(_React$createElement, 'removeListItem', this.removeListItem), _defineProperty(_React$createElement, 'saveContainerList', this.saveContainerList), _defineProperty(_React$createElement, 'saveSpecimenList', this.saveSpecimenList), _React$createElement));\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'biobank-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            display\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t  var request = loris.BaseURL + '/biobank/ajax/requestData.php?';\n\t  var submit = loris.BaseURL + '/biobank/ajax/submitData.php?';\n\t  var biobankIndex = React.createElement(\n\t    'div',\n\t    { className: 'page=biobank' },\n\t    React.createElement(BiobankIndex, {\n\t      specimenFilterDataURL: loris.BaseURL + '/biobank/?format=json',\n\t      containerFilterDataURL: request + 'action=getContainerFilterData',\n\t      specimenDataURL: request + 'action=getSpecimenData&barcode=',\n\t      containerDataURL: request + 'action=getContainerData&barcode=',\n\t      optionsURL: request + 'action=getFormOptions',\n\t      saveContainerURL: submit + 'action=saveContainer',\n\t      saveSpecimenURL: submit + 'action=saveSpecimen',\n\t      saveContainerListURL: submit + 'action=saveContainerList',\n\t      saveSpecimenListURL: submit + 'action=saveSpecimenList'\n\t    })\n\t  );\n\t  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains the React component for Loader\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Loader component\n\t */\n\tvar Loader = function (_React$Component) {\n\t  _inherits(Loader, _React$Component);\n\t\n\t  function Loader() {\n\t    _classCallCheck(this, Loader);\n\t\n\t    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Loader, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      return React.createElement(\"div\", {\n\t        className: \"loader\",\n\t        style: { width: this.props.size, height: this.props.size }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Loader;\n\t}(React.Component);\n\t\n\tLoader.propTypes = { size: React.PropTypes.int };\n\tLoader.defaultProps = { size: 120 };\n\t\n\texports.default = Loader;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(3);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _poolSpecimenForm = __webpack_require__(11);\n\t\n\tvar _poolSpecimenForm2 = _interopRequireDefault(_poolSpecimenForm);\n\t\n\tvar _containerForm = __webpack_require__(13);\n\t\n\tvar _containerForm2 = _interopRequireDefault(_containerForm);\n\t\n\tvar _Tabs = __webpack_require__(14);\n\t\n\tvar _Modal = __webpack_require__(10);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BiobankFilter = function (_React$Component) {\n\t  _inherits(BiobankFilter, _React$Component);\n\t\n\t  function BiobankFilter() {\n\t    _classCallCheck(this, BiobankFilter);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankFilter.__proto__ || Object.getPrototypeOf(BiobankFilter)).call(this));\n\t\n\t    _this.resetSpecimenFilters = _this.resetSpecimenFilters.bind(_this);\n\t    _this.resetContainerFilters = _this.resetContainerFilters.bind(_this);\n\t    _this.formatSpecimenColumns = _this.formatSpecimenColumns.bind(_this);\n\t    _this.formatContainerColumns = _this.formatContainerColumns.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankFilter, [{\n\t    key: 'resetSpecimenFilters',\n\t    value: function resetSpecimenFilters() {\n\t      this.refs.specimenFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'resetContainerFilters',\n\t    value: function resetContainerFilters() {\n\t      this.refs.containerFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'formatSpecimenColumns',\n\t    value: function formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n\t      var _this2 = this;\n\t\n\t      var row = {};\n\t      var barcode = void 0;\n\t\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      switch (column) {\n\t        case 'Barcode':\n\t          barcode = row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                }, style: { cursor: 'pointer' } },\n\t              cell\n\t            )\n\t          );\n\t        case 'Parent Barcode':\n\t          barcode = row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this2.props.loadSpecimen(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'Container Barcode':\n\t          barcode = row['Container Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this2.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'PSCID':\n\t          var pscidURL = loris.BaseURL + '/' + row['PSCID'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: pscidURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Visit Label':\n\t          var visitLabelURL = loris.BaseURL + '/instrument_list/?candID=' + row['PSCID'] + '&sessionID=' + row['Visit Label'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              { href: visitLabelURL },\n\t              cell\n\t            )\n\t          );\n\t        case 'Status':\n\t          switch (cell) {\n\t            case 'Available':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'green' } },\n\t                cell\n\t              );\n\t            case 'Reserved':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'orange' } },\n\t                cell\n\t              );\n\t            case 'Dispensed':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'red' } },\n\t                cell\n\t              );\n\t          }\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'formatContainerColumns',\n\t    value: function formatContainerColumns(column, cell, rowData, rowHeaders) {\n\t      var _this3 = this;\n\t\n\t      // Create the mapping between rowHeaders and rowData in a row object.\n\t      var row = {};\n\t      rowHeaders.forEach(function (header, index) {\n\t        row[header] = rowData[index];\n\t      });\n\t\n\t      var barcode = void 0;\n\t      switch (column) {\n\t        case 'Barcode':\n\t          barcode = row['Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this3.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        case 'Status':\n\t          switch (cell) {\n\t            case 'Available':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'green' } },\n\t                cell\n\t              );\n\t            case 'Reserved':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'orange' } },\n\t                cell\n\t              );\n\t            case 'Dispensed':\n\t              return React.createElement(\n\t                'td',\n\t                { style: { color: 'red' } },\n\t                cell\n\t              );\n\t          }\n\t        case 'Parent Barcode':\n\t          barcode = row['Parent Barcode'];\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            React.createElement(\n\t              'a',\n\t              {\n\t                onClick: function onClick() {\n\t                  _this3.props.loadContainer(barcode);\n\t                },\n\t                style: { cursor: 'pointer' }\n\t              },\n\t              cell\n\t            )\n\t          );\n\t        default:\n\t          return React.createElement(\n\t            'td',\n\t            null,\n\t            cell\n\t          );\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      var addSpecimenButton = void 0;\n\t      var poolSpecimenButton = void 0;\n\t      var addContainerButton = void 0;\n\t\n\t      /**\n\t       * Map Options for Form Select Elements of Specimen Form\n\t       */\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      addSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Add Specimen' },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this4.props.edit('specimenForm').then(function () {\n\t                _this4.props.addListItem('specimen');\n\t              });\n\t            }\n\t          },\n\t          '+'\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Specimen',\n\t            show: this.props.editable.specimenForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            current: this.props.current,\n\t            specimenList: this.props.current.list,\n\t            errors: this.props.errors,\n\t            candidateSessions: this.props.options.candidateSessions,\n\t            sessionCenters: this.props.options.sessionCenters,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            close: this.props.close,\n\t            toggleCollapse: this.props.toggleCollapse,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            setCurrent: this.props.setCurrent,\n\t            setSpecimenList: this.props.setSpecimenList,\n\t            setContainerList: this.props.setContainerList,\n\t            addListItem: this.props.addListItem,\n\t            copyListItem: this.props.copyListItem,\n\t            removeListItem: this.props.removeListItem,\n\t            saveSpecimenList: this.props.saveSpecimenList\n\t          })\n\t        )\n\t      );\n\t\n\t      //TODO: turn the following into components to avoid duplication\n\t      //TODO: should there be a general search, or one for specimen and one for containers?\n\t      var barcodesPrimary = this.props.mapFormOptions(this.props.options.containersPrimary, 'barcode');\n\t      var searchSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Go To Specimen' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button search', onClick: function onClick() {\n\t              _this4.props.edit('searchSpecimen');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-search' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Go To Specimen',\n\t            show: this.props.editable.searchSpecimen,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'barcode',\n\t            label: 'Barcode',\n\t            options: barcodesPrimary,\n\t            onUserInput: function onUserInput(name, value) {\n\t              barcodesPrimary[value] && _this4.props.loadSpecimen(barcodesPrimary[value]).then(function () {\n\t                return _this4.props.close();\n\t              });\n\t            },\n\t            placeHolder: 'Please Scan or Select Barcode',\n\t            autoFocus: true\n\t          })\n\t        )\n\t      );\n\t\n\t      var barcodesNonPrimary = this.props.mapFormOptions(this.props.options.containersNonPrimary, 'barcode');\n\t      var searchContainerButton = void 0;\n\t      searchContainerButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Go To Container' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button search', onClick: function onClick() {\n\t              _this4.props.edit('searchContainer');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-search' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Go To Barcode',\n\t            show: this.props.editable.searchContainer,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(SearchableDropdown, {\n\t            name: 'barcode',\n\t            label: 'Barcode',\n\t            options: barcodesNonPrimary,\n\t            onUserInput: function onUserInput(name, value) {\n\t              barcodesNonPrimary[value] && _this4.props.loadContainer(barcodesNonPrimary[value]).then(function () {\n\t                return _this4.props.close();\n\t              });\n\t            },\n\t            placeHolder: 'Please Scan or Select Barcode',\n\t            autoFocus: true\n\t          })\n\t        )\n\t      );\n\t\n\t      poolSpecimenButton = React.createElement(\n\t        'div',\n\t        { className: 'action', title: 'Pool Specimens' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-button pool', onClick: function onClick() {\n\t              _this4.props.edit('poolSpecimenForm');\n\t            } },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-resize-small' })\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Pool Specimens',\n\t            show: this.props.editable.poolSpecimenForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_poolSpecimenForm2.default, {\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            specimenProtocols: this.props.options.specimenProtocols,\n\t            specimenProtocolAttributes: this.props.options.specimenProtocolAttributes,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            capacities: this.props.options.capacities,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenUnits: this.props.options.specimenUnits,\n\t            candidates: candidates,\n\t            candidateSessions: this.props.options.candidateSessions,\n\t            sessionCenters: this.props.options.sessionCenters,\n\t            specimenRequest: loris.BaseURL + '/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode',\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            saveSpecimen: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveSpecimen',\n\t            saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer'\n\t          })\n\t        )\n\t      );\n\t\n\t      var containerTypesNonPrimary = this.props.mapFormOptions(this.props.options.containerTypesNonPrimary, 'label');\n\t\n\t      addContainerButton = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Add Container'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this4.props.edit('containerForm').then(function () {\n\t                _this4.props.addListItem('container');\n\t              });\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add New Container',\n\t            show: this.props.editable.containerForm,\n\t            closeModal: this.props.close\n\t          },\n\t          React.createElement(_containerForm2.default, {\n\t            current: this.props.current,\n\t            containerList: this.props.current.list,\n\t            errors: this.props.errors.list,\n\t            containerTypesNonPrimary: containerTypesNonPrimary,\n\t            centers: this.props.options.centers,\n\t            containerStati: containerStati,\n\t            saveContainer: loris.BaseURL + '/biobank/ajax/submitData.php?action=saveContainer',\n\t            close: this.props.close,\n\t            toggleCollapse: this.props.toggleCollapse,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            setCurrent: this.props.setCurrent,\n\t            setContainerList: this.props.setContainerList,\n\t            addListItem: this.props.addListItem,\n\t            copyListItem: this.props.copyListItem,\n\t            removeListItem: this.props.removeListItem,\n\t            saveContainerList: this.props.saveContainerList\n\t          })\n\t        )\n\t      );\n\t\n\t      var tabList = [{ id: \"specimens\", label: \"Specimens\" }, { id: \"containers\", label: \"Containers\" }];\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'biobank-page' },\n\t        React.createElement(\n\t          _Tabs.Tabs,\n\t          { tabs: tabList, defaultTab: 'specimens', updateURL: true },\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[0].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row', style: { marginTop: 20 } },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-3', style: { marginTop: '10px' } },\n\t                React.createElement(\n\t                  'div',\n\t                  { className: 'filter' },\n\t                  React.createElement(\n\t                    _FilterForm2.default,\n\t                    {\n\t                      Module: 'biobank',\n\t                      ref: 'specimenFilter',\n\t                      formElements: this.props.specimenDataTable.form,\n\t                      onUpdate: this.props.updateSpecimenFilter,\n\t                      filter: this.props.specimenFilter\n\t                    },\n\t                    React.createElement(ButtonElement, {\n\t                      label: 'Clear Filters',\n\t                      type: 'reset',\n\t                      onUserInput: this.resetSpecimenFilters\n\t                    }),\n\t                    React.createElement(\n\t                      'div',\n\t                      { className: 'align-row' },\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        searchSpecimenButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        addSpecimenButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        poolSpecimenButton\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-9', style: { marginTop: '10px' } },\n\t                React.createElement(StaticDataTable, {\n\t                  Data: this.props.specimenDataTable.Data,\n\t                  Headers: this.props.specimenDataTable.Headers,\n\t                  Filter: this.props.specimenFilter,\n\t                  getFormattedCell: this.formatSpecimenColumns\n\t                })\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            _Tabs.TabPane,\n\t            { TabId: tabList[1].id },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-3', style: { marginTop: '10px' } },\n\t                React.createElement(\n\t                  'div',\n\t                  { className: 'filter' },\n\t                  React.createElement(\n\t                    _FilterForm2.default,\n\t                    {\n\t                      Module: 'biobank',\n\t                      ref: 'containerFilter',\n\t                      formElements: this.props.containerDataTable.form,\n\t                      onUpdate: this.props.updateContainerFilter,\n\t                      filter: this.props.containerFilter\n\t                    },\n\t                    React.createElement(ButtonElement, {\n\t                      label: 'Clear Filters',\n\t                      type: 'reset',\n\t                      onUserInput: this.resetContainerFilters\n\t                    }),\n\t                    React.createElement(\n\t                      'div',\n\t                      { className: 'align-row' },\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        searchContainerButton\n\t                      ),\n\t                      React.createElement(\n\t                        'span',\n\t                        { className: 'action' },\n\t                        addContainerButton\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-lg-9', style: { marginTop: '10px' } },\n\t                React.createElement(StaticDataTable, {\n\t                  Data: this.props.containerDataTable.Data,\n\t                  Headers: this.props.containerDataTable.Headers,\n\t                  Filter: this.props.containerFilter,\n\t                  getFormattedCell: this.formatContainerColumns\n\t                })\n\t              )\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankFilter;\n\t}(React.Component);\n\t\n\tBiobankFilter.propTypes = {\n\t  specimenFilter: React.PropTypes.object.isRequired,\n\t  specimenDataTable: React.PropTypes.object.isRequired,\n\t  containerFilter: React.PropTypes.object.isRequired,\n\t  containerDataTable: React.PropTypes.object.isRequired,\n\t  options: React.PropTypes.object.isRequired,\n\t  editable: React.PropTypes.object.isRequired,\n\t  loadContainer: React.PropTypes.func.isRequired,\n\t  loadSpecimen: React.PropTypes.func.isRequired,\n\t  loadTransfer: React.PropTypes.func.isRequired,\n\t  updateSpecimenFilter: React.PropTypes.func.isRequired,\n\t  updateContainerFilter: React.PropTypes.func.isRequired,\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  edit: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired\n\t};\n\t\n\tBiobankFilter.defaultProps = {};\n\t\n\texports.default = BiobankFilter;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(4);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t      if (key) {\n\t        filter[key] = {};\n\t        if (value) {\n\t          // all defined/non-null values must have some length, else empty string\n\t          filter[key].value = Object.keys(value).length > 0 ? value : '';\n\t        } else {\n\t          // null and undefined handled here\n\t          filter[key].value = '';\n\t        }\n\t        filter[key].exactMatch = type === \"SelectElement\";\n\t      } else if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure key is of string type and value is of string or object type\n\t      // before sending them to querystring\n\t      if (typeof fieldName !== 'string' || typeof fieldValue !== 'string' && (typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        this.props,\n\t        formChildren\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      var pencilGlyph = void 0;\n\t      if (this.props.edit) {\n\t        pencilGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-pencil\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.edit\n\t        });\n\t      }\n\t\n\t      var plusGlyph = void 0;\n\t      if (this.props.add) {\n\t        plusGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-plus\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.add\n\t        });\n\t      }\n\t\n\t      var removeGlyph = void 0;\n\t      if (this.props.cancel) {\n\t        removeGlyph = React.createElement(\"span\", {\n\t          className: \"glyphicon pull-right glyphicon-remove\",\n\t          style: { marginRight: '10px', cursor: 'pointer' },\n\t          onClick: this.props.cancel\n\t        });\n\t      }\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\"\n\t        },\n\t        React.createElement(\"span\", {\n\t          className: glyphClass,\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        }),\n\t        pencilGlyph,\n\t        plusGlyph,\n\t        removeGlyph,\n\t        this.props.title\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  edit: React.PropTypes.func,\n\t  add: React.PropTypes.func\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _collectionForm = __webpack_require__(6);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _containerParentForm = __webpack_require__(8);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankSpecimenForm = function (_React$Component) {\n\t  _inherits(BiobankSpecimenForm, _React$Component);\n\t\n\t  function BiobankSpecimenForm() {\n\t    _classCallCheck(this, BiobankSpecimenForm);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimenForm.__proto__ || Object.getPrototypeOf(BiobankSpecimenForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimenForm, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n\t      var specimenListArray = Object.keys(this.props.specimenList);\n\t      var barcodes = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          barcodes.push(React.createElement(SpecimenBarcodeForm, {\n\t            data: _this2.props.data || null,\n\t            key: key,\n\t            barcodeKey: key,\n\t            id: i,\n\t            collapsed: _this2.props.current.collapsed[key],\n\t            toggleCollapse: _this2.props.toggleCollapse,\n\t            mapFormOptions: _this2.props.mapFormOptions,\n\t            setCurrent: _this2.props.setCurrent,\n\t            container: _this2.props.specimenList[key].container || null,\n\t            specimen: _this2.props.specimenList[key].specimen || null,\n\t            errors: _this2.props.errors.list[key] || {},\n\t            removeSpecimen: specimenListArray.length !== 1 ? function () {\n\t              return _this2.props.removeListItem(key);\n\t            } : null,\n\t            addSpecimen: i == specimenListArray.length ? function () {\n\t              _this2.props.addListItem('specimen');\n\t            } : null,\n\t            multiplier: _this2.props.current.multiplier,\n\t            copySpecimen: i == specimenListArray.length && _this2.props.specimenList[key] ? _this2.props.copyListItem : null,\n\t            setContainerList: _this2.props.setContainerList,\n\t            setSpecimenList: _this2.props.setSpecimenList,\n\t            specimenTypes: _this2.props.specimenTypes,\n\t            containerTypesPrimary: _this2.props.containerTypesPrimary,\n\t            containersNonPrimary: _this2.props.containersNonPrimary,\n\t            specimenTypeAttributes: _this2.props.specimenTypeAttributes,\n\t            attributeDatatypes: _this2.props.attributeDatatypes,\n\t            attributeOptions: _this2.props.attributeOptions,\n\t            capacities: _this2.props.capacities,\n\t            containerDimensions: _this2.props.containerDimensions,\n\t            containerCoordinates: _this2.props.containerCoordinates,\n\t            specimenTypeUnits: _this2.props.specimenTypeUnits,\n\t            units: _this2.props.units\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = specimenListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      var globalFields = void 0;\n\t      var remainingQuantityFields = void 0;\n\t      if (this.props.data) {\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Parent Specimen',\n\t            text: this.props.data.container.barcode\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'PSCID',\n\t            text: this.props.data.candidate.PSCID\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Visit Label',\n\t            text: this.props.data.session.Visit_label\n\t          })\n\t        );\n\t\n\t        remainingQuantityFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Remaining Quantity',\n\t            onUserInput: this.props.setSpecimen,\n\t            required: true,\n\t            value: this.props.specimen.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: this.props.specimenUnits,\n\t            onUserInput: this.props.setSpecimen,\n\t            emptyOption: false,\n\t            required: true,\n\t            value: this.props.specimen.unitId\n\t          })\n\t        );\n\t      } else {\n\t        var sessions = {};\n\t        if (this.props.current.candidateId) {\n\t          sessions = this.props.mapFormOptions(this.props.candidateSessions[this.props.current.candidateId], 'label');\n\t        }\n\t        //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n\t        globalFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(SelectElement, {\n\t            name: 'candidateId',\n\t            label: 'PSCID',\n\t            options: this.props.candidates,\n\t            onUserInput: this.props.setCurrent,\n\t            required: true,\n\t            value: this.props.current.candidateId,\n\t            placeHolder: 'Search for a PSCID',\n\t            errorMessage: this.props.errors.specimen.candidateId\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'sessionId',\n\t            label: 'Visit Label',\n\t            options: sessions,\n\t            onUserInput: this.props.setCurrent,\n\t            required: true,\n\t            value: this.props.current.sessionId,\n\t            disabled: this.props.current.candidateId ? false : true,\n\t            errorMessage: this.props.errors.specimen.sessionId\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenForm',\n\t          id: 'specimenForm',\n\t          onSubmit: this.props.saveSpecimenList,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            globalFields,\n\t            remainingQuantityFields\n\t          )\n\t        ),\n\t        barcodes,\n\t        React.createElement(ButtonElement, {\n\t          label: 'Submit',\n\t          columnSize: 'col-sm-2 col-sm-offset-10'\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimenForm;\n\t}(React.Component);\n\t\n\tBiobankSpecimenForm.propTypes = {};\n\t\n\tBiobankSpecimenForm.defaultProps = {\n\t  specimenList: {}\n\t};\n\t\n\t/**\n\t * Biobank Barcode Form\n\t *\n\t * Acts a subform for BiobankSpecimenForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenBarcodeForm = function (_React$Component2) {\n\t  _inherits(SpecimenBarcodeForm, _React$Component2);\n\t\n\t  function SpecimenBarcodeForm() {\n\t    _classCallCheck(this, SpecimenBarcodeForm);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, (SpecimenBarcodeForm.__proto__ || Object.getPrototypeOf(SpecimenBarcodeForm)).call(this));\n\t\n\t    _this3.setContainer = _this3.setContainer.bind(_this3);\n\t    _this3.setSpecimen = _this3.setSpecimen.bind(_this3);\n\t    _this3.copy = _this3.copy.bind(_this3);\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(SpecimenBarcodeForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainerList(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'setSpecimen',\n\t    value: function setSpecimen(name, value) {\n\t      this.props.setSpecimenList(name, value, this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'copy',\n\t    value: function copy() {\n\t      this.props.copySpecimen(this.props.barcodeKey);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      var addSpecimenButton = void 0;\n\t      var addSpecimenText = void 0;\n\t      var copySpecimenButton = void 0;\n\t      var copySpecimenText = void 0;\n\t      if (this.props.addSpecimen) {\n\t        addSpecimenButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.props.addSpecimen\n\t            },\n\t            '+'\n\t          )\n\t        );\n\t\n\t        addSpecimenText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          'New Entry'\n\t        );\n\t      }\n\t\n\t      if (this.props.copySpecimen) {\n\t        copySpecimenButton = React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button add',\n\t              onClick: this.copy\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-duplicate' })\n\t          )\n\t        );\n\t        copySpecimenText = React.createElement(\n\t          'span',\n\t          { className: 'action-title' },\n\t          React.createElement('input', {\n\t            className: 'form-control input-sm',\n\t            type: 'number',\n\t            min: '1',\n\t            max: '50',\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: function onChange(e) {\n\t              _this4.props.setCurrent('multiplier', e.target.value);\n\t            },\n\t            value: this.props.multiplier\n\t          }),\n\t          'Copies'\n\t        );\n\t      }\n\t\n\t      var removeSpecimenButton = void 0;\n\t      if (this.props.removeSpecimen) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeSpecimenButton = React.createElement('span', {\n\t          className: 'glyphicon glyphicon-remove',\n\t          onClick: this.props.removeSpecimen,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      var specimenTypes = {};\n\t      if (this.props.data) {\n\t        for (var id in this.props.specimenTypes) {\n\t          if (this.props.specimenTypes[id].parentTypeId == this.props.data.specimen.typeId || id == this.props.data.specimen.typeId) {\n\t            specimenTypes[id] = this.props.specimenTypes[id]['type'];\n\t          }\n\t        }\n\t      } else {\n\t        specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankBarcode'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-9 col-xs-offset-1' },\n\t            React.createElement(\n\t              'div',\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: 'barcode',\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.barcode,\n\t                errorMessage: (this.props.errors.container || {}).barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-1', style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement('span', {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              'data-toggle': 'collapse',\n\t              'data-target': '#item-' + this.props.barcodeKey,\n\t              onClick: function onClick() {\n\t                _this4.props.toggleCollapse(_this4.props.barcodeKey);\n\t              }\n\t            }),\n\t            removeSpecimenButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement('div', { className: 'col-xs-2' }),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-8' },\n\t            React.createElement(\n\t              'div',\n\t              { id: 'item-' + this.props.barcodeKey, className: 'collapse' },\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Specimen Type',\n\t                options: specimenTypes,\n\t                onUserInput: this.setSpecimen,\n\t                required: true,\n\t                value: this.props.specimen.typeId,\n\t                errorMessage: (this.props.errors.specimen || {}).typeId\n\t              }),\n\t              React.createElement(SelectElement, {\n\t                name: 'typeId',\n\t                label: 'Container Type',\n\t                options: this.props.containerTypesPrimary,\n\t                onUserInput: this.setContainer,\n\t                ref: 'containerType',\n\t                required: true,\n\t                value: this.props.container.typeId,\n\t                errorMessage: (this.props.errors.container || {}).typeId\n\t              }),\n\t              React.createElement(_collectionForm2.default, {\n\t                specimen: this.props.specimen,\n\t                errors: (this.props.errors.specimen || {}).collection,\n\t                setSpecimen: this.setSpecimen,\n\t                specimenTypeUnits: this.props.specimenTypeUnits,\n\t                specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t                attributeDatatypes: this.props.attributeDatatypes,\n\t                attributeOptions: this.props.attributeOptions\n\t              }),\n\t              React.createElement(_containerParentForm2.default, {\n\t                setContainer: this.setContainer,\n\t                mapFormOptions: this.props.mapFormOptions,\n\t                container: this.props.container,\n\t                containersNonPrimary: this.props.containersNonPrimary,\n\t                containerDimensions: this.props.containerDimensions,\n\t                containerCoordinates: this.props.containerCoordinates\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-11' },\n\t            React.createElement('div', { className: 'col-xs-4' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              addSpecimenButton,\n\t              addSpecimenText\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-xs-3 action' },\n\t              copySpecimenButton,\n\t              copySpecimenText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenBarcodeForm;\n\t}(React.Component);\n\t\n\tSpecimenBarcodeForm.propTypes = {};\n\t\n\tSpecimenBarcodeForm.defaultProps = {};\n\t\n\texports.default = BiobankSpecimenForm;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(7);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenCollectionForm = function (_React$Component) {\n\t  _inherits(SpecimenCollectionForm, _React$Component);\n\t\n\t  function SpecimenCollectionForm() {\n\t    _classCallCheck(this, SpecimenCollectionForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenCollectionForm.__proto__ || Object.getPrototypeOf(SpecimenCollectionForm)).call(this));\n\t\n\t    _this.setCollection = _this.setCollection.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenCollectionForm, [{\n\t    key: 'setCollection',\n\t    value: function setCollection(name, value) {\n\t      var collection = this.props.specimen.collection;\n\t      collection[name] = value;\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t\n\t    //TODO: this function may not be necessary\n\t\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var collection = this.props.specimen.collection;\n\t      collection.data = {};\n\t      this.props.setSpecimen('collection', collection);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.collection.data;\n\t      data[name] = value;\n\t      this.setCollection('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var updateButton = void 0;\n\t      if (((this.props.data || {}).specimen || {}).collection) {\n\t        updateButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      }\n\t\n\t      var specimenTypeUnits = {};\n\t      var specimenTypeFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t\n\t        //This modifies the selections for unit drop down based on the chosen\n\t        //specimen type \n\t        for (var id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n\t          specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n\t        }\n\t\n\t        var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n\t        if (specimenTypeFieldsObject) {\n\t          if (((this.props.specimen || {}).collection || {}).data) {\n\t            specimenTypeFields = React.createElement(_customFields2.default, {\n\t              object: this.props.specimen.collection.data,\n\t              fields: specimenTypeFieldsObject,\n\t              errors: this.props.errors.data,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      var specimenFields = void 0;\n\t      if (this.props.specimen.typeId) {\n\t        specimenFields = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            label: 'Quantity',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.quantity,\n\t            errorMessage: this.props.errors.quantity\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            label: 'Unit',\n\t            options: specimenTypeUnits,\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.unitId,\n\t            errorMessage: this.props.errors.unitId\n\t          }),\n\t          specimenTypeFields,\n\t          React.createElement(DateElement, {\n\t            name: 'date',\n\t            label: 'Date',\n\t            minYear: '2000',\n\t            maxYear: '2018',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.date,\n\t            errorMessage: this.props.errors.date\n\t          }),\n\t          React.createElement(TimeElement, {\n\t            name: 'time',\n\t            label: 'Time',\n\t            onUserInput: this.setCollection,\n\t            required: true,\n\t            value: this.props.specimen.collection.time,\n\t            errorMessage: this.props.errors.time\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setCollection,\n\t            ref: 'comments',\n\t            value: this.props.specimen.collection.comments,\n\t            errorMessage: this.props.errors.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'biobankSpecimen',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        specimenFields,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenCollectionForm;\n\t}(React.Component);\n\t\n\tSpecimenCollectionForm.propTypes = {\n\t  setSpecimen: React.PropTypes.func.isRequired,\n\t  saveSpecimen: React.PropTypes.func,\n\t  specimen: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  specimenTypeUnits: React.PropTypes.object.isRequired,\n\t  specimenTypeAttributes: React.PropTypes.object.isRequired\n\t};\n\t\n\tSpecimenCollectionForm.defaultProps = {\n\t  errors: {}\n\t};\n\t\n\texports.default = SpecimenCollectionForm;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Custom Attribute Fields\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\tvar CustomFields = function (_React$Component) {\n\t  _inherits(CustomFields, _React$Component);\n\t\n\t  function CustomFields() {\n\t    _classCallCheck(this, CustomFields);\n\t\n\t    return _possibleConstructorReturn(this, (CustomFields.__proto__ || Object.getPrototypeOf(CustomFields)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CustomFields, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var fields = this.props.fields;\n\t      var attributeFields = Object.keys(fields).map(function (attribute) {\n\t\n\t        var datatype = _this2.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n\t        if (datatype === 'text' || datatype === 'number') {\n\t          if (fields[attribute]['refTableId'] === null) {\n\t            return React.createElement(TextboxElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute],\n\t              errorMessage: _this2.props.errors[attribute]\n\t            });\n\t          }\n\t\n\t          if (fields[attribute]['refTableId'] !== null) {\n\t            return React.createElement(SelectElement, {\n\t              name: attribute,\n\t              label: fields[attribute]['name'],\n\t              options: _this2.props.attributeOptions[fields[attribute]['refTableId']],\n\t              onUserInput: _this2.props.setData,\n\t              required: fields[attribute]['required'],\n\t              value: _this2.props.object[attribute],\n\t              errorMessage: _this2.props.errors[attribute]\n\t            });\n\t          }\n\t        }\n\t\n\t        if (datatype === 'datetime') {\n\t          return React.createElement(DateElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.object[attribute],\n\t            errorMessage: _this2.props.errors[attribute]\n\t          });\n\t        }\n\t\n\t        // Do not present the possibility of uploading if file is already set\n\t        // File must instead be deleted or overwritten.\n\t        if (datatype === 'file' && !(_this2.props.data || {})[attribute]) {\n\t          return React.createElement(FileElement, {\n\t            name: attribute,\n\t            label: fields[attribute]['name'],\n\t            onUserInput: _this2.props.setData,\n\t            required: fields[attribute]['required'],\n\t            value: _this2.props.current.files[_this2.props.object[attribute]],\n\t            errorMessage: _this2.props.errors[attribute]\n\t          });\n\t        }\n\t      });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        attributeFields\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CustomFields;\n\t}(React.Component);\n\t\n\tCustomFields.propTypes = {\n\t  fields: React.PropTypes.object.isRequired,\n\t  attributeDatatypes: React.PropTypes.object.isRequired,\n\t  attributeOptions: React.PropTypes.object.isRequired,\n\t  object: React.PropTypes.object.isRequired,\n\t  setData: React.PropTypes.func.isRequired,\n\t  errors: React.PropTypes.object\n\t};\n\t\n\tCustomFields.defaultProps = {\n\t  errors: {}\n\t};\n\t\n\texports.default = CustomFields;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _containerDisplay = __webpack_require__(9);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Biobank Container Parent Form\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fetches data from Loris backend and displays a form allowing\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to specimen a biobank file attached to a specific instrument\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Henri Rabalais\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.0.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\tn\t\n\tvar ContainerParentForm = function (_React$Component) {\n\t  _inherits(ContainerParentForm, _React$Component);\n\t\n\t  function ContainerParentForm() {\n\t    _classCallCheck(this, ContainerParentForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerParentForm.__proto__ || Object.getPrototypeOf(ContainerParentForm)).call(this));\n\t\n\t    _this.setContainer = _this.setContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  //This is to have a child adopt the properties of the parent\n\t  //TODO: there might be a better way to do this.\n\t\n\t\n\t  _createClass(ContainerParentForm, [{\n\t    key: 'setContainer',\n\t    value: function setContainer(name, value) {\n\t      var container = this.props.containersNonPrimary[value];\n\t      this.props.setContainer(name, value);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.setContainer('temperature', container.temperature);\n\t      this.props.setContainer('centerId', container.centerId);\n\t      this.props.setContainer('statusId', container.statusId);\n\t    }\n\t  }, {\n\t    key: 'recursive',\n\t    value: function recursive(object, id) {\n\t      for (var key in this.props.containersNonPrimary) {\n\t        if (id == this.props.containersNonPrimary[key].parentContainerId) {\n\t          object = this.recursive(object, key);\n\t          delete object[key];\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var containerDisplay = void 0;\n\t\n\t      var containerBarcodesNonPrimary = this.props.mapFormOptions(this.props.containersNonPrimary, 'barcode');\n\t      if (this.props.data) {\n\t        containerBarcodesNonPrimary = this.recursive(containerBarcodesNonPrimary, this.props.data.container.id);\n\t        delete containerBarcodesNonPrimary[this.props.data.container.id];\n\t      }\n\t\n\t      var parentContainerField = React.createElement(SelectElement, {\n\t        name: 'parentContainerId',\n\t        label: 'Parent Container Barcode',\n\t        options: containerBarcodesNonPrimary,\n\t        onUserInput: this.setContainer,\n\t        value: this.props.container.parentContainerId\n\t      });\n\t\n\t      if (this.props.container.parentContainerId) {\n\t        var dimensionId = this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId;\n\t\n\t        if (dimensionId) {\n\t          // This will eventually become unecessary\n\t          var dimensions = this.props.containerDimensions[dimensionId];\n\t\n\t          // Total coordinates is determined by the product of the dimensions\n\t          var coordinatesTotal = 1;\n\t          for (var dimension in dimensions) {\n\t            coordinatesTotal = coordinatesTotal * dimensions[dimension];\n\t          }\n\t\n\t          // Mapping of options for the SelectElement\n\t          var coordinates = {};\n\t          for (var i = 1; i <= coordinatesTotal; i++) {\n\t            // If the coordinate is already taken, skip it.\n\t            // this doubling of if statements seems unnecessary\n\t            if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n\t              if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n\t                continue;\n\t              }\n\t            }\n\t\n\t            coordinates[i] = i;\n\t          }\n\t\n\t          containerDisplay = React.createElement(_containerDisplay2.default, {\n\t            dimensions: this.props.containerDimensions[this.props.containersNonPrimary[this.props.container.parentContainerId].dimensionId],\n\t            coordinates: this.props.containerCoordinates[this.props.container.parentContainerId],\n\t            containerTypes: this.props.containerTypes,\n\t            containerStati: this.props.containerStati,\n\t            select: true,\n\t            selectedCoordinate: this.props.container.coordinate,\n\t            setContainer: this.props.setContainer\n\t          });\n\t        }\n\t      }\n\t\n\t      var updateButton = void 0;\n\t      if ((this.props.data || {}).container) {\n\t        updateButton = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement('br', null),\n\t          React.createElement(ButtonElement, { label: 'Update' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          onSubmit: this.props.saveContainer\n\t        },\n\t        parentContainerField,\n\t        containerDisplay,\n\t        updateButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerParentForm;\n\t}(React.Component);\n\t\n\tContainerParentForm.propTypes = {\n\t  mapFormOptions: React.PropTypes.func.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func,\n\t  data: React.PropTypes.object,\n\t  container: React.PropTypes.object.isRequired,\n\t  containersNonPrimary: React.PropTypes.object.isRequired,\n\t  containerDimensions: React.PropTypes.object.isRequired,\n\t  containerCoordinates: React.PropTypes.object.isRequired,\n\t  containerTypes: React.PropTypes.object,\n\t  containerStati: React.PropTypes.object\n\t};\n\t\n\texports.default = ContainerParentForm;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(10);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * ContainerDisplay\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerDisplay = function (_React$Component) {\n\t  _inherits(ContainerDisplay, _React$Component);\n\t\n\t  function ContainerDisplay() {\n\t    _classCallCheck(this, ContainerDisplay);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerDisplay.__proto__ || Object.getPrototypeOf(ContainerDisplay)).call(this));\n\t\n\t    _this.state = {\n\t      coordinate: null\n\t    };\n\t\n\t    _this.redirectURL = _this.redirectURL.bind(_this);\n\t    _this.drag = _this.drag.bind(_this);\n\t    _this.drop = _this.drop.bind(_this);\n\t    _this.loadContainer = _this.loadContainer.bind(_this);\n\t    _this.checkoutContainers = _this.checkoutContainers.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerDisplay, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'componenDidUpdate',\n\t    value: function componenDidUpdate() {\n\t      $('[data-toggle=\"tooltip\"]').tooltip();\n\t    }\n\t  }, {\n\t    key: 'redirectURL',\n\t    value: function redirectURL(e) {\n\t      var coordinate = e.target.id;\n\t      if (this.props.coordinates[coordinate]) {\n\t        var load = this.props.types[this.props.children[this.props.coordinates[coordinate]].typeId].primary == 1 ? this.props.loadSpecimen : this.props.loadContainer;\n\t\n\t        load(this.props.children[this.props.coordinates[coordinate]].barcode);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'allowDrop',\n\t    value: function allowDrop(e) {\n\t      e.preventDefault();\n\t    }\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.children[this.props.coordinates[e.target.id]]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(e) {\n\t      var _this2 = this;\n\t\n\t      e.preventDefault();\n\t\n\t      var container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\t      var newCoordinate = parseInt(e.target.id);\n\t\n\t      container.coordinate = newCoordinate;\n\t\n\t      var node = e.target;\n\t      this.props.saveChildContainer(container).then(function () {\n\t        _this2.setState({ coordinate: node.id });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'increaseCoordinate',\n\t    value: function increaseCoordinate(coordinate) {\n\t      var capacity = Object.values(this.props.dimensions).reduce(function (total, current) {\n\t        return total * current;\n\t      });\n\t      coordinate++;\n\t      for (var c in this.props.coordinates) {\n\t        if (c == coordinate || coordinate > capacity) {\n\t          this.props.close();\n\t        }\n\t      }\n\t      this.props.setCurrent('coordinate', coordinate);\n\t      this.props.setCurrent('sequential', true);\n\t    }\n\t  }, {\n\t    key: 'loadContainer',\n\t    value: function loadContainer(name, value) {\n\t      var _this3 = this;\n\t\n\t      if (value) {\n\t        var containerId = value;\n\t        var container = this.props.containers[containerId];\n\t        container.parentContainerId = this.props.container.id;\n\t        container.coordinate = this.props.current.coordinate;\n\t\n\t        this.props.saveChildContainer(container).then(function () {\n\t          var node = document.getElementById(container.coordinate);\n\t          _this3.setState({ coordinate: node.id });\n\t          if (_this3.props.current.sequential) {\n\t            var coordinate = _this3.props.current.coordinate;\n\t            _this3.props.edit('barcode').then(function () {\n\t              _this3.increaseCoordinate(coordinate);\n\t            });\n\t          } else {\n\t            _this3.props.close();\n\t          }\n\t        });\n\t      }\n\t    }\n\t\n\t    //TODO: this is the same as the containerList in the container form\n\t    //These functions should be combined in biobankIndex.js\n\t\n\t  }, {\n\t    key: 'checkoutContainers',\n\t    value: function checkoutContainers() {\n\t      var _this4 = this;\n\t\n\t      return new Promise(function () {\n\t        var checkoutList = _this4.props.current.list;\n\t        for (var coordinate in checkoutList) {\n\t          checkoutList[coordinate].parentContainerId = null;\n\t          checkoutList[coordinate].coordinate = null;\n\t          _this4.props.saveChildContainer(checkoutList[coordinate]);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this5 = this;\n\t\n\t      var barcodeField = void 0;\n\t      if ((this.props.editable || {}).barcode) {\n\t        barcodeField = React.createElement(SearchableDropdown, {\n\t          name: 'barcode',\n\t          label: 'Barcode',\n\t          options: this.props.barcodes,\n\t          onUserInput: this.loadContainer,\n\t          placeHolder: 'Please Scan or Select Barcode',\n\t          autoFocus: true\n\t        });\n\t      }\n\t\n\t      var load = React.createElement(\n\t        'div',\n\t        { className: (this.props.editable || {}).barcode ? 'open' : 'closed' },\n\t        React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Note',\n\t            text: 'Select or Scan Containers to be Loaded. If Sequential is Checked, the Coordinate will Auto-Increment after each Load.'\n\t          }),\n\t          React.createElement(CheckboxElement, {\n\t            name: 'sequential',\n\t            label: 'Sequential',\n\t            value: this.props.current.sequential,\n\t            onUserInput: this.props.setCurrent\n\t          }),\n\t          barcodeField,\n\t          React.createElement(ButtonElement, {\n\t            label: 'Done',\n\t            onUserInput: this.props.close\n\t          })\n\t        )\n\t      );\n\t\n\t      if ((this.props.editable || {}).containerCheckout) {\n\t        var barcodes = this.props.mapFormOptions(this.props.children, 'barcode');\n\t        barcodeField = React.createElement(SearchableDropdown, {\n\t          name: 'barcode',\n\t          label: 'Barcode',\n\t          options: barcodes,\n\t          onUserInput: function onUserInput(name, value) {\n\t            return value && _this5.props.setCheckoutList(_this5.props.children[value]);\n\t          },\n\t          placeHolder: 'Please Scan or Select Barcode',\n\t          autoFocus: true\n\t        });\n\t      }\n\t\n\t      var checkout = React.createElement(\n\t        'div',\n\t        { className: (this.props.editable || {}).containerCheckout ? 'open' : 'closed' },\n\t        React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Note',\n\t            text: 'Click, Select or Scan Containers to be Unloaded and Press \\'Confirm\\''\n\t          }),\n\t          barcodeField,\n\t          React.createElement(ButtonElement, {\n\t            label: 'Confirm',\n\t            onUserInput: function onUserInput() {\n\t              _this5.checkoutContainers();_this5.props.close();\n\t            }\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            text: React.createElement(\n\t              'a',\n\t              { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t              'Cancel'\n\t            )\n\t          })\n\t        )\n\t      );\n\t\n\t      //TODO: This will eventually need to be reworked and cleaned up\n\t      var column = [];\n\t      var row = [];\n\t      var display = void 0;\n\t      var coordinate = 1;\n\t      if (this.props.dimensions) {\n\t        for (var y = 0; y < this.props.dimensions.y; y++) {\n\t          column = [];\n\t          for (var x = 1; x <= this.props.dimensions.x; x++) {\n\t\n\t            var nodeWidth = 500 / this.props.dimensions.x - 500 / this.props.dimensions.x * 0.08;\n\t            var nodeStyle = { width: nodeWidth };\n\t            var nodeClass = 'node';\n\t            var tooltipTitle = null;\n\t            var title = null;\n\t            var dataHtml = 'false';\n\t            var dataToggle = null;\n\t            var dataPlacement = null;\n\t            var draggable = 'false';\n\t            var onDragStart = null;\n\t            var onDragOver = this.allowDrop;\n\t            var onDrop = this.drop;\n\t            var onClick = this.redirectURL;\n\t\n\t            if (!this.props.select) {\n\t              if ((this.props.coordinates || {})[coordinate]) {\n\t                if (coordinate in this.props.current.list) {\n\t                  nodeClass = 'node checkout';\n\t                } else if (coordinate == this.state.coordinate) {\n\t                  nodeClass = 'node new';\n\t                } else {\n\t                  nodeClass = 'node occupied';\n\t                }\n\t                dataHtml = 'true';\n\t                dataToggle = 'tooltip';\n\t                dataPlacement = 'top';\n\t                //tooltipTitle = \n\t                //  '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                //  '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                //  '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                draggable = this.props.editable.barcode || this.props.editable.containerCheckout ? 'false' : 'true';\n\t                onDragStart = this.drag;\n\t                onDragOver = null;\n\t                onDrop = null;\n\t                if (this.props.editable.containerCheckout) {\n\t                  onClick = function onClick(e) {\n\t                    var container = _this5.props.containers[_this5.props.coordinates[e.target.id]];\n\t                    _this5.props.setCheckoutList(container);\n\t                  };\n\t                }\n\t                if (this.props.editable.barcode) {\n\t                  onClick = null;\n\t                }\n\t              } else if (!this.props.editable.containerCheckout) {\n\t                nodeClass = coordinate == this.props.current.coordinate ? 'node selected' : 'node load';\n\t                title = 'Load...';\n\t                onClick = function onClick(e) {\n\t                  var containerId = e.target.id;\n\t                  _this5.props.edit('barcode').then(function () {\n\t                    _this5.props.setCurrent('coordinate', containerId);\n\t                  });\n\t                };\n\t              }\n\t            }\n\t\n\t            if (this.props.select) {\n\t              if (coordinate == this.props.selectedCoordinate) {\n\t                nodeClass = 'node occupied';\n\t              } else if (!this.props.coordinates) {\n\t                nodeClass = 'node available';\n\t                onClick = function onClick(e) {\n\t                  return _this5.props.setContainer('coordinate', e.target.id);\n\t                };\n\t              } else if (this.props.coordinates) {\n\t                if (!this.props.coordinates[coordinate]) {\n\t                  nodeClass = 'node available';\n\t                  onClick = function onClick(e) {\n\t                    return _this5.props.setContainer('coordinate', e.target.id);\n\t                  };\n\t                } else if (this.props.coordinates[coordinate]) {\n\t                  //  dataHtml = 'true';\n\t                  //  dataToggle = 'tooltip';\n\t                  //  dataPlacement = 'top';\n\t                  //  tooltipTitle = \n\t                  //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n\t                  //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n\t                  //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n\t                }\n\t              }\n\t            }\n\t\n\t            var coordinateDisplay = void 0;\n\t            if (true) {\n\t              coordinateDisplay = x + this.props.dimensions.x * y;\n\t            } else if (false) {\n\t              coordinateDisplay = String.fromCharCode(65 + y) + '' + x;\n\t            }\n\t\n\t            column.push(React.createElement(\n\t              'div',\n\t              {\n\t                id: coordinate,\n\t                title: title,\n\t                className: nodeClass,\n\t                'data-html': dataHtml,\n\t                'data-toggle': dataToggle,\n\t                'data-placement': dataPlacement,\n\t                'data-original-title': tooltipTitle,\n\t                style: nodeStyle,\n\t                onClick: onClick,\n\t                draggable: draggable,\n\t                onDragStart: onDragStart,\n\t                onDragOver: onDragOver,\n\t                onDrop: onDrop\n\t              },\n\t              coordinateDisplay\n\t            ));\n\t\n\t            coordinate++;\n\t          }\n\t\n\t          var rowHeight = 500 / this.props.dimensions.y - 500 / this.props.dimensions.y * 0.08;\n\t          var rowMargin = 500 / this.props.dimensions.y * 0.04;\n\t          var rowStyle = {\n\t            height: rowHeight\n\t          };\n\t\n\t          row.push(React.createElement(\n\t            'div',\n\t            { className: 'row', style: rowStyle },\n\t            column\n\t          ));\n\t        }\n\t\n\t        display = row;\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { style: { width: 500 } },\n\t          checkout,\n\t          load\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'display' },\n\t          display\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerDisplay;\n\t}(React.Component);\n\t\n\tContainerDisplay.propTypes = {};\n\t\n\tContainerDisplay.defaultProps = {\n\t  current: {}\n\t};\n\t\n\texports.default = ContainerDisplay;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Modal component.\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Modal Component.\n\t * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * =================================================\n\t *\n\t */\n\tvar Modal = function (_React$Component) {\n\t  _inherits(Modal, _React$Component);\n\t\n\t  function Modal() {\n\t    _classCallCheck(this, Modal);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this));\n\t\n\t    _this.closeModal = _this.closeModal.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Modal, [{\n\t    key: \"closeModal\",\n\t    value: function closeModal() {\n\t      var _this2 = this;\n\t\n\t      if (this.props.throwWarning) {\n\t        swal({\n\t          title: \"Are You Sure?\",\n\t          text: \"Leaving the form will result in the loss of any information entered.\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Proceed',\n\t          cancelButtonText: 'Cancel'\n\t        }, function () {\n\t          _this2.props.closeModal();\n\t        });\n\t      } else {\n\t        this.props.closeModal();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Black Background with Alpha Channel\n\t      var backdropStyle = {\n\t        position: 'fixed',\n\t        zIndex: 9998,\n\t        top: 0,\n\t        bottom: 0,\n\t        left: 0,\n\t        right: 0,\n\t        backgroundColor: 'rgba(0,0,0,0.3)',\n\t        padding: 50\n\t      };\n\t\n\t      // White Modal Window\n\t      var modalStyle = {\n\t        position: 'relative',\n\t        maxWidth: 850,\n\t        maxHeight: '100%',\n\t        margin: '0 auto',\n\t        backgroundColor: '#fff',\n\t        borderRadius: 10,\n\t        overflowY: 'auto',\n\t        zIndex: 9999\n\t      };\n\t\n\t      var titleStyle = {\n\t        display: 'flex',\n\t        flexDirection: 'row',\n\t        alignItems: 'center',\n\t        background: '#093782',\n\t        height: '50px',\n\t        borderTopRightRadius: '10',\n\t        color: '#FFFFFF',\n\t        fontSize: 24,\n\t        padding: 20\n\t      };\n\t\n\t      var glyphStyle = {\n\t        marginLeft: 'auto',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      var bodyStyle = {\n\t        padding: 15\n\t      };\n\t\n\t      var modal = void 0;\n\t      if (this.props.show) {\n\t        modal = React.createElement(\n\t          \"div\",\n\t          { style: backdropStyle, onClick: this.closeModal },\n\t          React.createElement(\n\t            \"div\",\n\t            { style: modalStyle, onClick: function onClick(e) {\n\t                e.stopPropagation();\n\t              } },\n\t            React.createElement(\n\t              \"div\",\n\t              { style: titleStyle },\n\t              this.props.title,\n\t              React.createElement(\n\t                \"span\",\n\t                { style: glyphStyle, onClick: this.closeModal },\n\t                \"\\xD7\"\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { style: bodyStyle },\n\t              this.props.children\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        null,\n\t        modal\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Modal;\n\t}(React.Component);\n\t\n\tModal.propTypes = {\n\t  title: React.PropTypes.string,\n\t  show: React.PropTypes.bool.isRequired,\n\t  closeModal: React.PropTypes.func.isRequired,\n\t  throwWarning: React.PropTypes.bool.isRequired\n\t};\n\t\n\tModal.defaultProps = {\n\t  throwWarning: true\n\t};\n\t\n\texports.default = Modal;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _preparationForm = __webpack_require__(12);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Pool Specimen Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\tvar PoolSpecimenForm = function (_React$Component) {\n\t  _inherits(PoolSpecimenForm, _React$Component);\n\t\n\t  function PoolSpecimenForm(props) {\n\t    _classCallCheck(this, PoolSpecimenForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (PoolSpecimenForm.__proto__ || Object.getPrototypeOf(PoolSpecimenForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      barcodeList: {},\n\t      errorMessage: null,\n\t      formErrors: {},\n\t      barcodeCount: 2,\n\t      preparation: false,\n\t      step: 1\n\t    };\n\t\n\t    _this.handleSubmit = _this.handleSubmit.bind(_this);\n\t    _this.validateForm = _this.validateForm.bind(_this);\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.setPreparationFormData = _this.setPreparationFormData.bind(_this);\n\t    _this.setSpecimenFormData = _this.setSpecimenFormData.bind(_this);\n\t    _this.submitForm = _this.submitForm.bind(_this);\n\t    _this.setBarcodeCount = _this.setBarcodeCount.bind(_this);\n\t    _this.next = _this.next.bind(_this);\n\t    _this.previous = _this.previous.bind(_this);\n\t    _this.addPreparation = _this.addPreparation.bind(_this);\n\t    _this.removePreparation = _this.removePreparation.bind(_this);\n\t    _this.validate = _this.validate.bind(_this);\n\t    _this.formSwitch = _this.formSwitch.bind(_this);\n\t    _this.preparationSwitch = _this.preparationSwitch.bind(_this);\n\t    _this.runAjax = _this.runAjax.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(PoolSpecimenForm, [{\n\t    key: 'next',\n\t    value: function next() {\n\t      var _this2 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this2.setState({\n\t          poolData: data,\n\t          step: _this2.state.step + 1\n\t        });\n\t      }, function (error) {\n\t        swal(\"Oops!\", error.responseText, \"error\");\n\t      });\n\t    }\n\t  }, {\n\t    key: 'previous',\n\t    value: function previous() {\n\t      this.setState({\n\t        step: this.state.step - 1\n\t      });\n\t    }\n\t  }, {\n\t    key: 'validate',\n\t    value: function validate() {\n\t      return this.runAjax(this.props.specimenRequest, { barcodeList: this.state.barcodeList });\n\t    }\n\t  }, {\n\t    key: 'runAjax',\n\t    value: function runAjax(url, inputData) {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t        $.ajax(url, {\n\t          method: \"GET\",\n\t          dataType: 'json',\n\t          data: inputData,\n\t          success: function (data) {\n\t            resolve(data);\n\t          }.bind(_this3),\n\t          error: function error(_error, textStatus, errorThrown) {\n\t            reject(_error);\n\t            console.error(_error);\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setBarcodeCount',\n\t    value: function setBarcodeCount(field, value) {\n\t      var barcodeCount = value;\n\t      var barcodeList = this.state.barcodeList;\n\t      for (var barcode in barcodeList) {\n\t        if (barcode > barcodeCount) {\n\t          delete barcodeList[barcode];\n\t        }\n\t      }\n\t\n\t      this.setState({ barcodeCount: barcodeCount, barcodeList: barcodeList });\n\t    }\n\t  }, {\n\t    key: 'formSwitch',\n\t    value: function formSwitch(inputForm, specimenForm) {\n\t      switch (this.state.step) {\n\t        case 1:\n\t          return inputForm;\n\t        case 2:\n\t          return specimenForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'preparationSwitch',\n\t    value: function preparationSwitch(preparationButton, preparationForm) {\n\t      switch (this.state.preparation) {\n\t        case false:\n\t          return preparationButton;\n\t        case true:\n\t          return preparationForm;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addPreparation',\n\t    value: function addPreparation() {\n\t      var _this4 = this;\n\t\n\t      this.validate().then(function (data) {\n\t        _this4.setState({\n\t          poolData: data,\n\t          preparation: true\n\t        });\n\t      }, function (error) {\n\t        swal('Oh no!', error.responseText, 'error');\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removePreparation',\n\t    value: function removePreparation() {\n\t      var formData = this.state.formData;\n\t      //TODO: is it better to set it to empty, or delete it?\n\t      formData.preparationForm = {};\n\t      this.setState({\n\t        preparation: false,\n\t        formData: formData\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      //Generates barcodes\n\t      var barcodes = [];\n\t      for (var i = 1; i <= this.state.barcodeCount; i++) {\n\t        barcodes.push(React.createElement(TextboxElement, {\n\t          name: i,\n\t          label: 'Barcode ' + i,\n\t          onUserInput: this.setFormData,\n\t          required: true,\n\t          value: this.state.barcodeList[i],\n\t          errorMessage: this.state.formErrors[i]\n\t        }));\n\t      }\n\t\n\t      var preparationButton = React.createElement(\n\t        'div',\n\t        { className: 'row' },\n\t        React.createElement('div', { className: 'col-xs-4' }),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-xs 4 action' },\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button add',\n\t                onClick: this.addPreparation\n\t              },\n\t              '+'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Add Preparation'\n\t          )\n\t        )\n\t      );\n\t\n\t      var preparationForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        var specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId];\n\t\n\t        var specimenProtocols = {};\n\t        for (var id in specimenProtocolAttributes) {\n\t          specimenProtocols[id] = this.props.specimenProtocols[id];\n\t        }\n\t        specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\t\n\t        preparationForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(_preparationForm2.default, {\n\t              formData: this.state.formData.preparationForm,\n\t              specimenProtocols: specimenProtocols,\n\t              specimenProtocolAttributes: specimenProtocolAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              setParentFormData: this.setPreparationFormData,\n\t              insertAction: loris.BaseURL + '/biobank/ajax/submitData.php?action=insertSpecimenPreparation'\n\t            }),\n\t            React.createElement(\n\t              'a',\n\t              { className: 'pull-right', style: { cursor: 'pointer' }, onClick: this.removePreparation },\n\t              'Cancel Preparation'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var inputForm = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-9 col-sm-offset-1' },\n\t            React.createElement(StaticElement, {\n\t              label: 'Pooling Note',\n\t              text: 'Select or Scan the specimens to be pooled. Please ensure that they are the same type, and share the same PSCID and Visit Label'\n\t            }),\n\t            React.createElement(NumericElement, {\n\t              label: '\\u2116 of Specimens',\n\t              min: '2',\n\t              max: '100',\n\t              value: this.state.barcodeCount,\n\t              onUserInput: this.setBarcodeCount\n\t            }),\n\t            barcodes\n\t          )\n\t        ),\n\t        this.preparationSwitch(preparationButton, preparationForm),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-sm-3 col-xs-offset-9 action' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'action-title' },\n\t            'Next'\n\t          ),\n\t          React.createElement(\n\t            'span',\n\t            { className: 'action' },\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.next\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        )\n\t      );\n\t\n\t      //TODO: Things here need to be in the proper order!!!\n\t      var specimenForm = void 0;\n\t      if (this.state.poolData) {\n\t\n\t        // This is to provide the options for the output specimens\n\t        var specimenTypes = {};\n\t        if (this.state.poolData.typeId) {\n\t          specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n\t        }\n\t\n\t        var pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n\t        var visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\t\n\t        var barcodesArray = Object.values(this.state.barcodeList);\n\t        var barcodesString = barcodesArray.join(', ');\n\t\n\t        // TODO: rather than all specimen units this should really be specific to the\n\t        // type\n\t        var specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\t\n\t        specimenForm = React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-xs-12' },\n\t            React.createElement(_specimenForm2.default, {\n\t              formData: this.state.formData.specimenForm,\n\t              candidateId: this.state.poolData.candidateId,\n\t              pscid: pscid,\n\t              sessionId: this.state.poolData.sessionId,\n\t              visit: visit,\n\t              parentSpecimenBarcodes: barcodesString,\n\t              parentSpecimenIds: this.state.poolData.specimenIds,\n\t              specimenTypes: specimenTypes,\n\t              specimenTypeUnits: this.props.specimenTypeUnits,\n\t              specimenUnits: specimenUnits,\n\t              containerTypesPrimary: this.props.containerTypesPrimary,\n\t              containersNonPrimary: this.props.containersNonPrimary,\n\t              specimenTypeAttributes: this.props.specimenTypeAttributes,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              capacities: this.props.capacities,\n\t              containerDimensions: this.props.containerDimensions,\n\t              containerCoordinates: this.props.containerCoordinates,\n\t              setParentFormData: this.setSpecimenFormData,\n\t              action: loris.BaseURL + '/biobank/ajax/submitData.php?action=submitSpecimen',\n\t              refreshParent: this.props.refreshParent\n\t            }),\n\t            React.createElement(ButtonElement, {\n\t              label: 'Submit'\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-sm-3 col-xs-offset-2 action' },\n\t            React.createElement(\n\t              'span',\n\t              { className: 'action' },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: this.previous\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'action-title' },\n\t              'Previous'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'poolSpecimenForm',\n\t          id: 'poolSpecimenForm',\n\t          onSubmit: this.handleSubmit,\n\t          ref: 'form'\n\t        },\n\t        this.formSwitch(inputForm, specimenForm)\n\t      );\n\t    }\n\t\n\t    /** *******************************************************************************\n\t     *                      ******     Helper methods     *******\n\t     *********************************************************************************/\n\t\n\t  }, {\n\t    key: 'validateForm',\n\t    value: function validateForm(formElement, value) {\n\t      var _this5 = this;\n\t\n\t      var formErrors = this.state.formErrors;\n\t\n\t      //validate barcode regex\n\t      if (formElement === \"barcode\" && value !== \"\") {\n\t        if (!/^hello/.test(this.state.formData.barcode)) {\n\t          formErrors.barcode = true;\n\t        } else {\n\t          formErrors.barcode = false;\n\t        }\n\t      }\n\t\n\t      //validate that quantity is a number and less than capacity\n\t      if (formElement === \"quantity\" && value !== \"\") {\n\t        if (isNaN(value) || value > this.props.capacities[this.state.currentContainerType]) {\n\t          formErrors.quantity = true;\n\t        } else {\n\t          formErrors.quantity = false;\n\t        }\n\t      }\n\t\n\t      //validate datatypes and regex of generated type attributes\n\t      var specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n\t      var specimenTypeFields = Object.keys(specimenTypeFieldsObject).map(function (attribute) {\n\t\n\t        var datatype = _this5.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n\t        if (datatype === \"number\") {\n\t          if (formElement === attribute) {\n\t            if (isNaN(value) && value !== \"\") {\n\t              formErrors[attribute] = true;\n\t            } else {\n\t              formErrors[attribute] = false;\n\t            }\n\t          }\n\t        }\n\t      });\n\t\n\t      this.setState({\n\t        formErrors: formErrors\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Handle form submission\n\t     * @param {object} e - Form submission event\n\t     */\n\t\n\t  }, {\n\t    key: 'handleSubmit',\n\t    value: function handleSubmit(e) {\n\t      e.preventDefault();\n\t\n\t      this.submitForm();\n\t    }\n\t\n\t    /*\n\t     * Uploads the file to the server\n\t     */\n\t\n\t  }, {\n\t    key: 'submitForm',\n\t    value: function submitForm() {\n\t      // Set form data and specimen the biobank file\n\t      var formData = this.state.formData;\n\t      var preparationForm = this.state.formData.preparationForm;\n\t      var specimenForm = this.state.formData.specimenForm;\n\t      formData['preparationForm'] = JSON.stringify(preparationForm);\n\t      formData['specimenForm'] = JSON.stringify(specimenForm);\n\t\n\t      console.log(formData.specimenForm);\n\t      console.log(formData.preparationForm);\n\t\n\t      var formObj = new FormData();\n\t      for (var key in formData) {\n\t        if (formData[key] !== \"\") {\n\t          formObj.append(key, formData[key]);\n\t        }\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: this.props.action,\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function () {\n\t          //this.props.refreshParent();\n\t          swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n\t          this.props.onSuccess();\n\t        }.bind(this),\n\t        error: function (err) {\n\t          console.error(err);\n\t          var msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n\t          this.setState({\n\t            errorMessage: msg\n\t          });\n\t          swal(msg, \"\", \"error\");\n\t        }.bind(this)\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Checks if the inputted file name is valid\n\t     *\n\t     * @param {string} requiredFileName - Required file name\n\t     * @param {string} fileName - Provided file name\n\t     * @return {boolean} - true if fileName starts with requiredFileName, false\n\t     *   otherwise\n\t     */\n\t    //  isValidFileName(requiredFileName, fileName) {\n\t    //    if (fileName === null || requiredFileName === null) {\n\t    //      return false;\n\t    //    }\n\t    //\n\t    //    return (fileName.indexOf(requiredFileName) === 0);\n\t    //  }\n\t\n\t    /**\n\t     * Validate the form\n\t     *\n\t     * @param {object} formRefs - Object containing references to React form elements\n\t     * @param {object} formData - Object containing form data inputed by user\n\t     * @return {boolean} - true if all required fields are filled, false otherwise\n\t     */\n\t\n\t  }, {\n\t    key: 'isValidForm',\n\t    value: function isValidForm(formRefs, formData) {\n\t      var isValidForm = true;\n\t\n\t      var requiredFields = {\n\t        pscid: null,\n\t        visitLabel: null\n\t      };\n\t\n\t      Object.keys(requiredFields).map(function (field) {\n\t        if (formData[field]) {\n\t          requiredFields[field] = formData[field];\n\t        } else if (formRefs[field]) {\n\t          formRefs[field].props.hasError = true;\n\t          isValidForm = false;\n\t        }\n\t      });\n\t      this.forceUpdate();\n\t\n\t      return isValidForm;\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      // This lets the modal window know that there is formData\n\t      // and will cause a warning to be thrown of the modal window\n\t      // is exited\n\t      this.props.onChange instanceof Function && this.props.onChange();\n\t\n\t      if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n\t        this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n\t      }\n\t\n\t      var formData = this.state.formData;\n\t      var barcodeList = this.state.barcodeList;\n\t\n\t      //TODO: there must be a better way to do this\n\t      if (isNaN(formElement)) {\n\t        formData[formElement] = value;\n\t      } else {\n\t        barcodeList[formElement] = value;\n\t      }\n\t\n\t      this.setState({\n\t        formData: formData,\n\t        barcodeList: barcodeList\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setPreparationFormData',\n\t    value: function setPreparationFormData(preparationFormData) {\n\t      var formData = this.state.formData;\n\t      formData.preparationForm = preparationFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }, {\n\t    key: 'setSpecimenFormData',\n\t    value: function setSpecimenFormData(specimenFormData) {\n\t      var formData = this.state.formData;\n\t      formData.specimenForm = specimenFormData;\n\t\n\t      this.setState({ formData: formData });\n\t    }\n\t  }]);\n\t\n\t  return PoolSpecimenForm;\n\t}(React.Component);\n\t\n\tPoolSpecimenForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  action: React.PropTypes.string.isRequired,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\texports.default = PoolSpecimenForm;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(7);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Form\n\t *\n\t * Acts a subform for BiobankCollectionForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenPreparationForm = function (_React$Component) {\n\t  _inherits(SpecimenPreparationForm, _React$Component);\n\t\n\t  function SpecimenPreparationForm() {\n\t    _classCallCheck(this, SpecimenPreparationForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenPreparationForm.__proto__ || Object.getPrototypeOf(SpecimenPreparationForm)).call(this));\n\t\n\t    _this.setPreparation = _this.setPreparation.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenPreparationForm, [{\n\t    key: 'setPreparation',\n\t    value: function setPreparation(name, value) {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation[name] = value;\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var preparation = this.props.specimen.preparation;\n\t      preparation.data = {};\n\t      this.props.setSpecimen('preparation', preparation);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.preparation.data;\n\t      data[name] = value;\n\t      this.setPreparation('data', data);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t\n\t      var submitButton = void 0;\n\t      if (this.props.data.specimen.preparation) {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Update' });\n\t      } else {\n\t        submitButton = React.createElement(ButtonElement, { label: 'Submit' });\n\t      }\n\t\n\t      var specimenProtocolFields = void 0;\n\t      if (this.props.specimen.preparation.protocolId) {\n\t        var specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\t\n\t        if (specimenProtocolFieldsObject) {\n\t          if (this.props.specimen.preparation.data) {\n\t            specimenProtocolFields = React.createElement(_customFields2.default, {\n\t              fields: specimenProtocolFieldsObject,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.preparation.data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenPreparation',\n\t          onSubmit: this.props.saveSpecimen,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'protocolId',\n\t          label: 'Protocol',\n\t          options: this.props.specimenProtocols,\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.protocolId\n\t        }),\n\t        specimenProtocolFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setPreparation,\n\t          required: true,\n\t          value: this.props.specimen.preparation.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setPreparation,\n\t          value: this.props.specimen.preparation.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenPreparationForm;\n\t}(React.Component);\n\t\n\tSpecimenPreparationForm.propTypes = {};\n\t\n\texports.default = SpecimenPreparationForm;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Collection Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to specimen a biobank file attached to a specific instrument\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainerForm = function (_React$Component) {\n\t  _inherits(BiobankContainerForm, _React$Component);\n\t\n\t  function BiobankContainerForm() {\n\t    _classCallCheck(this, BiobankContainerForm);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankContainerForm.__proto__ || Object.getPrototypeOf(BiobankContainerForm)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankContainerForm, [{\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Generates new Barcode Form everytime the addContainer button is pressed\n\t      var containerListArray = Object.keys(this.props.containerList);\n\t      var containers = [];\n\t      var i = 1;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        var _loop = function _loop() {\n\t          var key = _step.value;\n\t\n\t          containers.push(React.createElement(ContainerBarcodeForm, {\n\t            key: key,\n\t            containerKey: key,\n\t            id: i,\n\t            container: _this2.props.containerList[key].container,\n\t            errors: (_this2.props.errors[key] || {}).container,\n\t            collapsed: _this2.props.current.collapsed[key],\n\t            containerTypesNonPrimary: _this2.props.containerTypesNonPrimary,\n\t            containerBarcodesNonPrimary: _this2.props.containerBarcodesNonPrimary,\n\t            removeContainer: containerListArray.length !== 1 ? function () {\n\t              _this2.props.removeListItem(key);\n\t            } : null,\n\t            addContainer: i == containerListArray.length ? function () {\n\t              _this2.props.addListItem('container');\n\t            } : null,\n\t            multiplier: _this2.props.current.multiplier,\n\t            copyContainer: i == containerListArray.length && _this2.props.containerList[key] ? _this2.props.copyListItem : null,\n\t            setContainerList: _this2.props.setContainerList,\n\t            setCurrent: _this2.props.setCurrent,\n\t            toggleCollapse: _this2.props.toggleCollapse\n\t          }));\n\t\n\t          i++;\n\t        };\n\t\n\t        for (var _iterator = containerListArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          _loop();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: \"containerForm\",\n\t          onSubmit: this.props.saveContainerList,\n\t          ref: \"form\"\n\t        },\n\t        React.createElement(\"br\", null),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-11\" },\n\t            React.createElement(SelectElement, {\n\t              name: \"centerId\",\n\t              label: \"Site\",\n\t              options: this.props.centers,\n\t              onUserInput: this.props.setCurrent,\n\t              required: true,\n\t              value: this.props.current.centerId,\n\t              errorMessage: (this.props.errors.container || {}).centerId\n\t            })\n\t          )\n\t        ),\n\t        containers,\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"col-xs-3 col-xs-offset-9\" },\n\t          React.createElement(ButtonElement, { label: \"Submit\" })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainerForm;\n\t}(React.Component);\n\t\n\tBiobankContainerForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  barcode: React.PropTypes.string,\n\t  refreshTable: React.PropTypes.func\n\t};\n\t\n\t/**\n\t * Container Barcode Form\n\t *\n\t * Acts a subform for ContainerForm\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar ContainerBarcodeForm = function (_React$Component2) {\n\t  _inherits(ContainerBarcodeForm, _React$Component2);\n\t\n\t  function ContainerBarcodeForm() {\n\t    _classCallCheck(this, ContainerBarcodeForm);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, (ContainerBarcodeForm.__proto__ || Object.getPrototypeOf(ContainerBarcodeForm)).call(this));\n\t\n\t    _this3.setContainer = _this3.setContainer.bind(_this3);\n\t    _this3.copy = _this3.copy.bind(_this3);\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(ContainerBarcodeForm, [{\n\t    key: \"copy\",\n\t    value: function copy() {\n\t      this.props.copyContainer(this.props.containerKey);\n\t    }\n\t\n\t    //TODO: change form.js so this isn't necessary\n\t\n\t  }, {\n\t    key: \"setContainer\",\n\t    value: function setContainer(name, value) {\n\t      this.props.setContainerList(name, value, this.props.containerKey);\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this4 = this;\n\t\n\t      // HR TODO: All this CSS should eventually be moved\n\t      var addContainerButton = void 0;\n\t      var addContainerText = void 0;\n\t      var copyContainerButton = void 0;\n\t      var copyContainerText = void 0;\n\t      if (this.props.addContainer) {\n\t        addContainerButton = React.createElement(\n\t          \"span\",\n\t          { className: \"action\" },\n\t          React.createElement(\n\t            \"div\",\n\t            {\n\t              className: \"action-button add\",\n\t              onClick: this.props.addContainer\n\t            },\n\t            \"+\"\n\t          )\n\t        );\n\t\n\t        addContainerText = React.createElement(\n\t          \"span\",\n\t          { className: \"action-title\" },\n\t          \"New Entry\"\n\t        );\n\t      }\n\t\n\t      if (this.props.copyContainer) {\n\t        copyContainerButton = React.createElement(\n\t          \"span\",\n\t          { className: \"action\" },\n\t          React.createElement(\n\t            \"div\",\n\t            {\n\t              className: \"action-button add\",\n\t              onClick: this.copy\n\t            },\n\t            React.createElement(\"span\", { className: \"glyphicon glyphicon-duplicate\" })\n\t          )\n\t        );\n\t        copyContainerText = React.createElement(\n\t          \"span\",\n\t          { className: \"action-title\" },\n\t          React.createElement(\"input\", {\n\t            className: \"form-control input-sm\",\n\t            type: \"number\",\n\t            min: \"1\",\n\t            max: \"50\",\n\t            style: { width: 50, display: 'inline' },\n\t            onChange: function onChange(e) {\n\t              _this4.props.setCurrent('multiplier', e.target.value);\n\t            },\n\t            value: this.props.multiplier\n\t          }),\n\t          \"Copies\"\n\t        );\n\t      }\n\t\n\t      var removeContainerButton = void 0;\n\t      if (this.props.removeContainer) {\n\t        var glyphStyle = {\n\t          color: '#DDDDDD',\n\t          marginLeft: 10,\n\t          cursor: 'pointer',\n\t          fontSize: 15\n\t        };\n\t\n\t        removeContainerButton = React.createElement(\"span\", {\n\t          className: \"glyphicon glyphicon-remove\",\n\t          onClick: this.props.removeContainer,\n\t          style: glyphStyle\n\t        });\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: \"container\"\n\t        },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-11\" },\n\t            React.createElement(\n\t              \"div\",\n\t              null,\n\t              React.createElement(TextboxElement, {\n\t                name: \"barcode\",\n\t                label: 'Barcode ' + this.props.id,\n\t                onUserInput: this.setContainer,\n\t                ref: \"barcode\",\n\t                required: true,\n\t                value: this.props.container.barcode,\n\t                errorMessage: this.props.errors.barcode\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-1\", style: { paddingLeft: 0, marginTop: 10 } },\n\t            React.createElement(\"span\", {\n\t              className: this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up',\n\t              style: { cursor: 'pointer', fontSize: 15, position: 'relative', right: 40 },\n\t              \"data-toggle\": \"collapse\",\n\t              \"data-target\": '#item-' + this.props.containerKey,\n\t              onClick: function onClick() {\n\t                return _this4.props.toggleCollapse(_this4.props.containerKey);\n\t              }\n\t            }),\n\t            removeContainerButton\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\"div\", { className: \"col-xs-2\" }),\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-9\" },\n\t            React.createElement(\n\t              \"div\",\n\t              { id: 'item-' + this.props.containerKey, className: \"collapse\" },\n\t              React.createElement(SelectElement, {\n\t                name: \"typeId\",\n\t                label: \"Container Type\",\n\t                options: this.props.containerTypesNonPrimary,\n\t                onUserInput: this.setContainer,\n\t                required: true,\n\t                value: this.props.container.typeId,\n\t                errorMessage: this.props.errors.typeId\n\t              })\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-xs-11\" },\n\t            React.createElement(\"div\", { className: \"col-xs-3\" }),\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-xs-4 action\" },\n\t              addContainerButton,\n\t              addContainerText\n\t            ),\n\t            React.createElement(\n\t              \"div\",\n\t              { className: \"col-xs-4 action\" },\n\t              copyContainerButton,\n\t              copyContainerText\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerBarcodeForm;\n\t}(React.Component);\n\t\n\tContainerBarcodeForm.propTypes = {};\n\t\n\tContainerBarcodeForm.defaultProps = {\n\t  errors: {},\n\t  multiplier: 1\n\t};\n\t\n\texports.default = BiobankContainerForm;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/**\n\t * Allows to dynamically render vertical tabs corresponding to tab panes.\n\t */\n\t\n\tvar VerticalTabs = function (_React$Component2) {\n\t  _inherits(VerticalTabs, _React$Component2);\n\t\n\t  function VerticalTabs(props) {\n\t    _classCallCheck(this, VerticalTabs);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, (VerticalTabs.__proto__ || Object.getPrototypeOf(VerticalTabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this2.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this2.props.defaultTab) {\n\t      activeTab = _this2.props.defaultTab;\n\t    } else if (_this2.props.tabs.length > 0) {\n\t      activeTab = _this2.props.tabs[0].id;\n\t    }\n\t\n\t    _this2.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this2.handleClick = _this2.handleClick.bind(_this2);\n\t    _this2.getTabs = _this2.getTabs.bind(_this2);\n\t    _this2.getTabPanes = _this2.getTabPanes.bind(_this2);\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(VerticalTabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tabbable col-md-3 col-sm-3' },\n\t          React.createElement(\n\t            'ul',\n\t            { className: 'nav nav-pills nav-stacked', role: 'tablist', style: tabStyle },\n\t            tabs\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content col-md-9 col-sm-9' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return VerticalTabs;\n\t}(React.Component);\n\t\n\tVerticalTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tVerticalTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component3) {\n\t  _inherits(TabPane, _React$Component3);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.VerticalTabs = VerticalTabs;\n\texports.TabPane = TabPane;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(10);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _globals = __webpack_require__(16);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _collectionForm = __webpack_require__(6);\n\t\n\tvar _collectionForm2 = _interopRequireDefault(_collectionForm);\n\t\n\tvar _preparationForm = __webpack_require__(12);\n\t\n\tvar _preparationForm2 = _interopRequireDefault(_preparationForm);\n\t\n\tvar _analysisForm = __webpack_require__(21);\n\t\n\tvar _analysisForm2 = _interopRequireDefault(_analysisForm);\n\t\n\tvar _specimenForm = __webpack_require__(5);\n\t\n\tvar _specimenForm2 = _interopRequireDefault(_specimenForm);\n\t\n\tvar _lifeCycle = __webpack_require__(22);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _containerCheckout = __webpack_require__(23);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* exported RBiobankSpecimen */\n\t\n\t/**\n\t * Biobank Specimen\n\t *\n\t * Fetches data corresponding to a given Specimen from Loris backend and\n\t * displays a page allowing viewing of meta information of the specimen\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t */\n\tvar BiobankSpecimen = function (_React$Component) {\n\t  _inherits(BiobankSpecimen, _React$Component);\n\t\n\t  function BiobankSpecimen() {\n\t    _classCallCheck(this, BiobankSpecimen);\n\t\n\t    return _possibleConstructorReturn(this, (BiobankSpecimen.__proto__ || Object.getPrototypeOf(BiobankSpecimen)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BiobankSpecimen, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      //Map Options for Form Select Elements\n\t      var specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n\t      var containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t      var containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t      var candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n\t      var sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\t\n\t      var addAliquotForm = React.createElement(\n\t        'div',\n\t        {\n\t          className: 'action',\n\t          title: 'Make Aliquots'\n\t        },\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button add',\n\t            onClick: function onClick() {\n\t              _this2.props.edit('aliquotForm');\n\t            }\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            '+'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Modal2.default,\n\t          {\n\t            title: 'Add Aliquots',\n\t            closeModal: this.props.close,\n\t            show: this.props.editable.aliquotForm\n\t          },\n\t          React.createElement(_specimenForm2.default, {\n\t            data: this.props.data,\n\t            specimen: this.props.specimen,\n\t            setSpecimen: this.props.setSpecimen,\n\t            saveSpecimen: this.props.saveSpecimen,\n\t            candidates: candidates,\n\t            sessions: sessions,\n\t            specimenTypes: this.props.options.specimenTypes,\n\t            specimenUnits: specimenUnits,\n\t            specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t            specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t            attributeOptions: this.props.options.attributeOptions,\n\t            attributeDatatypes: this.props.options.attributeDatatypes,\n\t            containerTypesPrimary: containerTypesPrimary,\n\t            containersNonPrimary: this.props.options.containersNonPrimary,\n\t            containerDimensions: this.props.options.containerDimensions,\n\t            containerCoordinates: this.props.options.containerCoordinates,\n\t            containerStati: containerStati,\n\t            mapFormOptions: this.props.mapFormOptions,\n\t            loadFilters: this.props.loadFilters,\n\t            loadOptions: this.props.loadOptions,\n\t            close: this.props.close,\n\t            save: this.props.save\n\t          })\n\t        )\n\t      );\n\t\n\t      /** \n\t       * Collection Form\n\t       */\n\t\n\t      // Declare Variables\n\t      var collectionPanel = void 0;\n\t      var collectionPanelForm = void 0;\n\t      var cancelEditCollectionButton = void 0;\n\t\n\t      if (this.props.editable.collection) {\n\t        var _containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\t\n\t        collectionPanelForm = React.createElement(_collectionForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenTypeAttributes: this.props.options.specimenTypeAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          containerTypesPrimary: _containerTypesPrimary,\n\t          specimenTypeUnits: this.props.options.specimenTypeUnits,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditCollectionButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      } else {\n\t        var specimenTypeAttributes = void 0;\n\t        //loops through data object to produce static elements\n\t        if (this.props.data.specimen.collection.data) {\n\t          var collectionData = this.props.data.specimen.collection.data;\n\t          specimenTypeAttributes = Object.keys(collectionData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenTypeAttributes[_this2.props.data.specimen.typeId][key].name,\n\t              text: collectionData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        collectionPanelForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Quantity',\n\t            text: this.props.data.specimen.collection.quantity + ' ' + this.props.options.specimenUnits[this.props.data.specimen.collection.unitId].unit\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.collection.centerId]\n\t          }),\n\t          specimenTypeAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.collection.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.collection.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.collection.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      collectionPanel = React.createElement(\n\t        'div',\n\t        { className: 'panel specimen-panel panel-default' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-heading' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node collection' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'title' },\n\t            'Collection'\n\t          ),\n\t          React.createElement('span', {\n\t            className: this.props.editable.collection ? null : 'glyphicon glyphicon-pencil',\n\t            onClick: this.props.editable.collection ? null : function () {\n\t              _this2.props.edit('collection');\n\t            }\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'panel-body' },\n\t          collectionPanelForm,\n\t          cancelEditCollectionButton\n\t        )\n\t      );\n\t\n\t      /*\n\t       * Preparation Form\n\t       */\n\t      // Preparation Panel variable declaration\n\t      var preparationPanel = void 0;\n\t      var preparationForm = void 0;\n\t      var cancelEditPreparationButton = void 0;\n\t      var specimenProtocols = {};\n\t      var specimenProtocolAttributes = {};\n\t\n\t      //Remap specimen Protocols based on the specimen Type\n\t      for (var id in this.props.options.specimenProtocols) {\n\t        if (this.props.options.specimenProtocols[id].typeId == this.props.data.specimen.typeId) {\n\t          specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n\t          specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.preparation) {\n\t        preparationForm = React.createElement(_preparationForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          specimenProtocols: specimenProtocols,\n\t          specimenProtocolAttributes: specimenProtocolAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditPreparationButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      // If Preparation does Exist and the form is not in an edit state\n\t      if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        if (this.props.data.specimen.preparation.data) {\n\t          var preparationData = this.props.data.specimen.preparation.data;\n\t          specimenProtocolAttributes = Object.keys(preparationData).map(function (key) {\n\t            return React.createElement(StaticElement, {\n\t              label: _this2.props.options.specimenProtocolAttributes[_this2.props.data.specimen.preparation.protocolId][key].name,\n\t              text: preparationData[key]\n\t            });\n\t          });\n\t        }\n\t\n\t        preparationForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Protocol',\n\t            text: this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.preparation.centerId]\n\t          }),\n\t          specimenProtocolAttributes,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.preparation.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.preparation.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.preparation.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      // If preparation does not exist and if the form is not in an edit state\n\t      // and a preparation protocol exists for this specimen type\n\t      if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel specimen-panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('preparation');_this2.props.addPreparation();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD PREPARATION'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n\t        preparationPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel specimen-panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'P'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Preparation'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.preparation ? null : function () {\n\t                _this2.props.edit('preparation');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            preparationForm,\n\t            cancelEditPreparationButton\n\t          )\n\t        );\n\t      }\n\t\n\t      /**\n\t       * Analysis Form\n\t       */\n\t      var analysisPanel = void 0;\n\t      var analysisForm = void 0;\n\t      var cancelEditAnalysisButton = void 0;\n\t      var specimenMethods = {};\n\t      var specimenMethodAttributes = {};\n\t      var specimenMethodAttributeFields = void 0;\n\t\n\t      for (var _id in this.props.options.specimenMethods) {\n\t        if (this.props.options.specimenMethods[_id].typeId == this.props.data.specimen.typeId) {\n\t          specimenMethods[_id] = this.props.options.specimenMethods[_id].method;\n\t          specimenMethodAttributes[_id] = this.props.options.specimenMethodAttributes[_id];\n\t        }\n\t      }\n\t\n\t      if (this.props.editable.analysis) {\n\t        analysisForm = React.createElement(_analysisForm2.default, {\n\t          specimen: this.props.specimen,\n\t          data: this.props.data,\n\t          current: this.props.current,\n\t          specimenMethods: specimenMethods,\n\t          specimenMethodAttributes: specimenMethodAttributes,\n\t          attributeDatatypes: this.props.options.attributeDatatypes,\n\t          attributeOptions: this.props.options.attributeOptions,\n\t          setSpecimen: this.props.setSpecimen,\n\t          setCurrent: this.props.setCurrent,\n\t          saveSpecimen: this.props.saveSpecimen\n\t        });\n\t\n\t        cancelEditAnalysisButton = React.createElement(\n\t          'a',\n\t          {\n\t            className: 'pull-right',\n\t            style: { cursor: 'pointer' },\n\t            onClick: this.props.close\n\t          },\n\t          'Cancel'\n\t        );\n\t      }\n\t\n\t      if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        //TODO: Make the below a separate component\n\t        if (this.props.data.specimen.analysis.data) {\n\t          var analysisData = this.props.data.specimen.analysis.data;\n\t\n\t          specimenMethodAttributeFields = Object.keys(analysisData).map(function (key) {\n\t            if (_this2.props.options.attributeDatatypes[_this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].datatypeId].datatype === 'file') {\n\t              return React.createElement(LinkElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key],\n\t                href: loris.BaseURL + '/biobank/ajax/requestData.php?action=downloadFile&file=' + analysisData[key],\n\t                target: '_blank',\n\t                download: analysisData[key]\n\t              });\n\t            } else {\n\t              return React.createElement(StaticElement, {\n\t                label: _this2.props.options.specimenMethodAttributes[_this2.props.data.specimen.analysis.methodId][key].name,\n\t                text: analysisData[key]\n\t              });\n\t            }\n\t          });\n\t        }\n\t\n\t        analysisForm = React.createElement(\n\t          FormElement,\n\t          null,\n\t          React.createElement(StaticElement, {\n\t            label: 'Method',\n\t            text: this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Location',\n\t            text: this.props.options.centers[this.props.data.specimen.analysis.centerId]\n\t          }),\n\t          specimenMethodAttributeFields,\n\t          React.createElement(StaticElement, {\n\t            label: 'Date',\n\t            text: this.props.data.specimen.analysis.date\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Time',\n\t            text: this.props.data.specimen.analysis.time\n\t          }),\n\t          React.createElement(StaticElement, {\n\t            label: 'Comments',\n\t            text: this.props.data.specimen.analysis.comments\n\t          })\n\t        );\n\t      }\n\t\n\t      if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'panel specimen-panel inactive'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'add-process',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('analysis');_this2.props.addAnalysis();\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            'ADD ANALYSIS'\n\t          )\n\t        );\n\t      } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n\t        analysisPanel = React.createElement(\n\t          'div',\n\t          { className: 'panel specimen-panel panel-default' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-heading' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'lifecycle-node preparation' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'letter' },\n\t                'A'\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              'Analysis'\n\t            ),\n\t            React.createElement('span', {\n\t              className: this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil',\n\t              onClick: this.props.editable.analysis ? null : function () {\n\t                _this2.props.edit('analysis');\n\t              }\n\t            })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'panel-body' },\n\t            analysisForm,\n\t            cancelEditAnalysisButton\n\t          )\n\t        );\n\t      }\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        specimen: this.props.specimen,\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        errors: this.props.errors,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        setSpecimen: this.props.setSpecimen,\n\t        saveSpecimen: this.props.saveSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      //TODO: this can maybe become its own component...?\n\t      var returnToFilter = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: this.props.loadFilters\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-title' },\n\t          'Return to Filter'\n\t        )\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'specimen-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'specimen-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'specimen-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            addAliquotForm,\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.data.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          ),\n\t          React.createElement(_lifeCycle2.default, {\n\t            specimen: this.props.data.specimen,\n\t            centers: this.props.options.centers\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'processing' },\n\t            collectionPanel,\n\t            preparationPanel,\n\t            analysisPanel\n\t          )\n\t        ),\n\t        returnToFilter\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankSpecimen;\n\t}(React.Component);\n\t\n\tBiobankSpecimen.propTypes = {\n\t  specimenPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = BiobankSpecimen;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Modal = __webpack_require__(10);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _quantityField = __webpack_require__(17);\n\t\n\tvar _quantityField2 = _interopRequireDefault(_quantityField);\n\t\n\tvar _temperatureField = __webpack_require__(18);\n\t\n\tvar _temperatureField2 = _interopRequireDefault(_temperatureField);\n\t\n\tvar _statusField = __webpack_require__(19);\n\t\n\tvar _statusField2 = _interopRequireDefault(_statusField);\n\t\n\tvar _centerField = __webpack_require__(20);\n\t\n\tvar _centerField2 = _interopRequireDefault(_centerField);\n\t\n\tvar _containerParentForm = __webpack_require__(8);\n\t\n\tvar _containerParentForm2 = _interopRequireDefault(_containerParentForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Globals Component\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar Globals = function (_React$Component) {\n\t  _inherits(Globals, _React$Component);\n\t\n\t  function Globals() {\n\t    _classCallCheck(this, Globals);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Globals.__proto__ || Object.getPrototypeOf(Globals)).call(this));\n\t\n\t    _this.increaseCycle = _this.increaseCycle.bind(_this);\n\t    _this.decreaseCycle = _this.decreaseCycle.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Globals, [{\n\t    key: 'increaseCycle',\n\t    value: function increaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle++;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'decreaseCycle',\n\t    value: function decreaseCycle() {\n\t      var cycle = this.props.specimen.fTCycle;\n\t      cycle--;\n\t      this.props.setSpecimen('fTCycle', cycle);\n\t      this.props.saveSpecimen();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var specimenTypeField = void 0;\n\t      if (this.props.data.specimen) {\n\t        specimenTypeField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Specimen Type',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.specimenTypes[this.props.data.specimen.typeId].type\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var containerTypeField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Container Type',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.containerTypes[this.props.data.container.typeId].label\n\t          )\n\t        )\n\t      );\n\t\n\t      var quantityField = void 0;\n\t      if (this.props.data.specimen) {\n\t        if (!this.props.editable.quantity) {\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                this.props.data.specimen.quantity,\n\t                ' ' + this.props.options.specimenUnits[this.props.data.specimen.unitId].unit\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              {\n\t                className: 'action',\n\t                title: 'Update Quantity'\n\t              },\n\t              React.createElement(\n\t                'div',\n\t                {\n\t                  className: 'action-button update',\n\t                  onClick: function onClick() {\n\t                    return _this2.props.edit('quantity');\n\t                  }\n\t                },\n\t                React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t              )\n\t            )\n\t          );\n\t        } else {\n\t          var units = this.props.mapFormOptions(this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit');\n\t\n\t          quantityField = React.createElement(\n\t            'div',\n\t            { className: 'item' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'field' },\n\t              'Quantity',\n\t              React.createElement(_quantityField2.default, {\n\t                specimen: this.props.specimen,\n\t                errors: this.props.errors.specimen,\n\t                units: units,\n\t                close: this.props.close,\n\t                setSpecimen: this.props.setSpecimen,\n\t                saveSpecimen: this.props.saveSpecimen\n\t              })\n\t            )\n\t          );\n\t        }\n\t      }\n\t\n\t      var fTCycleField = void 0;\n\t      if (this.props.data.specimen && this.props.options.specimenTypes[this.props.data.specimen.typeId].freezeThaw == 1) {\n\t        var decreaseCycle = void 0;\n\t        if (this.props.data.specimen.fTCycle > 0) {\n\t          decreaseCycle = React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Remove Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.decreaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-minus' })\n\t            )\n\t          );\n\t        }\n\t        fTCycleField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Freeze-Thaw Cycle',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.specimen.fTCycle\n\t            )\n\t          ),\n\t          decreaseCycle,\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Add Cycle'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: this.increaseCycle\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-plus' })\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var temperatureField = void 0;\n\t      if (!this.props.editable.temperature) {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.data.container.temperature + '°C'\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Temperature'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  _this2.props.edit('temperature');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        temperatureField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Temperature',\n\t            React.createElement(_temperatureField2.default, {\n\t              container: this.props.container,\n\t              errors: this.props.errors.container,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var statusField = void 0;\n\t      if (!this.props.editable.status) {\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.containerStati[this.props.data.container.statusId].status\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('status');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        var stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n\t        statusField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Status',\n\t            React.createElement(_statusField2.default, {\n\t              container: this.props.container,\n\t              errors: this.props.errors.container,\n\t              stati: stati,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var centerField = void 0;\n\t      if (!this.props.editable.center) {\n\t        centerField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              this.props.options.centers[this.props.data.container.centerId]\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action',\n\t              title: 'Update Status'\n\t            },\n\t            React.createElement(\n\t              'span',\n\t              {\n\t                className: 'action-button update',\n\t                onClick: function onClick() {\n\t                  return _this2.props.edit('center');\n\t                }\n\t              },\n\t              React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t            )\n\t          )\n\t        );\n\t      } else {\n\t        centerField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Location',\n\t            React.createElement(_centerField2.default, {\n\t              container: this.props.container,\n\t              errors: this.props.errors.container,\n\t              centers: this.props.options.centers,\n\t              close: this.props.close,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        );\n\t      }\n\t\n\t      var originField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Origin',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.options.centers[this.props.data.container.originId]\n\t          )\n\t        )\n\t      );\n\t\n\t      var creationDate = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Creation Date',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            this.props.data.container.dateTimeCreate\n\t          )\n\t        )\n\t      );\n\t\n\t      var parentSpecimenField = void 0;\n\t      if ((this.props.data.specimen || {}).parentSpecimenId) {\n\t        var barcode = this.props.data.parentSpecimenContainer.barcode;\n\t        var parentSpecimenFieldValue = React.createElement(\n\t          'a',\n\t          { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t              return _this2.props.loadSpecimen(barcode);\n\t            } },\n\t          barcode\n\t        );\n\t\n\t        parentSpecimenField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Parent Specimen',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              parentSpecimenFieldValue || 'None'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      //checks if parent container exists and returns static element with href      \n\t      var parentContainerBarcodeValue = void 0;\n\t      if (this.props.data.container.parentContainerId) {\n\t        var _barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode;\n\t        parentContainerBarcodeValue = React.createElement(\n\t          'div',\n\t          null,\n\t          React.createElement(\n\t            'a',\n\t            { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t                return _this2.props.loadContainer(_barcode);\n\t              } },\n\t            _barcode\n\t          )\n\t        );\n\t      }\n\t\n\t      var parentContainerField = React.createElement(\n\t        'div',\n\t        { className: 'item' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'field' },\n\t          'Parent Container',\n\t          React.createElement(\n\t            'div',\n\t            { className: 'value' },\n\t            parentContainerBarcodeValue || 'None'\n\t          ),\n\t          parentContainerBarcodeValue && this.props.data.container.coordinate ? 'Coordinate ' + this.props.data.container.coordinate : null\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action',\n\t            title: 'Move Container'\n\t          },\n\t          React.createElement(\n\t            'span',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerParentForm');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-right' })\n\t          ),\n\t          React.createElement(\n\t            _Modal2.default,\n\t            {\n\t              title: 'Update Parent Container',\n\t              closeModal: this.props.close,\n\t              show: this.props.editable.containerParentForm\n\t            },\n\t            React.createElement(_containerParentForm2.default, {\n\t              data: this.props.data,\n\t              container: this.props.container,\n\t              containersNonPrimary: this.props.options.containersNonPrimary,\n\t              containerDimensions: this.props.options.containerDimensions,\n\t              containerCoordinates: this.props.options.containerCoordinates,\n\t              containerTypes: this.props.options.containerTypes,\n\t              containerStati: this.props.options.containerStati,\n\t              mapFormOptions: this.props.mapFormOptions,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        )\n\t      );\n\t\n\t      var candidateSessionField = void 0;\n\t      if (this.props.data.specimen) {\n\t        candidateSessionField = React.createElement(\n\t          'div',\n\t          { className: 'item' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'PSCID',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/' + this.props.data.specimen.candidateId },\n\t                this.props.data.candidate.PSCID\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'field' },\n\t            'Visit Label',\n\t            React.createElement(\n\t              'div',\n\t              { className: 'value' },\n\t              React.createElement(\n\t                'a',\n\t                { href: loris.BaseURL + '/instrument_list/?candID=' + this.props.data.specimen.candidateId + '&sessionID=' + this.props.data.specimen.sessionId },\n\t                this.props.data.session.Visit_label\n\t              )\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      var fieldList = React.createElement(\n\t        'div',\n\t        { className: 'list' },\n\t        specimenTypeField,\n\t        containerTypeField,\n\t        quantityField,\n\t        fTCycleField,\n\t        temperatureField,\n\t        statusField,\n\t        centerField,\n\t        originField,\n\t        parentSpecimenField,\n\t        parentContainerField,\n\t        candidateSessionField\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'globals' },\n\t        fieldList\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Globals;\n\t}(React.Component);\n\t\n\tGlobals.propTypes = {};\n\t\n\texports.default = Globals;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Specimen Quantity Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar QuantityField = function (_React$Component) {\n\t  _inherits(QuantityField, _React$Component);\n\t\n\t  function QuantityField() {\n\t    _classCallCheck(this, QuantityField);\n\t\n\t    return _possibleConstructorReturn(this, (QuantityField.__proto__ || Object.getPrototypeOf(QuantityField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuantityField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'quantity',\n\t            inputClass: 'col-xs-11',\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.quantity,\n\t            errorMessage: this.props.errors.quantity\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(SelectElement, {\n\t            name: 'unitId',\n\t            inputClass: 'col-xs-11',\n\t            options: this.props.units,\n\t            onUserInput: this.props.setSpecimen,\n\t            value: this.props.specimen.unitId,\n\t            errorMessage: this.props.errors.unitId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveSpecimen,\n\t            columnSize: 'col-xs-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return QuantityField;\n\t}(React.Component);\n\t\n\tQuantityField.propTypes = {\n\t  setSpecimen: React.PropTypes.func,\n\t  close: React.PropTypes.func,\n\t  specimen: React.PropTypes.object,\n\t  saveSpecimen: React.PropTypes.func,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = QuantityField;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Temperature Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar TemperatureField = function (_React$Component) {\n\t  _inherits(TemperatureField, _React$Component);\n\t\n\t  function TemperatureField() {\n\t    _classCallCheck(this, TemperatureField);\n\t\n\t    return _possibleConstructorReturn(this, (TemperatureField.__proto__ || Object.getPrototypeOf(TemperatureField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TemperatureField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(TextboxElement, {\n\t            name: 'temperature',\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.temperature,\n\t            errorMessage: this.props.errors.temperature\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TemperatureField;\n\t}(React.Component);\n\t\n\tTemperatureField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = TemperatureField;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Status Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar StatusField = function (_React$Component) {\n\t  _inherits(StatusField, _React$Component);\n\t\n\t  function StatusField() {\n\t    _classCallCheck(this, StatusField);\n\t\n\t    return _possibleConstructorReturn(this, (StatusField.__proto__ || Object.getPrototypeOf(StatusField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(StatusField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(SelectElement, {\n\t            name: 'statusId',\n\t            options: this.props.stati,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.statusId,\n\t            errorMessage: this.props.errors.statusId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return StatusField;\n\t}(React.Component);\n\t\n\tStatusField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func,\n\t  stati: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = StatusField;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Center Field\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar CenterField = function (_React$Component) {\n\t  _inherits(CenterField, _React$Component);\n\t\n\t  function CenterField() {\n\t    _classCallCheck(this, CenterField);\n\t\n\t    return _possibleConstructorReturn(this, (CenterField.__proto__ || Object.getPrototypeOf(CenterField)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(CenterField, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'inline-field' },\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '1 0 25%', minWidth: '90px' } },\n\t          React.createElement(SelectElement, {\n\t            name: 'centerId',\n\t            options: this.props.centers,\n\t            inputClass: 'col-lg-11',\n\t            onUserInput: this.props.setContainer,\n\t            value: this.props.container.centerId,\n\t            errorMessage: this.props.errors.centerId\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(ButtonElement, {\n\t            label: 'Update',\n\t            onUserInput: this.props.saveContainer,\n\t            columnSize: 'col-lg-11'\n\t          })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { flex: '0 1 15%', margin: '0 1%' } },\n\t          React.createElement(\n\t            'a',\n\t            { onClick: this.props.close, style: { cursor: 'pointer' } },\n\t            'Cancel'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CenterField;\n\t}(React.Component);\n\t\n\tCenterField.propTypes = {\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  close: React.PropTypes.func.isRequired,\n\t  centerIds: React.PropTypes.object.isRequired,\n\t  container: React.PropTypes.object.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired,\n\t  className: React.PropTypes.string\n\t};\n\t\n\texports.default = CenterField;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _customFields = __webpack_require__(7);\n\t\n\tvar _customFields2 = _interopRequireDefault(_customFields);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Analysis Form\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar SpecimenAnalysisForm = function (_React$Component) {\n\t  _inherits(SpecimenAnalysisForm, _React$Component);\n\t\n\t  function SpecimenAnalysisForm() {\n\t    _classCallCheck(this, SpecimenAnalysisForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (SpecimenAnalysisForm.__proto__ || Object.getPrototypeOf(SpecimenAnalysisForm)).call(this));\n\t\n\t    _this.setAnalysis = _this.setAnalysis.bind(_this);\n\t    _this.addData = _this.addData.bind(_this);\n\t    _this.setData = _this.setData.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(SpecimenAnalysisForm, [{\n\t    key: 'setAnalysis',\n\t    value: function setAnalysis(name, value) {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis[name] = value;\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'addData',\n\t    value: function addData() {\n\t      var analysis = this.props.specimen.analysis;\n\t      analysis.data = {};\n\t      this.props.setSpecimen('analysis', analysis);\n\t    }\n\t  }, {\n\t    key: 'setData',\n\t    value: function setData(name, value) {\n\t      var data = this.props.specimen.analysis.data;\n\t      if (value instanceof File) {\n\t        data[name] = value.name;\n\t        this.props.setCurrent(name, value);\n\t      } else {\n\t        data[name] = value;\n\t        this.setAnalysis('data', data);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var submitButton = void 0;\n\t      submitButton = this.props.data.specimen.analysis ? React.createElement(ButtonElement, { label: 'Update' }) : React.createElement(ButtonElement, { label: 'Submit' });\n\t\n\t      var specimenMethodFields = void 0;\n\t      if (this.props.specimen.analysis.methodId) {\n\t        var specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n\t        if (specimenMethodFieldsObject) {\n\t          if (this.props.specimen.analysis.data) {\n\t            specimenMethodFields = React.createElement(_customFields2.default, {\n\t              fields: specimenMethodFieldsObject,\n\t              current: this.props.current,\n\t              attributeDatatypes: this.props.attributeDatatypes,\n\t              attributeOptions: this.props.attributeOptions,\n\t              object: this.props.specimen.analysis.data,\n\t              data: (((this.props.data || {}).specimen || {}).analysis || {}).data,\n\t              setData: this.setData\n\t            });\n\t          } else {\n\t            this.addData();\n\t          }\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        FormElement,\n\t        {\n\t          name: 'specimenAnalysis',\n\t          onSubmit: this.props.saveSpecimen,\n\t          fileUpload: true,\n\t          ref: 'form'\n\t        },\n\t        React.createElement(SelectElement, {\n\t          name: 'methodId',\n\t          label: 'Method',\n\t          options: this.props.specimenMethods,\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.methodId\n\t        }),\n\t        specimenMethodFields,\n\t        React.createElement(DateElement, {\n\t          name: 'date',\n\t          label: 'Date',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.date\n\t        }),\n\t        React.createElement(TimeElement, {\n\t          name: 'time',\n\t          label: 'Time',\n\t          onUserInput: this.setAnalysis,\n\t          required: true,\n\t          value: this.props.specimen.analysis.time\n\t        }),\n\t        React.createElement(TextareaElement, {\n\t          name: 'comments',\n\t          label: 'Comments',\n\t          onUserInput: this.setAnalysis,\n\t          value: this.props.specimen.analysis.comments\n\t        }),\n\t        submitButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return SpecimenAnalysisForm;\n\t}(React.Component);\n\t\n\tSpecimenAnalysisForm.propTypes = {};\n\t\n\texports.default = SpecimenAnalysisForm;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * LifeCycle\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\t//TODO: revise this component once Shipments are enabled.\n\tvar LifeCycle = function (_React$Component) {\n\t  _inherits(LifeCycle, _React$Component);\n\t\n\t  function LifeCycle() {\n\t    _classCallCheck(this, LifeCycle);\n\t\n\t    return _possibleConstructorReturn(this, (LifeCycle.__proto__ || Object.getPrototypeOf(LifeCycle)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(LifeCycle, [{\n\t    key: 'mouseOver',\n\t    value: function mouseOver(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeave',\n\t    value: function mouseLeave(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.collection').css({\n\t        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseOverPreparation',\n\t    value: function mouseOverPreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({\n\t        'border': '2px solid #093782',\n\t        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'mouseLeavePreparation',\n\t    value: function mouseLeavePreparation(e) {\n\t      //this isn't a very 'react' way of doing things, so consider revision\n\t      $('.preparation').css({ 'border': '2px solid #A6D3F5', 'box-shadow': 'none' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      // Create Collection Node\n\t      var collectionNode = void 0;\n\t      if ((this.props.specimen || {}).collection || this.props.container) {\n\t        collectionNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: function onMouseEnter(e) {\n\t              return _this2.mouseOver(e);\n\t            },\n\t            onMouseLeave: function onMouseLeave(e) {\n\t              return _this2.mouseLeave(e);\n\t            },\n\t            className: 'lifecycle-node collection'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'C'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Preparation Node\n\t      var preparationNode = void 0;\n\t      if ((this.props.specimen || {}).preparation) {\n\t        preparationNode = React.createElement(\n\t          'div',\n\t          {\n\t            onMouseEnter: this.mouseOverPreparation,\n\t            onMouseLeave: this.mouseLeavePreparation,\n\t            className: 'lifecycle-node preparation'\n\t          },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'letter' },\n\t            'P'\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Analysis Node\n\t      var analysisNode = void 0;\n\t      if ((this.props.specimen || {}).analysis) {\n\t        analysisNode = React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-node-container' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'lifecycle-node' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'letter' },\n\t              'A'\n\t            )\n\t          )\n\t        );\n\t      }\n\t\n\t      // Create Lines\n\t      var line = void 0;\n\t      var nodes = 0;\n\t      for (var i in this.props.specimen) {\n\t        if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n\t          nodes++;\n\t        }\n\t      }\n\t      var lineWidth = nodes > 1 ? 60 / (nodes - 1) : 0;\n\t      var lineStyle = { width: lineWidth + '%' };\n\t      line = React.createElement('div', { className: 'lifecycle-line', style: lineStyle });\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'lifecycle' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'lifecycle-graphic' },\n\t          collectionNode,\n\t          preparationNode ? line : null,\n\t          preparationNode,\n\t          analysisNode ? line : null,\n\t          analysisNode\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LifeCycle;\n\t}(React.Component);\n\t\n\tLifeCycle.propTypes = {};\n\t\n\texports.default = LifeCycle;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container Checkout\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\t\n\tvar ContainerCheckout = function (_React$Component) {\n\t  _inherits(ContainerCheckout, _React$Component);\n\t\n\t  function ContainerCheckout() {\n\t    _classCallCheck(this, ContainerCheckout);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ContainerCheckout.__proto__ || Object.getPrototypeOf(ContainerCheckout)).call(this));\n\t\n\t    _this.checkoutContainer = _this.checkoutContainer.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ContainerCheckout, [{\n\t    key: 'checkoutContainer',\n\t    value: function checkoutContainer() {\n\t      this.props.setContainer('parentContainerId', null);\n\t      this.props.setContainer('coordinate', null);\n\t      this.props.saveContainer();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var checkoutButton = void 0;\n\t      if (this.props.container.parentContainerId) {\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          {\n\t            className: 'action-button update',\n\t            title: 'Checkout Container',\n\t            onClick: this.checkoutContainer\n\t          },\n\t          React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        checkoutButton\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ContainerCheckout;\n\t}(React.Component);\n\t\n\tContainerCheckout.propTypes = {\n\t  container: React.PropTypes.object.isRequired,\n\t  setContainer: React.PropTypes.func.isRequired,\n\t  saveContainer: React.PropTypes.func.isRequired\n\t};\n\t\n\texports.default = ContainerCheckout;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Loader = __webpack_require__(1);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tvar _globals = __webpack_require__(16);\n\t\n\tvar _globals2 = _interopRequireDefault(_globals);\n\t\n\tvar _lifeCycle = __webpack_require__(22);\n\t\n\tvar _lifeCycle2 = _interopRequireDefault(_lifeCycle);\n\t\n\tvar _barcodePath = __webpack_require__(25);\n\t\n\tvar _barcodePath2 = _interopRequireDefault(_barcodePath);\n\t\n\tvar _containerDisplay = __webpack_require__(9);\n\t\n\tvar _containerDisplay2 = _interopRequireDefault(_containerDisplay);\n\t\n\tvar _containerCheckout = __webpack_require__(23);\n\t\n\tvar _containerCheckout2 = _interopRequireDefault(_containerCheckout);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Biobank Container\n\t *\n\t * Fetches data corresponding to a given Container from Loris backend and\n\t * displays a page allowing viewing of meta information of the container\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar BiobankContainer = function (_React$Component) {\n\t  _inherits(BiobankContainer, _React$Component);\n\t\n\t  function BiobankContainer() {\n\t    _classCallCheck(this, BiobankContainer);\n\t\n\t    var _this = _possibleConstructorReturn(this, (BiobankContainer.__proto__ || Object.getPrototypeOf(BiobankContainer)).call(this));\n\t\n\t    _this.drag = _this.drag.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BiobankContainer, [{\n\t    key: 'drag',\n\t    value: function drag(e) {\n\t      var container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n\t      e.dataTransfer.setData(\"text/plain\", container);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var globals = React.createElement(_globals2.default, {\n\t        container: this.props.container,\n\t        data: this.props.data,\n\t        options: this.props.options,\n\t        errors: this.props.errors,\n\t        editable: this.props.editable,\n\t        edit: this.props.edit,\n\t        close: this.props.close,\n\t        mapFormOptions: this.props.mapFormOptions,\n\t        loadSpecimen: this.props.loadSpecimen,\n\t        loadContainer: this.props.loadContainer,\n\t        setContainer: this.props.setContainer,\n\t        saveContainer: this.props.saveContainer\n\t      });\n\t\n\t      var barcodePath = React.createElement(_barcodePath2.default, {\n\t        container: this.props.data.container,\n\t        parentContainers: this.props.data.parentContainers,\n\t        loadContainer: this.props.loadContainer\n\t      });\n\t\n\t      var checkoutButton = void 0;\n\t      var display = void 0;\n\t      if (this.props.data.container.dimensionId) {\n\t        //TODO: the styling here needs to be redone.\n\t\n\t        checkoutButton = React.createElement(\n\t          'div',\n\t          { style: { marginLeft: 'auto', height: '10%', marginRight: '10%' } },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: !this.props.editable.containerCheckout && !this.props.editable.barcode ? 'action-button update open' : 'action-button update closed',\n\t              title: 'Checkout Child Containers',\n\t              onClick: function onClick() {\n\t                _this2.props.edit('containerCheckout');\n\t              }\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-share' })\n\t          )\n\t        );\n\t\n\t        var barcodes = this.props.mapFormOptions(this.props.options.containers, 'barcode');\n\t        //delete values that are parents of the container\n\t        if (this.props.data.parentContainers) {\n\t          for (var key in this.props.data.parentContainers) {\n\t            delete barcodes[this.props.data.parentContainers[key].id];\n\t          }\n\t        }\n\t        delete barcodes[this.props.data.container.id];\n\t\n\t        display = React.createElement(_containerDisplay2.default, {\n\t          barcodes: barcodes,\n\t          container: this.props.container,\n\t          current: this.props.current,\n\t          containers: this.props.options.containers,\n\t          children: this.props.data.childContainers,\n\t          types: this.props.options.containerTypes,\n\t          dimensions: this.props.options.containerDimensions[this.props.data.container.dimensionId],\n\t          coordinates: this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null,\n\t          containerTypes: this.props.options.containerTypes,\n\t          containerStati: this.props.options.containerStati,\n\t          editable: this.props.editable,\n\t          edit: this.props.edit,\n\t          close: this.props.close,\n\t          setCurrent: this.props.setCurrent,\n\t          setCheckoutList: this.props.setCheckoutList,\n\t          mapFormOptions: this.props.mapFormOptions,\n\t          loadSpecimen: this.props.loadSpecimen,\n\t          loadContainer: this.props.loadContainer,\n\t          saveChildContainer: this.props.saveChildContainer\n\t        });\n\t      }\n\t\n\t      var listAssigned = [];\n\t      var coordinateList = [];\n\t      var listUnassigned = [];\n\t      if (this.props.data.childContainers) {\n\t        (function () {\n\t          var children = _this2.props.data.childContainers;\n\t\n\t          var _loop = function _loop(child) {\n\t            var load = void 0;\n\t            if (_this2.props.options.containerTypes[children[child].typeId].primary) {\n\t              load = _this2.props.loadSpecimen;\n\t            } else {\n\t              load = _this2.props.loadContainer;\n\t            }\n\t\n\t            if (children[child].coordinate) {\n\t              listAssigned.push(React.createElement(\n\t                'div',\n\t                null,\n\t                React.createElement(\n\t                  'a',\n\t                  { onClick: function onClick() {\n\t                      return load(children[child].barcode);\n\t                    }, style: { cursor: 'pointer' } },\n\t                  children[child].barcode\n\t                )\n\t              ));\n\t              coordinateList.push(React.createElement(\n\t                'div',\n\t                null,\n\t                'at ',\n\t                children[child].coordinate\n\t              ));\n\t            } else {\n\t              listUnassigned.push(React.createElement(\n\t                'a',\n\t                {\n\t                  onClick: function onClick() {\n\t                    return load(children[child].barcode);\n\t                  },\n\t                  style: { cursor: 'pointer' },\n\t                  id: children[child].id,\n\t                  draggable: true,\n\t                  onDragStart: _this2.drag\n\t                },\n\t                children[child].barcode\n\t              ));\n\t            }\n\t          };\n\t\n\t          for (var child in children) {\n\t            _loop(child);\n\t          }\n\t        })();\n\t      }\n\t\n\t      //TODO: this can maybe become it's own component..?\n\t      var returnToFilter = React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement('br', null),\n\t        React.createElement(\n\t          'span',\n\t          { className: 'action' },\n\t          React.createElement(\n\t            'div',\n\t            {\n\t              className: 'action-button update',\n\t              onClick: this.props.loadFilters\n\t            },\n\t            React.createElement('span', { className: 'glyphicon glyphicon-chevron-left' })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'action-title' },\n\t          'Return to Filter'\n\t        )\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { id: 'container-page' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container-header' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-title' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'barcode' },\n\t              'Barcode',\n\t              React.createElement(\n\t                'div',\n\t                { className: 'value' },\n\t                React.createElement(\n\t                  'strong',\n\t                  null,\n\t                  this.props.data.container.barcode\n\t                )\n\t              )\n\t            ),\n\t            React.createElement(_containerCheckout2.default, {\n\t              container: this.props.data.container,\n\t              setContainer: this.props.setContainer,\n\t              saveContainer: this.props.saveContainer\n\t            })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'summary' },\n\t          globals,\n\t          React.createElement(\n\t            'div',\n\t            { className: 'display-container' },\n\t            !(listAssigned.length === 0 && listUnassigned.length === 0) ? checkoutButton : null,\n\t            display,\n\t            barcodePath\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'container-list' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listAssigned.length !== 0 ? 'Assigned Containers' : null\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'container-coordinate' },\n\t              React.createElement(\n\t                'div',\n\t                null,\n\t                listAssigned\n\t              ),\n\t              React.createElement(\n\t                'div',\n\t                { style: { paddingLeft: 10 } },\n\t                coordinateList\n\t              )\n\t            ),\n\t            listAssigned.length !== 0 ? React.createElement('br', null) : null,\n\t            React.createElement(\n\t              'div',\n\t              { className: 'title' },\n\t              listUnassigned.length !== 0 ? 'Unassigned Containers' : null\n\t            ),\n\t            listUnassigned\n\t          )\n\t        ),\n\t        returnToFilter\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BiobankContainer;\n\t}(React.Component);\n\t\n\tBiobankContainer.propTypes = {\n\t  containerPageDataURL: React.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = BiobankContainer;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container Path\n\t *\n\t * @author Henri Rabalais\n\t * @version 1.0.0\n\t *\n\t **/\n\t\n\tvar BarcodePath = function (_React$Component) {\n\t  _inherits(BarcodePath, _React$Component);\n\t\n\t  function BarcodePath() {\n\t    _classCallCheck(this, BarcodePath);\n\t\n\t    return _possibleConstructorReturn(this, (BarcodePath.__proto__ || Object.getPrototypeOf(BarcodePath)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BarcodePath, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var path = [];\n\t      var pathLength = this.props.parentContainers.length - 1;\n\t      var containerURL = loris.BaseURL + '/biobank/container/?barcode=';\n\t\n\t      var _loop = function _loop(i) {\n\t        path.push(React.createElement(\n\t          'span',\n\t          { className: 'barcodePath' },\n\t          '/',\n\t          React.createElement(\n\t            'a',\n\t            {\n\t              onClick: function onClick() {\n\t                return _this2.props.loadContainer(_this2.props.parentContainers[i].barcode);\n\t              },\n\t              style: { cursor: 'pointer' }\n\t            },\n\t            _this2.props.parentContainers[i].barcode\n\t          )\n\t        ));\n\t      };\n\t\n\t      for (var i = pathLength; i >= 0; i--) {\n\t        _loop(i);\n\t      }\n\t      path.push(React.createElement(\n\t        'span',\n\t        { className: 'barcodePath' },\n\t        '/',\n\t        React.createElement(\n\t          'a',\n\t          {\n\t            onClick: function onClick() {\n\t              return _this2.props.loadContainer(_this2.props.container.barcode);\n\t            },\n\t            style: { cursor: 'pointer' }\n\t          },\n\t          this.props.container.barcode\n\t        )\n\t      ));\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        path\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarcodePath;\n\t}(React.Component);\n\t\n\tBarcodePath.propTypes = {};\n\t\n\texports.default = BarcodePath;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/biobank/js/biobankIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap da8d381293255d9ac598","/* global ReactDOM */\n\nimport Loader from 'Loader';\nimport BiobankFilter from './filter';\nimport BiobankSpecimen from './specimen';\nimport BiobankContainer from './container';\n\nclass BiobankIndex extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoaded: false,\n      page: '',\n      options: {},\n      specimenFilter: {},\n      containerDataTable: {},\n      containerFilter: {},\n      containerDataTable: {},\n      data: {},\n      specimen: {},\n      container: {},\n      current: {\n        files: {},\n        coordinate: null,\n        sequential: false,\n        candidateId: null,\n        centerId: null,\n        sessionId: null,\n        list: {},\n        count: null,\n        collapsed: {},\n        multiplier: null,\n      },\n      errors: {\n        container: {},\n        specimen: {},\n        list: {},\n      },\n      editable: {\n        specimenForm: false,\n        containerForm: false,\n        aliquotForm: false,\n        containerParentForm: false,\n        barcode: false,\n        containerCheckout: false,\n        temperature: false,\n        quantity: false,\n        status: false,\n        center: false,\n        collection: false,\n        preparation: false,\n        analysis: false,\n      }\n    };\n\n    this.fetch                    = this.fetch.bind(this);\n    this.loadFilters              = this.loadFilters.bind(this);\n    this.loadSpecimenDataTable    = this.loadSpecimenDataTable.bind(this);\n    this.loadContainerDataTable   = this.loadContainerDataTable.bind(this);\n    this.loadOptions              = this.loadOptions.bind(this);\n    this.loadContainer            = this.loadContainer.bind(this);\n    this.loadSpecimen             = this.loadSpecimen.bind(this);\n    this.fetch                    = this.fetch.bind(this);\n    this.updateSpecimenFilter     = this.updateSpecimenFilter.bind(this);\n    this.updateContainerFilter    = this.updateContainerFilter.bind(this);\n    this.clone                    = this.clone.bind(this);\n    this.mapFormOptions           = this.mapFormOptions.bind(this);\n    this.toggleCollapse           = this.toggleCollapse.bind(this);\n    this.edit                     = this.edit.bind(this);\n    this.close                    = this.close.bind(this);\n    this.setCurrent               = this.setCurrent.bind(this);\n    this.revertCurrent            = this.revertCurrent.bind(this);\n    this.setSpecimenList          = this.setSpecimenList.bind(this);\n    this.addListItem              = this.addListItem.bind(this);\n    this.copyListItem             = this.copyListItem.bind(this);\n    this.removeListItem           = this.removeListItem.bind(this);\n    this.saveSpecimenList         = this.saveSpecimenList.bind(this);\n    this.setSpecimen              = this.setSpecimen.bind(this);\n    this.revertSpecimen           = this.revertSpecimen.bind(this);\n    this.setContainerList         = this.setContainerList.bind(this);\n    this.setContainer             = this.setContainer.bind(this);\n    this.revertContainer          = this.revertContainer.bind(this);\n    this.setCheckoutList          = this.setCheckoutList.bind(this);\n    this.addPreparation           = this.addPreparation.bind(this);\n    this.addAnalysis              = this.addAnalysis.bind(this);\n    this.saveSpecimen             = this.saveSpecimen.bind(this);\n    this.saveContainer            = this.saveContainer.bind(this);\n    this.saveChildContainer       = this.saveChildContainer.bind(this);\n    this.saveContainerList        = this.saveContainerList.bind(this);\n    this.validateContainer        = this.validateContainer.bind(this);\n    this.validateSpecimen         = this.validateSpecimen.bind(this);\n    this.save                     = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadFilters().then(() =>\n      this.loadOptions().then(() =>\n        this.setState({isLoaded: true})\n      )\n    );\n  }\n\n  loadFilters() {\n    return new Promise(resolve => {\n      this.loadContainerDataTable().then(() =>\n        this.loadSpecimenDataTable().then(() =>  {\n          this.setState({page: 'filter'}, resolve());\n        })\n      )\n    });\n  }\n\n  loadSpecimenDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenFilterDataURL).then(data => {\n        let specimenDataTable = data;\n        this.setState({specimenDataTable}, resolve());\n      });\n    });\n  }\n\n  loadContainerDataTable() {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerFilterDataURL).then(data => {\n        let containerDataTable = data;\n        this.setState({containerDataTable}, resolve());\n      });\n    });\n  }\n\n  loadOptions() {\n    return new Promise(resolve => {\n      this.fetch(this.props.optionsURL).then(data => {\n        let options = data;\n        this.setState({options}, resolve());\n      });\n    });\n  }\n\n  loadContainer(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.containerDataURL+barcode).then(data => {\n        let container = this.clone(data.container);\n        let page = 'container';\n        this.close();\n        this.setState({data, container, page}, resolve());\n      });\n    });\n  }\n\n  loadSpecimen(barcode) {\n    return new Promise(resolve => {\n      this.fetch(this.props.specimenDataURL+barcode).then(data => {\n        let specimen = this.clone(data.specimen);\n        let container = this.clone(data.container);\n        let page = 'specimen';\n        this.setState({data, specimen, container, page}, resolve());\n      });\n    });\n  }\n\n  fetch(url) {\n    return new Promise(resolve => {\n      $.ajax(url, {\n        dataType: 'json',\n        success: data => resolve(data),\n        error: (error, errorCode, errorMsg) => console.error(error, errorCode, errorMsg)\n      });\n    });\n  }\n\n  updateSpecimenFilter(specimenFilter) {\n    this.setState({specimenFilter});\n  }\n\n  updateContainerFilter(containerFilter) {\n    this.setState({containerFilter});\n  }\n\n  clone(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  mapFormOptions(object, attribute) {\n    let data = {};\n    for (let id in object) {\n      data[id] = object[id][attribute];\n    }\n    return data;\n  }\n\n  edit(stateKey) {\n    return new Promise(resolve => {\n      this.close().then(() => {\n        let editable = this.state.editable;\n        editable[stateKey] = true;\n        this.setState({editable}, resolve());\n      });\n    });\n  }\n\n  close() {\n    return new Promise(resolve => {\n      let editable = this.state.editable;\n      for (let key in editable) {\n        editable[key] = false;\n      }\n\n      this.state.data.specimen && this.revertSpecimen();\n      this.state.data.container && this.revertContainer();\n      this.revertCurrent();\n      this.setState({editable}, resolve());\n    });\n  }\n\n  toggleCollapse(key) {\n    let collapsed = this.state.current.collapsed;\n    collapsed[key] = !collapsed[key];\n    this.setCurrent('collapsed', collapsed);\n  }\n\n  setSpecimenList(name, value, key) {\n    let list = this.state.current.list;\n    list[key].specimen[name] = value;\n    this.setCurrent('list', list);\n  }\n\n  setContainerList(name, value, key) {\n    let list = this.state.current.list;\n    list[key].container[name] = value;\n    this.setCurrent('list', list);\n  }\n\n  setCheckoutList(container) {\n    let list = this.state.current.list\n    list[container.coordinate] = container;\n    this.setCurrent('list', list);\n  }\n  \n  setCurrent(name, value) {\n    let current = this.state.current;\n    current[name] = value;\n    this.setState({current});\n  }\n\n  revertCurrent() {\n    let current = this.state.current;\n    for (let key in current) {\n      current[key] =\n        current[key] !== null && typeof current[key] === 'object' ? {} : null;\n    }\n    this.setState({current});\n  }\n\n  addListItem(item) {\n    let current = this.state.current;\n    current.count++;\n    current.collapsed[current.count] = true;\n    switch(item) {\n      case 'specimen':\n        current.list[current.count] = {specimen: {collection:{}}, container: {}};\n        break;\n      case 'container':\n        current.list[current.count] = {container: {}};\n        break;\n    }\n\n    this.setState({current});\n  }\n\n  copyListItem(key) {\n    let current = this.state.current;\n\n    for (let i=1; i<=current.multiplier; i++) {\n      current.count++;\n      current.list[current.count] = this.clone(current.list[key]);\n      current.list[current.count].container.barcode &&\n        delete current.list[current.count].container.barcode;\n      current.collapsed[current.count] = true;\n    }\n\n    this.setState({current});\n  }\n\n  removeListItem(key) {\n    let current = this.state.current;\n    delete current.list[key];\n    this.setState({current});\n  }\n\n  setSpecimen(name, value) {\n    let specimen = this.state.specimen;\n    specimen[name] = value;\n    this.setState({specimen});\n  }\n\n  revertSpecimen() {\n    let specimen = this.state.specimen;\n    specimen = this.clone(this.state.data.specimen);\n    this.setState({specimen});\n  }\n\n  setContainer(name, value) {\n    let container = this.state.container;\n    value ? container[name] = value : delete container[name]; \n    this.setState({container});\n  }\n\n  revertContainer() {\n    let container = this.state.container;\n    container = this.clone(this.state.data.container);\n    this.setState({container});\n  }\n\n  addPreparation() {\n    let specimen = this.state.specimen;\n    specimen.preparation = {centerId: this.state.data.container.centerId};\n    this.setState({specimen});\n  }\n\n  addAnalysis() {\n    let specimen = this.state.specimen;\n    specimen.analysis = {centerId: this.state.data.container.centerId};\n    this.setState({specimen});\n  }\n\n  saveSpecimen() {\n    let specimen = this.state.specimen;\n    this.validateSpecimen(specimen).then(() => {\n      this.save(specimen, this.props.saveSpecimenURL, 'Specimen Save Successful!').then(() => {\n        let data = this.state.data;\n        data.specimen = this.clone(this.state.specimen);\n        this.setState({data}, ()=>{this.close()});\n      }\n      );\n    });\n  }\n\n  saveSpecimenList() {\n    let specimenList = this.clone(this.state.current.list);\n    let availableId = Object.keys(this.state.options.containerStati).find(\n      key => this.state.options.containerStati[key].status === 'Available'\n    );\n    let centerId = this.state.options.sessionCenters[this.state.current.sessionId].centerId\n    let specimenListValidation = [];\n\n    for (let key in specimenList) {\n      //set container values\n      let container = specimenList[key].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.centerId = centerId;\n      container.originId = centerId;\n\n      //set specimen values\n      let specimen = specimenList[key].specimen;\n      specimen.candidateId = this.state.current.candidateId;\n      specimen.sessionId = this.state.current.sessionId;\n      specimen.quantity = specimen.collection.quantity;\n      specimen.unitId = specimen.collection.unitId;\n      specimen.collection.centerId = centerId;\n      if ((this.state.options.specimenTypes[specimen.typeId]||{}).freezeThaw == 1) {\n        specimen.fTCycle = 0;\n      }\n\n      //if this is an aliquot form, reset some of the values.\n      //TODO: fix this later\n      if (this.state.ALIQUOT) {\n        specimen.candidateId = this.state.data.candidate.CandId;\n        specimen.sessionId = this.state.data.session.ID;\n        specimen.parentSpecimenId = this.state.data.specimen.id;\n        specimen.collection.centerId = this.props.data.container.centerId;\n        container.centerId = this.props.data.container.centerId;\n        container.originId = this.props.data.container.centerId;\n      }\n\n      specimenList[key].container = container;\n      specimenList[key].specimen = specimen;\n\n      specimenListValidation.push(this.validateContainer(container, key));\n      specimenListValidation.push(this.validateSpecimen(specimen, key));\n    }\n\n    Promise.all(specimenListValidation).then(() => {\n      this.save(specimenList, this.props.saveSpecimenListURL, 'Save Successful!').then(\n        () => {this.close(); this.loadFilters()}\n      );\n    }).catch(()=>{});\n  }\n\n  saveContainer() {\n    let container = this.state.container;\n    this.validateContainer(container).then(() => {\n      this.save(container, this.props.saveContainerURL, 'Container Save Successful!').then(() => {\n        let data = this.state.data;\n        data.container = this.clone(this.state.container);\n        this.setState({data}, ()=>{this.close()});\n        }\n      );\n    });\n  }\n  \n  saveChildContainer(container) {\n    return new Promise(resolve => {\n      this.save(container, this.props.saveContainerURL).then(() => {\n        let data = this.state.data;\n        if (container.parentContainerId === null) {\n          delete data.childContainers[container.id];\n        } else {\n          data.childContainers[container.id] = this.clone(container);\n        }\n        this.setState({data}, resolve());\n        }\n      )\n    });\n  }\n\n  saveContainerList() {\n    let containerList = this.state.current.list;\n    let availableId = Object.keys(this.state.options.containerStati).find(\n      key => this.state.options.containerStati[key].status === 'Available'\n    );\n    let containerListValidation = [];\n\n    for (let key in containerList) {\n      let container = containerList[key].container;\n      container.statusId = availableId;\n      container.temperature = 20;\n      container.originId = this.state.current.centerId;\n      container.centerId = this.state.current.centerId;\n\n      containerListValidation.push(this.validateContainer(container, key));\n    }\n\n    Promise.all(containerListValidation).then(()=> {\n      this.save(containerList, this.props.saveContainerListURL, 'Container Creation Successful!').then(\n        () => {this.close(); this.loadFilters(); this.loadOptions();}\n      );\n    }).catch(()=>{});\n  }\n\n  save(data, url, message) {\n    return new Promise(resolve => {\n      let dataObject = new FormData();\n      for (let file in this.state.current.files) {\n        dataObject.append(this.state.current.files[file].name, this.state.current.files[file]);\n      }\n      dataObject.append('data', JSON.stringify(data));\n      $.ajax({\n        type: 'POST',\n        url: url,\n        data: dataObject,\n        cache: false,\n        contentType: false,\n        processData: false,\n        success: () => {\n          resolve();\n          this.loadOptions();\n          message && swal(message, '', 'success');\n        },\n        error: (error, textStatus, errorThrown) => {\n          let message = (error.responseJSON||{}).message || 'Submission error!';\n          swal('Error', message, 'error');\n          console.error(error, textStatus, errorThrown);\n        }\n      });\n    });\n  }\n\n  //TODO: validation might be more effective within 1 function.\n  validateContainer(container, key) {\n    return new Promise((resolve, reject) => {\n      let errors = this.state.errors;\n      errors.container = {};\n\n      let required = [\n        'barcode',\n        'typeId',\n        'temperature',\n        'statusId',\n        'centerId',\n      ]\n\n      let float = [\n        'temperature',\n      ]\n\n      required.map(field => {\n        if (!container[field]) {\n          errors.container[field] = 'This field is required! ';\n        }\n      });\n\n      float.map(field => {\n        if (isNaN(container[field])) {\n          errors.container[field] = 'This field must be a number! ';\n        }\n      });\n\n      Object.values(this.state.options.containers).map(c => {\n        if (container.barcode === c.barcode && container.id !== c.id) {\n          errors.container.barcode = 'Barcode must be unique';\n        }\n      });\n\n      //TODO: Regex check will go here\n      if (key) {\n        errors.list[key] = errors.list[key] || {};\n        errors.list[key].container = errors.container;\n      }\n\n      if (Object.keys(errors.container).length == 0) {\n        this.setState({errors}, resolve());\n      } else {\n        this.setState({errors}, reject());\n      }\n    });\n  }\n\n  validateSpecimen(specimen, key) {\n    return new Promise((resolve, reject) => {\n      let errors = this.state.errors;\n      errors.specimen = {};\n\n      let required = [\n        'typeId',\n        'quantity',\n        'unitId',\n        'candidateId',\n        'sessionId',\n        'collection',\n      ];\n      let float = ['quantity'];\n\n      required.map(field => {\n        if (!specimen[field]) {\n          errors.specimen[field] = 'This field is required! ';\n        }\n      });\n\n      float.map(field => {\n        if (isNaN(specimen[field])) {\n          errors.specimen[field] = 'This field must be a number! ';\n        }\n      });\n\n      if (specimen.collection) {\n        errors.specimen.collection = {};\n        let required = ['quantity', 'unitId', 'centerId', 'date', 'time'];\n        let float    = ['quantity'];\n        let date     = ['date'];\n        let time     = ['time'];\n\n        required.map(field => {\n          if (!specimen.collection[field]) {\n            errors.specimen.collection[field] = 'This field is required! ';\n          }\n        });\n\n        float.map(field => {\n          if (isNaN(specimen.collection[field])) {\n            errors.specimen.collection[field] = 'This field must be a number! ';\n          }\n        });\n\n        date.map(field => {\n          let regex = /^[12]\\d{3}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/;\n          if (regex.test(specimen.collection[field]) === false ) {\n            errors.specimen.collection[field] = 'This field must be a date! ';\n          }\n        });\n\n        time.map(field => {\n          let regex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n          if (regex.test(specimen.collection[field]) === false) {\n            errors.specimen.collection[field] = 'This field must be a time! ';\n          }\n        });\n\n        if (this.state.options.specimenTypeAttributes[specimen.typeId]) {\n          errors.specimen.collection.data = {};\n          let attributes = this.state.options.specimenTypeAttributes[specimen.typeId];\n          let datatypes = this.state.options.attributeDatatypes;\n\n          for (let attribute in attributes) {\n            if (!specimen.collection.data[attribute]) {\n              errors.specimen.collection.data[attribute] = 'This field is required!';\n            }\n\n            if (datatypes[attributes[attribute].datatypeId].datatype === 'number') {\n              if (isNaN(specimen.collection.data[attribute])) {\n                errors.specimen.collection.data[attribute] = 'This field must be a number!';\n              }\n            }\n\n            //TODO: Decide what other validation needs to happen here:\n            // - boolean?\n            // - datetime?\n            // - file?\n          }\n\n          if (Object.keys(errors.specimen.collection.data).length == 0) {\n            delete errors.specimen.collection.data;\n          }\n        }\n\n        if (Object.keys(errors.specimen.collection).length == 0) {\n          delete errors.specimen.collection;\n        }\n      }\n\n      if (key) {\n        errors.list[key] = errors.list[key] || {};\n        errors.list[key].specimen = errors.specimen;\n      }\n\n      if (Object.keys(errors.specimen).length == 0) {\n        this.setState({errors}, resolve());\n      } else {\n        this.setState({errors}, reject());\n      }\n    });\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (\n        <div style={{height: 500}}><Loader/></div>\n      );\n    }\n\n    let display;\n    switch (this.state.page) {\n      case 'container':\n          display = (\n            <BiobankContainer\n              data={this.state.data}\n              options={this.state.options}\n              container={this.state.container}\n              errors={this.state.errors}\n              current={this.state.current}\n              editable={this.state.editable}\n              loadContainer={this.loadContainer}\n              loadSpecimen={this.loadSpecimen}\n              loadFilters={this.loadFilters}\n              mapFormOptions={this.mapFormOptions}\n              setContainer={this.setContainer}\n              revertContainer={this.revertContainer}\n              saveContainer={this.saveContainer}\n              setCurrent={this.setCurrent}\n              setCheckoutList={this.setCheckoutList}\n              saveChildContainer={this.saveChildContainer}\n              edit={this.edit}\n              close={this.close}\n            />\n          );\n        break;\n      case 'specimen': \n        display = (\n          <BiobankSpecimen\n            data={this.state.data}\n            options={this.state.options}\n            container={this.state.container}\n            specimen={this.state.specimen}\n            errors={this.state.errors}\n            current={this.state.current}\n            editable={this.state.editable}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            loadFilters={this.loadFilters}\n            loadOptions={this.loadOptions}\n            mapFormOptions={this.mapFormOptions}\n            setContainer={this.setContainer}\n            revertContainer={this.revertContainer}\n            saveContainer={this.saveContainer}\n            setSpecimen={this.setSpecimen}\n            revertSpecimen={this.revertSpecimen}\n            saveSpecimen={this.saveSpecimen}\n            addPreparation={this.addPreparation}\n            addAnalysis={this.addAnalysis}\n            setCurrent={this.setCurrent}\n            saveChildContainer={this.saveChildContainer}\n            edit={this.edit}\n            close={this.close}\n            save={this.save}\n          />\n        );\n        break;\n      case 'filter':\n        display = (\n          <BiobankFilter\n            specimenFilter={this.state.specimenFilter}\n            specimenDataTable={this.state.specimenDataTable}\n            containerFilter={this.state.containerFilter}\n            containerDataTable={this.state.containerDataTable}\n            options={this.state.options}\n            current={this.state.current}\n            errors={this.state.errors}\n            editable={this.state.editable}\n            loadContainer={this.loadContainer}\n            loadSpecimen={this.loadSpecimen}\n            updateSpecimenFilter={this.updateSpecimenFilter}\n            updateContainerFilter={this.updateContainerFilter}\n            mapFormOptions={this.mapFormOptions}\n            edit={this.edit}\n            close={this.close}\n            toggleCollapse={this.toggleCollapse}\n            loadFilters={this.loadFilters}\n            loadOptions={this.loadOptions}\n            setCurrent={this.setCurrent}\n            setContainerList={this.setContainerList}\n            setSpecimenList={this.setSpecimenList}\n            setContainerList={this.setContainerList}\n            addListItem={this.addListItem}\n            copyListItem={this.copyListItem}\n            removeListItem={this.removeListItem}\n            saveContainerList={this.saveContainerList}\n            saveSpecimenList={this.saveSpecimenList}\n          />\n        );\n    }\n\n    return (\n      <div className=\"biobank-page\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            {display}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n$(function() {\n  const request = `${loris.BaseURL}/biobank/ajax/requestData.php?`;\n  const submit = `${loris.BaseURL}/biobank/ajax/submitData.php?`;\n  const biobankIndex = (\n    <div className='page=biobank'>\n      <BiobankIndex\n        specimenFilterDataURL={`${loris.BaseURL}/biobank/?format=json`}\n        containerFilterDataURL={`${request}action=getContainerFilterData`}\n        specimenDataURL={`${request}action=getSpecimenData&barcode=`}\n        containerDataURL={`${request}action=getContainerData&barcode=`}\n        optionsURL={`${request}action=getFormOptions`}\n        saveContainerURL={`${submit}action=saveContainer`}\n        saveSpecimenURL={`${submit}action=saveSpecimen`}\n        saveContainerListURL={`${submit}action=saveContainerList`}\n        saveSpecimenListURL={`${submit}action=saveSpecimenList`}\n      />\n    </div>\n  );\n  ReactDOM.render(biobankIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/biobankIndex.js","/**\n * This file contains the React component for Loader\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\n/**\n * Loader component\n */\nclass Loader extends React.Component {\n\n  render() {\n    return (\n        <div\n          className=\"loader\"\n          style={{width: this.props.size, height: this.props.size}}\n        />\n    );\n  }\n}\n\nLoader.propTypes = {size: React.PropTypes.int}\nLoader.defaultProps = {size: 120}\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Loader.js","import FilterForm from 'FilterForm';\nimport BiobankSpecimenForm from './specimenForm';\nimport PoolSpecimenForm from './poolSpecimenForm';\nimport BiobankContainerForm from './containerForm';\nimport {Tabs, TabPane} from 'Tabs';\nimport Modal from 'Modal';\nimport Loader from 'Loader';\n\nclass BiobankFilter extends React.Component {\n  constructor() {\n    super();\n\n    this.resetSpecimenFilters = this.resetSpecimenFilters.bind(this);\n    this.resetContainerFilters = this.resetContainerFilters.bind(this);\n    this.formatSpecimenColumns = this.formatSpecimenColumns.bind(this);\n    this.formatContainerColumns = this.formatContainerColumns.bind(this);\n  }\n\n  resetSpecimenFilters() {\n    this.refs.specimenFilter.clearFilter();\n  }\n  \n  resetContainerFilters() {\n    this.refs.containerFilter.clearFilter();\n  }\n\n  formatSpecimenColumns(column, cell, rowData, rowHeaders) {\n    let row = {};\n    let barcode;\n\n    // Create the mapping between rowHeaders and rowData in a row object.\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    switch (column) {\n      case 'Barcode':\n        barcode = row['Barcode'];\n        return (\n          <td>\n            <a onClick={()=>{this.props.loadSpecimen(barcode)}} style={{cursor:'pointer'}}>\n              {cell}\n            </a>\n          </td>\n        );\n      case 'Parent Barcode':\n        barcode = row['Parent Barcode'];\n        return (\n          <td>\n            <a \n              onClick={()=>{this.props.loadSpecimen(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td> \n        );\n      case 'Container Barcode':\n        barcode = row['Container Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td>\n        );\n      case 'PSCID':\n        let pscidURL = loris.BaseURL + '/' + row['PSCID'];\n        return <td><a href={pscidURL}>{cell}</a></td>;\n      case 'Visit Label':\n        let visitLabelURL = loris.BaseURL+'/instrument_list/?candID='+row['PSCID']+\n          '&sessionID='+row['Visit Label'];\n        return <td><a href={visitLabelURL}>{cell}</a></td>;\n      case 'Status':\n        switch (cell) {\n          case 'Available':\n            return <td style={{color: 'green'}}>{cell}</td>;\n          case 'Reserved':\n            return <td style={{color: 'orange'}}>{cell}</td>\n          case 'Dispensed':\n            return <td style={{color: 'red'}}>{cell}</td>\n        }\n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  formatContainerColumns(column, cell, rowData, rowHeaders) {\n    // Create the mapping between rowHeaders and rowData in a row object.\n    let row = {};\n    rowHeaders.forEach((header, index) => {\n      row[header] = rowData[index];\n    });\n\n    let barcode;\n    switch (column) {\n      case 'Barcode':\n        barcode = row['Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td>\n        );\n      case 'Status':\n        switch (cell) {\n          case 'Available':\n            return <td style={{color: 'green'}}>{cell}</td>;\n          case 'Reserved':\n            return <td style={{color: 'orange'}}>{cell}</td>\n          case 'Dispensed':\n            return <td style={{color: 'red'}}>{cell}</td>\n        }\n      case 'Parent Barcode':\n        barcode = row['Parent Barcode'];\n        return (\n          <td>\n            <a\n              onClick={()=>{this.props.loadContainer(barcode)}}\n              style={{cursor:'pointer'}}\n            >\n              {cell}\n            </a>\n          </td> \n        );\n      default:\n        return <td>{cell}</td>;\n     }\n  }\n\n  render() {\n    let addSpecimenButton;\n    let poolSpecimenButton;\n    let addContainerButton;\n\n    /**\n     * Map Options for Form Select Elements of Specimen Form\n     */\n    let containerTypesPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesPrimary, 'label'\n    );\n    let containerStati = this.props.mapFormOptions(\n      this.props.options.containerStati, 'status'\n    );\n    let candidates = this.props.mapFormOptions(\n      this.props.options.candidates, 'pscid'\n    );\n    let sessions = this.props.mapFormOptions(\n      this.props.options.sessions, 'label'\n    );\n\n    addSpecimenButton = (\n      <div className='action' title='Add Specimen'>\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('specimenForm').then(()=>{this.props.addListItem('specimen')});}}\n        >\n          +\n        </div>\n        <Modal\n          title='Add New Specimen'\n          show={this.props.editable.specimenForm}\n          closeModal={this.props.close}\n        >\n          <BiobankSpecimenForm\n            candidates={candidates}\n            sessions={sessions}\n            current={this.props.current}\n            specimenList={this.props.current.list}\n            errors={this.props.errors}\n            candidateSessions={this.props.options.candidateSessions}\n            sessionCenters={this.props.options.sessionCenters}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            close={this.props.close}\n            toggleCollapse={this.props.toggleCollapse}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            setCurrent={this.props.setCurrent}\n            setSpecimenList={this.props.setSpecimenList}\n            setContainerList={this.props.setContainerList}\n            addListItem={this.props.addListItem}\n            copyListItem={this.props.copyListItem}\n            removeListItem={this.props.removeListItem}\n            saveSpecimenList={this.props.saveSpecimenList}\n          />\n        </Modal>\n      </div>\n    );\n\n    //TODO: turn the following into components to avoid duplication\n    //TODO: should there be a general search, or one for specimen and one for containers?\n    let barcodesPrimary = this.props.mapFormOptions(this.props.options.containersPrimary, 'barcode');\n    let searchSpecimenButton = (\n      <div className='action' title='Go To Specimen'>\n        <div className='action-button search' onClick={()=>{this.props.edit('searchSpecimen')}}>\n          <span className='glyphicon glyphicon-search'/>\n        </div>\n        <Modal\n          title='Go To Specimen'\n          show={this.props.editable.searchSpecimen}\n          closeModal={this.props.close}\n        >\n          <SearchableDropdown\n            name='barcode'\n            label='Barcode'\n            options={barcodesPrimary}\n            onUserInput={(name, value) => {\n              barcodesPrimary[value] &&\n              this.props.loadSpecimen(barcodesPrimary[value]).then(()=>this.props.close())\n            }}\n            placeHolder='Please Scan or Select Barcode'\n            autoFocus={true}\n          />\n        </Modal>\n      </div>\n    );\n\n    let barcodesNonPrimary = this.props.mapFormOptions(this.props.options.containersNonPrimary, 'barcode');\n    let searchContainerButton;\n    searchContainerButton = (\n      <div className='action' title='Go To Container'>\n        <div className='action-button search' onClick={()=>{this.props.edit('searchContainer')}}>\n          <span className='glyphicon glyphicon-search'/>\n        </div>\n        <Modal\n          title='Go To Barcode'\n          show={this.props.editable.searchContainer}\n          closeModal={this.props.close}\n        >\n          <SearchableDropdown\n            name='barcode'\n            label='Barcode'\n            options={barcodesNonPrimary}\n            onUserInput={(name, value) => {\n              barcodesNonPrimary[value] &&\n              this.props.loadContainer(barcodesNonPrimary[value]).then(()=>this.props.close())\n            }}\n            placeHolder='Please Scan or Select Barcode'\n            autoFocus={true}\n          />\n        </Modal>\n      </div>\n    );\n\n\n    poolSpecimenButton = (\n      <div className='action' title='Pool Specimens'>\n        <div className='action-button pool' onClick={()=>{this.props.edit('poolSpecimenForm')}}>\n          <span className='glyphicon glyphicon-resize-small'/>\n        </div>\n        <Modal\n          title='Pool Specimens'\n          show={this.props.editable.poolSpecimenForm}\n          closeModal={this.props.close}\n        >\n          <PoolSpecimenForm\n            specimenTypes={this.props.options.specimenTypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            specimenProtocols={this.props.options.specimenProtocols}\n            specimenProtocolAttributes={this.props.options.specimenProtocolAttributes}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            attributeOptions={this.props.options.attributeOptions}\n            capacities={this.props.options.capacities}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenUnits={this.props.options.specimenUnits}\n            candidates={candidates}\n            candidateSessions={this.props.options.candidateSessions}\n            sessionCenters={this.props.options.sessionCenters}\n            specimenRequest={`${loris.BaseURL}/biobank/ajax/requestData.php?action=getSpecimenDataFromBarcode`}\n            mapFormOptions={this.props.mapFormOptions}\n            saveSpecimen={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveSpecimen`}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n          />\n        </Modal>\n      </div>\n    );\n\n    let containerTypesNonPrimary = this.props.mapFormOptions(\n      this.props.options.containerTypesNonPrimary, 'label'\n    );\n\n    addContainerButton = (\n      <div\n        className='action'\n        title='Add Container'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('containerForm').then(()=>{this.props.addListItem('container')})}}\n        >\n          <span>+</span>\n        </div>\n        <Modal\n          title='Add New Container'\n          show={this.props.editable.containerForm}\n          closeModal={this.props.close}\n        >\n          <BiobankContainerForm\n            current={this.props.current}\n            containerList={this.props.current.list}\n            errors={this.props.errors.list}\n            containerTypesNonPrimary={containerTypesNonPrimary}\n            centers={this.props.options.centers}\n            containerStati={containerStati}\n            saveContainer={`${loris.BaseURL}/biobank/ajax/submitData.php?action=saveContainer`}\n            close={this.props.close}\n            toggleCollapse={this.props.toggleCollapse}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            setCurrent={this.props.setCurrent}\n            setContainerList={this.props.setContainerList}\n            addListItem={this.props.addListItem}\n            copyListItem={this.props.copyListItem}\n            removeListItem={this.props.removeListItem}\n            saveContainerList={this.props.saveContainerList}\n          />\n        </Modal>\n      </div>\n    ); \n    \n\n    let tabList = [\n      {id: \"specimens\", label: \"Specimens\"},\n      {id: \"containers\", label: \"Containers\"}\n    ];\n\n    return (\n      <div id='biobank-page'>\n        <Tabs tabs={tabList} defaultTab=\"specimens\" updateURL={true}>\n          <TabPane TabId={tabList[0].id}>\n            <div className='row' style={{marginTop:20}}>\n              <div className='col-lg-3' style={{marginTop: '10px'}}>\n                <div className='filter'>\n                  <FilterForm\n                    Module='biobank'\n                    ref='specimenFilter'\n                    formElements={this.props.specimenDataTable.form}\n                    onUpdate={this.props.updateSpecimenFilter}\n                    filter={this.props.specimenFilter}\n                  >\n                    <ButtonElement\n                      label=\"Clear Filters\"\n                      type=\"reset\" \n                      onUserInput={this.resetSpecimenFilters}\n                    />\n                    <div className='align-row'>\n                      <span className='action'>\n                        {searchSpecimenButton}\n                      </span>\n                      <span className='action'>\n                        {addSpecimenButton}\n                      </span>\n                      <span className='action'>\n                        {poolSpecimenButton}\n                      </span>\n                    </div>\n                  </FilterForm>\n                </div>\n              </div>\n              <div className='col-lg-9' style={{marginTop: '10px'}}>\n                <StaticDataTable\n                  Data={this.props.specimenDataTable.Data}\n                  Headers={this.props.specimenDataTable.Headers}\n                  Filter={this.props.specimenFilter}\n                  getFormattedCell={this.formatSpecimenColumns}\n                />\n              </div>\n            </div>\n          </TabPane>\n          <TabPane TabId={tabList[1].id}>\n            <div className='row'>\n              <div className='col-lg-3' style={{marginTop: '10px'}}>\n                <div className='filter'>\n                  <FilterForm\n                    Module='biobank' \n                    ref='containerFilter'\n                    formElements={this.props.containerDataTable.form}\n                    onUpdate={this.props.updateContainerFilter}\n                    filter={this.props.containerFilter}\n\t\t              >\n                    <ButtonElement\n                      label=\"Clear Filters\"\n                      type=\"reset\"\n                      onUserInput={this.resetContainerFilters}\n                    />\n                    <div className='align-row'>\n                      <span className='action'>\n                        {searchContainerButton}\n                      </span>\n                      <span className='action'>\n                        {addContainerButton}\n                      </span>\n                    </div>\n                  </FilterForm>\t\t\t\n                </div>\n              </div>\n              <div className='col-lg-9' style={{marginTop: '10px'}}>\n                <StaticDataTable\n                  Data={this.props.containerDataTable.Data}\n                  Headers={this.props.containerDataTable.Headers}\n                  Filter={this.props.containerFilter}\n                  getFormattedCell={this.formatContainerColumns}\n                />\n              </div>\n            </div>\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nBiobankFilter.propTypes = {\n  specimenFilter: React.PropTypes.object.isRequired,\n  specimenDataTable: React.PropTypes.object.isRequired,\n  containerFilter: React.PropTypes.object.isRequired,\n  containerDataTable: React.PropTypes.object.isRequired,\n  options: React.PropTypes.object.isRequired,\n  editable: React.PropTypes.object.isRequired,\n  loadContainer: React.PropTypes.func.isRequired,\n  loadSpecimen: React.PropTypes.func.isRequired,\n  loadTransfer: React.PropTypes.func.isRequired,\n  updateSpecimenFilter: React.PropTypes.func.isRequired,\n  updateContainerFilter: React.PropTypes.func.isRequired,\n  mapFormOptions: React.PropTypes.func.isRequired,\n  edit: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n}\n\nBiobankFilter.defaultProps = {\n}\n\nexport default BiobankFilter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/filter.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n    if (key) {\n      filter[key] = {};\n      if (value) {     // all defined/non-null values must have some length, else empty string\n        filter[key].value = Object.keys(value).length > 0 ? value : '';\n      } else {         // null and undefined handled here\n        filter[key].value = '';\n      }\n      filter[key].exactMatch = (type === \"SelectElement\");\n    } else if (filter && key && value === '') {\n      delete filter[key];\n    }\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure key is of string type and value is of string or object type\n    // before sending them to querystring\n    if (typeof fieldName !== 'string' ||\n        (typeof fieldValue !== 'string' && typeof fieldValue !== 'object')) {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <FormElement {...this.props}>\n        {formChildren}\n      </FormElement>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    let pencilGlyph;\n    if (this.props.edit) {\n      pencilGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-pencil\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.edit}\n        /> \n      );\n    } \n\n    let plusGlyph;\n    if (this.props.add) {\n      plusGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-plus\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.add}\n        />\n      );\n    }\n\n    let removeGlyph;\n    if (this.props.cancel) {\n      removeGlyph = (\n        <span\n          className=\"glyphicon pull-right glyphicon-remove\"\n          style={{marginRight:'10px', cursor: 'pointer'}}\n          onClick={this.props.cancel}\n        />\n      );\n    }\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n      >\n        <span \n          className={glyphClass}\n          onClick={this.toggleCollapsed}\n          data-toggle=\"collapse\"\n          data-target={'#' + this.props.id}\n          style={{cursor: 'pointer'}}\n        />\n        {pencilGlyph}\n        {plusGlyph}\n        {removeGlyph}\n        {this.props.title}\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  edit: React.PropTypes.func,\n  add: React.PropTypes.func\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","import SpecimenCollectionForm from './collectionForm'\nimport ContainerParentForm from './containerParentForm'\n\n/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankSpecimenForm extends React.Component {\n  render() {\n\n    //Generates new Barcode Form everytime the addBarcodeForm button is pressed\n    let specimenListArray = Object.keys(this.props.specimenList);\n    let barcodes = [];\n    let i = 1;\n    for (let key of specimenListArray) {\n      barcodes.push(\n        <SpecimenBarcodeForm\n          data={this.props.data || null}\n          key={key}\n          barcodeKey={key}\n          id={i} \n          collapsed={this.props.current.collapsed[key]}\n          toggleCollapse={this.props.toggleCollapse}\n          mapFormOptions={this.props.mapFormOptions}\n          setCurrent={this.props.setCurrent}\n          container={this.props.specimenList[key].container || null}\n          specimen={this.props.specimenList[key].specimen || null}\n          errors={this.props.errors.list[key] || {}}\n          removeSpecimen={specimenListArray.length !== 1 ?\n            () => this.props.removeListItem(key) : null}\n          addSpecimen={i == specimenListArray.length ? () => {this.props.addListItem('specimen')} : null}\n          multiplier={this.props.current.multiplier}\n          copySpecimen={i == specimenListArray.length && this.props.specimenList[key] ? \n            this.props.copyListItem : null}\n          setContainerList={this.props.setContainerList}\n          setSpecimenList={this.props.setSpecimenList}\n          specimenTypes={this.props.specimenTypes}\n          containerTypesPrimary={this.props.containerTypesPrimary}\n          containersNonPrimary={this.props.containersNonPrimary}\n          specimenTypeAttributes={this.props.specimenTypeAttributes}\n          attributeDatatypes={this.props.attributeDatatypes}\n          attributeOptions={this.props.attributeOptions}\n          capacities={this.props.capacities}\n          containerDimensions={this.props.containerDimensions}\n          containerCoordinates={this.props.containerCoordinates}\n          specimenTypeUnits={this.props.specimenTypeUnits}\n          units={this.props.units}\n        />\n      )\n      \n      i++;\n    }\n\n    let globalFields;\n    let remainingQuantityFields;\n    if (this.props.data) {\n      globalFields = (\n        <div>\n          <StaticElement\n            label=\"Parent Specimen\"\n            text={this.props.data.container.barcode}\n          />\n          <StaticElement\n            label=\"PSCID\"\n            text={this.props.data.candidate.PSCID}\n          />\n          <StaticElement\n            label=\"Visit Label\"\n            text={this.props.data.session.Visit_label}\n          />\n        </div>\n      );\n\n      remainingQuantityFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Remaining Quantity\"\n            onUserInput={this.props.setSpecimen}\n            required={true}\n            value={this.props.specimen.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={this.props.specimenUnits}\n            onUserInput={this.props.setSpecimen}\n            emptyOption={false}\n            required={true}\n            value={this.props.specimen.unitId}\n          />\n        </div>\n      );\n    } else {\n     let sessions = {};\n     if (this.props.current.candidateId) {\n       sessions = this.props.mapFormOptions(this.props.candidateSessions[this.props.current.candidateId], 'label'); \n     }\n      //TODO: not sure why, but I'm now having trouble with the SearchableDropdown\n      globalFields = (\n        <div>\n          <SelectElement\n            name=\"candidateId\"\n            label=\"PSCID\"\n            options={this.props.candidates}\n            onUserInput={this.props.setCurrent}\n            required={true}\n            value={this.props.current.candidateId}\n            placeHolder='Search for a PSCID'\n            errorMessage={this.props.errors.specimen.candidateId}\n          />\n          <SelectElement\n            name='sessionId'\n            label='Visit Label'\n            options={sessions}\n            onUserInput={this.props.setCurrent}\n            required={true}\n            value={this.props.current.sessionId}\n            disabled={this.props.current.candidateId ? false : true}\n            errorMessage={this.props.errors.specimen.sessionId}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"specimenForm\"\n        id='specimenForm'\n        onSubmit={this.props.saveSpecimenList}\n        ref=\"form\"\n      >\n        <div className='row'>\n          <div className=\"col-xs-9 col-xs-offset-1\">\n            {globalFields}\n            {remainingQuantityFields}\n          </div>\n        </div>\n        {barcodes}\n        <ButtonElement\n          label='Submit'\n          columnSize='col-sm-2 col-sm-offset-10'\n        />\n      </FormElement>\n    );\n  }\n}\n\nBiobankSpecimenForm.propTypes = {\n};\n\nBiobankSpecimenForm.defaultProps = {\n  specimenList: {},\n};\n\n/**\n * Biobank Barcode Form\n *\n * Acts a subform for BiobankSpecimenForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenBarcodeForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n    this.setSpecimen = this.setSpecimen.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  setContainer(name, value) {\n    this.props.setContainerList(name, value, this.props.barcodeKey);\n  }\n\n  setSpecimen(name, value) {\n    this.props.setSpecimenList(name, value, this.props.barcodeKey);\n  }\n\n  copy() {\n    this.props.copySpecimen(this.props.barcodeKey);\n  }\n\n  render() {\n    let addSpecimenButton;\n    let addSpecimenText;\n    let copySpecimenButton;\n    let copySpecimenText;\n    if (this.props.addSpecimen) {\n      addSpecimenButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addSpecimen}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addSpecimenText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }\n\t\n    if (this.props.copySpecimen) {\n      copySpecimenButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >\n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );\n      copySpecimenText = (\n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={(e)=>{this.props.setCurrent('multiplier', e.target.value)}}\n            value={this.props.multiplier}\n          />\n          Copies\n        </span>\n      );\n    }\n\n    let removeSpecimenButton;\n    if (this.props.removeSpecimen) {\n      const glyphStyle = {\n        color: '#DDDDDD',\n        marginLeft: 10,\n        cursor: 'pointer',\n        fontSize: 15\n      }\n\n      removeSpecimenButton = (\n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeSpecimen}\n          style={glyphStyle}\n        />\n      );\n    }\n\n    let specimenTypes = {};\n    if (this.props.data) {\n      for (let id in this.props.specimenTypes) {\n        if (\n             (this.props.specimenTypes[id].parentTypeId ==\n             this.props.data.specimen.typeId) ||\n             (id == this.props.data.specimen.typeId)\n        ) {\n          specimenTypes[id] = this.props.specimenTypes[id]['type'];\n        }\n      }\n    } else {\n      specimenTypes = this.props.mapFormOptions(this.props.specimenTypes, 'type');\n    }\n\n    return (\n      <FormElement\n        name='biobankBarcode'\n      >\n        <div className='row'>\n          <div className='col-xs-9 col-xs-offset-1'>\n            <div>   \n              <TextboxElement\n                name='barcode'\n                label={'Barcode ' + this.props.id}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.barcode}\n                errorMessage={(this.props.errors.container||{}).barcode}\n              />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span \n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse' \n              data-target={'#item-' + this.props.barcodeKey}\n              onClick={() => {this.props.toggleCollapse(this.props.barcodeKey)}}\n            />\n            {removeSpecimenButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-8'>\n            <div id={'item-' + this.props.barcodeKey} className='collapse'>\n              <SelectElement\n                name=\"typeId\"\n                label=\"Specimen Type\"\n                options={specimenTypes}\n                onUserInput={this.setSpecimen}\n                required={true}\n                value={this.props.specimen.typeId}\n                errorMessage={(this.props.errors.specimen||{}).typeId}\n              />\n              <SelectElement\n                name=\"typeId\"\n                label=\"Container Type\"                                              \n                options={this.props.containerTypesPrimary}                          \n                onUserInput={this.setContainer}\n                ref=\"containerType\"                                                 \n                required={true}                                                     \n                value={this.props.container.typeId}                           \n                errorMessage={(this.props.errors.container||{}).typeId}\n              />            \n              <SpecimenCollectionForm\n                specimen={this.props.specimen}\n                errors={(this.props.errors.specimen||{}).collection}\n                setSpecimen={this.setSpecimen}\n                specimenTypeUnits={this.props.specimenTypeUnits}\n                specimenTypeAttributes={this.props.specimenTypeAttributes}\n                attributeDatatypes={this.props.attributeDatatypes}\n                attributeOptions={this.props.attributeOptions}\n              />\n              <ContainerParentForm                                                    \n                setContainer={this.setContainer}\n                mapFormOptions={this.props.mapFormOptions}\n                container={this.props.container}\n                containersNonPrimary={this.props.containersNonPrimary}\n                containerDimensions={this.props.containerDimensions}\n                containerCoordinates={this.props.containerCoordinates}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-4'/>\n            <div className='col-xs-3 action'>\n              {addSpecimenButton}\n              {addSpecimenText}\n            </div>\n            <div className='col-xs-3 action'>\n              {copySpecimenButton}\n              {copySpecimenText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nSpecimenBarcodeForm.propTypes = {\n};\n\nSpecimenBarcodeForm.defaultProps = {\n};\n\nexport default BiobankSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimenForm.js","import CustomFields from './customFields'\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenCollectionForm extends React.Component {\n  constructor() {\n    super();\n    \n    this.setCollection = this.setCollection.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setCollection(name, value) {\n    let collection = this.props.specimen.collection;\n    collection[name] = value;\n    this.props.setSpecimen('collection', collection);\n  }\n\n  //TODO: this function may not be necessary\n  addData() {\n    let collection = this.props.specimen.collection;\n    collection.data = {};\n    this.props.setSpecimen('collection', collection)\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.collection.data;\n    data[name] = value;\n    this.setCollection('data', data);\n  }\n\n  render() {\n    let updateButton;\n    if (((this.props.data||{}).specimen||{}).collection) {\n      updateButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    }\n\n    let specimenTypeUnits = {};\n    let specimenTypeFields;\n    if (this.props.specimen.typeId) {\n      \n      //This modifies the selections for unit drop down based on the chosen\n      //specimen type \n      for (let id in this.props.specimenTypeUnits[this.props.specimen.typeId]) {\n        specimenTypeUnits[id] = this.props.specimenTypeUnits[this.props.specimen.typeId][id].unit;\n      }\n\n      let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.props.specimen.typeId];\n      if (specimenTypeFieldsObject) {\n        if (((this.props.specimen||{}).collection||{}).data) {\n          specimenTypeFields = (\n            <CustomFields\n              object={this.props.specimen.collection.data}\n              fields={specimenTypeFieldsObject}\n              errors={this.props.errors.data}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    let specimenFields;\n    if (this.props.specimen.typeId) {\n      specimenFields = (\n        <div>\n          <TextboxElement\n            name=\"quantity\"\n            label=\"Quantity\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.quantity}\n            errorMessage={this.props.errors.quantity}\n          />\n          <SelectElement\n            name=\"unitId\"\n            label=\"Unit\"\n            options={specimenTypeUnits}\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.unitId}\n            errorMessage={this.props.errors.unitId}\n          />\n          {specimenTypeFields}\n          <DateElement\n            name=\"date\"\n            label=\"Date\"\n            minYear=\"2000\"\n            maxYear=\"2018\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.date}\n            errorMessage={this.props.errors.date}\n          />\n          <TimeElement\n            name=\"time\"\n            label=\"Time\"\n            onUserInput={this.setCollection}\n            required={true}\n            value={this.props.specimen.collection.time}\n            errorMessage={this.props.errors.time}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setCollection}\n            ref=\"comments\"\n            value={this.props.specimen.collection.comments}\n            errorMessage={this.props.errors.comments}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"biobankSpecimen\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        {specimenFields}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\n\nSpecimenCollectionForm.propTypes = {\n  setSpecimen: React.PropTypes.func.isRequired,\n  saveSpecimen: React.PropTypes.func,\n  specimen: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  specimenTypeUnits: React.PropTypes.object.isRequired,\n  specimenTypeAttributes: React.PropTypes.object.isRequired,\n}\n\nSpecimenCollectionForm.defaultProps = {\n  errors: {}\n}\n\nexport default SpecimenCollectionForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/collectionForm.js","/**\n * Biobank Custom Attribute Fields\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\n\nclass CustomFields extends React.Component {\n  render() {\n    let fields = this.props.fields;\n    let attributeFields = Object.keys(fields).map(attribute => {\n\n      let datatype = this.props.attributeDatatypes[fields[attribute]['datatypeId']].datatype;\n      if (datatype === 'text' || datatype === 'number') {\n        if (fields[attribute]['refTableId'] === null) {\n          return (\n            <TextboxElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n              errorMessage={this.props.errors[attribute]}\n            />\n          );\n        }\n\n        if (fields[attribute]['refTableId'] !== null) {\n          return (\n            <SelectElement\n              name={attribute}\n              label={fields[attribute]['name']}\n              options={this.props.attributeOptions[fields[attribute]['refTableId']]}\n              onUserInput={this.props.setData}\n              required={fields[attribute]['required']}\n              value={this.props.object[attribute]}\n              errorMessage={this.props.errors[attribute]}\n            />\n          );\n        }\n      }\n\n      if (datatype === 'datetime') {\n        return (\n          <DateElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.object[attribute]}\n            errorMessage={this.props.errors[attribute]}\n          />\n        );\n      }\n\n      // Do not present the possibility of uploading if file is already set\n      // File must instead be deleted or overwritten.\n      if (datatype === 'file' && !(this.props.data||{})[attribute]) {\n        return (\n          <FileElement\n            name={attribute}\n            label={fields[attribute]['name']}\n            onUserInput={this.props.setData}\n            required={fields[attribute]['required']}\n            value={this.props.current.files[this.props.object[attribute]]}\n            errorMessage={this.props.errors[attribute]}\n          />\n        );\n      }\n    });\n\n    return (\n      <div>\n        {attributeFields}\n      </div>\n    );\n  }\n}\n\nCustomFields.propTypes = {\n  fields: React.PropTypes.object.isRequired,\n  attributeDatatypes: React.PropTypes.object.isRequired,\n  attributeOptions: React.PropTypes.object.isRequired,\n  object: React.PropTypes.object.isRequired,\n  setData: React.PropTypes.func.isRequired,\n  errors: React.PropTypes.object\n}\n\nCustomFields.defaultProps = {\n  errors: {}\n}\n\nexport default CustomFields;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/customFields.js","/**\n * Biobank Container Parent Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nimport ContainerDisplay from './containerDisplay.js';\n\nclass ContainerParentForm extends React.Component {\n  constructor() {\n    super();\n    this.setContainer = this.setContainer.bind(this);\n  }\n\n  //This is to have a child adopt the properties of the parent\n  //TODO: there might be a better way to do this.\n  setContainer(name, value) {\n    let container = this.props.containersNonPrimary[value];\n    this.props.setContainer(name, value);\n    this.props.setContainer('coordinate', null);\n    this.props.setContainer('temperature', container.temperature);\n    this.props.setContainer('centerId', container.centerId);\n    this.props.setContainer('statusId', container.statusId);\n  }\n\n  recursive(object, id) {\n    for (let key in this.props.containersNonPrimary) {\n      if (id == this.props.containersNonPrimary[key].parentContainerId) {\n        object = this.recursive(object, key);\n        delete object[key];\n      }\n    }\n    return object;\n  }\n\n  render() {\n    let containerDisplay;\n\n    let containerBarcodesNonPrimary = this.props.mapFormOptions(\n      this.props.containersNonPrimary, 'barcode'\n    );\n    if (this.props.data) {\n      containerBarcodesNonPrimary = this.recursive(containerBarcodesNonPrimary, this.props.data.container.id);\n      delete containerBarcodesNonPrimary[this.props.data.container.id];\n    }\n\n    let parentContainerField = ( \n      <SelectElement\n        name=\"parentContainerId\"\n        label=\"Parent Container Barcode\"\n        options={containerBarcodesNonPrimary}\n        onUserInput={this.setContainer}\n        value={this.props.container.parentContainerId}\n      />  \n    );  \n\n    if (this.props.container.parentContainerId) {\n      let dimensionId = this.props.containersNonPrimary[\n        this.props.container.parentContainerId\n      ].dimensionId;\n\n      if (dimensionId) {\n        // This will eventually become unecessary\n        let dimensions = this.props.containerDimensions[dimensionId];\n\n        // Total coordinates is determined by the product of the dimensions\n        let coordinatesTotal = 1;\n        for (let dimension in dimensions) {\n          coordinatesTotal = coordinatesTotal * dimensions[dimension];\n        }\n\n        // Mapping of options for the SelectElement\n        let coordinates = {}; \n        for (let i = 1; i <= coordinatesTotal; i++) {\n          // If the coordinate is already taken, skip it.\n          // this doubling of if statements seems unnecessary\n          if (this.props.containerCoordinates[this.props.container.parentContainerId]) {\n            if (this.props.containerCoordinates[this.props.container.parentContainerId][i]) {\n              continue; \n            }\n          }\n\n          coordinates[i] = i;\n        }   \n\n        containerDisplay = (\n          <ContainerDisplay\n            dimensions={\n              this.props.containerDimensions[\n                this.props.containersNonPrimary[\n                  this.props.container.parentContainerId\n                ].dimensionId\n              ]\n            }\n            coordinates={\n              this.props.containerCoordinates[this.props.container.parentContainerId]\n            }\n            containerTypes={this.props.containerTypes}\n            containerStati={this.props.containerStati} \n            select={true}\n            selectedCoordinate={this.props.container.coordinate}\n            setContainer={this.props.setContainer}\n          />\n        );\n      }\n    }   \n\n    let updateButton;\n    if ((this.props.data||{}).container) {\n      updateButton = (\n        <div>\n          <br/>\n          <ButtonElement label='Update'/>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        onSubmit={this.props.saveContainer}\n      >\n        {parentContainerField}\n        {containerDisplay}\n        {updateButton}\n      </FormElement>\n    );\n  }\n}\n\nContainerParentForm.propTypes = {\n  mapFormOptions: React.PropTypes.func.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func,\n  data: React.PropTypes.object,\n  container: React.PropTypes.object.isRequired,\n  containersNonPrimary: React.PropTypes.object.isRequired,\n  containerDimensions: React.PropTypes.object.isRequired,\n  containerCoordinates: React.PropTypes.object.isRequired,\n  containerTypes: React.PropTypes.object,\n  containerStati: React.PropTypes.object,\n};\n\nexport default ContainerParentForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerParentForm.js","import Modal from 'Modal'\n\n/**\n * ContainerDisplay\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass ContainerDisplay extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      coordinate: null,\n    }\n   \n    this.redirectURL = this.redirectURL.bind(this);\n    this.drag = this.drag.bind(this);\n    this.drop = this.drop.bind(this);\n    this.loadContainer = this.loadContainer.bind(this);\n    this.checkoutContainers = this.checkoutContainers.bind(this);\n  }\n\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  componenDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  redirectURL(e) {\n    let coordinate = e.target.id;\n    if (this.props.coordinates[coordinate]) {\n      let load = this.props.types[\n        this.props.children[this.props.coordinates[coordinate]].typeId\n      ].primary == 1 ? this.props.loadSpecimen : this.props.loadContainer;\n\n      load(this.props.children[this.props.coordinates[coordinate]].barcode);\n    }\n  }\n\n  allowDrop(e) {\n      e.preventDefault();\n  }\n  \n  drag(e) {\n      let container = JSON.stringify(\n        this.props.children[this.props.coordinates[e.target.id]]\n      );\n      e.dataTransfer.setData(\"text/plain\", container);\n  }\n  \n  drop(e) {\n    e.preventDefault();\n\n    let container = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    let newCoordinate = parseInt(e.target.id);\n   \n    container.coordinate = newCoordinate;\n\n    let node = e.target;\n    this.props.saveChildContainer(container).then(()=>{\n      this.setState({coordinate: node.id});\n    });\n  }\n\n  increaseCoordinate(coordinate) {\n      let capacity = Object.values(this.props.dimensions).reduce(\n        (total, current) => {return total * current});\n      coordinate++;\n      for (let c in this.props.coordinates) {\n        if (c == coordinate || coordinate > capacity) {\n          this.props.close();\n        }\n      }\n      this.props.setCurrent('coordinate', coordinate);\n      this.props.setCurrent('sequential', true);\n  }\n\n  loadContainer(name, value) {\n    if (value) {\n      let containerId = value;\n      let container = this.props.containers[containerId];\n      container.parentContainerId = this.props.container.id;\n      container.coordinate = this.props.current.coordinate;\n\n      this.props.saveChildContainer(container).then(() => {\n        let node = document.getElementById(container.coordinate);\n        this.setState({coordinate: node.id});\n        if (this.props.current.sequential) {\n          let coordinate = this.props.current.coordinate;\n          this.props.edit('barcode').then(() => {\n            this.increaseCoordinate(coordinate);\n            });\n        } else {\n          this.props.close();\n        }\n      });\n    }\n  }\n\n  //TODO: this is the same as the containerList in the container form\n  //These functions should be combined in biobankIndex.js\n  checkoutContainers() {\n    return new Promise(() => {\n      let checkoutList = this.props.current.list;\n      for (let coordinate in checkoutList) {\n        checkoutList[coordinate].parentContainerId = null;\n        checkoutList[coordinate].coordinate = null;\n        this.props.saveChildContainer(checkoutList[coordinate]);\n      }\n    });\n  }\n\n  render() {\n  let barcodeField;\n  if ((this.props.editable||{}).barcode) {\n    barcodeField = (\n      <SearchableDropdown\n        name='barcode'\n        label='Barcode'\n        options={this.props.barcodes}\n        onUserInput={this.loadContainer}\n        placeHolder='Please Scan or Select Barcode'\n        autoFocus={true}\n      />\n    );\n  }\n  \n  let load = (\n    <div className={((this.props.editable||{}).barcode) ? 'open' : 'closed'}>\n      <FormElement>\n        <StaticElement\n          label='Note'\n          text='Select or Scan Containers to be Loaded. If Sequential is Checked,\n           the Coordinate will Auto-Increment after each Load.'\n        />\n        <CheckboxElement\n          name='sequential'\n          label='Sequential'\n          value={this.props.current.sequential}\n          onUserInput={this.props.setCurrent}\n        />\n        {barcodeField}\n        <ButtonElement\n          label='Done'\n          onUserInput={this.props.close}\n        />\n      </FormElement>\n    </div>\n  );\n\n  if ((this.props.editable||{}).containerCheckout) {\n    let barcodes = this.props.mapFormOptions(this.props.children, 'barcode');\n    barcodeField = (\n      <SearchableDropdown\n        name='barcode'\n        label='Barcode'\n        options={barcodes}\n        onUserInput={(name, value) => value && this.props.setCheckoutList(this.props.children[value])}\n        placeHolder='Please Scan or Select Barcode'\n        autoFocus={true}\n      />\n    );\n  }\n\n  let checkout = (\n    <div className={((this.props.editable||{}).containerCheckout) ? 'open' : 'closed'}>\n      <FormElement>\n        <StaticElement\n          label='Note'\n          text=\"Click, Select or Scan Containers to be Unloaded and Press 'Confirm'\"\n        />\n        {barcodeField}\n        <ButtonElement\n          label='Confirm'\n          onUserInput={()=>{this.checkoutContainers(); this.props.close();}}\n        />\n        <StaticElement\n          text={<a onClick={this.props.close} style={{cursor: 'pointer'}}>Cancel</a>}\n        />\n      </FormElement>\n    </div>\n\n  );\n\n  //TODO: This will eventually need to be reworked and cleaned up\n  let column = [];\n  let row = [];\n  let display;\n  let coordinate = 1;\n  if (this.props.dimensions) {\n    for (let y=0; y < this.props.dimensions.y; y++) {\n      column = [];\n      for (let x=1; x <= this.props.dimensions.x; x++) {\n        \n        let nodeWidth = (500/this.props.dimensions.x) - (500/this.props.dimensions.x * 0.08);\n        let nodeStyle = {width: nodeWidth}\n        let nodeClass = 'node';\n        let tooltipTitle = null;\n        let title = null;\n        let dataHtml = 'false';\n        let dataToggle = null;\n        let dataPlacement = null;\n        let draggable = 'false';\n        let onDragStart = null;\n        let onDragOver = this.allowDrop;\n        let onDrop = this.drop;\n        let onClick = this.redirectURL;\n\n        if (!this.props.select) {\n          if ((this.props.coordinates||{})[coordinate]) {\n            if (coordinate in this.props.current.list) {\n              nodeClass = 'node checkout';\n            } else if (coordinate == this.state.coordinate) {\n              nodeClass = 'node new';\n            } else {\n              nodeClass = 'node occupied'\n            }\n            dataHtml = 'true';\n            dataToggle = 'tooltip';\n            dataPlacement = 'top';\n            //tooltipTitle = \n            //  '<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //  '<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //  '<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            draggable = this.props.editable.barcode || this.props.editable.containerCheckout ? 'false' : 'true';\n            onDragStart = this.drag;\n            onDragOver = null;\n            onDrop = null;\n            if (this.props.editable.containerCheckout) {\n              onClick = (e) => {\n                let container = this.props.containers[this.props.coordinates[e.target.id]];\n                this.props.setCheckoutList(container);\n              };\n            }\n            if (this.props.editable.barcode) {\n              onClick = null;\n            }\n          } else if (!this.props.editable.containerCheckout) {\n            nodeClass = coordinate == this.props.current.coordinate ?\n              'node selected' : 'node load';\n            title = 'Load...';\n            onClick = (e) => {\n              let containerId = e.target.id;\n              this.props.edit('barcode').then(() => {\n                this.props.setCurrent('coordinate', containerId)\n              })\n            };\n          }\n        }\n      \n        if (this.props.select) {\n          if (coordinate == this.props.selectedCoordinate) {\n            nodeClass = 'node occupied';\n          }\n          else if (!this.props.coordinates) {\n            nodeClass = 'node available';\n            onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n          } \n          else if (this.props.coordinates) {\n            if (!this.props.coordinates[coordinate]) {\n              nodeClass = 'node available';\n              onClick = (e) => this.props.setContainer('coordinate', e.target.id);\n            }\n            else if (this.props.coordinates[coordinate]){\n            //  dataHtml = 'true';\n            //  dataToggle = 'tooltip';\n            //  dataPlacement = 'top';\n            //  tooltipTitle = \n            //'<h5>' + this.props.children[this.props.coordinates[coordinate]].barcode + '</h5>' + \n            //'<h5>' + this.props.containerTypes[this.props.children[this.props.coordinates[coordinate]].typeId].label + '</h5>' + \n            //'<h5>' + this.props.containerStati[this.props.children[this.props.coordinates[coordinate]].statusId].status + '</h5>';\n            }\n          }\n        }\n\n        let coordinateDisplay;\n        if (true) {\n          coordinateDisplay = x + (this.props.dimensions.x * y);\n        } else if (false) {\n          coordinateDisplay = String.fromCharCode(65+y)+''+x;\n        }\n\n        column.push(\n          <div\n            id={coordinate}\n            title={title}\n            className={nodeClass}\n            data-html={dataHtml}\n            data-toggle={dataToggle}\n            data-placement={dataPlacement}\n            data-original-title={tooltipTitle}\n            style={nodeStyle}\n            onClick={onClick}\n            draggable={draggable}\n            onDragStart={onDragStart}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {coordinateDisplay}\n          </div>\n        );\n\n        coordinate++;\n      }\n\n      let rowHeight = (500/this.props.dimensions.y) - (500/this.props.dimensions.y * 0.08);\n      let rowMargin = (500/this.props.dimensions.y * 0.04);\n      let rowStyle = {\n        height: rowHeight,\n      }\n      \n      row.push(\n        <div className='row' style={rowStyle}>{column}</div>\n      );\n    }\n    \n    display = row;\n  }\n \n    return (\n      <div>\n        <div style={{width: 500}}>\n          {checkout}\n          {load}\n        </div>\n        <div className='display'>\n          {display}\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerDisplay.propTypes = {\n}\n\nContainerDisplay.defaultProps = {\n  current: {}\n}\n\nexport default ContainerDisplay;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerDisplay.js","/**\n * This file contains React components for Modal component.\n *\n * @author Henri Rabalais\n * @version 1.1.0\n *\n */\n\n/**\n * Modal Component.\n * React wrapper for a Modal Window. Allows to dynamically toggle a Modal window.\n *\n * ================================================\n * Usage:\n *\n * =================================================\n *\n */\nclass Modal extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal() {\n    if (this.props.throwWarning) {                                              \n      swal({                                                                    \n        title: \"Are You Sure?\",                                                 \n        text: \"Leaving the form will result in the loss of any information entered.\",\n        type: \"warning\",                                                        \n        showCancelButton: true,                                                 \n        confirmButtonText: 'Proceed',                                           \n        cancelButtonText: 'Cancel',                                             \n      },                                                                        \n      () => {                                                              \n        this.props.closeModal();                                                        \n      });                                                            \n    } else {                                                                    \n      this.props.closeModal();\n    }                                                                           \n  }   \n\n  render() {\n    // Black Background with Alpha Channel\n    const backdropStyle = {\n      position: 'fixed',\n      zIndex: 9998,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // White Modal Window\n    const modalStyle = {\n      position: 'relative',\n      maxWidth: 850,\n      maxHeight: '100%',\n      margin: '0 auto',\n      backgroundColor: '#fff',\n      borderRadius: 10,\n      overflowY: 'auto',\n      zIndex: 9999\n    };\n\n    const titleStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#093782',\n      height: '50px',\n      borderTopRightRadius: '10',\n      color: '#FFFFFF',\n      fontSize: 24,\n      padding: 20,\n    }\n\n    const glyphStyle = {\n      marginLeft: 'auto',\n      cursor: 'pointer'\n    }\n\n    const bodyStyle = {\n      padding: 15\n    }\n  \n    let modal;\n    if (this.props.show) {\n      modal = (\n        <div style={backdropStyle} onClick={this.closeModal}>\n          <div style={modalStyle} onClick={e => {e.stopPropagation()}}>\n            <div style={titleStyle}>\n              {this.props.title}\n              <span style={glyphStyle} onClick={this.closeModal}>\n                ×\n              </span>\n            </div>\n            <div style={bodyStyle}>\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: React.PropTypes.string,\n  show: React.PropTypes.bool.isRequired,\n  closeModal: React.PropTypes.func.isRequired,\n  throwWarning: React.PropTypes.bool.isRequired,\n};\n\nModal.defaultProps = {\n  throwWarning: true,\n};\n\nexport default Modal;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Modal.js","import BiobankSpecimenForm from './specimenForm';\nimport SpecimenPreparationForm from './preparationForm';\n\n/**\n * Biobank Pool Specimen Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\nclass PoolSpecimenForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formData: {},\n      barcodeList: {},\n      errorMessage: null,\n      formErrors: {},\n      barcodeCount: 2,\n      preparation: false,\n      step: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.setPreparationFormData = this.setPreparationFormData.bind(this);\n    this.setSpecimenFormData = this.setSpecimenFormData.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.setBarcodeCount = this.setBarcodeCount.bind(this);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.addPreparation = this.addPreparation.bind(this);\n    this.removePreparation = this.removePreparation.bind(this);\n    this.validate = this.validate.bind(this);\n    this.formSwitch = this.formSwitch.bind(this);\n    this.preparationSwitch = this.preparationSwitch.bind(this);\n    this.runAjax = this.runAjax.bind(this);\n  }\n\n  next() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          step: this.state.step+1\n        });\n      }, \n      error => {\n        swal(\"Oops!\", error.responseText, \"error\");\n      }\n    );\n  }\n\n  previous() {\n    this.setState({\n      step: this.state.step-1\n    });\n  }\n\n  validate() {\n    return this.runAjax(this.props.specimenRequest, {barcodeList: this.state.barcodeList});\n  }\n\n  runAjax(url, inputData) {\n    return new Promise((resolve, reject) => {\n      $.ajax(url, {\n        method: \"GET\",\n        dataType: 'json',\n        data: inputData,\n        success: function(data) {\n          resolve(data);\n        }.bind(this),\n        error: function(error, textStatus, errorThrown) {\n          reject(error);\n          console.error(error);\n        }\n      });  \n    })\n  }\n\n  setBarcodeCount(field, value) {\n    let barcodeCount = value;\n    let barcodeList = this.state.barcodeList;\n    for (let barcode in barcodeList) {\n      if (barcode > barcodeCount) {\n        delete barcodeList[barcode];\n      }\n    }\n\n    this.setState({barcodeCount, barcodeList});\n  }\n\n  formSwitch(inputForm, specimenForm) {\n    switch(this.state.step) {\n      case 1:\n        return inputForm;\n      case 2:\n        return specimenForm;\n    }\n  }\n\n  preparationSwitch(preparationButton, preparationForm) {\n    switch(this.state.preparation) {\n      case false:\n        return preparationButton;\n      case true:\n        return preparationForm;\n    }\n  }\n\n  addPreparation() {\n    this.validate().then(\n      data => {\n        this.setState({\n          poolData: data,\n          preparation: true\n        });\n      },\n      error => {\n        swal('Oh no!', error.responseText, 'error');\n      }\n    );\n  }\n\n  removePreparation() {\n    let formData = this.state.formData;\n    //TODO: is it better to set it to empty, or delete it?\n    formData.preparationForm = {};\n    this.setState({\n      preparation: false,\n      formData\n    });\n  }\n\n  render() {\n    //Generates barcodes\n    let barcodes = [];\n    for (let i=1; i<=this.state.barcodeCount; i++) {\n      barcodes.push(\n        <TextboxElement\n          name={i}\n          label={'Barcode ' + i}\n          onUserInput={this.setFormData}\n          required={true}\n          value={this.state.barcodeList[i]}\n          errorMessage={this.state.formErrors[i]}\n        />\n      )\n    }\n    \n    let preparationButton = ( \n      <div className='row'>\n        <div className='col-xs-4'/>\n        <div className='col-xs 4 action'>\n            <span className='action'>\n            <div \n              className='action-button add'\n              onClick={this.addPreparation}\n            >\n              +\n            </div>\n            </span>\n            <div className='action-title'>\n              Add Preparation\n            </div>\n        </div>\n      </div>\n    );\n\n    let preparationForm;\n    if (this.state.poolData) {\n\n      const specimenProtocolAttributes = this.props.specimenProtocolAttributes[this.state.poolData.typeId]\n \n      let specimenProtocols = {};\n      for (let id in specimenProtocolAttributes) {\n        specimenProtocols[id] = this.props.specimenProtocols[id];\n      }\n      specimenProtocols = this.props.mapFormOptions(specimenProtocols, 'protocol');\n\n      preparationForm = (\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <SpecimenPreparationForm\n              formData={this.state.formData.preparationForm}\n              specimenProtocols={specimenProtocols}\n              specimenProtocolAttributes={specimenProtocolAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              setParentFormData={this.setPreparationFormData}\n              insertAction={`${loris.BaseURL}/biobank/ajax/submitData.php?action=insertSpecimenPreparation`}\n            />\n            <a className='pull-right' style={{cursor:'pointer'}} onClick={this.removePreparation}>Cancel Preparation</a>\n          </div>\n        </div>\n      );\n    }\n\n    let inputForm = (\n      <div>\n        <div className='row'>\n          <div className='col-sm-9 col-sm-offset-1'>\n            <StaticElement\n              label='Pooling Note'\n              text='Select or Scan the specimens to be pooled. Please ensure that they\n                    are the same type, and share the same PSCID and Visit Label'\n            />\n            <NumericElement\n              label='№ of Specimens'\n              min='2'\n              max='100'\n              value={this.state.barcodeCount}\n              onUserInput={this.setBarcodeCount}\n            />\n            {barcodes}\n          </div>\n        </div>\n        {this.preparationSwitch(preparationButton, preparationForm)}\n        <div className='col-sm-3 col-xs-offset-9 action'>\n          <div className='action-title'>\n            Next\n          </div>\n          <span className='action'>\n            <div \n              className='action-button update'\n              onClick={this.next}\n            >\n              <span className='glyphicon glyphicon-chevron-right'/>\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n\n    //TODO: Things here need to be in the proper order!!!\n    let specimenForm;\n    if (this.state.poolData) {\n\n      // This is to provide the options for the output specimens\n      let specimenTypes = {};\n      if (this.state.poolData.typeId) {\n        specimenTypes[this.state.poolData.typeId] = this.props.specimenTypes[this.state.poolData.typeId];\n      }\n  \n      let pscid = this.props.pSCIDs[this.state.poolData.candidateId];\n      let visit = this.props.sessionData[pscid].visits[this.state.poolData.sessionId];\n\n      let barcodesArray = Object.values(this.state.barcodeList); \n      let barcodesString = barcodesArray.join(', ');  \n\n      // TODO: rather than all specimen units this should really be specific to the\n      // type\n      let specimenUnits = this.props.mapFormOptions(this.props.specimenUnits, 'unit');\n\n      specimenForm = (\n        <div className='row'>\n          <div className='col-xs-12'>\n            <BiobankSpecimenForm\n              formData={this.state.formData.specimenForm}\n              candidateId={this.state.poolData.candidateId}\n              pscid={pscid}\n              sessionId={this.state.poolData.sessionId}\n              visit={visit}\n              parentSpecimenBarcodes={barcodesString}\n              parentSpecimenIds={this.state.poolData.specimenIds}\n              specimenTypes={specimenTypes}\n              specimenTypeUnits={this.props.specimenTypeUnits}\n              specimenUnits={specimenUnits}\n              containerTypesPrimary={this.props.containerTypesPrimary}\n              containersNonPrimary={this.props.containersNonPrimary}\n              specimenTypeAttributes={this.props.specimenTypeAttributes}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              capacities={this.props.capacities}\n              containerDimensions={this.props.containerDimensions}\n              containerCoordinates={this.props.containerCoordinates}\n              setParentFormData={this.setSpecimenFormData}\n              action={`${loris.BaseURL}/biobank/ajax/submitData.php?action=submitSpecimen`}\n              refreshParent={this.props.refreshParent}\n            />\n            <ButtonElement\n              label='Submit'\n            />\n          </div>\n          <div className='col-sm-3 col-xs-offset-2 action'>\n            <span className='action'>\n              <div \n                className='action-button update'\n                onClick={this.previous}\n              >\n                <span className='glyphicon glyphicon-chevron-left'/>\n              </div>\n            </span>\n            <div className='action-title'>\n              Previous\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <FormElement\n        name=\"poolSpecimenForm\"\n        id='poolSpecimenForm'\n        onSubmit={this.handleSubmit}\n        ref=\"form\"\n      >\n        {this.formSwitch(inputForm, specimenForm)}\n      </FormElement>\n    );\n  }\n\n/** *******************************************************************************\n *                      ******     Helper methods     *******\n *********************************************************************************/\n\n\n  validateForm(formElement, value) {\n    let formErrors = this.state.formErrors;\n\n    //validate barcode regex\n    if (formElement === \"barcode\" && value !== \"\") {\n      if (!(/^hello/.test(this.state.formData.barcode))) {\n        formErrors.barcode = true;\n      } else {\n        formErrors.barcode = false;\n      }\n    }\n\n    //validate that quantity is a number and less than capacity\n    if (formElement === \"quantity\" && value !== \"\") {\n      if (isNaN(value) || (value > this.props.capacities[this.state.currentContainerType])) {\n        formErrors.quantity = true;\n      } else {\n        formErrors.quantity = false;\n      }\n    }\n\n    //validate datatypes and regex of generated type attributes\n    let specimenTypeFieldsObject = this.props.specimenTypeAttributes[this.state.currentSpecimenType];\n    let specimenTypeFields = Object.keys(specimenTypeFieldsObject).map((attribute) => {\n\n      let datatype = this.props.attributeDatatypes[specimenTypeFieldsObject[attribute]['datatypeId']].datatype;\n      if (datatype === \"number\") {\n        if (formElement === attribute) {\n          if (isNaN(value) && value !== \"\") {\n            formErrors[attribute] = true;\n          } else {\n            formErrors[attribute] = false;\n          }\n        }\n      }\n    })\n\n    this.setState({\n      formErrors: formErrors\n    });\n  }\n\n\n  /**\n   * Handle form submission\n   * @param {object} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.submitForm();\n  }\n\n  /*\n   * Uploads the file to the server\n   */\n  submitForm() {\n    // Set form data and specimen the biobank file\n    let formData = this.state.formData;\n    let preparationForm = this.state.formData.preparationForm;\n    let specimenForm = this.state.formData.specimenForm;\n    formData['preparationForm'] = JSON.stringify(preparationForm);\n    formData['specimenForm'] = JSON.stringify(specimenForm);\n\n    console.log(formData.specimenForm);\n    console.log(formData.preparationForm);\n\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        let xhr = new window.XMLHttpRequest();\n        return xhr;\n      }.bind(this),\n      success: function() {\n        //this.props.refreshParent();\n        swal(\"Specimens Pooled Successful!\", \"\", \"success\");\n        this.props.onSuccess();\n      }.bind(this),\n      error: function(err) {\n        console.error(err);\n        let msg = err.responseJSON ? err.responseJSON.message : \"Specimen error!\";\n        this.setState({\n          errorMessage: msg,\n        });\n        swal(msg, \"\", \"error\");\n      }.bind(this)\n    });\n  }\n\n  /**\n   * Checks if the inputted file name is valid\n   *\n   * @param {string} requiredFileName - Required file name\n   * @param {string} fileName - Provided file name\n   * @return {boolean} - true if fileName starts with requiredFileName, false\n   *   otherwise\n   */\n//  isValidFileName(requiredFileName, fileName) {\n//    if (fileName === null || requiredFileName === null) {\n//      return false;\n//    }\n//\n//    return (fileName.indexOf(requiredFileName) === 0);\n//  }\n\n  /**\n   * Validate the form\n   *\n   * @param {object} formRefs - Object containing references to React form elements\n   * @param {object} formData - Object containing form data inputed by user\n   * @return {boolean} - true if all required fields are filled, false otherwise\n   */\n  isValidForm(formRefs, formData) {\n    let isValidForm = true;\n\n    let requiredFields = {\n      pscid: null,\n      visitLabel: null,\n    };\n\n    Object.keys(requiredFields).map(function(field) {\n      if (formData[field]) {\n        requiredFields[field] = formData[field];\n      } else if (formRefs[field]) {\n        formRefs[field].props.hasError = true;\n        isValidForm = false;\n      }\n    });\n    this.forceUpdate();\n\n    return isValidForm;\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    // This lets the modal window know that there is formData\n    // and will cause a warning to be thrown of the modal window\n    // is exited\n    this.props.onChange instanceof Function && this.props.onChange();\n  \n    if (formElement === \"pscid\" && value !== \"\" && value !== undefined) {\n      this.state.visits = this.props.sessionData[this.props.pSCIDs[value]].visits;\n    }\n\n    let formData = this.state.formData;\n    let barcodeList = this.state.barcodeList;\n \n    //TODO: there must be a better way to do this\n    if (isNaN(formElement)) {\n      formData[formElement] = value;\n    } else {\n      barcodeList[formElement] = value;\n    }\n\n    this.setState({\n      formData,\n      barcodeList\n    });\n  }\n\n  setPreparationFormData(preparationFormData) {\n    let formData = this.state.formData;\n    formData.preparationForm = preparationFormData;\n    \n    this.setState({formData});\n  }\n\n  setSpecimenFormData(specimenFormData) {\n    let formData = this.state.formData;\n    formData.specimenForm = specimenFormData;\n  \n    this.setState({formData});\n  }\n}\n\nPoolSpecimenForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  action: React.PropTypes.string.isRequired,\n  refreshTable: React.PropTypes.func\n};\n\nexport default PoolSpecimenForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/poolSpecimenForm.js","import CustomFields from './customFields';\n\n/**\n * Biobank Specimen Form\n *\n * Acts a subform for BiobankCollectionForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenPreparationForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setPreparation = this.setPreparation.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setPreparation(name, value) {\n    let preparation = this.props.specimen.preparation;\n    preparation[name] = value;\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  addData() {\n    let preparation = this.props.specimen.preparation;\n    preparation.data = {};\n    this.props.setSpecimen('preparation', preparation);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.preparation.data;\n    data[name] = value;\n    this.setPreparation('data', data);\n  }\n\n  render() {\n\n    let submitButton;\n    if (this.props.data.specimen.preparation) {\n      submitButton = (\n        <ButtonElement label=\"Update\"/>\n      );\n    } else {\n      submitButton = (\n        <ButtonElement label=\"Submit\"/>\n      );\n    }\n\n    let specimenProtocolFields;\n    if (this.props.specimen.preparation.protocolId) {\n      let specimenProtocolFieldsObject = this.props.specimenProtocolAttributes[this.props.specimen.preparation.protocolId];\n\n      if (specimenProtocolFieldsObject) {\n        if (this.props.specimen.preparation.data) {\n          specimenProtocolFields = (\n            <CustomFields\n              fields={specimenProtocolFieldsObject}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.preparation.data}\n              setData={this.setData}\n            />\n          );\n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenPreparation\"\n        onSubmit={this.props.saveSpecimen}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"protocolId\"\n          label=\"Protocol\"\n          options={this.props.specimenProtocols}\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.protocolId}\n        />\n        {specimenProtocolFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setPreparation}\n          required={true}\n          value={this.props.specimen.preparation.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setPreparation}\n          value={this.props.specimen.preparation.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenPreparationForm.propTypes = {\n}\n\nexport default SpecimenPreparationForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/preparationForm.js","/**\n * Biobank Collection Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to specimen a biobank file attached to a specific instrument\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainerForm extends React.Component {\n\n  render() {\n    //Generates new Barcode Form everytime the addContainer button is pressed\n    let containerListArray = Object.keys(this.props.containerList);\n    let containers = [];\n    let i = 1;\n    for (let key of containerListArray) {\n      containers.push(\n        <ContainerBarcodeForm\n          key={key}\n          containerKey={key}\n          id={i}\n          container={this.props.containerList[key].container}\n          errors={(this.props.errors[key]||{}).container}\n          collapsed={this.props.current.collapsed[key]}\n          containerTypesNonPrimary={this.props.containerTypesNonPrimary}\n          containerBarcodesNonPrimary={this.props.containerBarcodesNonPrimary}\n          removeContainer={containerListArray.length !== 1 ? () => {this.props.removeListItem(key)} : null}\n          addContainer={i == containerListArray.length ? () => {this.props.addListItem('container')} : null}\n          multiplier={this.props.current.multiplier}\n          copyContainer={i == containerListArray.length && this.props.containerList[key] ? this.props.copyListItem : null}\n          setContainerList={this.props.setContainerList}\n          setCurrent={this.props.setCurrent}\n          toggleCollapse={this.props.toggleCollapse}\n        />\n      );\n     \n      i++;\n    }\n\n    return (\n      <FormElement\n        name=\"containerForm\"\n        onSubmit={this.props.saveContainerList}\n        ref=\"form\"\n      >\n        <br/>\n        <div className=\"row\">\n          <div className=\"col-xs-11\">\n            <SelectElement\n              name=\"centerId\"\n              label=\"Site\"\n              options={this.props.centers}\n              onUserInput={this.props.setCurrent}\n              required={true}\n              value={this.props.current.centerId}\n              errorMessage={(this.props.errors.container||{}).centerId}\n            />\n          </div>\n        </div>\n        {containers}\n          <div className=\"col-xs-3 col-xs-offset-9\">\n            <ButtonElement label=\"Submit\"/>\n          </div>\n      </FormElement>\n    );\n  }\n}\n\nBiobankContainerForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  barcode: React.PropTypes.string,\n  refreshTable: React.PropTypes.func\n};\n\n\n/**\n * Container Barcode Form\n *\n * Acts a subform for ContainerForm\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\nclass ContainerBarcodeForm extends React.Component {\n  constructor() {\n    super();\n   \n    this.setContainer = this.setContainer.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  copy() {\n    this.props.copyContainer(this.props.containerKey);\n  }\n\n  //TODO: change form.js so this isn't necessary\n  setContainer(name, value) {\n    this.props.setContainerList(name, value, this.props.containerKey);\n  }\n\n  render() {\n    // HR TODO: All this CSS should eventually be moved\n    let addContainerButton;\n    let addContainerText;\n    let copyContainerButton;\n    let copyContainerText;\n    if (this.props.addContainer) {\n      addContainerButton = (\n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.props.addContainer}\n          >\n          +\n          </div>\n        </span>\n      );\n\n      addContainerText = (\n        <span className='action-title'>\n          New Entry\n        </span>\n      );\n    }   \n    \n    if (this.props.copyContainer) {\n      copyContainerButton = ( \n        <span className='action'>\n          <div\n            className='action-button add'\n            onClick={this.copy}\n          >   \n            <span className='glyphicon glyphicon-duplicate'/>\n          </div>\n        </span>\n      );  \n      copyContainerText = ( \n        <span className='action-title'>\n          <input \n            className='form-control input-sm'\n            type='number'\n            min='1'\n            max='50'\n            style={{width: 50, display: 'inline'}}\n            onChange={(e)=>{this.props.setCurrent('multiplier', e.target.value)}}\n            value={this.props.multiplier}\n          />  \n          Copies\n        </span>\n      );  \n    }   \n\n    let removeContainerButton;\n    if (this.props.removeContainer) {\n      const glyphStyle = { \n        color: '#DDDDDD',\n        marginLeft: 10, \n        cursor: 'pointer',\n        fontSize: 15\n      }   \n\n      removeContainerButton = ( \n        <span \n          className='glyphicon glyphicon-remove' \n          onClick={this.props.removeContainer}\n          style={glyphStyle}\n        />\n      );  \n    }\n\n    return (\n      <FormElement\n        name='container'\n      >\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div>\n            <TextboxElement\n              name='barcode'\n              label={'Barcode ' + this.props.id}\n              onUserInput={this.setContainer}\n              ref='barcode'\n              required={true}\n              value={this.props.container.barcode}\n              errorMessage={this.props.errors.barcode}\n            />\n            </div>\n          </div>\n          <div className='col-xs-1' style={{paddingLeft:0, marginTop:10}}>\n            <span\n              className= {this.props.collapsed ? 'glyphicon glyphicon-chevron-down' : 'glyphicon glyphicon-chevron-up'}\n              style={{cursor: 'pointer', fontSize:15, position:'relative', right:40}}\n              data-toggle='collapse'\n              data-target={'#item-' + this.props.containerKey}\n              onClick={() => this.props.toggleCollapse(this.props.containerKey)}\n            />\n            {removeContainerButton}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-2'/>\n          <div className='col-xs-9'>\n            <div id={'item-' + this.props.containerKey} className='collapse'>\n              <SelectElement\n                name='typeId'\n                label='Container Type'\n                options={this.props.containerTypesNonPrimary}\n                onUserInput={this.setContainer}\n                required={true}\n                value={this.props.container.typeId}\n                errorMessage={this.props.errors.typeId}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-xs-11'>\n            <div className='col-xs-3'/>\n            <div className='col-xs-4 action'>\n              {addContainerButton}\n              {addContainerText}\n            </div>\n            <div className='col-xs-4 action'>\n              {copyContainerButton}\n              {copyContainerText}\n            </div>\n          </div>\n        </div>\n      </FormElement>\n    );\n  }\n}\n\nContainerBarcodeForm.propTypes = {\n\n}\n\nContainerBarcodeForm.defaultProps = {\n  errors: {},\n  multiplier: 1,\n}\n\nexport default BiobankContainerForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerForm.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/**\n * Allows to dynamically render vertical tabs corresponding to tab panes.\n */\n\nclass VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <div className=\"tabbable col-md-3 col-sm-3\">\n          <ul className=\"nav nav-pills nav-stacked\" role=\"tablist\" style={tabStyle}>\n            {tabs}\n          </ul>\n        </div>\n        <div className=\"tab-content col-md-9 col-sm-9\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nVerticalTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nVerticalTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nexport {\n  Tabs,\n  VerticalTabs,\n  TabPane\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/* exported RBiobankSpecimen */\n\nimport Modal from 'Modal';\nimport Globals from './globals.js';\nimport SpecimenCollectionForm from './collectionForm';\nimport SpecimenPreparationForm from './preparationForm';\nimport SpecimenAnalysisForm from './analysisForm';\nimport BiobankSpecimenForm from './specimenForm.js';\nimport LifeCycle from './lifeCycle.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Specimen\n *\n * Fetches data corresponding to a given Specimen from Loris backend and\n * displays a page allowing viewing of meta information of the specimen\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n */\nclass BiobankSpecimen extends React.Component {\n\n  render() {\n\n    //Map Options for Form Select Elements\n    let specimenUnits = this.props.mapFormOptions(this.props.options.specimenUnits, 'unit');\n    let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n    let containerStati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n    let candidates = this.props.mapFormOptions(this.props.options.candidates, 'pscid');\n    let sessions = this.props.mapFormOptions(this.props.options.sessions, 'label');\n\n    let addAliquotForm = (\n      <div\n        className='action'\n        title='Make Aliquots'\n      >\n        <div\n          className='action-button add'\n          onClick={()=>{this.props.edit('aliquotForm')}}\n        >\n          <span>+</span>  \n        </div>\n        <Modal\n          title=\"Add Aliquots\"\n          closeModal={this.props.close}\n          show={this.props.editable.aliquotForm}\n        >\n          <BiobankSpecimenForm\n            data={this.props.data}\n            specimen={this.props.specimen}\n            setSpecimen={this.props.setSpecimen}\n            saveSpecimen={this.props.saveSpecimen}\n            candidates={candidates}\n            sessions={sessions}\n            specimenTypes={this.props.options.specimenTypes}\n            specimenUnits={specimenUnits}\n            specimenTypeUnits={this.props.options.specimenTypeUnits}\n            specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n            attributeOptions={this.props.options.attributeOptions}\n            attributeDatatypes={this.props.options.attributeDatatypes}\n            containerTypesPrimary={containerTypesPrimary}\n            containersNonPrimary={this.props.options.containersNonPrimary}\n            containerDimensions={this.props.options.containerDimensions}\n            containerCoordinates={this.props.options.containerCoordinates}\n            containerStati={containerStati}\n            mapFormOptions={this.props.mapFormOptions}\n            loadFilters={this.props.loadFilters}\n            loadOptions={this.props.loadOptions}\n            close={this.props.close}\n            save={this.props.save}\n          />\n        </Modal>\n      </div>\n    );\n   \n    /** \n     * Collection Form\n     */\n\n    // Declare Variables\n    let collectionPanel;\n    let collectionPanelForm;\n    let cancelEditCollectionButton;\n\n    if (this.props.editable.collection) {\n      let containerTypesPrimary = this.props.mapFormOptions(this.props.options.containerTypesPrimary, 'label');\n\n      collectionPanelForm = (\n        <SpecimenCollectionForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenTypeAttributes={this.props.options.specimenTypeAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          containerTypesPrimary={containerTypesPrimary}\n          specimenTypeUnits={this.props.options.specimenTypeUnits}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditCollectionButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    } else {\n      let specimenTypeAttributes;\n      //loops through data object to produce static elements\n      if (this.props.data.specimen.collection.data) {\n        let collectionData = this.props.data.specimen.collection.data;\n        specimenTypeAttributes = Object.keys(collectionData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenTypeAttributes[this.props.data.specimen.typeId][key].name}\n              text={collectionData[key]}\n            />\n          );\n        })\n      }\n\n      collectionPanelForm = (\n        <FormElement>\n          <StaticElement\n            label='Quantity'\n            text={\n              this.props.data.specimen.collection.quantity+' '+\n              this.props.options.specimenUnits[\n                this.props.data.specimen.collection.unitId\n              ].unit\n            }\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.collection.centerId]}\n          />\n\t        {specimenTypeAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.collection.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.collection.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.collection.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    collectionPanel = (\n\t  <div className='panel specimen-panel panel-default'>\n        <div className='panel-heading'>\n          <div className='lifecycle-node collection'>\n            <div className='letter'>C</div>\n          </div>\n          <div className='title'>\n            Collection\n          </div>\n          <span \n            className={this.props.editable.collection ? null : 'glyphicon glyphicon-pencil'}\n            onClick={this.props.editable.collection ? null : () => {this.props.edit('collection')}}\n          />\n        </div>\n        <div className='panel-body'>\n          {collectionPanelForm}\n          {cancelEditCollectionButton}\n        </div>\n\t  </div>\n    );\n\n    /*\n     * Preparation Form\n     */\n    // Preparation Panel variable declaration\n    let preparationPanel;\n    let preparationForm;\n    let cancelEditPreparationButton;\n    let specimenProtocols = {};\n    let specimenProtocolAttributes = {};\n\n    //Remap specimen Protocols based on the specimen Type\n    for (let id in this.props.options.specimenProtocols) {\n      if (this.props.options.specimenProtocols[id].typeId == this.props.data.specimen.typeId) {\n        specimenProtocols[id] = this.props.options.specimenProtocols[id].protocol;\n        specimenProtocolAttributes[id] = this.props.options.specimenProtocolAttributes[id];\n      }\n    }\n\n    if (this.props.editable.preparation) {\n      preparationForm = (\n        <SpecimenPreparationForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          specimenProtocols={specimenProtocols}\n          specimenProtocolAttributes={specimenProtocolAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditPreparationButton = (\n        <a\n          className=\"pull-right\"\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    // If Preparation does Exist and the form is not in an edit state\n    if (this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      if (this.props.data.specimen.preparation.data) {\n        let preparationData = this.props.data.specimen.preparation.data;\n        specimenProtocolAttributes = Object.keys(preparationData).map((key) => {\n          return (\n            <StaticElement\n              label={this.props.options.specimenProtocolAttributes[this.props.data.specimen.preparation.protocolId][key].name}\n              text={preparationData[key]}\n            />\n          );\n        })\n      }\n\n      preparationForm = (\n        <FormElement>\n          <StaticElement\n            label='Protocol'\n            text={this.props.options.specimenProtocols[this.props.data.specimen.preparation.protocolId].protocol}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.preparation.centerId]}\n          />\n          {specimenProtocolAttributes}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.preparation.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.preparation.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.preparation.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    // If preparation does not exist and if the form is not in an edit state\n    // and a preparation protocol exists for this specimen type\n    if (!(Object.keys(specimenProtocols).length === 0) && !this.props.data.specimen.preparation && !this.props.editable.preparation) {\n      preparationPanel = (\n        <div\n          className='panel specimen-panel inactive'\n        >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('preparation'); this.props.addPreparation()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD PREPARATION\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.preparation || this.props.editable.preparation) {\n      preparationPanel = (\n        <div className='panel specimen-panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>P</div>\n            </div>\n            <div className='title'>\n              Preparation\n            </div>\n            <span \n              className={this.props.editable.preparation ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.preparation ? null : () => {this.props.edit('preparation')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {preparationForm}\n            {cancelEditPreparationButton}\n          </div>\n        </div>\n      );\n    }\n\n    /**\n     * Analysis Form\n     */\n    let analysisPanel;\n    let analysisForm;\n    let cancelEditAnalysisButton;\n    let specimenMethods = {};\n    let specimenMethodAttributes = {};\n    let specimenMethodAttributeFields;\n\n    for (let id in this.props.options.specimenMethods) {\n      if (this.props.options.specimenMethods[id].typeId == this.props.data.specimen.typeId) {\n        specimenMethods[id] = this.props.options.specimenMethods[id].method;\n        specimenMethodAttributes[id] = this.props.options.specimenMethodAttributes[id];\n      }\n    }\n\n    if (this.props.editable.analysis) {\n      analysisForm = (\n        <SpecimenAnalysisForm\n          specimen={this.props.specimen}\n          data={this.props.data}\n          current={this.props.current}\n          specimenMethods={specimenMethods}\n          specimenMethodAttributes={specimenMethodAttributes}\n          attributeDatatypes={this.props.options.attributeDatatypes}\n          attributeOptions={this.props.options.attributeOptions}\n          setSpecimen={this.props.setSpecimen}\n          setCurrent={this.props.setCurrent}\n          saveSpecimen={this.props.saveSpecimen}\n        />\n      );\n\n      cancelEditAnalysisButton = (\n        <a\n          className='pull-right'\n          style={{cursor:'pointer'}}\n          onClick={this.props.close}\n        >\n          Cancel\n        </a>\n      );\n    }\n\n    if (this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      //TODO: Make the below a separate component\n      if (this.props.data.specimen.analysis.data) {\n      let analysisData = this.props.data.specimen.analysis.data;\n\n        specimenMethodAttributeFields = Object.keys(analysisData).map((key) => {\n          if (this.props.options.attributeDatatypes[\n            this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].datatypeId\n          ].datatype === 'file') {\n            return (\n              <LinkElement\n               label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n               text={analysisData[key]}\n               href={loris.BaseURL+'/biobank/ajax/requestData.php?action=downloadFile&file='+analysisData[key]}\n               target={'_blank'}\n               download={analysisData[key]}\n              />\n            );\n          } else {\n            return ( \n              <StaticElement\n                label={this.props.options.specimenMethodAttributes[this.props.data.specimen.analysis.methodId][key].name}\n                text={analysisData[key]}\n              />\n            );\n          }\n        });\n      }\n\n      analysisForm = (\n        <FormElement>\n          <StaticElement\n            label='Method'\n            text={this.props.options.specimenMethods[this.props.data.specimen.analysis.methodId].method}\n          />\n          <StaticElement\n            label='Location'\n            text={this.props.options.centers[this.props.data.specimen.analysis.centerId]}\n          />\n          {specimenMethodAttributeFields}\n          <StaticElement\n            label='Date'\n            text={this.props.data.specimen.analysis.date}\n          />\n          <StaticElement\n            label='Time'\n            text={this.props.data.specimen.analysis.time}\n          />\n          <StaticElement\n            label='Comments'\n            text={this.props.data.specimen.analysis.comments}\n          />\n        </FormElement>\n      );\n    }\n\n    if (!(Object.keys(specimenMethods).length === 0) && !this.props.data.specimen.analysis && !this.props.editable.analysis) {\n      analysisPanel = (\n\t      <div\n          className='panel specimen-panel inactive'\n\t      >\n          <div\n            className='add-process'\n            onClick={() => {this.props.edit('analysis'); this.props.addAnalysis()}}\n          >\n            <span className='glyphicon glyphicon-plus'/>\n          </div>\n          <div>\n          ADD ANALYSIS\n          </div>\n        </div>\n      );\n    } else if (this.props.data.specimen.analysis || this.props.editable.analysis) {\n      analysisPanel = (\n        <div className='panel specimen-panel panel-default'>\n          <div className='panel-heading'>\n            <div className='lifecycle-node preparation'>\n              <div className='letter'>A</div>\n            </div>\n            <div className='title'>\n              Analysis\n            </div>\n            <span\n              className={this.props.editable.analysis ? null : 'glyphicon glyphicon-pencil'}\n              onClick={this.props.editable.analysis ? null : () => {this.props.edit('analysis')}}\n            />\n          </div>\n          <div className='panel-body'>\n            {analysisForm}\n            {cancelEditAnalysisButton}\n          </div>\n        </div>\n      );\n    }\n\n    let globals = (\n      <Globals\n        specimen={this.props.specimen}\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        errors={this.props.errors}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        setSpecimen={this.props.setSpecimen}\n        saveSpecimen={this.props.saveSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );\n\n    //TODO: this can maybe become its own component...?\n    let returnToFilter = (\n      <div>\n        <br/>\n        <span className='action'>\n          <div\n            className='action-button update'\n            onClick={this.props.loadFilters}\n          >\n            <span className='glyphicon glyphicon-chevron-left'/>\n          </div>\n        </span>\n        <div className='action-title'>\n          Return to Filter\n        </div>\n      </div>\n    );\n\n    return (\n      <div id='specimen-page'>\n        <div className=\"specimen-header\">\n          <div className='specimen-title'>\n            <div className='barcode'>\n              Barcode\n              <div className='value'>\n                <strong>{this.props.data.container.barcode}</strong>\n              </div>\n            </div>\n            {addAliquotForm}\n            <ContainerCheckout\n              container={this.props.data.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div>\n          <LifeCycle\n            specimen={this.props.data.specimen}\n            centers={this.props.options.centers}\n          />\n        </div>\n        <div className='summary'>\n          {globals}\n          <div className=\"processing\">\n            {collectionPanel}\n            {preparationPanel}\n            {analysisPanel}\n          </div>\n        </div>\n        {returnToFilter}\n      </div>\n    ); \n  }\n}\n\nBiobankSpecimen.propTypes = {\n  specimenPageDataURL: React.PropTypes.string.isRequired,\n};\n\nexport default BiobankSpecimen;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/specimen.js","import Modal from 'Modal';\nimport QuantityField from './quantityField';\nimport TemperatureField from './temperatureField';\nimport StatusField from './statusField';\nimport CenterField from './centerField';\nimport ContainerParentForm from './containerParentForm';\n\n/**\n * Biobank Globals Component\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass Globals extends React.Component {\n  constructor() {\n    super();\n    this.increaseCycle = this.increaseCycle.bind(this);\n    this.decreaseCycle = this.decreaseCycle.bind(this);\n  }\n\n  increaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle++;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  decreaseCycle() {\n    let cycle = this.props.specimen.fTCycle;\n    cycle--;\n    this.props.setSpecimen('fTCycle', cycle);\n    this.props.saveSpecimen();\n  }\n\n  render() {\n    let specimenTypeField;\n    if (this.props.data.specimen) {\n      specimenTypeField = (\n        <div className=\"item\">                                                \n          <div className='field'>                                             \n            Specimen Type\n            <div className='value'>\n              {this.props.options.specimenTypes[\n                this.props.data.specimen.typeId\n              ].type}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let containerTypeField = (\n       <div className=\"item\">                                                \n         <div className='field'>                                             \n           Container Type                                                              \n           <div className='value'>                                           \n             {this.props.options.containerTypes[\n               this.props.data.container.typeId\n             ].label}\n           </div>                                                            \n         </div>                                                              \n       </div>                                                                \n    );                                                                            \n\n    let quantityField;                                                          \n    if (this.props.data.specimen) {\n      if (!this.props.editable.quantity) {                                             \n        quantityField = (                                                         \n          <div className=\"item\">                                                  \n            <div className='field'>                                               \n              Quantity                                                            \n              <div className='value'>                                             \n                {this.props.data.specimen.quantity}                               \n                {' '+this.props.options.specimenUnits[this.props.data.specimen.unitId].unit}\n              </div>\n            </div>\n            <div\n              className='action'\n              title='Update Quantity'\n            >\n              <div                                                                \n                className='action-button update'                                  \n                onClick={() => this.props.edit('quantity')}                       \n              >                                                                   \n                <span className='glyphicon glyphicon-chevron-right'/>             \n              </div>                                                              \n            </div>                                                                \n          </div>                                                                  \n        );                                                                        \n      } else {                                                                    \n        let units = this.props.mapFormOptions(\n          this.props.options.specimenTypeUnits[this.props.data.specimen.typeId], 'unit'\n        );\n\n        quantityField = (\n          <div className=\"item\">\n            <div className='field'>\n              Quantity\n              <QuantityField\n                specimen={this.props.specimen}\n                errors={this.props.errors.specimen}\n                units={units}\n                close={this.props.close}\n                setSpecimen={this.props.setSpecimen}\n                saveSpecimen={this.props.saveSpecimen}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n\n    let fTCycleField;\n    if (this.props.data.specimen && this.props.options.specimenTypes[\n      this.props.data.specimen.typeId\n    ].freezeThaw == 1) {\n      let decreaseCycle;\n      if (this.props.data.specimen.fTCycle > 0) {\n        decreaseCycle = (\n          <div\n            className='action'\n            title='Remove Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.decreaseCycle}\n            >\n              <span className='glyphicon glyphicon-minus'/>\n            </span>\n          </div>\n        )\n      }\n      fTCycleField = (\n        <div className='item'>\n          <div className='field'>\n          Freeze-Thaw Cycle\n            <div className='value'>\n              {this.props.data.specimen.fTCycle}\n            </div>\n          </div>\n          {decreaseCycle}\n          <div\n            className='action'\n            title='Add Cycle'\n          >\n            <span\n              className='action-button update'\n              onClick={this.increaseCycle}\n            >\n              <span className='glyphicon glyphicon-plus'/>\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    let temperatureField;                                                        \n    if (!this.props.editable.temperature) {                                     \n      temperatureField = (                                                       \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <div className='value'>                                             \n              {this.props.data.container.temperature + '°C'}                    \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Temperature'                                          \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => {this.props.edit('temperature')}}                    \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      temperatureField = (                                                      \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Temperature                                                         \n            <TemperatureField                                                   \n              container={this.props.container}                                  \n              errors={this.props.errors.container}\n              close={this.props.close}                     \n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                                           \n                                                                                \n   let statusField;                                                             \n   if (!this.props.editable.status) {                                          \n     statusField = (                                                            \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <div className='value'>                                             \n              {this.props.options.containerStati[this.props.data.container.statusId].status}\n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('status')}                         \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n     );                                                                         \n     } else {                                                                   \n      let stati = this.props.mapFormOptions(this.props.options.containerStati, 'status');\n      statusField = (                                                           \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Status                                                              \n            <StatusField                                                        \n              container={this.props.container}                                  \n              errors={this.props.errors.container}\n              stati={stati}\n              close={this.props.close}\n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      )                                                                         \n    }                                                      \n\n    let centerField;                                                           \n    if (!this.props.editable.center) {                                        \n      centerField = (                                                          \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <div className='value'>                                             \n              {this.props.options.centers[this.props.data.container.centerId]}  \n            </div>                                                              \n          </div>                                                                \n          <div                                                                  \n            className='action'                                                  \n            title='Update Status'                                               \n          >                                                                     \n            <span                                                               \n              className='action-button update'                                  \n              onClick={() => this.props.edit('center')}                       \n            >                                                                   \n              <span className='glyphicon glyphicon-chevron-right'/>             \n            </span>                                                             \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    } else {                                                                   \n      centerField = (                                                         \n        <div className=\"item\">                                                  \n          <div className='field'>                                               \n            Location                                                            \n            <CenterField                                                      \n              container={this.props.container}\n              errors={this.props.errors.container}\n              centers={this.props.options.centers}\n              close={this.props.close}                        \n              setContainer={this.props.setContainer}                          \n              saveContainer={this.props.saveContainer}                                \n            />                                                                  \n          </div>                                                                \n        </div>                                                                  \n      );                                                                         \n    }                                                                           \n\n    let originField = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Origin                                                            \n          <div className='value'>                                           \n            {this.props.options.centers[this.props.data.container.originId]}  \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let creationDate = (\n      <div className=\"item\">                                                \n        <div className='field'>                                             \n          Creation Date                                                     \n          <div className='value'>                                           \n            {this.props.data.container.dateTimeCreate}                      \n          </div>                                                            \n        </div>                                                              \n      </div>                                                                \n    );\n\n    let parentSpecimenField;\n    if ((this.props.data.specimen||{}).parentSpecimenId) {\n      let barcode = this.props.data.parentSpecimenContainer.barcode;\n      let parentSpecimenFieldValue = (\n        <a style={{cursor: 'pointer'}} onClick={()=>this.props.loadSpecimen(barcode)}>\n          {barcode}\n        </a>\n      );\n\n      parentSpecimenField = (\n        <div className='item'>\n          <div className='field'>\n          Parent Specimen\n            <div className='value'>\n              {parentSpecimenFieldValue || 'None'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //checks if parent container exists and returns static element with href      \n    let parentContainerBarcodeValue;                                               \n    if (this.props.data.container.parentContainerId) {                            \n      let barcode = this.props.options.containersNonPrimary[this.props.data.container.parentContainerId].barcode\n      parentContainerBarcodeValue = (                                             \n        <div>                                                                     \n          <a style={{cursor:'pointer'}} onClick={()=>this.props.loadContainer(barcode)}>\n            {barcode}\n          </a>                                                                    \n        </div>                                                                    \n      );                                                                          \n    }                                                                             \n\n    let parentContainerField = (\n      <div className=\"item\">\n        <div className='field'>\n          Parent Container\n          <div className='value'>\n            {parentContainerBarcodeValue || 'None'}\n          </div>\n          {(parentContainerBarcodeValue && this.props.data.container.coordinate) ? \n          'Coordinate '+this.props.data.container.coordinate : null}\n        </div>                                                                    \n        <div                                                                      \n          className='action'                                                      \n          title='Move Container'                                                  \n        >                                                                         \n          <span                                                               \n            className='action-button update'                                  \n            onClick={() => {this.props.edit('containerParentForm')}}\n          >                                                                   \n            <span className='glyphicon glyphicon-chevron-right'/>             \n          </span>                                                             \n          <Modal                                                              \n            title='Update Parent Container'                                       \n            closeModal={this.props.close}\n            show={this.props.editable.containerParentForm}\n          >                                                                       \n            <ContainerParentForm\n              data={this.props.data}\n              container={this.props.container}\n              containersNonPrimary={this.props.options.containersNonPrimary}      \n              containerDimensions={this.props.options.containerDimensions}        \n              containerCoordinates={this.props.options.containerCoordinates}      \n              containerTypes={this.props.options.containerTypes}                  \n              containerStati={this.props.options.containerStati}                  \n              mapFormOptions={this.props.mapFormOptions}\n              setContainer={this.props.setContainer}                            \n              saveContainer={this.props.saveContainer}\n            />                                                                    \n          </Modal>                                                            \n        </div>                                                                \n      </div>                                                                      \n    );                                                                            \n\n    let candidateSessionField;\n    if (this.props.data.specimen) {\n      candidateSessionField = (\n        <div className=\"item\">                                                \n            <div className='field'>                                             \n              PSCID                                                             \n              <div className='value'>                                           \n                <a href={loris.BaseURL+'/'+this.props.data.specimen.candidateId}>\n                  {this.props.data.candidate.PSCID}                             \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n            <div className='field'>                                             \n              Visit Label                                                       \n              <div className='value'>                                           \n                <a href={\n                  loris.BaseURL+'/instrument_list/?candID='+\n                  this.props.data.specimen.candidateId+'&sessionID='+\n                  this.props.data.specimen.sessionId\n                }>\n                  {this.props.data.session.Visit_label}                         \n                </a>                                                            \n              </div>                                                            \n            </div>                                                              \n          </div>\n        );\n    }\n\n    let fieldList = (                                                              \n      <div className='list'>                                                  \n        {specimenTypeField}\n        {containerTypeField}\n        {quantityField}\n        {fTCycleField}\n        {temperatureField}\n        {statusField}\n        {centerField}\n        {originField}\n        {parentSpecimenField}\n        {parentContainerField}\n        {candidateSessionField}\n      </div>                                                                  \n    );                                                  \n\n    return (\n      <div className=\"globals\">                                                 \n        {fieldList}\n      </div>\n    );\n  }\n}\n\nGlobals.propTypes = {\n};\n\nexport default Globals;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/globals.js","/**\n * Biobank Specimen Quantity Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass QuantityField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}>\n          <TextboxElement\n            name='quantity'\n            inputClass='col-xs-11'\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.quantity}\n            errorMessage={this.props.errors.quantity}\n          />\n        </div>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}>\n          <SelectElement\n            name='unitId'\n            inputClass='col-xs-11'\n            options={this.props.units}\n            onUserInput={this.props.setSpecimen}\n            value={this.props.specimen.unitId}\n            errorMessage={this.props.errors.unitId}\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}>\n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveSpecimen}\n            columnSize= 'col-xs-11'\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}>\n          <a onClick={this.props.close} style={{cursor: 'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuantityField.propTypes = {\n  setSpecimen: React.PropTypes.func,\n  close: React.PropTypes.func,\n  specimen: React.PropTypes.object,\n  saveSpecimen: React.PropTypes.func,\n  className: React.PropTypes.string\n};\n\nexport default QuantityField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/quantityField.js","/**\n * Biobank Container Temperature Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass TemperatureField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex:'1 0 25%', minWidth: '90px'}}> \n            <TextboxElement\n              name='temperature'\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.temperature}\n              errorMessage={this.props.errors.temperature}\n            />  \n        </div>\n        <div style={{flex:'0 1 15%', margin: '0 1%'}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-11'\n          />\n        </div>\n        <div style={{flex:'0 1 15%', margin: '0 1%'}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemperatureField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default TemperatureField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/temperatureField.js","/**\n * Biobank Container Status Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass StatusField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}> \n            <SelectElement\n              name='statusId'\n              options={this.props.stati}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.statusId}\n              errorMessage={this.props.errors.statusId}\n            />  \n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <ButtonElement\n            label='Update'\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-11'\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func,\n  stati: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default StatusField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/statusField.js","/**\n * Biobank Container Center Field\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass CenterField extends React.Component {\n  render() {\n    return (\n      <div className='inline-field'>\n        <div style={{flex: '1 0 25%', minWidth: '90px'}}> \n            <SelectElement\n              name='centerId'\n              options={this.props.centers}\n              inputClass='col-lg-11'\n              onUserInput={this.props.setContainer}\n              value={this.props.container.centerId}\n              errorMessage={this.props.errors.centerId}\n            />  \n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <ButtonElement\n            label=\"Update\"\n            onUserInput={this.props.saveContainer}\n            columnSize= 'col-lg-11'\n          />\n        </div>\n        <div style={{flex: '0 1 15%', margin: '0 1%'}}> \n          <a onClick={this.props.close} style={{cursor:'pointer'}}>\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nCenterField.propTypes = {\n  setContainer: React.PropTypes.func.isRequired,\n  close: React.PropTypes.func.isRequired,\n  centerIds: React.PropTypes.object.isRequired,\n  container: React.PropTypes.object.isRequired,\n  saveContainer: React.PropTypes.func.isRequired,\n  className: React.PropTypes.string\n};\n\nexport default CenterField;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/centerField.js","import CustomFields from './customFields';\n\n/**\n * Biobank Analysis Form\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass SpecimenAnalysisForm extends React.Component {\n  constructor() {\n    super();\n\n    this.setAnalysis = this.setAnalysis.bind(this);\n    this.addData = this.addData.bind(this);\n    this.setData = this.setData.bind(this);\n  }\n\n  setAnalysis(name, value) {\n    let analysis = this.props.specimen.analysis;\n    analysis[name] = value;\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  addData() {\n    let analysis = this.props.specimen.analysis;\n    analysis.data = {};\n    this.props.setSpecimen('analysis', analysis);\n  }\n\n  setData(name, value) {\n    let data = this.props.specimen.analysis.data;\n    if (value instanceof File) {\n      data[name] = value.name;\n      this.props.setCurrent(name, value);\n    } else {\n      data[name] = value;\n      this.setAnalysis('data', data);\n    }\n  }\n\n  render() {\n    let submitButton;\n    submitButton = this.props.data.specimen.analysis ? <ButtonElement label=\"Update\"/>\n      : <ButtonElement label=\"Submit\"/>;\n\n    let specimenMethodFields;\n    if (this.props.specimen.analysis.methodId) {\n      let specimenMethodFieldsObject = this.props.specimenMethodAttributes[this.props.specimen.analysis.methodId];\n      if (specimenMethodFieldsObject) {\n        if (this.props.specimen.analysis.data) {\n          specimenMethodFields = (\n            <CustomFields\n              fields={specimenMethodFieldsObject}\n              current={this.props.current}\n              attributeDatatypes={this.props.attributeDatatypes}\n              attributeOptions={this.props.attributeOptions}\n              object={this.props.specimen.analysis.data}\n              data={(((this.props.data||{}).specimen||{}).analysis||{}).data}\n              setData={this.setData}\n            />\n          );  \n        } else {\n          this.addData();\n        }\n      }\n    }\n\n    return (\n      <FormElement\n        name=\"specimenAnalysis\"\n        onSubmit={this.props.saveSpecimen}\n        fileUpload={true}\n        ref=\"form\"\n      >\n        <SelectElement\n          name=\"methodId\"\n          label=\"Method\"\n          options={this.props.specimenMethods}\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.methodId}\n        />\n        {specimenMethodFields}\n        <DateElement\n          name=\"date\"\n          label=\"Date\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.date}\n        />\n        <TimeElement\n          name=\"time\"\n          label=\"Time\"\n          onUserInput={this.setAnalysis}\n          required={true}\n          value={this.props.specimen.analysis.time}\n        />\n        <TextareaElement\n          name=\"comments\"\n          label=\"Comments\"\n          onUserInput={this.setAnalysis}\n          value={this.props.specimen.analysis.comments}\n        />\n        {submitButton} \n      </FormElement>\n    );\n  }\n\n}\n\nSpecimenAnalysisForm.propTypes = {\n}\n\nexport default SpecimenAnalysisForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/analysisForm.js","/**\n * LifeCycle\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\n//TODO: revise this component once Shipments are enabled.\nclass LifeCycle extends React.Component {\n\n  mouseOver(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeave(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.collection').css({\n        'border': '2px solid #A6D3F5', 'box-shadow': 'none'\n      });\n  }\n\n  mouseOverPreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({\n        'border': '2px solid #093782',\n        'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n      });\n  }\n\n  mouseLeavePreparation(e) {\n    //this isn't a very 'react' way of doing things, so consider revision\n      $('.preparation').css({'border': '2px solid #A6D3F5', 'box-shadow': 'none'});\n  }\n\n  render() {\n    // Create Collection Node\n    let collectionNode;\n    if ((this.props.specimen||{}).collection || this.props.container) {\n      collectionNode = (\n        <div \n          onMouseEnter={(e) => this.mouseOver(e)}\n          onMouseLeave={(e) => this.mouseLeave(e)}\n          className='lifecycle-node collection'\n        >\n          <div className='letter'>\n            C\n          </div>\n        </div>\n      );\n    }\n\n    // Create Preparation Node\n    let preparationNode;\n    if ((this.props.specimen||{}).preparation) {\n      preparationNode = (\n        <div \n          onMouseEnter={this.mouseOverPreparation}\n          onMouseLeave={this.mouseLeavePreparation}\n          className='lifecycle-node preparation' \n        >\n          <div className='letter'>\n            P\n          </div>\n        </div>\n      );\n    }\n\n    // Create Analysis Node\n    let analysisNode;\n    if ((this.props.specimen||{}).analysis) {\n      analysisNode = (\n        <div className='lifecycle-node-container'>\n           <div className='lifecycle-node'>\n             <div className='letter'>A</div>\n           </div>\n        </div>\n      );\n    }\n\n    // Create Lines\n    let line;\n    let nodes = 0;\n    for (let i in this.props.specimen) {\n      if (i === 'collection' || i === 'preparation' || i === 'analysis') {\n        nodes++;\n      }\n    }\n    let lineWidth = nodes > 1 ? 60/(nodes-1) : 0;\n    let lineStyle = {width: lineWidth+'%'}\n    line = (<div className='lifecycle-line' style={lineStyle}/>);\n\n    return (\n      <div className='lifecycle'>\n        <div className='lifecycle-graphic'>\n          {collectionNode}\n          {preparationNode ? line : null}\n          {preparationNode}\n          {analysisNode ? line : null}\n          {analysisNode} \n        </div>\n      </div>\n    );\n  }\n\n}\n\nLifeCycle.propTypes = {\n}\n\nexport default LifeCycle;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/lifeCycle.js","/**\n * Biobank Container Checkout\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\n\nclass ContainerCheckout extends React.Component {\n  constructor() {\n    super();\n\n    this.checkoutContainer = this.checkoutContainer.bind(this);\n  }\n\n  checkoutContainer() {\n    this.props.setContainer('parentContainerId', null);\n    this.props.setContainer('coordinate', null);\n    this.props.saveContainer();\n  }\n\n  render() {\n    let checkoutButton;\n    if (this.props.container.parentContainerId) { \n      checkoutButton = (\n        <div \n          className='action-button update'\n          title='Checkout Container'\n          onClick={this.checkoutContainer}\n        >   \n          <span className='glyphicon glyphicon-share'/>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkoutButton}\n      </div>\n    );\n  }\n}\n\nContainerCheckout.propTypes = {\n  container: React.PropTypes.object.isRequired,\n  setContainer: React.PropTypes.func.isRequired,\n  saveContainer: React.PropTypes.func.isRequired\n};\n\nexport default ContainerCheckout;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/containerCheckout.js","import Loader from 'Loader';\nimport Globals from './globals';\nimport LifeCycle from './lifeCycle.js';\nimport BarcodePath from './barcodePath.js';\nimport ContainerDisplay from './containerDisplay.js';\nimport ContainerCheckout from './containerCheckout.js';\n\n/**\n * Biobank Container\n *\n * Fetches data corresponding to a given Container from Loris backend and\n * displays a page allowing viewing of meta information of the container\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n * */\nclass BiobankContainer extends React.Component {\n  constructor() {\n    super();\n    this.drag = this.drag.bind(this);\n  }\n\n  drag(e) {\n    let container = JSON.stringify(this.props.data.childContainers[e.target.id]);\n    e.dataTransfer.setData(\"text/plain\", container);\n  }\n\n  render() {\n    let globals = ( \n      <Globals\n        container={this.props.container}\n        data={this.props.data}\n        options={this.props.options}\n        errors={this.props.errors}\n        editable={this.props.editable}\n        edit={this.props.edit}\n        close={this.props.close}\n        mapFormOptions={this.props.mapFormOptions}\n        loadSpecimen={this.props.loadSpecimen}\n        loadContainer={this.props.loadContainer}\n        setContainer={this.props.setContainer}\n        saveContainer={this.props.saveContainer}\n      />\n    );  \n\n    let barcodePath = (\n      <BarcodePath\n        container={this.props.data.container}\n        parentContainers={this.props.data.parentContainers}\n        loadContainer={this.props.loadContainer}\n      />\n    );\n\n    let checkoutButton;\n    let display;\n    if (this.props.data.container.dimensionId) {  \n      //TODO: the styling here needs to be redone.\n\n      checkoutButton = (\n        <div style = {{marginLeft: 'auto', height: '10%', marginRight:'10%'}}>\n          <div\n            className={!this.props.editable.containerCheckout && !this.props.editable.barcode ?\n              'action-button update open' : 'action-button update closed'}\n            title='Checkout Child Containers'\n            onClick={()=>{this.props.edit('containerCheckout')}}\n          >\n            <span className='glyphicon glyphicon-share'/>\n          </div>\n        </div>\n      );\n\n      let barcodes = this.props.mapFormOptions(this.props.options.containers, 'barcode');\n      //delete values that are parents of the container\n      if (this.props.data.parentContainers) {\n        for (let key in this.props.data.parentContainers) {\n          delete barcodes[this.props.data.parentContainers[key].id];\n        }\n      }\n      delete barcodes[this.props.data.container.id];\n\n      display = (\n        <ContainerDisplay \n          barcodes={barcodes}\n          container={this.props.container}\n          current={this.props.current}\n          containers={this.props.options.containers}\n          children={this.props.data.childContainers}\n          types={this.props.options.containerTypes}\n          dimensions={this.props.options.containerDimensions[this.props.data.container.dimensionId]}\n          coordinates={this.props.options.containerCoordinates[this.props.data.container.id] ? this.props.options.containerCoordinates[this.props.data.container.id] : null}\n          containerTypes={this.props.options.containerTypes}\n          containerStati={this.props.options.containerStati}\n          editable={this.props.editable}\n          edit={this.props.edit}\n          close={this.props.close}\n          setCurrent={this.props.setCurrent}\n          setCheckoutList={this.props.setCheckoutList}\n          mapFormOptions={this.props.mapFormOptions}\n          loadSpecimen={this.props.loadSpecimen}\n          loadContainer={this.props.loadContainer}\n          saveChildContainer={this.props.saveChildContainer}\n        />\n      );\n    }\n\n    let listAssigned = [];\n    let coordinateList = [];\n    let listUnassigned = [];\n    if (this.props.data.childContainers) {\n      let children = this.props.data.childContainers;\n      for (let child in children) {\n        let load;\n        if (this.props.options.containerTypes[children[child].typeId].primary) {\n          load = this.props.loadSpecimen;\n        } else {\n          load = this.props.loadContainer;\n        }\n\n        if (children[child].coordinate) {\n          listAssigned.push(\n            <div>\n              <a onClick={()=>load(children[child].barcode)} style={{cursor:'pointer'}}>\n                {children[child].barcode}\n              </a>\n            </div>\n          ); \n          coordinateList.push(\n            <div>\n              at {children[child].coordinate}\n            </div>\n\n          );\n        } else {\n          listUnassigned.push(\n            <a \n              onClick={()=>load(children[child].barcode)}\n              style={{cursor:'pointer'}}\n              id={children[child].id} \n              draggable={true}\n              onDragStart={this.drag}\n            >\n              {children[child].barcode}\n            </a>\n          );\n        }\n      }     \n    }\n\n    //TODO: this can maybe become it's own component..?\n    let returnToFilter = (\n      <div>\n        <br/>\n        <span className='action'>\n          <div\n            className='action-button update'\n            onClick={this.props.loadFilters}\n          >\n            <span className='glyphicon glyphicon-chevron-left'/>\n          </div>\n        </span>\n        <div className='action-title'>\n          Return to Filter\n        </div>\n      </div>\n    );\n\n    return (\n      <div id='container-page'> \n        <div className=\"container-header\"> \n          <div className='container-title'> \n            <div className='barcode'> \n              Barcode \n              <div className='value'> \n                <strong>{this.props.data.container.barcode}</strong> \n              </div> \n            </div> \n            <ContainerCheckout \n              container={this.props.data.container}\n              setContainer={this.props.setContainer}\n              saveContainer={this.props.saveContainer}\n            />\n          </div> \n        </div> \n        <div className='summary'> \n          {globals} \n          <div className='display-container'>\n            {!(listAssigned.length === 0 && listUnassigned.length === 0) ? checkoutButton : null}\n            {display} \n            {barcodePath}\n          </div>\n          <div className='container-list'>\n            <div className='title'>\n              {listAssigned.length === 0 && listUnassigned.length === 0 ? 'This Container is Empty!' : null}\n            </div>\n            <div className='title'>\n              {listAssigned.length !== 0 ? 'Assigned Containers' : null}\n            </div>\n            <div className='container-coordinate'>\n              <div>{listAssigned}</div>\n              <div style={{paddingLeft: 10}}>{coordinateList}</div>\n            </div>\n              {listAssigned.length !==0 ? <br/> : null}\n            <div className='title'>\n              {listUnassigned.length !== 0 ? 'Unassigned Containers' : null}\n            </div>\n            {listUnassigned}\n          </div>\n        </div> \n        {returnToFilter}\n      </div> \n    ); \n  }\n}\n\nBiobankContainer.propTypes = {\n  containerPageDataURL: React.PropTypes.string.isRequired,\n};\n\nexport default BiobankContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/container.js","/**\n * Container Path\n *\n * @author Henri Rabalais\n * @version 1.0.0\n *\n **/\n\nclass BarcodePath extends React.Component {\n\n  render() {\n\n    let path = [];\n    let pathLength = this.props.parentContainers.length - 1;\n    let containerURL = loris.BaseURL+'/biobank/container/?barcode=';\n    for (let i=pathLength; i>=0; i--) {\n      path.push(\n        <span className='barcodePath'> \n          {'/'}\n          <a\n            onClick={()=>this.props.loadContainer(this.props.parentContainers[i].barcode)}\n            style={{cursor:'pointer'}}\n          >\n            {this.props.parentContainers[i].barcode}\n          </a>\n        </span>\n      );\n    }\n    path.push(\n      <span className='barcodePath'> \n        {'/'}\n        <a\n          onClick={()=>this.props.loadContainer(this.props.container.barcode)}\n          style={{cursor:'pointer'}}\n        >\n          {this.props.container.barcode}\n        </a>\n      </span>\n    );\n\n    return (\n      <div>\n        {path}\n      </div>\n    );\n  }\n}\n\nBarcodePath.propTypes = {\n}\n\nexport default BarcodePath;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/biobank/jsx/barcodePath.js"],"sourceRoot":""}